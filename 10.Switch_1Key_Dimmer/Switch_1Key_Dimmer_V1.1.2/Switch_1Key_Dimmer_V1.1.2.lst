

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Aug 28 11:06:24 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F1518
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 7 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 7 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    51  8007  F9E4               	dw 0xFFFC & 0xFFE7 & 0xF9FF ;#
    52                           # 8 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    53                           	psect config,class=CONFIG,delta=2 ;#
    54                           # 8 "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
    55  8008  FFFE               	dw 0xFFFF & 0xFFFE ;#
    56                           	FNCALL	_main,_MainT_Initialization
    57                           	FNCALL	_main,_Mcu_Initialization
    58                           	FNCALL	_main,_Flash_Memory_Initialization
    59                           	FNCALL	_main,_LED_Initialization
    60                           	FNCALL	_main,_Buzzer_Initialization
    61                           	FNCALL	_main,_Temp_Initialization
    62                           	FNCALL	_main,_Load_Initialization
    63                           	FNCALL	_main,_PowerFault_Initialization
    64                           	FNCALL	_main,_DelayOff_Initialization
    65                           	FNCALL	_main,_DimmerLights_Initialization
    66                           	FNCALL	_main,_Switch_Initialization
    67                           	FNCALL	_main,_RF_Initialization
    68                           	FNCALL	_main,_CC2500_PowerOnInitial
    69                           	FNCALL	_main,_getLoad_AD
    70                           	FNCALL	_main,_getTemp_AD
    71                           	FNCALL	_main,_getPowerFault_AD
    72                           	FNCALL	_main,_MainT
    73                           	FNCALL	_main,_Flash_Memory_Main
    74                           	FNCALL	_main,_Buzzer_Main
    75                           	FNCALL	_main,_LED_Main
    76                           	FNCALL	_main,_Temp_Main
    77                           	FNCALL	_main,_Load_Main
    78                           	FNCALL	_main,_PowerFault_Main
    79                           	FNCALL	_main,_DimmerLights_Main
    80                           	FNCALL	_main,_Switch_Main
    81                           	FNCALL	_main,_RF_Main
    82                           	FNCALL	_main,_DelayOff_Main
    83                           	FNCALL	_RF_Main,_setRF_Main
    84                           	FNCALL	_setRF_Main,_RfPointSelect
    85                           	FNCALL	_setRF_Main,_RF_RxDisable
    86                           	FNCALL	_setRF_Main,_CC2500_RxData
    87                           	FNCALL	_setRF_Main,_getRxData
    88                           	FNCALL	_setRF_Main,_CC2500_TxData
    89                           	FNCALL	_setRF_Main,_CC2500_WriteCommand
    90                           	FNCALL	_setRF_Main,_setINT_GO
    91                           	FNCALL	_getRxData,_RfPointSelect
    92                           	FNCALL	_getRxData,_setLog_Code
    93                           	FNCALL	_getRxData,_setControl_Lights_Table
    94                           	FNCALL	_setControl_Lights_Table,_RfPointSelect
    95                           	FNCALL	_setControl_Lights_Table,_setDimmerLights
    96                           	FNCALL	_setControl_Lights_Table,_setRFSW_Status
    97                           	FNCALL	_setControl_Lights_Table,_setSw_Status
    98                           	FNCALL	_setControl_Lights_Table,_setBuz
    99                           	FNCALL	_setControl_Lights_Table,_setTxData
   100                           	FNCALL	_setControl_Lights_Table,_setRFSW_Control
   101                           	FNCALL	_setControl_Lights_Table,_setRFSW_AdjControl
   102                           	FNCALL	_PowerFault_Main,_setPowerFault_Main
   103                           	FNCALL	_Load_Main,_setLoad_Main
   104                           	FNCALL	_Temp_Main,_setTemp_Main
   105                           	FNCALL	_setRFSW_AdjControl,_RfSWPointSelect
   106                           	FNCALL	_setRFSW_AdjControl,_setRF_DimmerValue
   107                           	FNCALL	_setRFSW_AdjControl,_setTxData
   108                           	FNCALL	_setPowerFault_Main,_PowerFaultPointSelect
   109                           	FNCALL	_setPowerFault_Main,_getLoad_Safe
   110                           	FNCALL	_setPowerFault_Main,_getTemp_Safe
   111                           	FNCALL	_setPowerFault_Main,_setPowerFault_ERROR
   112                           	FNCALL	_setTemp_Main,_TempPointSelect
   113                           	FNCALL	_setTemp_Main,_getLoad_Safe
   114                           	FNCALL	_setTemp_Main,_getPF_Safe
   115                           	FNCALL	_setTemp_Main,_setOverTemp_ERROR
   116                           	FNCALL	_setLoad_Main,_LoadPointSelect
   117                           	FNCALL	_setLoad_Main,_setLoad_ERROR
   118                           	FNCALL	_setLoad_Main,___lwdiv
   119                           	FNCALL	_setLoad_Main,___wmul
   120                           	FNCALL	_setLoad_Main,_setDimmerLights_Open
   121                           	FNCALL	_setLoad_Main,_setLoad_AH_AL_Restore
   122                           	FNCALL	_setLoad_Main,_getTemp_Safe
   123                           	FNCALL	_setLoad_Main,_getPF_Safe
   124                           	FNCALL	_DimmerLights_Main,_setDimmerLights_Main
   125                           	FNCALL	_DimmerLights_Main,_DimmerLights_Close
   126                           	FNCALL	_setRF_DimmerValue,_setDimmerLights_AdjRF
   127                           	FNCALL	_setPowerFault_ERROR,_PowerFaultPointSelect
   128                           	FNCALL	_setPowerFault_ERROR,_setDimmer_PFERROR
   129                           	FNCALL	_setPowerFault_ERROR,_DimmerLights_ERROR
   130                           	FNCALL	_setPowerFault_ERROR,_setLED
   131                           	FNCALL	_setPowerFault_ERROR,_setSw_Enable
   132                           	FNCALL	_setPowerFault_ERROR,_setRF_Enable
   133                           	FNCALL	_setOverTemp_ERROR,_TempPointSelect
   134                           	FNCALL	_setOverTemp_ERROR,_setDimmer_TempERROR
   135                           	FNCALL	_setOverTemp_ERROR,_DimmerLights_ERROR
   136                           	FNCALL	_setOverTemp_ERROR,_setLED
   137                           	FNCALL	_setOverTemp_ERROR,_setSw_Enable
   138                           	FNCALL	_setOverTemp_ERROR,_setRF_Enable
   139                           	FNCALL	_setLoad_ERROR,_LoadPointSelect
   140                           	FNCALL	_setLoad_ERROR,_setDimmer_LoadERROR
   141                           	FNCALL	_setLoad_ERROR,_DimmerLights_ERROR
   142                           	FNCALL	_setLoad_ERROR,_setLED
   143                           	FNCALL	_setLoad_ERROR,_setSw_Enable
   144                           	FNCALL	_setLoad_ERROR,_setRF_Enable
   145                           	FNCALL	_Switch_Main,_setSw_Main
   146                           	FNCALL	_Flash_Memory_Main,_Flash_Memory_Modify
   147                           	FNCALL	_MainT,_setTemp_Enable
   148                           	FNCALL	_MainT,_setLoad_Enable
   149                           	FNCALL	_MainT,_setBuz
   150                           	FNCALL	_MainT,_setSw_Enable
   151                           	FNCALL	_MainT,_setRF_Enable
   152                           	FNCALL	_setDimmerLights_Main,_DimmerLightsPointSelect
   153                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Open
   154                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Close
   155                           	FNCALL	_setDimmerLights_Main,_setDimmerLights
   156                           	FNCALL	_setDimmerLights_Main,_getDimmerLights_Trigger
   157                           	FNCALL	_setDimmerLights_Main,_setDimmerLights_Adj
   158                           	FNCALL	_setDimmerLights_Main,_setBuz
   159                           	FNCALL	_DimmerLights_Initialization,_setDimmerLights_Initialization
   160                           	FNCALL	_setSw_Main,_SwPointSelect
   161                           	FNCALL	_setSw_Main,_Sw_OnFunc
   162                           	FNCALL	_setSw_Main,_Sw_AdjFunc
   163                           	FNCALL	_setSw_Main,_setRF_Learn
   164                           	FNCALL	_setSw_Main,_setBuz
   165                           	FNCALL	_setSw_Main,_Sw_OffFunc
   166                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Read
   167                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Erasing
   168                           	FNCALL	_Flash_Memory_Modify,_Flash_Memory_Write
   169                           	FNCALL	_setRF_Enable,_RfPointSelect
   170                           	FNCALL	_setRF_Enable,_CC2500_WriteCommand
   171                           	FNCALL	_setRF_Enable,_RF_RxDisable
   172                           	FNCALL	_Switch_Initialization,_TouchPower
   173                           	FNCALL	_Switch_Initialization,_setSw_Initialization
   174                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Read
   175                           	FNCALL	_Flash_Memory_Initialization,_setPercentValue
   176                           	FNCALL	_Flash_Memory_Initialization,_Flash_Memory_Write
   177                           	FNCALL	_LED_Initialization,_setLED_Initialization
   178                           	FNCALL	_setDimmerLights_AdjRF,_DimmerLightsPointSelect
   179                           	FNCALL	_setDimmerLights_AdjRF,_getPercentValue
   180                           	FNCALL	_DimmerLights_ERROR,_getDimmer_TempERROR
   181                           	FNCALL	_DimmerLights_ERROR,_getDimmerLights_StatusFlag
   182                           	FNCALL	_DimmerLights_ERROR,_setBuz
   183                           	FNCALL	_DimmerLights_ERROR,_setDimmerLights_ERROR
   184                           	FNCALL	_DimmerLights_ERROR,_getDimmer_LoadERROR
   185                           	FNCALL	_DimmerLights_ERROR,_getDimmer_PFERROR
   186                           	FNCALL	_DimmerLights_ERROR,_setDimmerLights_TriggerERROR
   187                           	FNCALL	_setDimmerLights_Adj,_DimmerLightsPointSelect
   188                           	FNCALL	_setDimmerLights_Adj,_setLoad_StatusOff
   189                           	FNCALL	_setDimmerLights_Adj,_setRF_DimmerLights
   190                           	FNCALL	_setDimmerLights_Adj,_setTxData
   191                           	FNCALL	_setDimmerLights_Adj,_setPercentValue
   192                           	FNCALL	_setDimmerLights_Initialization,_DimmerLightsPointSelect
   193                           	FNCALL	_setDimmerLights_Initialization,_getPercentValue
   194                           	FNCALL	_DelayOff_Main,_DlyOff_Main
   195                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_PowerRST
   196                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitSetREG
   197                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_InitPATable
   198                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearTXFIFO
   199                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_ClearRXFIFO
   200                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_FrequencyCabr
   201                           	FNCALL	_CC2500_PowerOnInitial,_CC2500_SIDLEMode
   202                           	FNCALL	_Buzzer_Initialization,_setBuz_Initialization
   203                           	FNCALL	_Sw_OffFunc,_setDimmerLights_TriggerAdj
   204                           	FNCALL	_Sw_OffFunc,_setDimmerLights_AdjGo
   205                           	FNCALL	_Sw_OffFunc,_setRF_DimmerLights
   206                           	FNCALL	_Sw_OffFunc,_setTxData
   207                           	FNCALL	_Sw_OffFunc,_setDimmerLights_Trigger
   208                           	FNCALL	_Sw_OffFunc,_setDimmerLights_Switch
   209                           	FNCALL	_Sw_OffFunc,_setDelayOff_GO
   210                           	FNCALL	_Sw_AdjFunc,_setRFSW_Status
   211                           	FNCALL	_Sw_AdjFunc,_setDimmerLights_TriggerAdj
   212                           	FNCALL	_Sw_AdjFunc,_setDimmerLights_AdjGo
   213                           	FNCALL	_Sw_OnFunc,_setBuz
   214                           	FNCALL	_Sw_OnFunc,_setRFSW_Status
   215                           	FNCALL	_Sw_OnFunc,_setDimmerLights_Trigger
   216                           	FNCALL	_Sw_OnFunc,_setDimmerLights_Switch
   217                           	FNCALL	_Sw_OnFunc,_setRF_DimmerLights
   218                           	FNCALL	_Sw_OnFunc,_setTxData
   219                           	FNCALL	_setSw_Initialization,_setLED
   220                           	FNCALL	_setRFSW_Control,_RfSWPointSelect
   221                           	FNCALL	_setRFSW_Control,_setDelayOff_GO
   222                           	FNCALL	_setRFSW_Control,_setSw_Status
   223                           	FNCALL	_setRFSW_Control,_setDimmerLights_Trigger
   224                           	FNCALL	_setRFSW_Control,_setDimmerLights_Switch
   225                           	FNCALL	_setRFSW_Control,_setRF_DimmerLights
   226                           	FNCALL	_setRFSW_Control,_setBuz
   227                           	FNCALL	_setRFSW_Control,_setTxData
   228                           	FNCALL	_setLog_Code,_RfPointSelect
   229                           	FNCALL	_setLog_Code,_setBuz
   230                           	FNCALL	_RF_RxDisable,_RfPointSelect
   231                           	FNCALL	_RF_RxDisable,_CC2500_WriteCommand
   232                           	FNCALL	_RF_RxDisable,_setINT_GO
   233                           	FNCALL	_Flash_Memory_Erasing,_Flash_Memory_Unlock
   234                           	FNCALL	_Flash_Memory_Write,_Flash_Memory_Unlock
   235                           	FNCALL	_PowerFault_Initialization,_setPowerFault_Initialization
   236                           	FNCALL	_Load_Initialization,_setLoad_Initialization
   237                           	FNCALL	_Temp_Initialization,_setTemp_Initialization
   238                           	FNCALL	_LED_Main,_setLED_Main
   239                           	FNCALL	_setLED_Initialization,_LedPointSelect
   240                           	FNCALL	_setLED_Initialization,_setLED
   241                           	FNCALL	_setPercentValue,___ftdiv
   242                           	FNCALL	_setPercentValue,___awtoft
   243                           	FNCALL	_setPercentValue,___fttol
   244                           	FNCALL	_setDimmerLights_ERROR,_DimmerLightsPointSelect
   245                           	FNCALL	_setDimmerLights_ERROR,_setLoad_StatusOff
   246                           	FNCALL	_setDimmerLights_ERROR,_setLED
   247                           	FNCALL	_setDimmerLights_ERROR,_setSw_Status
   248                           	FNCALL	_setDimmerLights_ERROR,_setRFSW_Status
   249                           	FNCALL	_setDimmerLights,_DimmerLightsPointSelect
   250                           	FNCALL	_setDimmerLights,_setLED
   251                           	FNCALL	_setDimmerLights,_setLoad_StatusOn
   252                           	FNCALL	_setDimmerLights,_setLoad_Count
   253                           	FNCALL	_setDimmerLights,_setDimmer_Detect
   254                           	FNCALL	_setDimmerLights,_setLoad_GO
   255                           	FNCALL	_setDimmerLights,_setLoad_LightsStatus
   256                           	FNCALL	_DimmerLights_Close,_getDimmer_Detect
   257                           	FNCALL	_DimmerLights_Close,_setDimmer_Detect
   258                           	FNCALL	_DimmerLights_Close,_getDimmerLights_StatusFlag
   259                           	FNCALL	_DimmerLights_Close,_setLoad_GO
   260                           	FNCALL	_getPercentValue,___ftdiv
   261                           	FNCALL	_getPercentValue,___awtoft
   262                           	FNCALL	_getPercentValue,___ftmul
   263                           	FNCALL	_getPercentValue,___ftadd
   264                           	FNCALL	_getPercentValue,___fttol
   265                           	FNCALL	_DlyOff_Main,_DelayOffPointSelect
   266                           	FNCALL	_DlyOff_Main,_setSw_Status
   267                           	FNCALL	_DlyOff_Main,_setRFSW_Status
   268                           	FNCALL	_DlyOff_Main,_setRF_DimmerLights
   269                           	FNCALL	_DlyOff_Main,_setDimmerLights_Trigger
   270                           	FNCALL	_DlyOff_Main,_setDimmerLights_Switch
   271                           	FNCALL	_DlyOff_Main,_setTxData
   272                           	FNCALL	_DlyOff_Main,_setBuz
   273                           	FNCALL	_DelayOff_Initialization,_DlyOff_Initialization
   274                           	FNCALL	_CC2500_SIDLEMode,_CC2500_WriteCommand
   275                           	FNCALL	_CC2500_FrequencyCabr,_CC2500_WriteCommand
   276                           	FNCALL	_CC2500_FrequencyCabr,_DelayTime_1us
   277                           	FNCALL	_CC2500_ClearRXFIFO,_CC2500_WriteCommand
   278                           	FNCALL	_CC2500_ClearTXFIFO,_CC2500_WriteCommand
   279                           	FNCALL	_CC2500_InitPATable,_CC2500_WriteREG
   280                           	FNCALL	_CC2500_InitSetREG,_CC2500_WriteREG
   281                           	FNCALL	_CC2500_RxData,_CC2500_ReadStatus
   282                           	FNCALL	_CC2500_RxData,_CC2500_WriteByte
   283                           	FNCALL	_CC2500_RxData,_CC2500_ReadByte
   284                           	FNCALL	_CC2500_RxData,_CC2500_WriteCommand
   285                           	FNCALL	_CC2500_RxData,_setRF_RxStatus
   286                           	FNCALL	_CC2500_TxData,_CC2500_WriteByte
   287                           	FNCALL	_CC2500_TxData,_CC2500_WriteCommand
   288                           	FNCALL	_Buzzer_Main,_setBuz_Main
   289                           	FNCALL	_setBuz_Initialization,_setBuz_Enable
   290                           	FNCALL	___awtoft,___ftpack
   291                           	FNCALL	___ftmul,___ftpack
   292                           	FNCALL	___ftdiv,___ftpack
   293                           	FNCALL	___ftadd,___ftpack
   294                           	FNCALL	_setRF_Learn,_RfPointSelect
   295                           	FNCALL	_setPowerFault_Initialization,_PowerFaultPointSelect
   296                           	FNCALL	_setTemp_Initialization,_TempPointSelect
   297                           	FNCALL	_getLoad_Safe,_LoadPointSelect
   298                           	FNCALL	_getPF_Safe,_PowerFaultPointSelect
   299                           	FNCALL	_getTemp_Safe,_TempPointSelect
   300                           	FNCALL	_setLoad_Initialization,_LoadPointSelect
   301                           	FNCALL	_setLoad_Initialization,_setLoad_AH_AL_Restore
   302                           	FNCALL	_setSw_Enable,_SwPointSelect
   303                           	FNCALL	_setLoad_Enable,_LoadPointSelect
   304                           	FNCALL	_setTemp_Enable,_TempPointSelect
   305                           	FNCALL	_getPowerFault_AD,_PowerFaultPointSelect
   306                           	FNCALL	_getPowerFault_AD,_getAD
   307                           	FNCALL	_getTemp_AD,_TempPointSelect
   308                           	FNCALL	_getTemp_AD,_getAD
   309                           	FNCALL	_getLoad_AD,_LoadPointSelect
   310                           	FNCALL	_getLoad_AD,_getAD
   311                           	FNCALL	_RF_Initialization,_setRF_Initialization
   312                           	FNCALL	_Mcu_Initialization,_IO_Set
   313                           	FNCALL	_Mcu_Initialization,_TMR0_Set
   314                           	FNCALL	_Mcu_Initialization,_ADC_Set
   315                           	FNCALL	_Mcu_Initialization,_INT_Set
   316                           	FNCALL	_Mcu_Initialization,_IOC_Set
   317                           	FNCALL	_setLED_Main,_LedPointSelect
   318                           	FNCALL	_setDimmer_PFERROR,_DimmerPointSelect
   319                           	FNCALL	_setDimmer_LoadERROR,_DimmerPointSelect
   320                           	FNCALL	_setDimmer_TempERROR,_DimmerPointSelect
   321                           	FNCALL	_setDimmerLights_TriggerAdj,_DimmerLightsPointSelect
   322                           	FNCALL	_setDimmerLights_AdjGo,_DimmerLightsPointSelect
   323                           	FNCALL	_setLoad_LightsStatus,_LoadPointSelect
   324                           	FNCALL	_setLoad_StatusOn,_LoadPointSelect
   325                           	FNCALL	_setLED,_LedPointSelect
   326                           	FNCALL	_setLoad_StatusOff,_LoadPointSelect
   327                           	FNCALL	_setDimmerLights_TriggerERROR,_DimmerLightsPointSelect
   328                           	FNCALL	_getDimmer_PFERROR,_DimmerPointSelect
   329                           	FNCALL	_getDimmer_LoadERROR,_DimmerPointSelect
   330                           	FNCALL	_getDimmer_TempERROR,_DimmerPointSelect
   331                           	FNCALL	_getDimmerLights_Trigger,_DimmerLightsPointSelect
   332                           	FNCALL	_setDimmerLights_Close,_DimmerLightsPointSelect
   333                           	FNCALL	_setDimmerLights_Open,_DimmerLightsPointSelect
   334                           	FNCALL	_setLoad_GO,_LoadPointSelect
   335                           	FNCALL	_getDimmerLights_StatusFlag,_DimmerLightsPointSelect
   336                           	FNCALL	_setDimmer_Detect,_DimmerPointSelect
   337                           	FNCALL	_getDimmer_Detect,_DimmerPointSelect
   338                           	FNCALL	_setDelayOff_GO,_DelayOffPointSelect
   339                           	FNCALL	_setDelayOff_GO,_DelayTimejudge
   340                           	FNCALL	_setTxData,_RfPointSelect
   341                           	FNCALL	_setDimmerLights_Switch,_DimmerLightsPointSelect
   342                           	FNCALL	_setDimmerLights_Trigger,_DimmerLightsPointSelect
   343                           	FNCALL	_setRFSW_Status,_RfSWPointSelect
   344                           	FNCALL	_setSw_Status,_SwPointSelect
   345                           	FNCALL	_DlyOff_Initialization,_DelayOffPointSelect
   346                           	FNCALL	_CC2500_WriteREG,_CC2500_WriteByte
   347                           	FNCALL	_CC2500_PowerRST,_DelayTime_1us
   348                           	FNCALL	_CC2500_PowerRST,_CC2500_WriteByte
   349                           	FNCALL	_setRF_RxStatus,_RfPointSelect
   350                           	FNCALL	_CC2500_ReadStatus,_CC2500_WriteByte
   351                           	FNCALL	_CC2500_ReadStatus,_CC2500_ReadByte
   352                           	FNCALL	_CC2500_WriteCommand,_CC2500_WriteByte
   353                           	FNCALL	_setBuz,_BuzPointSelect
   354                           	FNCALL	_setBuz,___awdiv
   355                           	FNCALL	_setBuz_Enable,_BuzPointSelect
   356                           	FNCALL	_setBuz_Main,_BuzPointSelect
   357                           	FNROOT	_main
   358                           	FNCALL	_ISR,_IOC_ISR
   359                           	FNCALL	_ISR,_TMR0_ISR
   360                           	FNCALL	_ISR,_INT_ISR
   361                           	FNCALL	_INT_ISR,_setRF_ReceiveGO
   362                           	FNCALL	_TMR0_ISR,i1_setLoad_StatusOff
   363                           	FNCALL	i1_setLoad_StatusOff,i1_LoadPointSelect
   364                           	FNCALL	_setRF_ReceiveGO,i1_RfPointSelect
   365                           	FNCALL	_IOC_ISR,_setDimmerReClock
   366                           	FNCALL	intlevel1,_ISR
   367                           	global	intlevel1
   368                           	FNROOT	intlevel1
   369                           	global	_VarMemory
   370                           	global	_VarProduct
   371                           psect	idataBANK3,class=CODE,space=0,delta=2
   372                           global __pidataBANK3
   373  18BB                     __pidataBANK3:
   374                           	file	"G:\Program\PIC\Header_File\MCU_16F1518_B1.h"
   375                           	line	435
   376                           
   377                           ;initializer for _VarMemory
   378  18BB  34FF               	retlw	0FFh
   379  18BC  34FF               	retlw	0FFh
   380  18BD  34FF               	retlw	0FFh
   381  18BE  3400               	retlw	0
   382  18BF  3400               	retlw	0
   383  18C0  3400               	retlw	0
   384  18C1  3400               	retlw	0
   385  18C2  3400               	retlw	0
   386  18C3  3400               	retlw	0
   387  18C4  3400               	retlw	0
   388  18C5  3400               	retlw	0
   389  18C6  3400               	retlw	0
   390  18C7  3400               	retlw	0
   391  18C8  3400               	retlw	0
   392  18C9  3400               	retlw	0
   393  18CA  3400               	retlw	0
   394  18CB  3400               	retlw	0
   395  18CC  3400               	retlw	0
   396  18CD  3400               	retlw	0
   397  18CE  3400               	retlw	0
   398  18CF  3400               	retlw	0
   399  18D0  3400               	retlw	0
   400  18D1  3400               	retlw	0
   401  18D2  3400               	retlw	0
   402  18D3  3400               	retlw	0
   403  18D4  3400               	retlw	0
   404  18D5  3400               	retlw	0
   405  18D6  3400               	retlw	0
   406  18D7  3400               	retlw	0
   407  18D8  3400               	retlw	0
   408  18D9  3400               	retlw	0
   409  18DA  34AA               	retlw	0AAh
   410  18DB  3400               	retlw	0
   411  18DC  3400               	retlw	0
   412  18DD  3400               	retlw	0
   413  18DE  3400               	retlw	0
   414  18DF  3400               	retlw	0
   415                           	file	"G:\Program\PIC\10.Switch_1Key_Dimmer\Switch_1Key_Dimmer_V1.1.2\Release\Switch_1ke
                                 y_Dimmer_V1.1.2.h"
   416                           	line	213
   417                           
   418                           ;initializer for _VarProduct
   419  18E0  3463               	retlw	063h
   420  18E1  3402               	retlw	02h
   421  18E2  3400               	retlw	0
   422  18E3  3400               	retlw	0
   423  18E4  3400               	retlw	0
   424  18E5  3400               	retlw	0
   425  18E6  3400               	retlw	0
   426  18E7  3400               	retlw	0
   427  18E8  3400               	retlw	0
   428  18E9  3400               	retlw	0
   429  18EA  3400               	retlw	0
   430  18EB  3400               	retlw	0
   431  18EC  34FF               	retlw	0FFh
   432  18ED  34FF               	retlw	0FFh
   433  18EE  34FF               	retlw	0FFh
   434  18EF  3400               	retlw	0
   435  18F0  3400               	retlw	0
   436  18F1  3400               	retlw	0
   437  18F2  3400               	retlw	0
   438  18F3  3400               	retlw	0
   439  18F4  3401               	retlw	01h
   440  18F5  3400               	retlw	0
   441  18F6  3400               	retlw	0
   442  18F7  3400               	retlw	0
   443  18F8  3400               	retlw	0
   444  18F9  3400               	retlw	0
   445  18FA  3400               	retlw	0
   446  18FB  3400               	retlw	0
   447  18FC  3400               	retlw	0
   448  18FD  3400               	retlw	0
   449                           	global	_CC2500_registers_address
   450                           psect	strings,class=STRING,delta=2
   451                           global __pstrings
   452  1800                     __pstrings:
   453                           	global    __stringtab
   454  1800                     __stringtab:
   455  1800  3400               	retlw	0
   456                           psect	strings
   457                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   458                           	line	218
   459  1801                     _CC2500_registers_address:
   460  1801  3403               	retlw	03h
   461  1802  3416               	retlw	016h
   462  1803  3417               	retlw	017h
   463  1804  341E               	retlw	01Eh
   464  1805  341F               	retlw	01Fh
   465  1806  3420               	retlw	020h
   466  1807  342A               	retlw	02Ah
   467  1808  342B               	retlw	02Bh
   468  1809  340B               	retlw	0Bh
   469  180A  340C               	retlw	0Ch
   470  180B  340D               	retlw	0Dh
   471  180C  340E               	retlw	0Eh
   472  180D  340F               	retlw	0Fh
   473  180E  3410               	retlw	010h
   474  180F  3411               	retlw	011h
   475  1810  3412               	retlw	012h
   476  1811  3413               	retlw	013h
   477  1812  3414               	retlw	014h
   478  1813  340A               	retlw	0Ah
   479  1814  3415               	retlw	015h
   480  1815  3421               	retlw	021h
   481  1816  3422               	retlw	022h
   482  1817  3418               	retlw	018h
   483  1818  3419               	retlw	019h
   484  1819  341A               	retlw	01Ah
   485  181A  341B               	retlw	01Bh
   486  181B  341C               	retlw	01Ch
   487  181C  341D               	retlw	01Dh
   488  181D  3423               	retlw	023h
   489  181E  3424               	retlw	024h
   490  181F  3425               	retlw	025h
   491  1820  3426               	retlw	026h
   492  1821  3429               	retlw	029h
   493  1822  342C               	retlw	02Ch
   494  1823  342D               	retlw	02Dh
   495  1824  342E               	retlw	02Eh
   496  1825  3400               	retlw	0
   497  1826  3401               	retlw	01h
   498  1827  3402               	retlw	02h
   499  1828  3407               	retlw	07h
   500  1829  3408               	retlw	08h
   501  182A  3409               	retlw	09h
   502  182B  3406               	retlw	06h
   503  182C  3404               	retlw	04h
   504  182D  3405               	retlw	05h
   505  182E  3427               	retlw	027h
   506  182F  3428               	retlw	028h
   507                           	global	_CC2500_rfSettings
   508                           psect	strings
   509                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   510                           	line	161
   511  1830                     _CC2500_rfSettings:
   512  1830  3407               	retlw	07h
   513  1831  3407               	retlw	07h
   514  1832  3430               	retlw	030h
   515  1833  3487               	retlw	087h
   516  1834  346B               	retlw	06Bh
   517  1835  34F8               	retlw	0F8h
   518  1836  347F               	retlw	07Fh
   519  1837  343F               	retlw	03Fh
   520  1838  3409               	retlw	09h
   521  1839  3400               	retlw	0
   522  183A  345C               	retlw	05Ch
   523  183B  34A7               	retlw	0A7h
   524  183C  3462               	retlw	062h
   525  183D  3486               	retlw	086h
   526  183E  3483               	retlw	083h
   527  183F  3403               	retlw	03h
   528  1840  3422               	retlw	022h
   529  1841  34F8               	retlw	0F8h
   530  1842  3400               	retlw	0
   531  1843  3444               	retlw	044h
   532  1844  34B6               	retlw	0B6h
   533  1845  3410               	retlw	010h
   534  1846  3418               	retlw	018h
   535  1847  341D               	retlw	01Dh
   536  1848  341C               	retlw	01Ch
   537  1849  34C7               	retlw	0C7h
   538  184A  3400               	retlw	0
   539  184B  34B2               	retlw	0B2h
   540  184C  34EA               	retlw	0EAh
   541  184D  340A               	retlw	0Ah
   542  184E  3400               	retlw	0
   543  184F  3411               	retlw	011h
   544  1850  3459               	retlw	059h
   545  1851  3488               	retlw	088h
   546  1852  3431               	retlw	031h
   547  1853  340B               	retlw	0Bh
   548  1854  342F               	retlw	02Fh
   549  1855  342E               	retlw	02Eh
   550  1856  3406               	retlw	06h
   551  1857  3404               	retlw	04h
   552  1858  3405               	retlw	05h
   553  1859  3400               	retlw	0
   554  185A  3430               	retlw	030h
   555  185B  34D3               	retlw	0D3h
   556  185C  3491               	retlw	091h
   557  185D  3441               	retlw	041h
   558  185E  3400               	retlw	0
   559                           	global	_CC2500_patable_vaule
   560                           psect	strings
   561                           	file	"G:\Program\PIC\Header_File\CC2500_B1.h"
   562                           	line	292
   563  185F                     _CC2500_patable_vaule:
   564  185F  34FE               	retlw	0FEh
   565  1860  34FE               	retlw	0FEh
   566  1861  34FE               	retlw	0FEh
   567  1862  34FE               	retlw	0FEh
   568  1863  34FE               	retlw	0FEh
   569  1864  34FE               	retlw	0FEh
   570  1865  34FE               	retlw	0FEh
   571  1866  34FE               	retlw	0FEh
   572                           	global	_CC2500_registers_address
   573                           	global	_CC2500_rfSettings
   574                           	global	_CC2500_patable_vaule
   575                           	global	_DimmerLights
   576                           	global	_Load
   577                           	global	_Sw
   578                           	global	_DimmerLights11
   579                           	global	_Temp
   580                           	global	_CC2500_Enable
   581                           	global	_Receive_GO
   582                           	global	_Receive_OK
   583                           	global	_RxStatus
   584                           	global	_Transceive_GO
   585                           	global	_Transceive_OK
   586                           	global	_TxStatus
   587                           	global	_RF_Data
   588                           	global	_RF_Count
   589                           	global	_Buz
   590                           	global	_CRC
   591                           	global	_DelayOff
   592                           	global	_Dimmer
   593                           	global	_DimmerLightsIntr
   594                           	global	_LED
   595                           	global	_PF
   596                           	global	_RF
   597                           	global	_RFSW
   598                           	global	_RSSI
   599                           	global	_Rx_Length
   600                           	global	_SPI0Buffer
   601                           	global	_Tx_Length
   602                           	global	_r_address
   603                           	global	_r_data
   604                           	global	_s_data
   605                           	global	_VarTMain
   606                           	global	_Temp1
   607                           	global	_Buz1
   608                           	global	_DimmerLights1
   609                           	global	_Sw1
   610                           	global	_Load1
   611                           	global	_PF1
   612                           	global	_VarTimer0
   613                           	global	_DlySw1
   614                           	global	_VarErrLED
   615                           	global	_VarLED1
   616                           	global	_VarLED2
   617                           	global	_Dimmer1
   618                           	global	_RF1
   619                           	global	_RFSW1
   620                           	global	_Product
   621                           psect	nvCOMMON,class=COMMON,space=1
   622                           global __pnvCOMMON
   623  007D                     __pnvCOMMON:
   624  007D                     _Product:
   625  007D                            ds      1
   626                           
   627                           	global	_PORTA
   628  000C                     _PORTA	set	12
   629                           	global	_PORTB
   630  000D                     _PORTB	set	13
   631                           	global	_PORTC
   632  000E                     _PORTC	set	14
   633                           	global	_TMR0
   634  0015                     _TMR0	set	21
   635                           	global	_GIE
   636  005F                     _GIE	set	95
   637                           	global	_INTE
   638  005C                     _INTE	set	92
   639                           	global	_INTF
   640  0059                     _INTF	set	89
   641                           	global	_IOCIE
   642  005B                     _IOCIE	set	91
   643                           	global	_IOCIF
   644  0058                     _IOCIF	set	88
   645                           	global	_PEIE
   646  005E                     _PEIE	set	94
   647                           	global	_RA0
   648  0060                     _RA0	set	96
   649                           	global	_RA3
   650  0063                     _RA3	set	99
   651                           	global	_RA4
   652  0064                     _RA4	set	100
   653                           	global	_RA6
   654  0066                     _RA6	set	102
   655                           	global	_RA7
   656  0067                     _RA7	set	103
   657                           	global	_RB0
   658  0068                     _RB0	set	104
   659                           	global	_RB1
   660  0069                     _RB1	set	105
   661                           	global	_RB2
   662  006A                     _RB2	set	106
   663                           	global	_RB3
   664  006B                     _RB3	set	107
   665                           	global	_RB4
   666  006C                     _RB4	set	108
   667                           	global	_RB5
   668  006D                     _RB5	set	109
   669                           	global	_RC0
   670  0070                     _RC0	set	112
   671                           	global	_RC1
   672  0071                     _RC1	set	113
   673                           	global	_RC2
   674  0072                     _RC2	set	114
   675                           	global	_RC4
   676  0074                     _RC4	set	116
   677                           	global	_RC5
   678  0075                     _RC5	set	117
   679                           	global	_RC7
   680  0077                     _RC7	set	119
   681                           	global	_TMR0IE
   682  005D                     _TMR0IE	set	93
   683                           	global	_TMR0IF
   684  005A                     _TMR0IF	set	90
   685                           	global	_ADCON0
   686  009D                     _ADCON0	set	157
   687                           	global	_ADCON1
   688  009E                     _ADCON1	set	158
   689                           	global	_ADRESH
   690  009C                     _ADRESH	set	156
   691                           	global	_ADRESL
   692  009B                     _ADRESL	set	155
   693                           	global	_OPTION_REG
   694  0095                     _OPTION_REG	set	149
   695                           	global	_OSCCON
   696  0099                     _OSCCON	set	153
   697                           	global	_TRISA
   698  008C                     _TRISA	set	140
   699                           	global	_TRISB
   700  008D                     _TRISB	set	141
   701                           	global	_TRISC
   702  008E                     _TRISC	set	142
   703                           	global	_GO_nDONE
   704  04E9                     _GO_nDONE	set	1257
   705                           	global	_FVRCON
   706  0117                     _FVRCON	set	279
   707                           	global	_LATA
   708  010C                     _LATA	set	268
   709                           	global	_LATB
   710  010D                     _LATB	set	269
   711                           	global	_LATC
   712  010E                     _LATC	set	270
   713                           	global	_ANSELA
   714  018C                     _ANSELA	set	396
   715                           	global	_ANSELB
   716  018D                     _ANSELB	set	397
   717                           	global	_ANSELC
   718  018E                     _ANSELC	set	398
   719                           	global	_PMADRH
   720  0192                     _PMADRH	set	402
   721                           	global	_PMADRL
   722  0191                     _PMADRL	set	401
   723                           	global	_PMCON2
   724  0196                     _PMCON2	set	406
   725                           	global	_PMDATH
   726  0194                     _PMDATH	set	404
   727                           	global	_PMDATL
   728  0193                     _PMDATL	set	403
   729                           	global	_CFGS
   730  0CAE                     _CFGS	set	3246
   731                           	global	_FREE
   732  0CAC                     _FREE	set	3244
   733                           	global	_LWLO
   734  0CAD                     _LWLO	set	3245
   735                           	global	_RD
   736  0CA8                     _RD	set	3240
   737                           	global	_WR
   738  0CA9                     _WR	set	3241
   739                           	global	_WREN
   740  0CAA                     _WREN	set	3242
   741                           	global	_WPUB0
   742  1068                     _WPUB0	set	4200
   743                           	global	_WPUB1
   744  1069                     _WPUB1	set	4201
   745                           	global	_WPUB2
   746  106A                     _WPUB2	set	4202
   747                           	global	_IOCBF
   748  0396                     _IOCBF	set	918
   749                           	global	_IOCBN
   750  0395                     _IOCBN	set	917
   751                           	global	_IOCBP
   752  0394                     _IOCBP	set	916
   753                           	global	_IOCBF2
   754  1CB2                     _IOCBF2	set	7346
   755                           	global	_Memory
   756                           psect	nvBANK1,class=BANK1,space=1
   757                           global __pnvBANK1
   758  00ED                     __pnvBANK1:
   759  00ED                     _Memory:
   760  00ED                            ds      1
   761                           
   762                           	global	_TMain
   763  00EE                     _TMain:
   764  00EE                            ds      1
   765                           
   766                           	global	_Timer0
   767  00EF                     _Timer0:
   768  00EF                            ds      1
   769                           
   770                           	file	"Switch_1Key_Dimmer_V1.1.2.as"
   771                           	line	#
   772                           psect cinit,class=CODE,delta=2
   773                           global start_initialization
   774  24DF                     start_initialization:
   775                           
   776                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   777                           global __pbitbssCOMMON
   778  03D0                     __pbitbssCOMMON:
   779  03D0                     _CC2500_Enable:
   780  03D0                            ds      1
   781                           
   782  03D1                     _Receive_GO:
   783  03D1                            ds      1
   784                           
   785  03D2                     _Receive_OK:
   786  03D2                            ds      1
   787                           
   788  03D3                     _RxStatus:
   789  03D3                            ds      1
   790                           
   791  03D4                     _Transceive_GO:
   792  03D4                            ds      1
   793                           
   794  03D5                     _Transceive_OK:
   795  03D5                            ds      1
   796                           
   797  03D6                     _TxStatus:
   798  03D6                            ds      1
   799                           
   800                           psect	bssCOMMON,class=COMMON,space=1
   801                           global __pbssCOMMON
   802  007B                     __pbssCOMMON:
   803  007B                     _DimmerLights11:
   804  007B                            ds      1
   805                           
   806  007C                     _Temp:
   807  007C                            ds      1
   808                           
   809                           psect	bssBANK0,class=BANK0,space=1
   810                           global __pbssBANK0
   811  006D                     __pbssBANK0:
   812  006D                     _DimmerLights:
   813  006D                            ds      1
   814                           
   815  006E                     _Load:
   816  006E                            ds      1
   817                           
   818  006F                     _Sw:
   819  006F                            ds      1
   820                           
   821                           psect	bssBANK1,class=BANK1,space=1
   822                           global __pbssBANK1
   823  00A0                     __pbssBANK1:
   824  00A0                     _RF_Data:
   825  00A0                            ds      21
   826                           
   827  00B5                     _RF_Count:
   828  00B5                            ds      2
   829                           
   830  00B7                     _Buz:
   831  00B7                            ds      1
   832                           
   833  00B8                     _CRC:
   834  00B8                            ds      1
   835                           
   836  00B9                     _DelayOff:
   837  00B9                            ds      1
   838                           
   839  00BA                     _Dimmer:
   840  00BA                            ds      1
   841                           
   842  00BB                     _DimmerLightsIntr:
   843  00BB                            ds      1
   844                           
   845  00BC                     _LED:
   846  00BC                            ds      1
   847                           
   848  00BD                     _PF:
   849  00BD                            ds      1
   850                           
   851  00BE                     _RF:
   852  00BE                            ds      1
   853                           
   854  00BF                     _RFSW:
   855  00BF                            ds      1
   856                           
   857  00C0                     _RSSI:
   858  00C0                            ds      1
   859                           
   860  00C1                     _Rx_Length:
   861  00C1                            ds      1
   862                           
   863  00C2                     _SPI0Buffer:
   864  00C2                            ds      1
   865                           
   866  00C3                     _Tx_Length:
   867  00C3                            ds      1
   868                           
   869  00C4                     _r_address:
   870  00C4                            ds      1
   871                           
   872  00C5                     _r_data:
   873  00C5                            ds      1
   874                           
   875  00C6                     _s_data:
   876  00C6                            ds      1
   877                           
   878  00C7                     _PF1:
   879  00C7                            ds      8
   880                           
   881  00CF                     _VarTimer0:
   882  00CF                            ds      7
   883                           
   884  00D6                     _DlySw1:
   885  00D6                            ds      5
   886                           
   887  00DB                     _VarErrLED:
   888  00DB                            ds      4
   889                           
   890  00DF                     _VarLED1:
   891  00DF                            ds      4
   892                           
   893  00E3                     _VarLED2:
   894  00E3                            ds      4
   895                           
   896  00E7                     _Dimmer1:
   897  00E7                            ds      3
   898                           
   899  00EA                     _RF1:
   900  00EA                            ds      2
   901                           
   902  00EC                     _RFSW1:
   903  00EC                            ds      1
   904                           
   905                           psect	bssBANK2,class=BANK2,space=1
   906                           global __pbssBANK2
   907  0120                     __pbssBANK2:
   908  0120                     _VarTMain:
   909  0120                            ds      16
   910                           
   911  0130                     _Temp1:
   912  0130                            ds      14
   913                           
   914  013E                     _Buz1:
   915  013E                            ds      12
   916                           
   917  014A                     _DimmerLights1:
   918  014A                            ds      10
   919                           
   920  0154                     _Sw1:
   921  0154                            ds      9
   922                           
   923                           psect	dataBANK3,class=BANK3,space=1
   924                           global __pdataBANK3
   925  01A0                     __pdataBANK3:
   926                           	file	"G:\Program\PIC\Header_File\MCU_16F1518_B1.h"
   927                           	line	435
   928  01A0                     _VarMemory:
   929  01A0                            ds      37
   930                           
   931                           psect	dataBANK3
   932                           	file	"G:\Program\PIC\10.Switch_1Key_Dimmer\Switch_1Key_Dimmer_V1.1.2\Release\Switch_1ke
                                 y_Dimmer_V1.1.2.h"
   933                           	line	213
   934  01C5                     _VarProduct:
   935  01C5                            ds      30
   936                           
   937                           psect	bssBANK4,class=BANK4,space=1
   938                           global __pbssBANK4
   939  0220                     __pbssBANK4:
   940  0220                     _Load1:
   941  0220                            ds      71
   942                           
   943                           psect clrtext,class=CODE,delta=2
   944                           global clear_ram
   945                           ;	Called with FSR0 containing the base address, and
   946                           ;	WREG with the size to clear
   947  2ECC                     clear_ram:
   948  2ECC  0064               	clrwdt			;clear the watchdog before getting into this loop
   949  2ECD                     clrloop:
   950  2ECD  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   951  2ECE  3101               	addfsr	0,1
   952  2ECF  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   953  2ED0  2ECD               	goto clrloop	;have we reached the end yet?
   954  2ED1  3400               	retlw	0		;all done for this memory range, return
   955                           ; Clear objects allocated to BITCOMMON
   956                           psect cinit,class=CODE,delta=2
   957                           	global __pbitbssCOMMON
   958  24DF  01FA               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   959                           ; Clear objects allocated to COMMON
   960                           psect cinit,class=CODE,delta=2
   961                           	global __pbssCOMMON
   962  24E0  01FB               	clrf	((__pbssCOMMON)+0)&07Fh
   963  24E1  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   964                           ; Clear objects allocated to BANK0
   965                           psect cinit,class=CODE,delta=2
   966                           	global __pbssBANK0
   967  24E2  01ED               	clrf	((__pbssBANK0)+0)&07Fh
   968  24E3  01EE               	clrf	((__pbssBANK0)+1)&07Fh
   969  24E4  01EF               	clrf	((__pbssBANK0)+2)&07Fh
   970                           ; Clear objects allocated to BANK1
   971                           psect cinit,class=CODE,delta=2
   972                           	global __pbssBANK1
   973  24E5  30A0               	movlw	low(__pbssBANK1)
   974  24E6  0084               	movwf	fsr0l
   975  24E7  3000               	movlw	high(__pbssBANK1)
   976  24E8  0085               	movwf	fsr0h
   977  24E9  304D               	movlw	04Dh
   978  24EA  31AE  26CC  31A4   	fcall	clear_ram
   979                           ; Clear objects allocated to BANK2
   980                           psect cinit,class=CODE,delta=2
   981                           	global __pbssBANK2
   982  24ED  3020               	movlw	low(__pbssBANK2)
   983  24EE  0084               	movwf	fsr0l
   984  24EF  3001               	movlw	high(__pbssBANK2)
   985  24F0  0085               	movwf	fsr0h
   986  24F1  303D               	movlw	03Dh
   987  24F2  31AE  26CC  31A4   	fcall	clear_ram
   988                           ; Clear objects allocated to BANK4
   989                           psect cinit,class=CODE,delta=2
   990                           	global __pbssBANK4
   991  24F5  3020               	movlw	low(__pbssBANK4)
   992  24F6  0084               	movwf	fsr0l
   993  24F7  3002               	movlw	high(__pbssBANK4)
   994  24F8  0085               	movwf	fsr0h
   995  24F9  3047               	movlw	047h
   996  24FA  31AE  26CC  31A4   	fcall	clear_ram
   997                           psect inittext,class=CODE,delta=2
   998                           global init_ram,btemp
   999  2EC6                     init_ram:
  1000  2EC6  00FE               	movwf btemp,f
  1001  2EC7                     initloop:
  1002  2EC7  0012               	moviw fsr0++
  1003  2EC8  001E               	movwi fsr1++
  1004  2EC9  0BFE               	decfsz btemp
  1005  2ECA  2EC7               	goto initloop
  1006  2ECB  3400               	retlw 0
  1007                           ; Initialize objects allocated to BANK3
  1008                           	global __pidataBANK3,__pdataBANK3
  1009                           psect cinit,class=CODE,delta=2
  1010  24FD  30BB               	movlw low(__pidataBANK3)
  1011  24FE  0084               	movwf fsr0l
  1012  24FF  3098               	movlw high(__pidataBANK3)|80h
  1013  2500  0085               	movwf fsr0h
  1014  2501  30A0               	movlw low(__pdataBANK3)
  1015  2502  0086               	movwf fsr1l
  1016  2503  3001               	movlw high(__pdataBANK3)
  1017  2504  0087               	movwf fsr1h
  1018  2505  3043               	movlw 043h
  1019  2506  31AE  26C6  31A4   	fcall init_ram
  1020                           psect cinit,class=CODE,delta=2
  1021                           global end_of_initialization
  1022                           
  1023                           ;End of C runtime variable initialization code
  1024                           
  1025  2509                     end_of_initialization:
  1026  2509  0020               movlb 0
  1027  250A  3194  2CED         ljmp _main	;jump to C main() function
  1028                           psect	cstackCOMMON,class=COMMON,space=1
  1029                           global __pcstackCOMMON
  1030  0070                     __pcstackCOMMON:
  1031                           	global	?_setBuz_Initialization
  1032  0070                     ?_setBuz_Initialization:	; 0 bytes @ 0x0
  1033                           	global	?_setBuz_Main
  1034  0070                     ?_setBuz_Main:	; 0 bytes @ 0x0
  1035                           	global	?_CC2500_WriteByte
  1036  0070                     ?_CC2500_WriteByte:	; 0 bytes @ 0x0
  1037                           	global	?_CC2500_WriteCommand
  1038  0070                     ?_CC2500_WriteCommand:	; 0 bytes @ 0x0
  1039                           	global	?_CC2500_ReadStatus
  1040  0070                     ?_CC2500_ReadStatus:	; 0 bytes @ 0x0
  1041                           	global	?_CC2500_ReadByte
  1042  0070                     ?_CC2500_ReadByte:	; 0 bytes @ 0x0
  1043                           	global	?_CC2500_PowerRST
  1044  0070                     ?_CC2500_PowerRST:	; 0 bytes @ 0x0
  1045                           	global	?_CC2500_InitSetREG
  1046  0070                     ?_CC2500_InitSetREG:	; 0 bytes @ 0x0
  1047                           	global	?_CC2500_InitPATable
  1048  0070                     ?_CC2500_InitPATable:	; 0 bytes @ 0x0
  1049                           	global	?_CC2500_ClearTXFIFO
  1050  0070                     ?_CC2500_ClearTXFIFO:	; 0 bytes @ 0x0
  1051                           	global	?_CC2500_ClearRXFIFO
  1052  0070                     ?_CC2500_ClearRXFIFO:	; 0 bytes @ 0x0
  1053                           	global	?_CC2500_FrequencyCabr
  1054  0070                     ?_CC2500_FrequencyCabr:	; 0 bytes @ 0x0
  1055                           	global	?_CC2500_SIDLEMode
  1056  0070                     ?_CC2500_SIDLEMode:	; 0 bytes @ 0x0
  1057                           	global	?_DlyOff_Initialization
  1058  0070                     ?_DlyOff_Initialization:	; 0 bytes @ 0x0
  1059                           	global	?_DlyOff_Main
  1060  0070                     ?_DlyOff_Main:	; 0 bytes @ 0x0
  1061                           	global	?_setTxData
  1062  0070                     ?_setTxData:	; 0 bytes @ 0x0
  1063                           	global	?_setDimmerLights_Initialization
  1064  0070                     ?_setDimmerLights_Initialization:	; 0 bytes @ 0x0
  1065                           	global	?_setDimmerLights_Main
  1066  0070                     ?_setDimmerLights_Main:	; 0 bytes @ 0x0
  1067                           	global	?_setDimmerLights_ERROR
  1068  0070                     ?_setDimmerLights_ERROR:	; 0 bytes @ 0x0
  1069                           	global	?_setLED_Initialization
  1070  0070                     ?_setLED_Initialization:	; 0 bytes @ 0x0
  1071                           	global	?_setLED_Main
  1072  0070                     ?_setLED_Main:	; 0 bytes @ 0x0
  1073                           	global	?_MainT_Initialization
  1074  0070                     ?_MainT_Initialization:	; 0 bytes @ 0x0
  1075                           	global	?_Mcu_Initialization
  1076  0070                     ?_Mcu_Initialization:	; 0 bytes @ 0x0
  1077                           	global	?_Flash_Memory_Initialization
  1078  0070                     ?_Flash_Memory_Initialization:	; 0 bytes @ 0x0
  1079                           	global	?_Temp_Initialization
  1080  0070                     ?_Temp_Initialization:	; 0 bytes @ 0x0
  1081                           	global	?_Load_Initialization
  1082  0070                     ?_Load_Initialization:	; 0 bytes @ 0x0
  1083                           	global	?_PowerFault_Initialization
  1084  0070                     ?_PowerFault_Initialization:	; 0 bytes @ 0x0
  1085                           	global	?_Switch_Initialization
  1086  0070                     ?_Switch_Initialization:	; 0 bytes @ 0x0
  1087                           	global	?_RF_Initialization
  1088  0070                     ?_RF_Initialization:	; 0 bytes @ 0x0
  1089                           	global	?_MainT
  1090  0070                     ?_MainT:	; 0 bytes @ 0x0
  1091                           	global	?_Flash_Memory_Main
  1092  0070                     ?_Flash_Memory_Main:	; 0 bytes @ 0x0
  1093                           	global	?_Temp_Main
  1094  0070                     ?_Temp_Main:	; 0 bytes @ 0x0
  1095                           	global	?_Load_Main
  1096  0070                     ?_Load_Main:	; 0 bytes @ 0x0
  1097                           	global	?_PowerFault_Main
  1098  0070                     ?_PowerFault_Main:	; 0 bytes @ 0x0
  1099                           	global	?_Switch_Main
  1100  0070                     ?_Switch_Main:	; 0 bytes @ 0x0
  1101                           	global	?_RF_Main
  1102  0070                     ?_RF_Main:	; 0 bytes @ 0x0
  1103                           	global	?_IO_Set
  1104  0070                     ?_IO_Set:	; 0 bytes @ 0x0
  1105                           	global	?_TMR0_Set
  1106  0070                     ?_TMR0_Set:	; 0 bytes @ 0x0
  1107                           	global	?_ADC_Set
  1108  0070                     ?_ADC_Set:	; 0 bytes @ 0x0
  1109                           	global	?_INT_Set
  1110  0070                     ?_INT_Set:	; 0 bytes @ 0x0
  1111                           	global	?_IOC_Set
  1112  0070                     ?_IOC_Set:	; 0 bytes @ 0x0
  1113                           	global	?_IOC_ISR
  1114  0070                     ?_IOC_ISR:	; 0 bytes @ 0x0
  1115                           	global	??_IOC_ISR
  1116  0070                     ??_IOC_ISR:	; 0 bytes @ 0x0
  1117                           	global	?_TMR0_ISR
  1118  0070                     ?_TMR0_ISR:	; 0 bytes @ 0x0
  1119                           	global	?_INT_ISR
  1120  0070                     ?_INT_ISR:	; 0 bytes @ 0x0
  1121                           	global	?_Flash_Memory_Write
  1122  0070                     ?_Flash_Memory_Write:	; 0 bytes @ 0x0
  1123                           	global	?_Flash_Memory_Modify
  1124  0070                     ?_Flash_Memory_Modify:	; 0 bytes @ 0x0
  1125                           	global	?_setLoad_Initialization
  1126  0070                     ?_setLoad_Initialization:	; 0 bytes @ 0x0
  1127                           	global	?_setLoad_Main
  1128  0070                     ?_setLoad_Main:	; 0 bytes @ 0x0
  1129                           	global	?_setLoad_AH_AL_Restore
  1130  0070                     ?_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1131                           	global	?_setTemp_Main
  1132  0070                     ?_setTemp_Main:	; 0 bytes @ 0x0
  1133                           	global	?_setTemp_Initialization
  1134  0070                     ?_setTemp_Initialization:	; 0 bytes @ 0x0
  1135                           	global	?_setPowerFault_Initialization
  1136  0070                     ?_setPowerFault_Initialization:	; 0 bytes @ 0x0
  1137                           	global	?_setPowerFault_Main
  1138  0070                     ?_setPowerFault_Main:	; 0 bytes @ 0x0
  1139                           	global	?_setRF_Initialization
  1140  0070                     ?_setRF_Initialization:	; 0 bytes @ 0x0
  1141                           	global	?_setRF_Main
  1142  0070                     ?_setRF_Main:	; 0 bytes @ 0x0
  1143                           	global	?_RF_RxDisable
  1144  0070                     ?_RF_RxDisable:	; 0 bytes @ 0x0
  1145                           	global	?_getRxData
  1146  0070                     ?_getRxData:	; 0 bytes @ 0x0
  1147                           	global	?_setLog_Code
  1148  0070                     ?_setLog_Code:	; 0 bytes @ 0x0
  1149                           	global	?_setControl_Lights_Table
  1150  0070                     ?_setControl_Lights_Table:	; 0 bytes @ 0x0
  1151                           	global	?_setRFSW_Control
  1152  0070                     ?_setRFSW_Control:	; 0 bytes @ 0x0
  1153                           	global	?_setRFSW_AdjControl
  1154  0070                     ?_setRFSW_AdjControl:	; 0 bytes @ 0x0
  1155                           	global	?_setRF_DimmerValue
  1156  0070                     ?_setRF_DimmerValue:	; 0 bytes @ 0x0
  1157                           	global	?_setSw_Initialization
  1158  0070                     ?_setSw_Initialization:	; 0 bytes @ 0x0
  1159                           	global	?_setSw_Main
  1160  0070                     ?_setSw_Main:	; 0 bytes @ 0x0
  1161                           	global	?_Sw_OnFunc
  1162  0070                     ?_Sw_OnFunc:	; 0 bytes @ 0x0
  1163                           	global	?_Sw_AdjFunc
  1164  0070                     ?_Sw_AdjFunc:	; 0 bytes @ 0x0
  1165                           	global	?_Sw_OffFunc
  1166  0070                     ?_Sw_OffFunc:	; 0 bytes @ 0x0
  1167                           	global	?_BuzPointSelect
  1168  0070                     ?_BuzPointSelect:	; 0 bytes @ 0x0
  1169                           	global	?_Buzzer_Initialization
  1170  0070                     ?_Buzzer_Initialization:	; 0 bytes @ 0x0
  1171                           	global	?_Buzzer_Main
  1172  0070                     ?_Buzzer_Main:	; 0 bytes @ 0x0
  1173                           	global	?_CC2500_TxData
  1174  0070                     ?_CC2500_TxData:	; 0 bytes @ 0x0
  1175                           	global	?_CC2500_RxData
  1176  0070                     ?_CC2500_RxData:	; 0 bytes @ 0x0
  1177                           	global	?_CC2500_PowerOnInitial
  1178  0070                     ?_CC2500_PowerOnInitial:	; 0 bytes @ 0x0
  1179                           	global	?_DelayOffPointSelect
  1180  0070                     ?_DelayOffPointSelect:	; 0 bytes @ 0x0
  1181                           	global	?_DelayOff_Initialization
  1182  0070                     ?_DelayOff_Initialization:	; 0 bytes @ 0x0
  1183                           	global	?_DelayOff_Main
  1184  0070                     ?_DelayOff_Main:	; 0 bytes @ 0x0
  1185                           	global	?_DimmerLightsPointSelect
  1186  0070                     ?_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1187                           	global	?_DimmerLights_Initialization
  1188  0070                     ?_DimmerLights_Initialization:	; 0 bytes @ 0x0
  1189                           	global	?_DimmerLights_Close
  1190  0070                     ?_DimmerLights_Close:	; 0 bytes @ 0x0
  1191                           	global	?_DimmerLights_Main
  1192  0070                     ?_DimmerLights_Main:	; 0 bytes @ 0x0
  1193                           	global	?_DimmerLights_ERROR
  1194  0070                     ?_DimmerLights_ERROR:	; 0 bytes @ 0x0
  1195                           	global	?_setDimmerLights_AdjRF
  1196  0070                     ?_setDimmerLights_AdjRF:	; 0 bytes @ 0x0
  1197                           	global	?_DimmerPointSelect
  1198  0070                     ?_DimmerPointSelect:	; 0 bytes @ 0x0
  1199                           	global	?_LedPointSelect
  1200  0070                     ?_LedPointSelect:	; 0 bytes @ 0x0
  1201                           	global	?_LED_Initialization
  1202  0070                     ?_LED_Initialization:	; 0 bytes @ 0x0
  1203                           	global	?_LED_Main
  1204  0070                     ?_LED_Main:	; 0 bytes @ 0x0
  1205                           	global	?_main
  1206  0070                     ?_main:	; 0 bytes @ 0x0
  1207                           	global	?_ISR
  1208  0070                     ?_ISR:	; 0 bytes @ 0x0
  1209                           	global	?_setDimmerReClock
  1210  0070                     ?_setDimmerReClock:	; 0 bytes @ 0x0
  1211                           	global	??_setDimmerReClock
  1212  0070                     ??_setDimmerReClock:	; 0 bytes @ 0x0
  1213                           	global	?_setINT_GO
  1214  0070                     ?_setINT_GO:	; 0 bytes @ 0x0
  1215                           	global	?_Flash_Memory_Unlock
  1216  0070                     ?_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1217                           	global	?_Flash_Memory_Erasing
  1218  0070                     ?_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1219                           	global	?_LoadPointSelect
  1220  0070                     ?_LoadPointSelect:	; 0 bytes @ 0x0
  1221                           	global	?_TempPointSelect
  1222  0070                     ?_TempPointSelect:	; 0 bytes @ 0x0
  1223                           	global	?_PowerFaultPointSelect
  1224  0070                     ?_PowerFaultPointSelect:	; 0 bytes @ 0x0
  1225                           	global	?_RfPointSelect
  1226  0070                     ?_RfPointSelect:	; 0 bytes @ 0x0
  1227                           	global	?_RfSWPointSelect
  1228  0070                     ?_RfSWPointSelect:	; 0 bytes @ 0x0
  1229                           	global	?_TouchPower
  1230  0070                     ?_TouchPower:	; 0 bytes @ 0x0
  1231                           	global	?_SwPointSelect
  1232  0070                     ?_SwPointSelect:	; 0 bytes @ 0x0
  1233                           	global	?i1_LoadPointSelect
  1234  0070                     ?i1_LoadPointSelect:	; 0 bytes @ 0x0
  1235                           	global	??i1_LoadPointSelect
  1236  0070                     ??i1_LoadPointSelect:	; 0 bytes @ 0x0
  1237                           	global	?i1_RfPointSelect
  1238  0070                     ?i1_RfPointSelect:	; 0 bytes @ 0x0
  1239                           	global	??i1_RfPointSelect
  1240  0070                     ??i1_RfPointSelect:	; 0 bytes @ 0x0
  1241                           	global	?_DelayTimejudge
  1242  0070                     ?_DelayTimejudge:	; 1 bytes @ 0x0
  1243                           	global	?_getPercentValue
  1244  0070                     ?_getPercentValue:	; 1 bytes @ 0x0
  1245                           	global	?_getDimmer_Detect
  1246  0070                     ?_getDimmer_Detect:	; 1 bytes @ 0x0
  1247                           	global	?_getDimmerLights_StatusFlag
  1248  0070                     ?_getDimmerLights_StatusFlag:	; 1 bytes @ 0x0
  1249                           	global	?_getDimmerLights_Trigger
  1250  0070                     ?_getDimmerLights_Trigger:	; 1 bytes @ 0x0
  1251                           	global	?_getDimmer_TempERROR
  1252  0070                     ?_getDimmer_TempERROR:	; 1 bytes @ 0x0
  1253                           	global	?_getDimmer_LoadERROR
  1254  0070                     ?_getDimmer_LoadERROR:	; 1 bytes @ 0x0
  1255                           	global	?_getDimmer_PFERROR
  1256  0070                     ?_getDimmer_PFERROR:	; 1 bytes @ 0x0
  1257                           	global	?_setPercentValue
  1258  0070                     ?_setPercentValue:	; 1 bytes @ 0x0
  1259                           	global	?_Flash_Memory_Read
  1260  0070                     ?_Flash_Memory_Read:	; 1 bytes @ 0x0
  1261                           	global	?_getTemp_Safe
  1262  0070                     ?_getTemp_Safe:	; 1 bytes @ 0x0
  1263                           	global	?_getPF_Safe
  1264  0070                     ?_getPF_Safe:	; 1 bytes @ 0x0
  1265                           	global	?_getLoad_Safe
  1266  0070                     ?_getLoad_Safe:	; 1 bytes @ 0x0
  1267                           	global	setBuz_Initialization@buz
  1268  0070                     setBuz_Initialization@buz:	; 1 bytes @ 0x0
  1269                           	global	setLoad_Count@load
  1270  0070                     setLoad_Count@load:	; 1 bytes @ 0x0
  1271                           	global	setLoad_AH_AL_Restore@load
  1272  0070                     setLoad_AH_AL_Restore@load:	; 1 bytes @ 0x0
  1273                           	global	TempPointSelect@temp
  1274  0070                     TempPointSelect@temp:	; 1 bytes @ 0x0
  1275                           	global	PowerFaultPointSelect@pf
  1276  0070                     PowerFaultPointSelect@pf:	; 1 bytes @ 0x0
  1277                           	global	setRF_Initialization@rf
  1278  0070                     setRF_Initialization@rf:	; 1 bytes @ 0x0
  1279  0070                     	ds	1
  1280                           	global	i1LoadPointSelect@load
  1281  0071                     i1LoadPointSelect@load:	; 1 bytes @ 0x1
  1282                           	global	i1RfPointSelect@rf
  1283  0071                     i1RfPointSelect@rf:	; 1 bytes @ 0x1
  1284  0071                     	ds	1
  1285                           	global	?_setRF_ReceiveGO
  1286  0072                     ?_setRF_ReceiveGO:	; 0 bytes @ 0x2
  1287                           	global	?i1_setLoad_StatusOff
  1288  0072                     ?i1_setLoad_StatusOff:	; 0 bytes @ 0x2
  1289                           	global	setRF_ReceiveGO@command
  1290  0072                     setRF_ReceiveGO@command:	; 1 bytes @ 0x2
  1291                           	global	i1setLoad_StatusOff@lights
  1292  0072                     i1setLoad_StatusOff@lights:	; 1 bytes @ 0x2
  1293  0072                     	ds	1
  1294                           	global	??_setRF_ReceiveGO
  1295  0073                     ??_setRF_ReceiveGO:	; 0 bytes @ 0x3
  1296                           	global	setRF_ReceiveGO@rf
  1297  0073                     setRF_ReceiveGO@rf:	; 1 bytes @ 0x3
  1298                           	global	i1setLoad_StatusOff@command
  1299  0073                     i1setLoad_StatusOff@command:	; 1 bytes @ 0x3
  1300  0073                     	ds	1
  1301                           	global	??_INT_ISR
  1302  0074                     ??_INT_ISR:	; 0 bytes @ 0x4
  1303                           	global	??i1_setLoad_StatusOff
  1304  0074                     ??i1_setLoad_StatusOff:	; 0 bytes @ 0x4
  1305                           	global	i1setLoad_StatusOff@load
  1306  0074                     i1setLoad_StatusOff@load:	; 1 bytes @ 0x4
  1307  0074                     	ds	1
  1308                           	global	??_TMR0_ISR
  1309  0075                     ??_TMR0_ISR:	; 0 bytes @ 0x5
  1310  0075                     	ds	4
  1311                           	global	??_ISR
  1312  0079                     ??_ISR:	; 0 bytes @ 0x9
  1313  0079                     	ds	1
  1314                           psect	cstackBANK0,class=BANK0,space=1
  1315                           global __pcstackBANK0
  1316  0020                     __pcstackBANK0:
  1317                           	global	??_CC2500_WriteByte
  1318  0020                     ??_CC2500_WriteByte:	; 0 bytes @ 0x0
  1319                           	global	??_CC2500_ReadByte
  1320  0020                     ??_CC2500_ReadByte:	; 0 bytes @ 0x0
  1321                           	global	?_DelayTime_1us
  1322  0020                     ?_DelayTime_1us:	; 0 bytes @ 0x0
  1323                           	global	?_setRF_DimmerLights
  1324  0020                     ?_setRF_DimmerLights:	; 0 bytes @ 0x0
  1325                           	global	??_DelayTimejudge
  1326  0020                     ??_DelayTimejudge:	; 0 bytes @ 0x0
  1327                           	global	?_setLoad_Count
  1328  0020                     ?_setLoad_Count:	; 0 bytes @ 0x0
  1329                           	global	??_MainT_Initialization
  1330  0020                     ??_MainT_Initialization:	; 0 bytes @ 0x0
  1331                           	global	??_IO_Set
  1332  0020                     ??_IO_Set:	; 0 bytes @ 0x0
  1333                           	global	??_TMR0_Set
  1334  0020                     ??_TMR0_Set:	; 0 bytes @ 0x0
  1335                           	global	??_ADC_Set
  1336  0020                     ??_ADC_Set:	; 0 bytes @ 0x0
  1337                           	global	??_INT_Set
  1338  0020                     ??_INT_Set:	; 0 bytes @ 0x0
  1339                           	global	??_IOC_Set
  1340  0020                     ??_IOC_Set:	; 0 bytes @ 0x0
  1341                           	global	??_Flash_Memory_Read
  1342  0020                     ??_Flash_Memory_Read:	; 0 bytes @ 0x0
  1343                           	global	??_Flash_Memory_Write
  1344  0020                     ??_Flash_Memory_Write:	; 0 bytes @ 0x0
  1345                           	global	??_setLoad_AH_AL_Restore
  1346  0020                     ??_setLoad_AH_AL_Restore:	; 0 bytes @ 0x0
  1347                           	global	??_setRF_Initialization
  1348  0020                     ??_setRF_Initialization:	; 0 bytes @ 0x0
  1349                           	global	??_BuzPointSelect
  1350  0020                     ??_BuzPointSelect:	; 0 bytes @ 0x0
  1351                           	global	??_DelayOffPointSelect
  1352  0020                     ??_DelayOffPointSelect:	; 0 bytes @ 0x0
  1353                           	global	??_DimmerLightsPointSelect
  1354  0020                     ??_DimmerLightsPointSelect:	; 0 bytes @ 0x0
  1355                           	global	??_DimmerPointSelect
  1356  0020                     ??_DimmerPointSelect:	; 0 bytes @ 0x0
  1357                           	global	??_LedPointSelect
  1358  0020                     ??_LedPointSelect:	; 0 bytes @ 0x0
  1359                           	global	??_setINT_GO
  1360  0020                     ??_setINT_GO:	; 0 bytes @ 0x0
  1361                           	global	??_Flash_Memory_Unlock
  1362  0020                     ??_Flash_Memory_Unlock:	; 0 bytes @ 0x0
  1363                           	global	??_Flash_Memory_Erasing
  1364  0020                     ??_Flash_Memory_Erasing:	; 0 bytes @ 0x0
  1365                           	global	??_LoadPointSelect
  1366  0020                     ??_LoadPointSelect:	; 0 bytes @ 0x0
  1367                           	global	??_TempPointSelect
  1368  0020                     ??_TempPointSelect:	; 0 bytes @ 0x0
  1369                           	global	??_PowerFaultPointSelect
  1370  0020                     ??_PowerFaultPointSelect:	; 0 bytes @ 0x0
  1371                           	global	??_RfPointSelect
  1372  0020                     ??_RfPointSelect:	; 0 bytes @ 0x0
  1373                           	global	??_RfSWPointSelect
  1374  0020                     ??_RfSWPointSelect:	; 0 bytes @ 0x0
  1375                           	global	??_TouchPower
  1376  0020                     ??_TouchPower:	; 0 bytes @ 0x0
  1377                           	global	??_SwPointSelect
  1378  0020                     ??_SwPointSelect:	; 0 bytes @ 0x0
  1379                           	global	?_getAD
  1380  0020                     ?_getAD:	; 2 bytes @ 0x0
  1381                           	global	?___wmul
  1382  0020                     ?___wmul:	; 2 bytes @ 0x0
  1383                           	global	?___lwdiv
  1384  0020                     ?___lwdiv:	; 2 bytes @ 0x0
  1385                           	global	?___awdiv
  1386  0020                     ?___awdiv:	; 2 bytes @ 0x0
  1387                           	global	?___ftpack
  1388  0020                     ?___ftpack:	; 3 bytes @ 0x0
  1389                           	global	setINT_GO@command
  1390  0020                     setINT_GO@command:	; 1 bytes @ 0x0
  1391                           	global	getAD@adcon1
  1392  0020                     getAD@adcon1:	; 1 bytes @ 0x0
  1393                           	global	setLoad_Count@command
  1394  0020                     setLoad_Count@command:	; 1 bytes @ 0x0
  1395                           	global	setRF_DimmerLights@on
  1396  0020                     setRF_DimmerLights@on:	; 1 bytes @ 0x0
  1397                           	global	DelayTime_1us@count
  1398  0020                     DelayTime_1us@count:	; 2 bytes @ 0x0
  1399                           	global	___wmul@multiplier
  1400  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
  1401                           	global	___lwdiv@divisor
  1402  0020                     ___lwdiv@divisor:	; 2 bytes @ 0x0
  1403                           	global	___awdiv@divisor
  1404  0020                     ___awdiv@divisor:	; 2 bytes @ 0x0
  1405                           	global	___ftpack@arg
  1406  0020                     ___ftpack@arg:	; 3 bytes @ 0x0
  1407  0020                     	ds	1
  1408                           	global	??_setRF_DimmerLights
  1409  0021                     ??_setRF_DimmerLights:	; 0 bytes @ 0x1
  1410                           	global	??_setLoad_Count
  1411  0021                     ??_setLoad_Count:	; 0 bytes @ 0x1
  1412                           	global	??_Mcu_Initialization
  1413  0021                     ??_Mcu_Initialization:	; 0 bytes @ 0x1
  1414                           	global	??_RF_Initialization
  1415  0021                     ??_RF_Initialization:	; 0 bytes @ 0x1
  1416                           	global	?_setTemp_Enable
  1417  0021                     ?_setTemp_Enable:	; 0 bytes @ 0x1
  1418                           	global	??_getTemp_Safe
  1419  0021                     ??_getTemp_Safe:	; 0 bytes @ 0x1
  1420                           	global	??_getPF_Safe
  1421  0021                     ??_getPF_Safe:	; 0 bytes @ 0x1
  1422                           	global	??_setTemp_Initialization
  1423  0021                     ??_setTemp_Initialization:	; 0 bytes @ 0x1
  1424                           	global	??_setPowerFault_Initialization
  1425  0021                     ??_setPowerFault_Initialization:	; 0 bytes @ 0x1
  1426                           	global	BuzPointSelect@buz
  1427  0021                     BuzPointSelect@buz:	; 1 bytes @ 0x1
  1428                           	global	CC2500_WriteByte@loop_a
  1429  0021                     CC2500_WriteByte@loop_a:	; 1 bytes @ 0x1
  1430                           	global	CC2500_ReadByte@loop_b
  1431  0021                     CC2500_ReadByte@loop_b:	; 1 bytes @ 0x1
  1432                           	global	DelayOffPointSelect@sw
  1433  0021                     DelayOffPointSelect@sw:	; 1 bytes @ 0x1
  1434                           	global	DelayTimejudge@i
  1435  0021                     DelayTimejudge@i:	; 1 bytes @ 0x1
  1436                           	global	DimmerLightsPointSelect@lights
  1437  0021                     DimmerLightsPointSelect@lights:	; 1 bytes @ 0x1
  1438                           	global	DimmerPointSelect@dimmer
  1439  0021                     DimmerPointSelect@dimmer:	; 1 bytes @ 0x1
  1440                           	global	LedPointSelect@led
  1441  0021                     LedPointSelect@led:	; 1 bytes @ 0x1
  1442                           	global	Flash_Memory_Read@i
  1443  0021                     Flash_Memory_Read@i:	; 1 bytes @ 0x1
  1444                           	global	Flash_Memory_Write@i
  1445  0021                     Flash_Memory_Write@i:	; 1 bytes @ 0x1
  1446                           	global	LoadPointSelect@load
  1447  0021                     LoadPointSelect@load:	; 1 bytes @ 0x1
  1448                           	global	setLoad_AH_AL_Restore@i
  1449  0021                     setLoad_AH_AL_Restore@i:	; 1 bytes @ 0x1
  1450                           	global	setTemp_Enable@command
  1451  0021                     setTemp_Enable@command:	; 1 bytes @ 0x1
  1452                           	global	getTemp_Safe@temp
  1453  0021                     getTemp_Safe@temp:	; 1 bytes @ 0x1
  1454                           	global	setTemp_Initialization@temp
  1455  0021                     setTemp_Initialization@temp:	; 1 bytes @ 0x1
  1456                           	global	setPowerFault_Initialization@pf
  1457  0021                     setPowerFault_Initialization@pf:	; 1 bytes @ 0x1
  1458                           	global	getPF_Safe@pf
  1459  0021                     getPF_Safe@pf:	; 1 bytes @ 0x1
  1460                           	global	RfPointSelect@rf
  1461  0021                     RfPointSelect@rf:	; 1 bytes @ 0x1
  1462                           	global	RfSWPointSelect@sw
  1463  0021                     RfSWPointSelect@sw:	; 1 bytes @ 0x1
  1464                           	global	SwPointSelect@sw
  1465  0021                     SwPointSelect@sw:	; 1 bytes @ 0x1
  1466  0021                     	ds	1
  1467                           	global	??_setBuz_Main
  1468  0022                     ??_setBuz_Main:	; 0 bytes @ 0x2
  1469                           	global	??_CC2500_WriteCommand
  1470  0022                     ??_CC2500_WriteCommand:	; 0 bytes @ 0x2
  1471                           	global	??_CC2500_ReadStatus
  1472  0022                     ??_CC2500_ReadStatus:	; 0 bytes @ 0x2
  1473                           	global	?_setRF_RxStatus
  1474  0022                     ?_setRF_RxStatus:	; 0 bytes @ 0x2
  1475                           	global	??_DelayTime_1us
  1476  0022                     ??_DelayTime_1us:	; 0 bytes @ 0x2
  1477                           	global	?_CC2500_WriteREG
  1478  0022                     ?_CC2500_WriteREG:	; 0 bytes @ 0x2
  1479                           	global	??_DlyOff_Initialization
  1480  0022                     ??_DlyOff_Initialization:	; 0 bytes @ 0x2
  1481                           	global	?_setSw_Status
  1482  0022                     ?_setSw_Status:	; 0 bytes @ 0x2
  1483                           	global	?_setRFSW_Status
  1484  0022                     ?_setRFSW_Status:	; 0 bytes @ 0x2
  1485                           	global	?_setDimmerLights_Trigger
  1486  0022                     ?_setDimmerLights_Trigger:	; 0 bytes @ 0x2
  1487                           	global	?_setDimmerLights_Switch
  1488  0022                     ?_setDimmerLights_Switch:	; 0 bytes @ 0x2
  1489                           	global	??_setTxData
  1490  0022                     ??_setTxData:	; 0 bytes @ 0x2
  1491                           	global	??_getDimmer_Detect
  1492  0022                     ??_getDimmer_Detect:	; 0 bytes @ 0x2
  1493                           	global	?_setDimmer_Detect
  1494  0022                     ?_setDimmer_Detect:	; 0 bytes @ 0x2
  1495                           	global	??_getDimmerLights_StatusFlag
  1496  0022                     ??_getDimmerLights_StatusFlag:	; 0 bytes @ 0x2
  1497                           	global	?_setLoad_GO
  1498  0022                     ?_setLoad_GO:	; 0 bytes @ 0x2
  1499                           	global	?_setDimmerLights_Open
  1500  0022                     ?_setDimmerLights_Open:	; 0 bytes @ 0x2
  1501                           	global	?_setDimmerLights_Close
  1502  0022                     ?_setDimmerLights_Close:	; 0 bytes @ 0x2
  1503                           	global	??_getDimmerLights_Trigger
  1504  0022                     ??_getDimmerLights_Trigger:	; 0 bytes @ 0x2
  1505                           	global	??_getDimmer_TempERROR
  1506  0022                     ??_getDimmer_TempERROR:	; 0 bytes @ 0x2
  1507                           	global	??_getDimmer_LoadERROR
  1508  0022                     ??_getDimmer_LoadERROR:	; 0 bytes @ 0x2
  1509                           	global	??_getDimmer_PFERROR
  1510  0022                     ??_getDimmer_PFERROR:	; 0 bytes @ 0x2
  1511                           	global	?_setDimmerLights_TriggerERROR
  1512  0022                     ?_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x2
  1513                           	global	?_setLoad_StatusOff
  1514  0022                     ?_setLoad_StatusOff:	; 0 bytes @ 0x2
  1515                           	global	?_setLED
  1516  0022                     ?_setLED:	; 0 bytes @ 0x2
  1517                           	global	?_setLoad_StatusOn
  1518  0022                     ?_setLoad_StatusOn:	; 0 bytes @ 0x2
  1519                           	global	?_setLoad_LightsStatus
  1520  0022                     ?_setLoad_LightsStatus:	; 0 bytes @ 0x2
  1521                           	global	??_setLED_Main
  1522  0022                     ??_setLED_Main:	; 0 bytes @ 0x2
  1523                           	global	??_Temp_Initialization
  1524  0022                     ??_Temp_Initialization:	; 0 bytes @ 0x2
  1525                           	global	??_PowerFault_Initialization
  1526  0022                     ??_PowerFault_Initialization:	; 0 bytes @ 0x2
  1527                           	global	??_setTemp_Enable
  1528  0022                     ??_setTemp_Enable:	; 0 bytes @ 0x2
  1529                           	global	?_setLoad_Enable
  1530  0022                     ?_setLoad_Enable:	; 0 bytes @ 0x2
  1531                           	global	?_setSw_Enable
  1532  0022                     ?_setSw_Enable:	; 0 bytes @ 0x2
  1533                           	global	??_setLoad_Initialization
  1534  0022                     ??_setLoad_Initialization:	; 0 bytes @ 0x2
  1535                           	global	?_setBuz_Enable
  1536  0022                     ?_setBuz_Enable:	; 0 bytes @ 0x2
  1537                           	global	?_setDimmerLights_AdjGo
  1538  0022                     ?_setDimmerLights_AdjGo:	; 0 bytes @ 0x2
  1539                           	global	?_setDimmerLights_TriggerAdj
  1540  0022                     ?_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x2
  1541                           	global	?_setDimmer_TempERROR
  1542  0022                     ?_setDimmer_TempERROR:	; 0 bytes @ 0x2
  1543                           	global	?_setDimmer_LoadERROR
  1544  0022                     ?_setDimmer_LoadERROR:	; 0 bytes @ 0x2
  1545                           	global	?_setDimmer_PFERROR
  1546  0022                     ?_setDimmer_PFERROR:	; 0 bytes @ 0x2
  1547                           	global	??_getAD
  1548  0022                     ??_getAD:	; 0 bytes @ 0x2
  1549                           	global	??_getLoad_Safe
  1550  0022                     ??_getLoad_Safe:	; 0 bytes @ 0x2
  1551                           	global	?_setRF_Learn
  1552  0022                     ?_setRF_Learn:	; 0 bytes @ 0x2
  1553                           	global	setBuz_Enable@command
  1554  0022                     setBuz_Enable@command:	; 1 bytes @ 0x2
  1555                           	global	CC2500_WriteREG@value
  1556  0022                     CC2500_WriteREG@value:	; 1 bytes @ 0x2
  1557                           	global	DlyOff_Initialization@sw
  1558  0022                     DlyOff_Initialization@sw:	; 1 bytes @ 0x2
  1559                           	global	DelayTimejudge@value
  1560  0022                     DelayTimejudge@value:	; 1 bytes @ 0x2
  1561                           	global	setDimmerLights_TriggerERROR@command
  1562  0022                     setDimmerLights_TriggerERROR@command:	; 1 bytes @ 0x2
  1563                           	global	setDimmerLights_Switch@command
  1564  0022                     setDimmerLights_Switch@command:	; 1 bytes @ 0x2
  1565                           	global	setDimmerLights_AdjGo@command
  1566  0022                     setDimmerLights_AdjGo@command:	; 1 bytes @ 0x2
  1567                           	global	setDimmerLights_Trigger@command
  1568  0022                     setDimmerLights_Trigger@command:	; 1 bytes @ 0x2
  1569                           	global	setDimmerLights_TriggerAdj@command
  1570  0022                     setDimmerLights_TriggerAdj@command:	; 1 bytes @ 0x2
  1571                           	global	setDimmerLights_Open@command
  1572  0022                     setDimmerLights_Open@command:	; 1 bytes @ 0x2
  1573                           	global	setDimmerLights_Close@command
  1574  0022                     setDimmerLights_Close@command:	; 1 bytes @ 0x2
  1575                           	global	setDimmer_TempERROR@command
  1576  0022                     setDimmer_TempERROR@command:	; 1 bytes @ 0x2
  1577                           	global	setDimmer_LoadERROR@command
  1578  0022                     setDimmer_LoadERROR@command:	; 1 bytes @ 0x2
  1579                           	global	setDimmer_PFERROR@command
  1580  0022                     setDimmer_PFERROR@command:	; 1 bytes @ 0x2
  1581                           	global	setDimmer_Detect@command
  1582  0022                     setDimmer_Detect@command:	; 1 bytes @ 0x2
  1583                           	global	getDimmer_TempERROR@dimmer
  1584  0022                     getDimmer_TempERROR@dimmer:	; 1 bytes @ 0x2
  1585                           	global	getDimmer_LoadERROR@dimmer
  1586  0022                     getDimmer_LoadERROR@dimmer:	; 1 bytes @ 0x2
  1587                           	global	getDimmer_PFERROR@dimmer
  1588  0022                     getDimmer_PFERROR@dimmer:	; 1 bytes @ 0x2
  1589                           	global	setLED@command
  1590  0022                     setLED@command:	; 1 bytes @ 0x2
  1591                           	global	Flash_Memory_Read@address
  1592  0022                     Flash_Memory_Read@address:	; 1 bytes @ 0x2
  1593                           	global	setLoad_Initialization@load
  1594  0022                     setLoad_Initialization@load:	; 1 bytes @ 0x2
  1595                           	global	setLoad_LightsStatus@lights
  1596  0022                     setLoad_LightsStatus@lights:	; 1 bytes @ 0x2
  1597                           	global	setLoad_Enable@command
  1598  0022                     setLoad_Enable@command:	; 1 bytes @ 0x2
  1599                           	global	setLoad_GO@command
  1600  0022                     setLoad_GO@command:	; 1 bytes @ 0x2
  1601                           	global	setLoad_StatusOn@command
  1602  0022                     setLoad_StatusOn@command:	; 1 bytes @ 0x2
  1603                           	global	setLoad_StatusOff@lights
  1604  0022                     setLoad_StatusOff@lights:	; 1 bytes @ 0x2
  1605                           	global	setTemp_Enable@temp
  1606  0022                     setTemp_Enable@temp:	; 1 bytes @ 0x2
  1607                           	global	setRF_Learn@command
  1608  0022                     setRF_Learn@command:	; 1 bytes @ 0x2
  1609                           	global	setRF_RxStatus@command
  1610  0022                     setRF_RxStatus@command:	; 1 bytes @ 0x2
  1611                           	global	setRFSW_Status@command
  1612  0022                     setRFSW_Status@command:	; 1 bytes @ 0x2
  1613                           	global	setSw_Enable@command
  1614  0022                     setSw_Enable@command:	; 1 bytes @ 0x2
  1615                           	global	setSw_Status@command
  1616  0022                     setSw_Status@command:	; 1 bytes @ 0x2
  1617                           	global	DelayTime_1us@i
  1618  0022                     DelayTime_1us@i:	; 2 bytes @ 0x2
  1619                           	global	___wmul@multiplicand
  1620  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
  1621                           	global	___lwdiv@dividend
  1622  0022                     ___lwdiv@dividend:	; 2 bytes @ 0x2
  1623                           	global	___awdiv@dividend
  1624  0022                     ___awdiv@dividend:	; 2 bytes @ 0x2
  1625  0022                     	ds	1
  1626                           	global	??_setRF_RxStatus
  1627  0023                     ??_setRF_RxStatus:	; 0 bytes @ 0x3
  1628                           	global	??_CC2500_WriteREG
  1629  0023                     ??_CC2500_WriteREG:	; 0 bytes @ 0x3
  1630                           	global	??_setSw_Status
  1631  0023                     ??_setSw_Status:	; 0 bytes @ 0x3
  1632                           	global	??_setRFSW_Status
  1633  0023                     ??_setRFSW_Status:	; 0 bytes @ 0x3
  1634                           	global	??_setDimmerLights_Trigger
  1635  0023                     ??_setDimmerLights_Trigger:	; 0 bytes @ 0x3
  1636                           	global	??_setDimmerLights_Switch
  1637  0023                     ??_setDimmerLights_Switch:	; 0 bytes @ 0x3
  1638                           	global	??_setDimmer_Detect
  1639  0023                     ??_setDimmer_Detect:	; 0 bytes @ 0x3
  1640                           	global	??_setLoad_GO
  1641  0023                     ??_setLoad_GO:	; 0 bytes @ 0x3
  1642                           	global	??_setDimmerLights_Open
  1643  0023                     ??_setDimmerLights_Open:	; 0 bytes @ 0x3
  1644                           	global	??_setDimmerLights_Close
  1645  0023                     ??_setDimmerLights_Close:	; 0 bytes @ 0x3
  1646                           	global	??_setDimmerLights_TriggerERROR
  1647  0023                     ??_setDimmerLights_TriggerERROR:	; 0 bytes @ 0x3
  1648                           	global	??_setLED
  1649  0023                     ??_setLED:	; 0 bytes @ 0x3
  1650                           	global	??_setLoad_StatusOn
  1651  0023                     ??_setLoad_StatusOn:	; 0 bytes @ 0x3
  1652                           	global	??_Load_Initialization
  1653  0023                     ??_Load_Initialization:	; 0 bytes @ 0x3
  1654                           	global	??_setLoad_Enable
  1655  0023                     ??_setLoad_Enable:	; 0 bytes @ 0x3
  1656                           	global	??_setSw_Enable
  1657  0023                     ??_setSw_Enable:	; 0 bytes @ 0x3
  1658                           	global	??_setBuz_Enable
  1659  0023                     ??_setBuz_Enable:	; 0 bytes @ 0x3
  1660                           	global	??_DelayOff_Initialization
  1661  0023                     ??_DelayOff_Initialization:	; 0 bytes @ 0x3
  1662                           	global	?_setDelayOff_GO
  1663  0023                     ?_setDelayOff_GO:	; 0 bytes @ 0x3
  1664                           	global	??_setDimmerLights_AdjGo
  1665  0023                     ??_setDimmerLights_AdjGo:	; 0 bytes @ 0x3
  1666                           	global	??_setDimmerLights_TriggerAdj
  1667  0023                     ??_setDimmerLights_TriggerAdj:	; 0 bytes @ 0x3
  1668                           	global	??_setDimmer_TempERROR
  1669  0023                     ??_setDimmer_TempERROR:	; 0 bytes @ 0x3
  1670                           	global	??_setDimmer_LoadERROR
  1671  0023                     ??_setDimmer_LoadERROR:	; 0 bytes @ 0x3
  1672                           	global	??_setDimmer_PFERROR
  1673  0023                     ??_setDimmer_PFERROR:	; 0 bytes @ 0x3
  1674                           	global	??_setRF_Learn
  1675  0023                     ??_setRF_Learn:	; 0 bytes @ 0x3
  1676                           	global	setBuz_Enable@buz
  1677  0023                     setBuz_Enable@buz:	; 1 bytes @ 0x3
  1678                           	global	CC2500_WriteCommand@command
  1679  0023                     CC2500_WriteCommand@command:	; 1 bytes @ 0x3
  1680                           	global	CC2500_ReadStatus@status_addr
  1681  0023                     CC2500_ReadStatus@status_addr:	; 1 bytes @ 0x3
  1682                           	global	setDelayOff_GO@command
  1683  0023                     setDelayOff_GO@command:	; 1 bytes @ 0x3
  1684                           	global	getDimmerLights_StatusFlag@length
  1685  0023                     getDimmerLights_StatusFlag@length:	; 1 bytes @ 0x3
  1686                           	global	getDimmerLights_Trigger@length
  1687  0023                     getDimmerLights_Trigger@length:	; 1 bytes @ 0x3
  1688                           	global	setDimmerLights_Switch@lights
  1689  0023                     setDimmerLights_Switch@lights:	; 1 bytes @ 0x3
  1690                           	global	setDimmerLights_AdjGo@lights
  1691  0023                     setDimmerLights_AdjGo@lights:	; 1 bytes @ 0x3
  1692                           	global	setDimmerLights_Trigger@lights
  1693  0023                     setDimmerLights_Trigger@lights:	; 1 bytes @ 0x3
  1694                           	global	setDimmerLights_TriggerAdj@lights
  1695  0023                     setDimmerLights_TriggerAdj@lights:	; 1 bytes @ 0x3
  1696                           	global	setDimmerLights_Open@lights
  1697  0023                     setDimmerLights_Open@lights:	; 1 bytes @ 0x3
  1698                           	global	setDimmerLights_Close@lights
  1699  0023                     setDimmerLights_Close@lights:	; 1 bytes @ 0x3
  1700                           	global	setDimmer_TempERROR@dimmer
  1701  0023                     setDimmer_TempERROR@dimmer:	; 1 bytes @ 0x3
  1702                           	global	setDimmer_LoadERROR@dimmer
  1703  0023                     setDimmer_LoadERROR@dimmer:	; 1 bytes @ 0x3
  1704                           	global	setDimmer_PFERROR@dimmer
  1705  0023                     setDimmer_PFERROR@dimmer:	; 1 bytes @ 0x3
  1706                           	global	setDimmer_Detect@dimmer
  1707  0023                     setDimmer_Detect@dimmer:	; 1 bytes @ 0x3
  1708                           	global	getDimmer_Detect@dimmer
  1709  0023                     getDimmer_Detect@dimmer:	; 1 bytes @ 0x3
  1710                           	global	setLED@led
  1711  0023                     setLED@led:	; 1 bytes @ 0x3
  1712                           	global	Flash_Memory_Read@ret
  1713  0023                     Flash_Memory_Read@ret:	; 1 bytes @ 0x3
  1714                           	global	setLoad_LightsStatus@command
  1715  0023                     setLoad_LightsStatus@command:	; 1 bytes @ 0x3
  1716                           	global	setLoad_Enable@load
  1717  0023                     setLoad_Enable@load:	; 1 bytes @ 0x3
  1718                           	global	setLoad_GO@load
  1719  0023                     setLoad_GO@load:	; 1 bytes @ 0x3
  1720                           	global	setLoad_StatusOn@load
  1721  0023                     setLoad_StatusOn@load:	; 1 bytes @ 0x3
  1722                           	global	setLoad_StatusOff@command
  1723  0023                     setLoad_StatusOff@command:	; 1 bytes @ 0x3
  1724                           	global	getLoad_Safe@load
  1725  0023                     getLoad_Safe@load:	; 1 bytes @ 0x3
  1726                           	global	setRF_Learn@rf
  1727  0023                     setRF_Learn@rf:	; 1 bytes @ 0x3
  1728                           	global	setRF_RxStatus@rf
  1729  0023                     setRF_RxStatus@rf:	; 1 bytes @ 0x3
  1730                           	global	setRFSW_Status@sw
  1731  0023                     setRFSW_Status@sw:	; 1 bytes @ 0x3
  1732                           	global	setRF_DimmerLights@status
  1733  0023                     setRF_DimmerLights@status:	; 1 bytes @ 0x3
  1734                           	global	setSw_Enable@sw
  1735  0023                     setSw_Enable@sw:	; 1 bytes @ 0x3
  1736                           	global	setSw_Status@sw
  1737  0023                     setSw_Status@sw:	; 1 bytes @ 0x3
  1738                           	global	___ftpack@exp
  1739  0023                     ___ftpack@exp:	; 1 bytes @ 0x3
  1740  0023                     	ds	1
  1741                           	global	??_setBuz_Initialization
  1742  0024                     ??_setBuz_Initialization:	; 0 bytes @ 0x4
  1743                           	global	??_CC2500_ClearTXFIFO
  1744  0024                     ??_CC2500_ClearTXFIFO:	; 0 bytes @ 0x4
  1745                           	global	??_CC2500_ClearRXFIFO
  1746  0024                     ??_CC2500_ClearRXFIFO:	; 0 bytes @ 0x4
  1747                           	global	??_CC2500_SIDLEMode
  1748  0024                     ??_CC2500_SIDLEMode:	; 0 bytes @ 0x4
  1749                           	global	??_setLoad_StatusOff
  1750  0024                     ??_setLoad_StatusOff:	; 0 bytes @ 0x4
  1751                           	global	??_setLoad_LightsStatus
  1752  0024                     ??_setLoad_LightsStatus:	; 0 bytes @ 0x4
  1753                           	global	??_setLED_Initialization
  1754  0024                     ??_setLED_Initialization:	; 0 bytes @ 0x4
  1755                           	global	??_Flash_Memory_Modify
  1756  0024                     ??_Flash_Memory_Modify:	; 0 bytes @ 0x4
  1757                           	global	??_RF_RxDisable
  1758  0024                     ??_RF_RxDisable:	; 0 bytes @ 0x4
  1759                           	global	??_setSw_Initialization
  1760  0024                     ??_setSw_Initialization:	; 0 bytes @ 0x4
  1761                           	global	??_Sw_AdjFunc
  1762  0024                     ??_Sw_AdjFunc:	; 0 bytes @ 0x4
  1763                           	global	??_Buzzer_Initialization
  1764  0024                     ??_Buzzer_Initialization:	; 0 bytes @ 0x4
  1765                           	global	??_CC2500_TxData
  1766  0024                     ??_CC2500_TxData:	; 0 bytes @ 0x4
  1767                           	global	??_CC2500_RxData
  1768  0024                     ??_CC2500_RxData:	; 0 bytes @ 0x4
  1769                           	global	??___wmul
  1770  0024                     ??___wmul:	; 0 bytes @ 0x4
  1771                           	global	??___lwdiv
  1772  0024                     ??___lwdiv:	; 0 bytes @ 0x4
  1773                           	global	??___awdiv
  1774  0024                     ??___awdiv:	; 0 bytes @ 0x4
  1775                           	global	CC2500_WriteREG@w_addr
  1776  0024                     CC2500_WriteREG@w_addr:	; 1 bytes @ 0x4
  1777                           	global	setDelayOff_GO@value
  1778  0024                     setDelayOff_GO@value:	; 1 bytes @ 0x4
  1779                           	global	getDimmerLights_StatusFlag@Status
  1780  0024                     getDimmerLights_StatusFlag@Status:	; 1 bytes @ 0x4
  1781                           	global	getDimmerLights_Trigger@Status
  1782  0024                     getDimmerLights_Trigger@Status:	; 1 bytes @ 0x4
  1783                           	global	setDimmerLights_TriggerERROR@lights
  1784  0024                     setDimmerLights_TriggerERROR@lights:	; 1 bytes @ 0x4
  1785                           	global	setLED_Initialization@led
  1786  0024                     setLED_Initialization@led:	; 1 bytes @ 0x4
  1787                           	global	setLED_Main@led
  1788  0024                     setLED_Main@led:	; 1 bytes @ 0x4
  1789                           	global	setLoad_StatusOff@load
  1790  0024                     setLoad_StatusOff@load:	; 1 bytes @ 0x4
  1791                           	global	setTxData@rf
  1792  0024                     setTxData@rf:	; 1 bytes @ 0x4
  1793                           	global	RF_RxDisable@rf
  1794  0024                     RF_RxDisable@rf:	; 1 bytes @ 0x4
  1795                           	global	setRF_DimmerLights@lights
  1796  0024                     setRF_DimmerLights@lights:	; 1 bytes @ 0x4
  1797                           	global	setSw_Initialization@sw
  1798  0024                     setSw_Initialization@sw:	; 1 bytes @ 0x4
  1799                           	global	Sw_AdjFunc@sw
  1800  0024                     Sw_AdjFunc@sw:	; 1 bytes @ 0x4
  1801                           	global	___ftpack@sign
  1802  0024                     ___ftpack@sign:	; 1 bytes @ 0x4
  1803                           	global	DelayTime_1us@j
  1804  0024                     DelayTime_1us@j:	; 2 bytes @ 0x4
  1805                           	global	___wmul@product
  1806  0024                     ___wmul@product:	; 2 bytes @ 0x4
  1807  0024                     	ds	1
  1808                           	global	??_CC2500_InitSetREG
  1809  0025                     ??_CC2500_InitSetREG:	; 0 bytes @ 0x5
  1810                           	global	??_CC2500_InitPATable
  1811  0025                     ??_CC2500_InitPATable:	; 0 bytes @ 0x5
  1812                           	global	??_setDimmerLights_ERROR
  1813  0025                     ??_setDimmerLights_ERROR:	; 0 bytes @ 0x5
  1814                           	global	??_Switch_Initialization
  1815  0025                     ??_Switch_Initialization:	; 0 bytes @ 0x5
  1816                           	global	?_setRF_Enable
  1817  0025                     ?_setRF_Enable:	; 0 bytes @ 0x5
  1818                           	global	??___ftpack
  1819  0025                     ??___ftpack:	; 0 bytes @ 0x5
  1820                           	global	??_setDelayOff_GO
  1821  0025                     ??_setDelayOff_GO:	; 0 bytes @ 0x5
  1822                           	global	??_LED_Initialization
  1823  0025                     ??_LED_Initialization:	; 0 bytes @ 0x5
  1824                           	global	??_LED_Main
  1825  0025                     ??_LED_Main:	; 0 bytes @ 0x5
  1826                           	global	CC2500_TxData@loop_e
  1827  0025                     CC2500_TxData@loop_e:	; 1 bytes @ 0x5
  1828                           	global	CC2500_RxData@loop_f
  1829  0025                     CC2500_RxData@loop_f:	; 1 bytes @ 0x5
  1830                           	global	getDimmerLights_StatusFlag@i
  1831  0025                     getDimmerLights_StatusFlag@i:	; 1 bytes @ 0x5
  1832                           	global	getDimmerLights_Trigger@i
  1833  0025                     getDimmerLights_Trigger@i:	; 1 bytes @ 0x5
  1834                           	global	setLoad_LightsStatus@load
  1835  0025                     setLoad_LightsStatus@load:	; 1 bytes @ 0x5
  1836                           	global	setTxData@i
  1837  0025                     setTxData@i:	; 1 bytes @ 0x5
  1838                           	global	setRF_Enable@command
  1839  0025                     setRF_Enable@command:	; 1 bytes @ 0x5
  1840                           	global	___awdiv@counter
  1841  0025                     ___awdiv@counter:	; 1 bytes @ 0x5
  1842                           	global	___lwdiv@quotient
  1843  0025                     ___lwdiv@quotient:	; 2 bytes @ 0x5
  1844  0025                     	ds	1
  1845                           	global	??_CC2500_PowerRST
  1846  0026                     ??_CC2500_PowerRST:	; 0 bytes @ 0x6
  1847                           	global	??_CC2500_FrequencyCabr
  1848  0026                     ??_CC2500_FrequencyCabr:	; 0 bytes @ 0x6
  1849                           	global	?_setDimmerLights
  1850  0026                     ?_setDimmerLights:	; 0 bytes @ 0x6
  1851                           	global	??_setRF_Enable
  1852  0026                     ??_setRF_Enable:	; 0 bytes @ 0x6
  1853                           	global	??_DimmerLights_Close
  1854  0026                     ??_DimmerLights_Close:	; 0 bytes @ 0x6
  1855                           	global	setBuz_Main@buz
  1856  0026                     setBuz_Main@buz:	; 1 bytes @ 0x6
  1857                           	global	CC2500_InitSetREG@temp1
  1858  0026                     CC2500_InitSetREG@temp1:	; 1 bytes @ 0x6
  1859                           	global	CC2500_InitPATable@temp
  1860  0026                     CC2500_InitPATable@temp:	; 1 bytes @ 0x6
  1861                           	global	setDelayOff_GO@sw
  1862  0026                     setDelayOff_GO@sw:	; 1 bytes @ 0x6
  1863                           	global	setDimmerLights_ERROR@lights
  1864  0026                     setDimmerLights_ERROR@lights:	; 1 bytes @ 0x6
  1865                           	global	setDimmerLights@status
  1866  0026                     setDimmerLights@status:	; 1 bytes @ 0x6
  1867                           	global	getAD@adcon0
  1868  0026                     getAD@adcon0:	; 1 bytes @ 0x6
  1869                           	global	Flash_Memory_Modify@i
  1870  0026                     Flash_Memory_Modify@i:	; 1 bytes @ 0x6
  1871                           	global	setRF_Enable@rf
  1872  0026                     setRF_Enable@rf:	; 1 bytes @ 0x6
  1873                           	global	___awdiv@sign
  1874  0026                     ___awdiv@sign:	; 1 bytes @ 0x6
  1875  0026                     	ds	1
  1876                           	global	??_setDimmerLights
  1877  0027                     ??_setDimmerLights:	; 0 bytes @ 0x7
  1878                           	global	?_getLoad_AD
  1879  0027                     ?_getLoad_AD:	; 0 bytes @ 0x7
  1880                           	global	?_getTemp_AD
  1881  0027                     ?_getTemp_AD:	; 0 bytes @ 0x7
  1882                           	global	?_getPowerFault_AD
  1883  0027                     ?_getPowerFault_AD:	; 0 bytes @ 0x7
  1884                           	global	??_Flash_Memory_Main
  1885  0027                     ??_Flash_Memory_Main:	; 0 bytes @ 0x7
  1886                           	global	??_Sw_OffFunc
  1887  0027                     ??_Sw_OffFunc:	; 0 bytes @ 0x7
  1888                           	global	??_Buzzer_Main
  1889  0027                     ??_Buzzer_Main:	; 0 bytes @ 0x7
  1890                           	global	CC2500_InitSetREG@temp2
  1891  0027                     CC2500_InitSetREG@temp2:	; 1 bytes @ 0x7
  1892                           	global	CC2500_InitPATable@loop_d
  1893  0027                     CC2500_InitPATable@loop_d:	; 1 bytes @ 0x7
  1894                           	global	getLoad_AD@channel
  1895  0027                     getLoad_AD@channel:	; 1 bytes @ 0x7
  1896                           	global	getTemp_AD@channel
  1897  0027                     getTemp_AD@channel:	; 1 bytes @ 0x7
  1898                           	global	getPowerFault_AD@channel
  1899  0027                     getPowerFault_AD@channel:	; 1 bytes @ 0x7
  1900                           	global	___lwdiv@counter
  1901  0027                     ___lwdiv@counter:	; 1 bytes @ 0x7
  1902                           	global	___awdiv@quotient
  1903  0027                     ___awdiv@quotient:	; 2 bytes @ 0x7
  1904  0027                     	ds	1
  1905                           	global	??_getLoad_AD
  1906  0028                     ??_getLoad_AD:	; 0 bytes @ 0x8
  1907                           	global	??_getTemp_AD
  1908  0028                     ??_getTemp_AD:	; 0 bytes @ 0x8
  1909                           	global	??_getPowerFault_AD
  1910  0028                     ??_getPowerFault_AD:	; 0 bytes @ 0x8
  1911                           	global	?___fttol
  1912  0028                     ?___fttol:	; 4 bytes @ 0x8
  1913                           	global	CC2500_InitSetREG@loop_c
  1914  0028                     CC2500_InitSetREG@loop_c:	; 1 bytes @ 0x8
  1915                           	global	setDimmerLights@lights
  1916  0028                     setDimmerLights@lights:	; 1 bytes @ 0x8
  1917                           	global	___fttol@f1
  1918  0028                     ___fttol@f1:	; 3 bytes @ 0x8
  1919  0028                     	ds	1
  1920                           	global	?_setBuz
  1921  0029                     ?_setBuz:	; 0 bytes @ 0x9
  1922                           	global	??_CC2500_PowerOnInitial
  1923  0029                     ??_CC2500_PowerOnInitial:	; 0 bytes @ 0x9
  1924                           	global	setBuz@count
  1925  0029                     setBuz@count:	; 1 bytes @ 0x9
  1926                           	global	Sw_OffFunc@sw
  1927  0029                     Sw_OffFunc@sw:	; 1 bytes @ 0x9
  1928  0029                     	ds	1
  1929                           	global	setBuz@time
  1930  002A                     setBuz@time:	; 2 bytes @ 0xA
  1931  002A                     	ds	2
  1932                           	global	??_setBuz
  1933  002C                     ??_setBuz:	; 0 bytes @ 0xC
  1934                           	global	??___fttol
  1935  002C                     ??___fttol:	; 0 bytes @ 0xC
  1936                           	global	getTemp_AD@temp
  1937  002C                     getTemp_AD@temp:	; 1 bytes @ 0xC
  1938                           	global	getPowerFault_AD@pf
  1939  002C                     getPowerFault_AD@pf:	; 1 bytes @ 0xC
  1940  002C                     	ds	1
  1941                           	global	setBuz@buz
  1942  002D                     setBuz@buz:	; 1 bytes @ 0xD
  1943                           	global	getLoad_AD@load
  1944  002D                     getLoad_AD@load:	; 1 bytes @ 0xD
  1945  002D                     	ds	1
  1946                           	global	??_DlyOff_Main
  1947  002E                     ??_DlyOff_Main:	; 0 bytes @ 0xE
  1948                           	global	??_MainT
  1949  002E                     ??_MainT:	; 0 bytes @ 0xE
  1950                           	global	??_setLog_Code
  1951  002E                     ??_setLog_Code:	; 0 bytes @ 0xE
  1952                           	global	??_setRFSW_Control
  1953  002E                     ??_setRFSW_Control:	; 0 bytes @ 0xE
  1954                           	global	??_Sw_OnFunc
  1955  002E                     ??_Sw_OnFunc:	; 0 bytes @ 0xE
  1956                           	global	??_DimmerLights_ERROR
  1957  002E                     ??_DimmerLights_ERROR:	; 0 bytes @ 0xE
  1958                           	global	getLoad_AD@j
  1959  002E                     getLoad_AD@j:	; 1 bytes @ 0xE
  1960                           	global	Sw_OnFunc@sw
  1961  002E                     Sw_OnFunc@sw:	; 1 bytes @ 0xE
  1962  002E                     	ds	1
  1963                           	global	?_setLoad_ERROR
  1964  002F                     ?_setLoad_ERROR:	; 0 bytes @ 0xF
  1965                           	global	?_setOverTemp_ERROR
  1966  002F                     ?_setOverTemp_ERROR:	; 0 bytes @ 0xF
  1967                           	global	?_setPowerFault_ERROR
  1968  002F                     ?_setPowerFault_ERROR:	; 0 bytes @ 0xF
  1969                           	global	??_setSw_Main
  1970  002F                     ??_setSw_Main:	; 0 bytes @ 0xF
  1971                           	global	getLoad_AD@i
  1972  002F                     getLoad_AD@i:	; 1 bytes @ 0xF
  1973                           	global	setLoad_ERROR@command
  1974  002F                     setLoad_ERROR@command:	; 1 bytes @ 0xF
  1975                           	global	setOverTemp_ERROR@command
  1976  002F                     setOverTemp_ERROR@command:	; 1 bytes @ 0xF
  1977                           	global	setPowerFault_ERROR@command
  1978  002F                     setPowerFault_ERROR@command:	; 1 bytes @ 0xF
  1979                           	global	setLog_Code@rf
  1980  002F                     setLog_Code@rf:	; 1 bytes @ 0xF
  1981  002F                     	ds	1
  1982                           	global	??_setLoad_ERROR
  1983  0030                     ??_setLoad_ERROR:	; 0 bytes @ 0x10
  1984                           	global	??_setOverTemp_ERROR
  1985  0030                     ??_setOverTemp_ERROR:	; 0 bytes @ 0x10
  1986                           	global	??_setPowerFault_ERROR
  1987  0030                     ??_setPowerFault_ERROR:	; 0 bytes @ 0x10
  1988                           	global	DlyOff_Main@sw
  1989  0030                     DlyOff_Main@sw:	; 1 bytes @ 0x10
  1990                           	global	setRFSW_Control@sw
  1991  0030                     setRFSW_Control@sw:	; 1 bytes @ 0x10
  1992                           	global	___fttol@sign1
  1993  0030                     ___fttol@sign1:	; 1 bytes @ 0x10
  1994  0030                     	ds	1
  1995                           	global	??_DelayOff_Main
  1996  0031                     ??_DelayOff_Main:	; 0 bytes @ 0x11
  1997                           	global	setLoad_ERROR@load
  1998  0031                     setLoad_ERROR@load:	; 1 bytes @ 0x11
  1999                           	global	setOverTemp_ERROR@temp
  2000  0031                     setOverTemp_ERROR@temp:	; 1 bytes @ 0x11
  2001                           	global	setPowerFault_ERROR@pf
  2002  0031                     setPowerFault_ERROR@pf:	; 1 bytes @ 0x11
  2003                           	global	_setSw_Main$18089
  2004  0031                     _setSw_Main$18089:	; 1 bytes @ 0x11
  2005                           	global	___fttol@lval
  2006  0031                     ___fttol@lval:	; 4 bytes @ 0x11
  2007  0031                     	ds	1
  2008                           	global	??_setLoad_Main
  2009  0032                     ??_setLoad_Main:	; 0 bytes @ 0x12
  2010                           	global	??_setTemp_Main
  2011  0032                     ??_setTemp_Main:	; 0 bytes @ 0x12
  2012                           	global	??_setPowerFault_Main
  2013  0032                     ??_setPowerFault_Main:	; 0 bytes @ 0x12
  2014                           	global	setSw_Main@sw
  2015  0032                     setSw_Main@sw:	; 1 bytes @ 0x12
  2016  0032                     	ds	1
  2017                           	global	??_Switch_Main
  2018  0033                     ??_Switch_Main:	; 0 bytes @ 0x13
  2019  0033                     	ds	1
  2020                           	global	setPowerFault_Main@pf
  2021  0034                     setPowerFault_Main@pf:	; 1 bytes @ 0x14
  2022  0034                     	ds	1
  2023                           	global	??_PowerFault_Main
  2024  0035                     ??_PowerFault_Main:	; 0 bytes @ 0x15
  2025                           	global	setTemp_Main@temp
  2026  0035                     setTemp_Main@temp:	; 1 bytes @ 0x15
  2027                           	global	___fttol@exp1
  2028  0035                     ___fttol@exp1:	; 1 bytes @ 0x15
  2029  0035                     	ds	1
  2030                           	global	??_Temp_Main
  2031  0036                     ??_Temp_Main:	; 0 bytes @ 0x16
  2032                           	global	?___awtoft
  2033  0036                     ?___awtoft:	; 3 bytes @ 0x16
  2034                           	global	setLoad_Main@load
  2035  0036                     setLoad_Main@load:	; 1 bytes @ 0x16
  2036                           	global	___awtoft@c
  2037  0036                     ___awtoft@c:	; 2 bytes @ 0x16
  2038  0036                     	ds	1
  2039                           	global	??_Load_Main
  2040  0037                     ??_Load_Main:	; 0 bytes @ 0x17
  2041  0037                     	ds	2
  2042                           	global	??___awtoft
  2043  0039                     ??___awtoft:	; 0 bytes @ 0x19
  2044  0039                     	ds	2
  2045                           	global	___awtoft@sign
  2046  003B                     ___awtoft@sign:	; 1 bytes @ 0x1B
  2047  003B                     	ds	1
  2048                           	global	?___ftdiv
  2049  003C                     ?___ftdiv:	; 3 bytes @ 0x1C
  2050                           	global	?___ftmul
  2051  003C                     ?___ftmul:	; 3 bytes @ 0x1C
  2052                           	global	___ftdiv@f2
  2053  003C                     ___ftdiv@f2:	; 3 bytes @ 0x1C
  2054                           	global	___ftmul@f1
  2055  003C                     ___ftmul@f1:	; 3 bytes @ 0x1C
  2056  003C                     	ds	3
  2057                           	global	___ftdiv@f1
  2058  003F                     ___ftdiv@f1:	; 3 bytes @ 0x1F
  2059                           	global	___ftmul@f2
  2060  003F                     ___ftmul@f2:	; 3 bytes @ 0x1F
  2061  003F                     	ds	3
  2062                           	global	??___ftdiv
  2063  0042                     ??___ftdiv:	; 0 bytes @ 0x22
  2064                           	global	??___ftmul
  2065  0042                     ??___ftmul:	; 0 bytes @ 0x22
  2066  0042                     	ds	4
  2067                           	global	___ftdiv@cntr
  2068  0046                     ___ftdiv@cntr:	; 1 bytes @ 0x26
  2069                           	global	___ftmul@exp
  2070  0046                     ___ftmul@exp:	; 1 bytes @ 0x26
  2071  0046                     	ds	1
  2072                           	global	___ftdiv@f3
  2073  0047                     ___ftdiv@f3:	; 3 bytes @ 0x27
  2074                           	global	___ftmul@f3_as_product
  2075  0047                     ___ftmul@f3_as_product:	; 3 bytes @ 0x27
  2076  0047                     	ds	3
  2077                           	global	___ftdiv@exp
  2078  004A                     ___ftdiv@exp:	; 1 bytes @ 0x2A
  2079                           	global	___ftmul@cntr
  2080  004A                     ___ftmul@cntr:	; 1 bytes @ 0x2A
  2081  004A                     	ds	1
  2082                           	global	___ftdiv@sign
  2083  004B                     ___ftdiv@sign:	; 1 bytes @ 0x2B
  2084                           	global	___ftmul@sign
  2085  004B                     ___ftmul@sign:	; 1 bytes @ 0x2B
  2086  004B                     	ds	1
  2087                           	global	??_setPercentValue
  2088  004C                     ??_setPercentValue:	; 0 bytes @ 0x2C
  2089                           	global	?___ftadd
  2090  004C                     ?___ftadd:	; 3 bytes @ 0x2C
  2091                           	global	setPercentValue@value
  2092  004C                     setPercentValue@value:	; 1 bytes @ 0x2C
  2093                           	global	___ftadd@f1
  2094  004C                     ___ftadd@f1:	; 3 bytes @ 0x2C
  2095  004C                     	ds	1
  2096                           	global	setPercentValue@i
  2097  004D                     setPercentValue@i:	; 3 bytes @ 0x2D
  2098  004D                     	ds	2
  2099                           	global	___ftadd@f2
  2100  004F                     ___ftadd@f2:	; 3 bytes @ 0x2F
  2101  004F                     	ds	1
  2102                           	global	?_setDimmerLights_Adj
  2103  0050                     ?_setDimmerLights_Adj:	; 0 bytes @ 0x30
  2104                           	global	??_Flash_Memory_Initialization
  2105  0050                     ??_Flash_Memory_Initialization:	; 0 bytes @ 0x30
  2106                           	global	setDimmerLights_Adj@status
  2107  0050                     setDimmerLights_Adj@status:	; 1 bytes @ 0x30
  2108  0050                     	ds	1
  2109                           	global	??_setDimmerLights_Adj
  2110  0051                     ??_setDimmerLights_Adj:	; 0 bytes @ 0x31
  2111                           	global	Flash_Memory_Initialization@i
  2112  0051                     Flash_Memory_Initialization@i:	; 1 bytes @ 0x31
  2113  0051                     	ds	1
  2114                           	global	??___ftadd
  2115  0052                     ??___ftadd:	; 0 bytes @ 0x32
  2116  0052                     	ds	1
  2117                           	global	setDimmerLights_Adj@lights
  2118  0053                     setDimmerLights_Adj@lights:	; 1 bytes @ 0x33
  2119  0053                     	ds	1
  2120                           	global	??_setDimmerLights_Main
  2121  0054                     ??_setDimmerLights_Main:	; 0 bytes @ 0x34
  2122                           	global	setDimmerLights_Main@open
  2123  0054                     setDimmerLights_Main@open:	; 1 bytes @ 0x34
  2124  0054                     	ds	1
  2125                           	global	setDimmerLights_Main@close
  2126  0055                     setDimmerLights_Main@close:	; 1 bytes @ 0x35
  2127  0055                     	ds	1
  2128                           	global	setDimmerLights_Main@lights
  2129  0056                     setDimmerLights_Main@lights:	; 1 bytes @ 0x36
  2130                           	global	___ftadd@sign
  2131  0056                     ___ftadd@sign:	; 1 bytes @ 0x36
  2132  0056                     	ds	1
  2133                           	global	??_DimmerLights_Main
  2134  0057                     ??_DimmerLights_Main:	; 0 bytes @ 0x37
  2135                           	global	___ftadd@exp2
  2136  0057                     ___ftadd@exp2:	; 1 bytes @ 0x37
  2137  0057                     	ds	1
  2138                           	global	___ftadd@exp1
  2139  0058                     ___ftadd@exp1:	; 1 bytes @ 0x38
  2140  0058                     	ds	1
  2141                           	global	??_getPercentValue
  2142  0059                     ??_getPercentValue:	; 0 bytes @ 0x39
  2143  0059                     	ds	2
  2144                           	global	getPercentValue@value
  2145  005B                     getPercentValue@value:	; 1 bytes @ 0x3B
  2146  005B                     	ds	1
  2147                           	global	getPercentValue@i
  2148  005C                     getPercentValue@i:	; 3 bytes @ 0x3C
  2149  005C                     	ds	3
  2150                           	global	??_setDimmerLights_Initialization
  2151  005F                     ??_setDimmerLights_Initialization:	; 0 bytes @ 0x3F
  2152                           	global	??_setDimmerLights_AdjRF
  2153  005F                     ??_setDimmerLights_AdjRF:	; 0 bytes @ 0x3F
  2154  005F                     	ds	1
  2155                           	global	setDimmerLights_AdjRF@lights
  2156  0060                     setDimmerLights_AdjRF@lights:	; 1 bytes @ 0x40
  2157  0060                     	ds	1
  2158                           	global	??_setRF_DimmerValue
  2159  0061                     ??_setRF_DimmerValue:	; 0 bytes @ 0x41
  2160                           	global	setDimmerLights_Initialization@lights
  2161  0061                     setDimmerLights_Initialization@lights:	; 1 bytes @ 0x41
  2162  0061                     	ds	1
  2163                           	global	??_DimmerLights_Initialization
  2164  0062                     ??_DimmerLights_Initialization:	; 0 bytes @ 0x42
  2165  0062                     	ds	1
  2166                           	global	setRF_DimmerValue@lights
  2167  0063                     setRF_DimmerValue@lights:	; 1 bytes @ 0x43
  2168  0063                     	ds	1
  2169                           	global	??_setRFSW_AdjControl
  2170  0064                     ??_setRFSW_AdjControl:	; 0 bytes @ 0x44
  2171  0064                     	ds	2
  2172                           	global	setRFSW_AdjControl@sw
  2173  0066                     setRFSW_AdjControl@sw:	; 1 bytes @ 0x46
  2174  0066                     	ds	1
  2175                           	global	??_setControl_Lights_Table
  2176  0067                     ??_setControl_Lights_Table:	; 0 bytes @ 0x47
  2177                           	global	setControl_Lights_Table@rf
  2178  0067                     setControl_Lights_Table@rf:	; 1 bytes @ 0x47
  2179  0067                     	ds	1
  2180                           	global	??_getRxData
  2181  0068                     ??_getRxData:	; 0 bytes @ 0x48
  2182                           	global	getRxData@rf
  2183  0068                     getRxData@rf:	; 1 bytes @ 0x48
  2184  0068                     	ds	1
  2185                           	global	??_setRF_Main
  2186  0069                     ??_setRF_Main:	; 0 bytes @ 0x49
  2187  0069                     	ds	1
  2188                           	global	setRF_Main@rf
  2189  006A                     setRF_Main@rf:	; 1 bytes @ 0x4A
  2190  006A                     	ds	1
  2191                           	global	_setRF_Main$16636
  2192  006B                     _setRF_Main$16636:	; 1 bytes @ 0x4B
  2193  006B                     	ds	1
  2194                           	global	??_RF_Main
  2195  006C                     ??_RF_Main:	; 0 bytes @ 0x4C
  2196                           	global	??_main
  2197  006C                     ??_main:	; 0 bytes @ 0x4C
  2198  006C                     	ds	1
  2199 ;;Data sizes: Strings 0, constant 102, data 67, bss 214, persistent 4 stack 0
  2200 ;;Auto spaces:   Size  Autos    Used
  2201 ;; COMMON          14     10      14
  2202 ;; BANK0           80     77      80
  2203 ;; BANK1           80      0      80
  2204 ;; BANK2           80      0      61
  2205 ;; BANK3           80      0      67
  2206 ;; BANK4           80      0      71
  2207 ;; BANK5           80      0       0
  2208 ;; BANK6           80      0       0
  2209 ;; BANK7           80      0       0
  2210 ;; BANK8           80      0       0
  2211 ;; BANK9           80      0       0
  2212 ;; BANK10          80      0       0
  2213 ;; BANK11          80      0       0
  2214 ;; BANK12          48      0       0
  2215                           
  2216 ;;
  2217 ;; Pointer list with targets:
  2218                           
  2219 ;; ?___ftpack	float  size(1) Largest target is 0
  2220 ;;
  2221 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  2222 ;;
  2223 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  2224 ;;
  2225 ;; ?_getAD	int  size(1) Largest target is 0
  2226 ;;
  2227 ;; ?___fttol	long  size(1) Largest target is 0
  2228 ;;
  2229 ;; ?___ftmul	float  size(1) Largest target is 0
  2230 ;;
  2231 ;; ?___awtoft	float  size(1) Largest target is 0
  2232 ;;
  2233 ;; ?___ftadd	float  size(1) Largest target is 0
  2234 ;;
  2235 ;; ?___ftdiv	float  size(1) Largest target is 0
  2236 ;;
  2237 ;; ?___awdiv	int  size(1) Largest target is 0
  2238 ;;
  2239 ;; DimmerLightsIntr	PTR struct DimmerLights size(1) Largest target is 0
  2240 ;;		 -> NULL(NULL[0]), 
  2241 ;;
  2242 ;; Sw	PTR struct Switch size(1) Largest target is 9
  2243 ;;		 -> NULL(NULL[0]), Sw1(BANK2[9]), 
  2244 ;;
  2245 ;; RFSW	PTR struct RFSW size(1) Largest target is 1
  2246 ;;		 -> NULL(NULL[0]), RFSW1(BANK1[1]), 
  2247 ;;
  2248 ;; RF	PTR struct RF size(1) Largest target is 2
  2249 ;;		 -> NULL(NULL[0]), RF1(BANK1[2]), 
  2250 ;;
  2251 ;; PF	PTR struct PF size(1) Largest target is 8
  2252 ;;		 -> NULL(NULL[0]), PF1(BANK1[8]), 
  2253 ;;
  2254 ;; Temp	PTR struct OverTemp size(1) Largest target is 14
  2255 ;;		 -> NULL(NULL[0]), Temp1(BANK2[14]), 
  2256 ;;
  2257 ;; Load	PTR struct OverLoad size(1) Largest target is 71
  2258 ;;		 -> NULL(NULL[0]), Load1(BANK4[71]), 
  2259 ;;
  2260 ;; Timer0	PTR struct Timer0 size(1) Largest target is 7
  2261 ;;		 -> NULL(NULL[0]), VarTimer0(BANK1[7]), 
  2262 ;;
  2263 ;; LED	PTR struct LED size(1) Largest target is 4
  2264 ;;		 -> NULL(NULL[0]), VarErrLED(BANK1[4]), VarLED2(BANK1[4]), VarLED1(BANK1[4]), 
  2265 ;;
  2266 ;; TMain	PTR struct TMain size(1) Largest target is 16
  2267 ;;		 -> NULL(NULL[0]), VarTMain(BANK2[16]), 
  2268 ;;
  2269 ;; Dimmer	PTR struct Dimmer size(1) Largest target is 3
  2270 ;;		 -> NULL(NULL[0]), Dimmer1(BANK1[3]), 
  2271 ;;
  2272 ;; Memory	PTR struct FlashMemory size(1) Largest target is 37
  2273 ;;		 -> NULL(NULL[0]), VarMemory(BANK3[37]), 
  2274 ;;
  2275 ;; DimmerLights11	PTR struct DimmerLights size(1) Largest target is 10
  2276 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[10]), 
  2277 ;;
  2278 ;; DimmerLights	PTR struct DimmerLights size(1) Largest target is 10
  2279 ;;		 -> NULL(NULL[0]), DimmerLights1(BANK2[10]), 
  2280 ;;
  2281 ;; Product	PTR struct Product size(1) Largest target is 30
  2282 ;;		 -> NULL(NULL[0]), VarProduct(BANK3[30]), 
  2283 ;;
  2284 ;; DelayOff	PTR struct DelayOff size(1) Largest target is 5
  2285 ;;		 -> NULL(NULL[0]), DlySw1(BANK1[5]), 
  2286 ;;
  2287 ;; Buz	PTR struct Buzzer size(1) Largest target is 12
  2288 ;;		 -> NULL(NULL[0]), Buz1(BANK2[12]), 
  2289 ;;
  2290                           
  2291                           
  2292 ;;
  2293 ;; Critical Paths under _main in COMMON
  2294 ;;
  2295 ;;   None.
  2296 ;;
  2297 ;; Critical Paths under _ISR in COMMON
  2298 ;;
  2299 ;;   _ISR->_TMR0_ISR
  2300 ;;   _INT_ISR->_setRF_ReceiveGO
  2301 ;;   _TMR0_ISR->i1_setLoad_StatusOff
  2302 ;;   i1_setLoad_StatusOff->i1_LoadPointSelect
  2303 ;;   _setRF_ReceiveGO->i1_RfPointSelect
  2304 ;;
  2305 ;; Critical Paths under _main in BANK0
  2306 ;;
  2307 ;;   _RF_Main->_setRF_Main
  2308 ;;   _setRF_Main->_getRxData
  2309 ;;   _getRxData->_setControl_Lights_Table
  2310 ;;   _setControl_Lights_Table->_setRFSW_AdjControl
  2311 ;;   _PowerFault_Main->_setPowerFault_Main
  2312 ;;   _Load_Main->_setLoad_Main
  2313 ;;   _Temp_Main->_setTemp_Main
  2314 ;;   _setRFSW_AdjControl->_setRF_DimmerValue
  2315 ;;   _setPowerFault_Main->_setPowerFault_ERROR
  2316 ;;   _setTemp_Main->_setOverTemp_ERROR
  2317 ;;   _setLoad_Main->_setLoad_ERROR
  2318 ;;   _DimmerLights_Main->_setDimmerLights_Main
  2319 ;;   _setRF_DimmerValue->_setDimmerLights_AdjRF
  2320 ;;   _setPowerFault_ERROR->_DimmerLights_ERROR
  2321 ;;   _setOverTemp_ERROR->_DimmerLights_ERROR
  2322 ;;   _setLoad_ERROR->_DimmerLights_ERROR
  2323 ;;   _Switch_Main->_setSw_Main
  2324 ;;   _Flash_Memory_Main->_Flash_Memory_Modify
  2325 ;;   _MainT->_setBuz
  2326 ;;   _setDimmerLights_Main->_setDimmerLights_Adj
  2327 ;;   _DimmerLights_Initialization->_setDimmerLights_Initialization
  2328 ;;   _setSw_Main->_Sw_OnFunc
  2329 ;;   _Flash_Memory_Modify->_Flash_Memory_Read
  2330 ;;   _setRF_Enable->_RF_RxDisable
  2331 ;;   _Switch_Initialization->_setSw_Initialization
  2332 ;;   _Flash_Memory_Initialization->_setPercentValue
  2333 ;;   _LED_Initialization->_setLED_Initialization
  2334 ;;   _setDimmerLights_AdjRF->_getPercentValue
  2335 ;;   _DimmerLights_ERROR->_setBuz
  2336 ;;   _setDimmerLights_Adj->_setPercentValue
  2337 ;;   _setDimmerLights_Initialization->_getPercentValue
  2338 ;;   _DelayOff_Main->_DlyOff_Main
  2339 ;;   _CC2500_PowerOnInitial->_CC2500_InitSetREG
  2340 ;;   _Sw_OffFunc->_setDelayOff_GO
  2341 ;;   _Sw_AdjFunc->_setRFSW_Status
  2342 ;;   _Sw_AdjFunc->_setDimmerLights_TriggerAdj
  2343 ;;   _Sw_AdjFunc->_setDimmerLights_AdjGo
  2344 ;;   _Sw_OnFunc->_setBuz
  2345 ;;   _setSw_Initialization->_setLED
  2346 ;;   _setRFSW_Control->_setBuz
  2347 ;;   _setLog_Code->_setBuz
  2348 ;;   _RF_RxDisable->_CC2500_WriteCommand
  2349 ;;   _PowerFault_Initialization->_setPowerFault_Initialization
  2350 ;;   _Load_Initialization->_setLoad_Initialization
  2351 ;;   _Temp_Initialization->_setTemp_Initialization
  2352 ;;   _LED_Main->_setLED_Main
  2353 ;;   _setLED_Initialization->_setLED
  2354 ;;   _setPercentValue->___ftdiv
  2355 ;;   _setDimmerLights_ERROR->_setLoad_StatusOff
  2356 ;;   _setDimmerLights->_setLoad_LightsStatus
  2357 ;;   _DimmerLights_Close->_getDimmerLights_StatusFlag
  2358 ;;   _getPercentValue->___ftadd
  2359 ;;   _DlyOff_Main->_setBuz
  2360 ;;   _DelayOff_Initialization->_DlyOff_Initialization
  2361 ;;   _CC2500_SIDLEMode->_CC2500_WriteCommand
  2362 ;;   _CC2500_FrequencyCabr->_DelayTime_1us
  2363 ;;   _CC2500_ClearRXFIFO->_CC2500_WriteCommand
  2364 ;;   _CC2500_ClearTXFIFO->_CC2500_WriteCommand
  2365 ;;   _CC2500_InitPATable->_CC2500_WriteREG
  2366 ;;   _CC2500_InitSetREG->_CC2500_WriteREG
  2367 ;;   _CC2500_RxData->_CC2500_ReadStatus
  2368 ;;   _CC2500_RxData->_CC2500_WriteCommand
  2369 ;;   _CC2500_RxData->_setRF_RxStatus
  2370 ;;   _CC2500_TxData->_CC2500_WriteCommand
  2371 ;;   _Buzzer_Main->_setBuz_Main
  2372 ;;   _setBuz_Initialization->_setBuz_Enable
  2373 ;;   ___awtoft->___fttol
  2374 ;;   ___ftmul->___awtoft
  2375 ;;   ___ftdiv->___awtoft
  2376 ;;   ___ftadd->___ftmul
  2377 ;;   _setRF_Learn->_RfPointSelect
  2378 ;;   _setPowerFault_Initialization->_PowerFaultPointSelect
  2379 ;;   _setTemp_Initialization->_TempPointSelect
  2380 ;;   _getLoad_Safe->_LoadPointSelect
  2381 ;;   _getPF_Safe->_PowerFaultPointSelect
  2382 ;;   _getTemp_Safe->_TempPointSelect
  2383 ;;   _setLoad_Initialization->_LoadPointSelect
  2384 ;;   _setLoad_Initialization->_setLoad_AH_AL_Restore
  2385 ;;   _setSw_Enable->_SwPointSelect
  2386 ;;   _setLoad_Enable->_LoadPointSelect
  2387 ;;   _setTemp_Enable->_TempPointSelect
  2388 ;;   _getPowerFault_AD->_getAD
  2389 ;;   _getTemp_AD->_getAD
  2390 ;;   _getLoad_AD->_getAD
  2391 ;;   _RF_Initialization->_setRF_Initialization
  2392 ;;   _Mcu_Initialization->_TMR0_Set
  2393 ;;   _setLED_Main->_LedPointSelect
  2394 ;;   _setDimmer_PFERROR->_DimmerPointSelect
  2395 ;;   _setDimmer_LoadERROR->_DimmerPointSelect
  2396 ;;   _setDimmer_TempERROR->_DimmerPointSelect
  2397 ;;   _setDimmerLights_TriggerAdj->_DimmerLightsPointSelect
  2398 ;;   _setDimmerLights_AdjGo->_DimmerLightsPointSelect
  2399 ;;   _setLoad_LightsStatus->_LoadPointSelect
  2400 ;;   _setLoad_StatusOn->_LoadPointSelect
  2401 ;;   _setLED->_LedPointSelect
  2402 ;;   _setLoad_StatusOff->_LoadPointSelect
  2403 ;;   _setDimmerLights_TriggerERROR->_DimmerLightsPointSelect
  2404 ;;   _getDimmer_PFERROR->_DimmerPointSelect
  2405 ;;   _getDimmer_LoadERROR->_DimmerPointSelect
  2406 ;;   _getDimmer_TempERROR->_DimmerPointSelect
  2407 ;;   _getDimmerLights_Trigger->_DimmerLightsPointSelect
  2408 ;;   _setDimmerLights_Close->_DimmerLightsPointSelect
  2409 ;;   _setDimmerLights_Open->_DimmerLightsPointSelect
  2410 ;;   _setLoad_GO->_LoadPointSelect
  2411 ;;   _getDimmerLights_StatusFlag->_DimmerLightsPointSelect
  2412 ;;   _setDimmer_Detect->_DimmerPointSelect
  2413 ;;   _getDimmer_Detect->_DimmerPointSelect
  2414 ;;   _setDelayOff_GO->_DelayTimejudge
  2415 ;;   _setTxData->_RfPointSelect
  2416 ;;   _setDimmerLights_Switch->_DimmerLightsPointSelect
  2417 ;;   _setDimmerLights_Trigger->_DimmerLightsPointSelect
  2418 ;;   _setRFSW_Status->_RfSWPointSelect
  2419 ;;   _setSw_Status->_SwPointSelect
  2420 ;;   _DlyOff_Initialization->_DelayOffPointSelect
  2421 ;;   _CC2500_WriteREG->_CC2500_WriteByte
  2422 ;;   _CC2500_PowerRST->_DelayTime_1us
  2423 ;;   _setRF_RxStatus->_RfPointSelect
  2424 ;;   _CC2500_ReadStatus->_CC2500_WriteByte
  2425 ;;   _CC2500_ReadStatus->_CC2500_ReadByte
  2426 ;;   _CC2500_WriteCommand->_CC2500_WriteByte
  2427 ;;   _setBuz->___awdiv
  2428 ;;   _setBuz_Enable->_BuzPointSelect
  2429 ;;   _setBuz_Main->_BuzPointSelect
  2430 ;;   ___fttol->___ftpack
  2431 ;;
  2432 ;; Critical Paths under _ISR in BANK0
  2433 ;;
  2434 ;;   None.
  2435 ;;
  2436 ;; Critical Paths under _main in BANK1
  2437 ;;
  2438 ;;   None.
  2439 ;;
  2440 ;; Critical Paths under _ISR in BANK1
  2441 ;;
  2442 ;;   None.
  2443 ;;
  2444 ;; Critical Paths under _main in BANK2
  2445 ;;
  2446 ;;   None.
  2447 ;;
  2448 ;; Critical Paths under _ISR in BANK2
  2449 ;;
  2450 ;;   None.
  2451 ;;
  2452 ;; Critical Paths under _main in BANK3
  2453 ;;
  2454 ;;   None.
  2455 ;;
  2456 ;; Critical Paths under _ISR in BANK3
  2457 ;;
  2458 ;;   None.
  2459 ;;
  2460 ;; Critical Paths under _main in BANK4
  2461 ;;
  2462 ;;   None.
  2463 ;;
  2464 ;; Critical Paths under _ISR in BANK4
  2465 ;;
  2466 ;;   None.
  2467 ;;
  2468 ;; Critical Paths under _main in BANK5
  2469 ;;
  2470 ;;   None.
  2471 ;;
  2472 ;; Critical Paths under _ISR in BANK5
  2473 ;;
  2474 ;;   None.
  2475 ;;
  2476 ;; Critical Paths under _main in BANK6
  2477 ;;
  2478 ;;   None.
  2479 ;;
  2480 ;; Critical Paths under _ISR in BANK6
  2481 ;;
  2482 ;;   None.
  2483 ;;
  2484 ;; Critical Paths under _main in BANK7
  2485 ;;
  2486 ;;   None.
  2487 ;;
  2488 ;; Critical Paths under _ISR in BANK7
  2489 ;;
  2490 ;;   None.
  2491 ;;
  2492 ;; Critical Paths under _main in BANK8
  2493 ;;
  2494 ;;   None.
  2495 ;;
  2496 ;; Critical Paths under _ISR in BANK8
  2497 ;;
  2498 ;;   None.
  2499 ;;
  2500 ;; Critical Paths under _main in BANK9
  2501 ;;
  2502 ;;   None.
  2503 ;;
  2504 ;; Critical Paths under _ISR in BANK9
  2505 ;;
  2506 ;;   None.
  2507 ;;
  2508 ;; Critical Paths under _main in BANK10
  2509 ;;
  2510 ;;   None.
  2511 ;;
  2512 ;; Critical Paths under _ISR in BANK10
  2513 ;;
  2514 ;;   None.
  2515 ;;
  2516 ;; Critical Paths under _main in BANK11
  2517 ;;
  2518 ;;   None.
  2519 ;;
  2520 ;; Critical Paths under _ISR in BANK11
  2521 ;;
  2522 ;;   None.
  2523 ;;
  2524 ;; Critical Paths under _main in BANK12
  2525 ;;
  2526 ;;   None.
  2527 ;;
  2528 ;; Critical Paths under _ISR in BANK12
  2529 ;;
  2530 ;;   None.
  2531                           
  2532 ;;
  2533 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2534 ;;
  2535                           
  2536 ;;
  2537 ;;Call Graph Tables:
  2538 ;;
  2539 ;; ---------------------------------------------------------------------------------
  2540 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2541 ;; ---------------------------------------------------------------------------------
  2542 ;; (0) _main                                                 1     1      0   32758
  2543 ;;                                             76 BANK0      1     1      0
  2544 ;;               _MainT_Initialization
  2545 ;;                 _Mcu_Initialization
  2546 ;;        _Flash_Memory_Initialization
  2547 ;;                 _LED_Initialization
  2548 ;;              _Buzzer_Initialization
  2549 ;;                _Temp_Initialization
  2550 ;;                _Load_Initialization
  2551 ;;          _PowerFault_Initialization
  2552 ;;            _DelayOff_Initialization
  2553 ;;        _DimmerLights_Initialization
  2554 ;;              _Switch_Initialization
  2555 ;;                  _RF_Initialization
  2556 ;;              _CC2500_PowerOnInitial
  2557 ;;                         _getLoad_AD
  2558 ;;                         _getTemp_AD
  2559 ;;                   _getPowerFault_AD
  2560 ;;                              _MainT
  2561 ;;                  _Flash_Memory_Main
  2562 ;;                        _Buzzer_Main
  2563 ;;                           _LED_Main
  2564 ;;                          _Temp_Main
  2565 ;;                          _Load_Main
  2566 ;;                    _PowerFault_Main
  2567 ;;                  _DimmerLights_Main
  2568 ;;                        _Switch_Main
  2569 ;;                            _RF_Main
  2570 ;;                      _DelayOff_Main
  2571 ;; ---------------------------------------------------------------------------------
  2572 ;; (1) _RF_Main                                              0     0      0    7881
  2573 ;;                         _setRF_Main
  2574 ;; ---------------------------------------------------------------------------------
  2575 ;; (2) _setRF_Main                                           3     3      0    7881
  2576 ;;                                             73 BANK0      3     3      0
  2577 ;;                      _RfPointSelect
  2578 ;;                       _RF_RxDisable
  2579 ;;                      _CC2500_RxData
  2580 ;;                          _getRxData
  2581 ;;                      _CC2500_TxData
  2582 ;;                _CC2500_WriteCommand
  2583 ;;                          _setINT_GO
  2584 ;; ---------------------------------------------------------------------------------
  2585 ;; (3) _getRxData                                            2     2      0    7043
  2586 ;;                                             72 BANK0      1     1      0
  2587 ;;                      _RfPointSelect
  2588 ;;                        _setLog_Code
  2589 ;;            _setControl_Lights_Table
  2590 ;; ---------------------------------------------------------------------------------
  2591 ;; (4) _setControl_Lights_Table                              1     1      0    6434
  2592 ;;                                             71 BANK0      1     1      0
  2593 ;;                      _RfPointSelect
  2594 ;;                    _setDimmerLights
  2595 ;;                     _setRFSW_Status
  2596 ;;                       _setSw_Status
  2597 ;;                             _setBuz
  2598 ;;                          _setTxData
  2599 ;;                    _setRFSW_Control
  2600 ;;                 _setRFSW_AdjControl
  2601 ;; ---------------------------------------------------------------------------------
  2602 ;; (1) _PowerFault_Main                                      0     0      0    2598
  2603 ;;                 _setPowerFault_Main
  2604 ;; ---------------------------------------------------------------------------------
  2605 ;; (1) _Load_Main                                            0     0      0    3118
  2606 ;;                       _setLoad_Main
  2607 ;; ---------------------------------------------------------------------------------
  2608 ;; (1) _Temp_Main                                            0     0      0    2620
  2609 ;;                       _setTemp_Main
  2610 ;; ---------------------------------------------------------------------------------
  2611 ;; (5) _setRFSW_AdjControl                                   3     3      0    3047
  2612 ;;                                             68 BANK0      3     3      0
  2613 ;;                    _RfSWPointSelect
  2614 ;;                  _setRF_DimmerValue
  2615 ;;                          _setTxData
  2616 ;; ---------------------------------------------------------------------------------
  2617 ;; (2) _setPowerFault_Main                                   3     3      0    2598
  2618 ;;                                             18 BANK0      3     3      0
  2619 ;;              _PowerFaultPointSelect
  2620 ;;                       _getLoad_Safe
  2621 ;;                       _getTemp_Safe
  2622 ;;                _setPowerFault_ERROR
  2623 ;; ---------------------------------------------------------------------------------
  2624 ;; (2) _setTemp_Main                                         4     4      0    2620
  2625 ;;                                             18 BANK0      4     4      0
  2626 ;;                    _TempPointSelect
  2627 ;;                       _getLoad_Safe
  2628 ;;                         _getPF_Safe
  2629 ;;                  _setOverTemp_ERROR
  2630 ;; ---------------------------------------------------------------------------------
  2631 ;; (2) _setLoad_Main                                         6     6      0    3118
  2632 ;;                                             18 BANK0      5     5      0
  2633 ;;                    _LoadPointSelect
  2634 ;;                      _setLoad_ERROR
  2635 ;;                            ___lwdiv
  2636 ;;                             ___wmul
  2637 ;;               _setDimmerLights_Open
  2638 ;;              _setLoad_AH_AL_Restore
  2639 ;;                       _getTemp_Safe
  2640 ;;                         _getPF_Safe
  2641 ;; ---------------------------------------------------------------------------------
  2642 ;; (1) _DimmerLights_Main                                    0     0      0    3912
  2643 ;;               _setDimmerLights_Main
  2644 ;;                 _DimmerLights_Close
  2645 ;; ---------------------------------------------------------------------------------
  2646 ;; (6) _setRF_DimmerValue                                    3     3      0    2803
  2647 ;;                                             65 BANK0      3     3      0
  2648 ;;              _setDimmerLights_AdjRF
  2649 ;; ---------------------------------------------------------------------------------
  2650 ;; (3) _setPowerFault_ERROR                                  3     2      1    2510
  2651 ;;                                             15 BANK0      3     2      1
  2652 ;;              _PowerFaultPointSelect
  2653 ;;                  _setDimmer_PFERROR
  2654 ;;                 _DimmerLights_ERROR
  2655 ;;                             _setLED
  2656 ;;                       _setSw_Enable
  2657 ;;                       _setRF_Enable
  2658 ;; ---------------------------------------------------------------------------------
  2659 ;; (3) _setOverTemp_ERROR                                    3     2      1    2532
  2660 ;;                                             15 BANK0      3     2      1
  2661 ;;                    _TempPointSelect
  2662 ;;                _setDimmer_TempERROR
  2663 ;;                 _DimmerLights_ERROR
  2664 ;;                             _setLED
  2665 ;;                       _setSw_Enable
  2666 ;;                       _setRF_Enable
  2667 ;; ---------------------------------------------------------------------------------
  2668 ;; (3) _setLoad_ERROR                                        3     2      1    2554
  2669 ;;                                             15 BANK0      3     2      1
  2670 ;;                    _LoadPointSelect
  2671 ;;                _setDimmer_LoadERROR
  2672 ;;                 _DimmerLights_ERROR
  2673 ;;                             _setLED
  2674 ;;                       _setSw_Enable
  2675 ;;                       _setRF_Enable
  2676 ;; ---------------------------------------------------------------------------------
  2677 ;; (1) _Switch_Main                                          0     0      0    3149
  2678 ;;                         _setSw_Main
  2679 ;; ---------------------------------------------------------------------------------
  2680 ;; (1) _Flash_Memory_Main                                    0     0      0     227
  2681 ;;                _Flash_Memory_Modify
  2682 ;; ---------------------------------------------------------------------------------
  2683 ;; (1) _MainT                                                1     1      0     965
  2684 ;;                                             14 BANK0      1     1      0
  2685 ;;                     _setTemp_Enable
  2686 ;;                     _setLoad_Enable
  2687 ;;                             _setBuz
  2688 ;;                       _setSw_Enable
  2689 ;;                       _setRF_Enable
  2690 ;; ---------------------------------------------------------------------------------
  2691 ;; (2) _setDimmerLights_Main                                 3     3      0    3621
  2692 ;;                                             52 BANK0      3     3      0
  2693 ;;            _DimmerLightsPointSelect
  2694 ;;               _setDimmerLights_Open
  2695 ;;              _setDimmerLights_Close
  2696 ;;                    _setDimmerLights
  2697 ;;            _getDimmerLights_Trigger
  2698 ;;                _setDimmerLights_Adj
  2699 ;;                             _setBuz
  2700 ;; ---------------------------------------------------------------------------------
  2701 ;; (1) _DimmerLights_Initialization                          1     1      0    2759
  2702 ;;                                             66 BANK0      1     1      0
  2703 ;;     _setDimmerLights_Initialization
  2704 ;; ---------------------------------------------------------------------------------
  2705 ;; (2) _setSw_Main                                           4     4      0    3149
  2706 ;;                                             15 BANK0      4     4      0
  2707 ;;                      _SwPointSelect
  2708 ;;                          _Sw_OnFunc
  2709 ;;                         _Sw_AdjFunc
  2710 ;;                        _setRF_Learn
  2711 ;;                             _setBuz
  2712 ;;                         _Sw_OffFunc
  2713 ;; ---------------------------------------------------------------------------------
  2714 ;; (2) _Flash_Memory_Modify                                  3     3      0     227
  2715 ;;                                              4 BANK0      3     3      0
  2716 ;;                  _Flash_Memory_Read
  2717 ;;               _Flash_Memory_Erasing
  2718 ;;                 _Flash_Memory_Write
  2719 ;; ---------------------------------------------------------------------------------
  2720 ;; (4) _setRF_Enable                                         2     1      1     268
  2721 ;;                                              5 BANK0      2     1      1
  2722 ;;                      _RfPointSelect
  2723 ;;                _CC2500_WriteCommand
  2724 ;;                       _RF_RxDisable
  2725 ;; ---------------------------------------------------------------------------------
  2726 ;; (1) _Switch_Initialization                                0     0      0     418
  2727 ;;                         _TouchPower
  2728 ;;               _setSw_Initialization
  2729 ;; ---------------------------------------------------------------------------------
  2730 ;; (1) _Flash_Memory_Initialization                          2     2      0    1446
  2731 ;;                                             48 BANK0      2     2      0
  2732 ;;                  _Flash_Memory_Read
  2733 ;;                    _setPercentValue
  2734 ;;                 _Flash_Memory_Write
  2735 ;; ---------------------------------------------------------------------------------
  2736 ;; (1) _LED_Initialization                                   0     0      0     484
  2737 ;;              _setLED_Initialization
  2738 ;; ---------------------------------------------------------------------------------
  2739 ;; (7) _setDimmerLights_AdjRF                                2     2      0    2737
  2740 ;;                                             63 BANK0      2     2      0
  2741 ;;            _DimmerLightsPointSelect
  2742 ;;                    _getPercentValue
  2743 ;; ---------------------------------------------------------------------------------
  2744 ;; (4) _DimmerLights_ERROR                                   1     1      0    1692
  2745 ;;                                             14 BANK0      1     1      0
  2746 ;;                _getDimmer_TempERROR
  2747 ;;         _getDimmerLights_StatusFlag
  2748 ;;                             _setBuz
  2749 ;;              _setDimmerLights_ERROR
  2750 ;;                _getDimmer_LoadERROR
  2751 ;;                  _getDimmer_PFERROR
  2752 ;;       _setDimmerLights_TriggerERROR
  2753 ;; ---------------------------------------------------------------------------------
  2754 ;; (3) _setDimmerLights_Adj                                  4     3      1    1641
  2755 ;;                                             48 BANK0      4     3      1
  2756 ;;            _DimmerLightsPointSelect
  2757 ;;                  _setLoad_StatusOff
  2758 ;;                 _setRF_DimmerLights
  2759 ;;                          _setTxData
  2760 ;;                    _setPercentValue
  2761 ;; ---------------------------------------------------------------------------------
  2762 ;; (2) _setDimmerLights_Initialization                       3     3      0    2759
  2763 ;;                                             63 BANK0      3     3      0
  2764 ;;            _DimmerLightsPointSelect
  2765 ;;                    _getPercentValue
  2766 ;; ---------------------------------------------------------------------------------
  2767 ;; (1) _DelayOff_Main                                        0     0      0    1229
  2768 ;;                        _DlyOff_Main
  2769 ;; ---------------------------------------------------------------------------------
  2770 ;; (1) _CC2500_PowerOnInitial                                0     0      0     909
  2771 ;;                    _CC2500_PowerRST
  2772 ;;                  _CC2500_InitSetREG
  2773 ;;                 _CC2500_InitPATable
  2774 ;;                 _CC2500_ClearTXFIFO
  2775 ;;                 _CC2500_ClearRXFIFO
  2776 ;;               _CC2500_FrequencyCabr
  2777 ;;                   _CC2500_SIDLEMode
  2778 ;; ---------------------------------------------------------------------------------
  2779 ;; (1) _Buzzer_Initialization                                0     0      0      66
  2780 ;;              _setBuz_Initialization
  2781 ;; ---------------------------------------------------------------------------------
  2782 ;; (3) _Sw_OffFunc                                           3     3      0    1045
  2783 ;;                                              7 BANK0      3     3      0
  2784 ;;         _setDimmerLights_TriggerAdj
  2785 ;;              _setDimmerLights_AdjGo
  2786 ;;                 _setRF_DimmerLights
  2787 ;;                          _setTxData
  2788 ;;            _setDimmerLights_Trigger
  2789 ;;             _setDimmerLights_Switch
  2790 ;;                     _setDelayOff_GO
  2791 ;; ---------------------------------------------------------------------------------
  2792 ;; (3) _Sw_AdjFunc                                           1     1      0     264
  2793 ;;                                              4 BANK0      1     1      0
  2794 ;;                     _setRFSW_Status
  2795 ;;         _setDimmerLights_TriggerAdj
  2796 ;;              _setDimmerLights_AdjGo
  2797 ;; ---------------------------------------------------------------------------------
  2798 ;; (3) _Sw_OnFunc                                            1     1      0    1119
  2799 ;;                                             14 BANK0      1     1      0
  2800 ;;                             _setBuz
  2801 ;;                     _setRFSW_Status
  2802 ;;            _setDimmerLights_Trigger
  2803 ;;             _setDimmerLights_Switch
  2804 ;;                 _setRF_DimmerLights
  2805 ;;                          _setTxData
  2806 ;; ---------------------------------------------------------------------------------
  2807 ;; (2) _setSw_Initialization                                 1     1      0     418
  2808 ;;                                              4 BANK0      1     1      0
  2809 ;;                             _setLED
  2810 ;; ---------------------------------------------------------------------------------
  2811 ;; (5) _setRFSW_Control                                      3     3      0    1632
  2812 ;;                                             14 BANK0      3     3      0
  2813 ;;                    _RfSWPointSelect
  2814 ;;                     _setDelayOff_GO
  2815 ;;                       _setSw_Status
  2816 ;;            _setDimmerLights_Trigger
  2817 ;;             _setDimmerLights_Switch
  2818 ;;                 _setRF_DimmerLights
  2819 ;;                             _setBuz
  2820 ;;                          _setTxData
  2821 ;; ---------------------------------------------------------------------------------
  2822 ;; (4) _setLog_Code                                          2     2      0     565
  2823 ;;                                             14 BANK0      2     2      0
  2824 ;;                      _RfPointSelect
  2825 ;;                             _setBuz
  2826 ;; ---------------------------------------------------------------------------------
  2827 ;; (3) _RF_RxDisable                                         1     1      0     134
  2828 ;;                                              4 BANK0      1     1      0
  2829 ;;                      _RfPointSelect
  2830 ;;                _CC2500_WriteCommand
  2831 ;;                          _setINT_GO
  2832 ;; ---------------------------------------------------------------------------------
  2833 ;; (3) _Flash_Memory_Erasing                                 0     0      0       0
  2834 ;;                _Flash_Memory_Unlock
  2835 ;; ---------------------------------------------------------------------------------
  2836 ;; (3) _Flash_Memory_Write                                   2     2      0      90
  2837 ;;                                              0 BANK0      2     2      0
  2838 ;;                _Flash_Memory_Unlock
  2839 ;; ---------------------------------------------------------------------------------
  2840 ;; (1) _PowerFault_Initialization                            0     0      0      22
  2841 ;;       _setPowerFault_Initialization
  2842 ;; ---------------------------------------------------------------------------------
  2843 ;; (1) _Load_Initialization                                  0     0      0     156
  2844 ;;             _setLoad_Initialization
  2845 ;; ---------------------------------------------------------------------------------
  2846 ;; (1) _Temp_Initialization                                  0     0      0      22
  2847 ;;             _setTemp_Initialization
  2848 ;; ---------------------------------------------------------------------------------
  2849 ;; (1) _LED_Main                                             0     0      0     154
  2850 ;;                        _setLED_Main
  2851 ;; ---------------------------------------------------------------------------------
  2852 ;; (2) _setLED_Initialization                                1     1      0     484
  2853 ;;                                              4 BANK0      1     1      0
  2854 ;;                     _LedPointSelect
  2855 ;;                             _setLED
  2856 ;; ---------------------------------------------------------------------------------
  2857 ;; (4) _setPercentValue                                      4     4      0    1109
  2858 ;;                                             44 BANK0      4     4      0
  2859 ;;                            ___ftdiv
  2860 ;;                           ___awtoft
  2861 ;;                            ___fttol
  2862 ;; ---------------------------------------------------------------------------------
  2863 ;; (5) _setDimmerLights_ERROR                                2     2      0     770
  2864 ;;                                              5 BANK0      2     2      0
  2865 ;;            _DimmerLightsPointSelect
  2866 ;;                  _setLoad_StatusOff
  2867 ;;                             _setLED
  2868 ;;                       _setSw_Status
  2869 ;;                     _setRFSW_Status
  2870 ;; ---------------------------------------------------------------------------------
  2871 ;; (5) _setDimmerLights                                      3     2      1     924
  2872 ;;                                              6 BANK0      3     2      1
  2873 ;;            _DimmerLightsPointSelect
  2874 ;;                             _setLED
  2875 ;;                   _setLoad_StatusOn
  2876 ;;                      _setLoad_Count
  2877 ;;                   _setDimmer_Detect
  2878 ;;                         _setLoad_GO
  2879 ;;               _setLoad_LightsStatus
  2880 ;; ---------------------------------------------------------------------------------
  2881 ;; (2) _DimmerLights_Close                                   0     0      0     291
  2882 ;;                   _getDimmer_Detect
  2883 ;;                   _setDimmer_Detect
  2884 ;;         _getDimmerLights_StatusFlag
  2885 ;;                         _setLoad_GO
  2886 ;; ---------------------------------------------------------------------------------
  2887 ;; (8) _getPercentValue                                      6     6      0    2693
  2888 ;;                                             57 BANK0      6     6      0
  2889 ;;                            ___ftdiv
  2890 ;;                           ___awtoft
  2891 ;;                            ___ftmul
  2892 ;;                            ___ftadd
  2893 ;;                            ___fttol
  2894 ;; ---------------------------------------------------------------------------------
  2895 ;; (2) _DlyOff_Main                                          3     3      0    1229
  2896 ;;                                             14 BANK0      3     3      0
  2897 ;;                _DelayOffPointSelect
  2898 ;;                       _setSw_Status
  2899 ;;                     _setRFSW_Status
  2900 ;;                 _setRF_DimmerLights
  2901 ;;            _setDimmerLights_Trigger
  2902 ;;             _setDimmerLights_Switch
  2903 ;;                          _setTxData
  2904 ;;                             _setBuz
  2905 ;; ---------------------------------------------------------------------------------
  2906 ;; (1) _DelayOff_Initialization                              0     0      0      44
  2907 ;;              _DlyOff_Initialization
  2908 ;; ---------------------------------------------------------------------------------
  2909 ;; (2) _CC2500_SIDLEMode                                     0     0      0      68
  2910 ;;                _CC2500_WriteCommand
  2911 ;; ---------------------------------------------------------------------------------
  2912 ;; (2) _CC2500_FrequencyCabr                                 0     0      0     160
  2913 ;;                _CC2500_WriteCommand
  2914 ;;                      _DelayTime_1us
  2915 ;; ---------------------------------------------------------------------------------
  2916 ;; (2) _CC2500_ClearRXFIFO                                   0     0      0      68
  2917 ;;                _CC2500_WriteCommand
  2918 ;; ---------------------------------------------------------------------------------
  2919 ;; (2) _CC2500_ClearTXFIFO                                   0     0      0      68
  2920 ;;                _CC2500_WriteCommand
  2921 ;; ---------------------------------------------------------------------------------
  2922 ;; (2) _CC2500_InitPATable                                   3     3      0     181
  2923 ;;                                              5 BANK0      3     3      0
  2924 ;;                    _CC2500_WriteREG
  2925 ;; ---------------------------------------------------------------------------------
  2926 ;; (2) _CC2500_InitSetREG                                    4     4      0     226
  2927 ;;                                              5 BANK0      4     4      0
  2928 ;;                    _CC2500_WriteREG
  2929 ;; ---------------------------------------------------------------------------------
  2930 ;; (3) _CC2500_RxData                                        2     2      0     386
  2931 ;;                                              4 BANK0      2     2      0
  2932 ;;                  _CC2500_ReadStatus
  2933 ;;                   _CC2500_WriteByte
  2934 ;;                    _CC2500_ReadByte
  2935 ;;                _CC2500_WriteCommand
  2936 ;;                     _setRF_RxStatus
  2937 ;; ---------------------------------------------------------------------------------
  2938 ;; (3) _CC2500_TxData                                        2     2      0     160
  2939 ;;                                              4 BANK0      2     2      0
  2940 ;;                   _CC2500_WriteByte
  2941 ;;                _CC2500_WriteCommand
  2942 ;; ---------------------------------------------------------------------------------
  2943 ;; (1) _Buzzer_Main                                          0     0      0      88
  2944 ;;                        _setBuz_Main
  2945 ;; ---------------------------------------------------------------------------------
  2946 ;; (2) _setBuz_Initialization                                1     1      0      66
  2947 ;;                      _setBuz_Enable
  2948 ;; ---------------------------------------------------------------------------------
  2949 ;; (9) ___awtoft                                             6     3      3     300
  2950 ;;                                             22 BANK0      6     3      3
  2951 ;;                           ___ftpack
  2952 ;;                            ___fttol (ARG)
  2953 ;; ---------------------------------------------------------------------------------
  2954 ;; (9) ___ftmul                                             16    10      6     535
  2955 ;;                                             28 BANK0     16    10      6
  2956 ;;                           ___ftpack
  2957 ;;                           ___awtoft (ARG)
  2958 ;;                            ___fttol (ARG)
  2959 ;; ---------------------------------------------------------------------------------
  2960 ;; (9) ___ftdiv                                             16    10      6     489
  2961 ;;                                             28 BANK0     16    10      6
  2962 ;;                           ___ftpack
  2963 ;;                           ___awtoft (ARG)
  2964 ;;                            ___fttol (ARG)
  2965 ;; ---------------------------------------------------------------------------------
  2966 ;; (9) ___ftadd                                             13     7      6    1049
  2967 ;;                                             44 BANK0     13     7      6
  2968 ;;                           ___ftpack
  2969 ;;                            ___ftmul (ARG)
  2970 ;;                           ___awtoft (ARG)
  2971 ;;                            ___fttol (ARG)
  2972 ;; ---------------------------------------------------------------------------------
  2973 ;; (3) _setRF_Learn                                          2     1      1      66
  2974 ;;                                              2 BANK0      2     1      1
  2975 ;;                      _RfPointSelect
  2976 ;; ---------------------------------------------------------------------------------
  2977 ;; (2) _setPowerFault_Initialization                         1     1      0      22
  2978 ;;                                              1 BANK0      1     1      0
  2979 ;;              _PowerFaultPointSelect
  2980 ;; ---------------------------------------------------------------------------------
  2981 ;; (2) _setTemp_Initialization                               1     1      0      22
  2982 ;;                                              1 BANK0      1     1      0
  2983 ;;                    _TempPointSelect
  2984 ;; ---------------------------------------------------------------------------------
  2985 ;; (3) _getLoad_Safe                                         2     2      0      44
  2986 ;;                                              2 BANK0      2     2      0
  2987 ;;                    _LoadPointSelect
  2988 ;; ---------------------------------------------------------------------------------
  2989 ;; (3) _getPF_Safe                                           1     1      0      22
  2990 ;;                                              1 BANK0      1     1      0
  2991 ;;              _PowerFaultPointSelect
  2992 ;; ---------------------------------------------------------------------------------
  2993 ;; (3) _getTemp_Safe                                         1     1      0      22
  2994 ;;                                              1 BANK0      1     1      0
  2995 ;;                    _TempPointSelect
  2996 ;; ---------------------------------------------------------------------------------
  2997 ;; (2) _setLoad_Initialization                               1     1      0     156
  2998 ;;                                              2 BANK0      1     1      0
  2999 ;;                    _LoadPointSelect
  3000 ;;              _setLoad_AH_AL_Restore
  3001 ;; ---------------------------------------------------------------------------------
  3002 ;; (4) _Flash_Memory_Unlock                                  0     0      0       0
  3003 ;; ---------------------------------------------------------------------------------
  3004 ;; (4) _setSw_Enable                                         2     1      1      66
  3005 ;;                                              2 BANK0      2     1      1
  3006 ;;                      _SwPointSelect
  3007 ;; ---------------------------------------------------------------------------------
  3008 ;; (2) _setLoad_Enable                                       2     1      1      66
  3009 ;;                                              2 BANK0      2     1      1
  3010 ;;                    _LoadPointSelect
  3011 ;; ---------------------------------------------------------------------------------
  3012 ;; (2) _setTemp_Enable                                       2     1      1      44
  3013 ;;                                              1 BANK0      2     1      1
  3014 ;;                    _TempPointSelect
  3015 ;; ---------------------------------------------------------------------------------
  3016 ;; (1) _getPowerFault_AD                                     6     5      1      88
  3017 ;;                                              7 BANK0      6     5      1
  3018 ;;              _PowerFaultPointSelect
  3019 ;;                              _getAD
  3020 ;; ---------------------------------------------------------------------------------
  3021 ;; (1) _getTemp_AD                                           6     5      1      88
  3022 ;;                                              7 BANK0      6     5      1
  3023 ;;                    _TempPointSelect
  3024 ;;                              _getAD
  3025 ;; ---------------------------------------------------------------------------------
  3026 ;; (1) _getLoad_AD                                           9     8      1     315
  3027 ;;                                              7 BANK0      9     8      1
  3028 ;;                    _LoadPointSelect
  3029 ;;                              _getAD
  3030 ;; ---------------------------------------------------------------------------------
  3031 ;; (1) _RF_Initialization                                    0     0      0       0
  3032 ;;               _setRF_Initialization
  3033 ;; ---------------------------------------------------------------------------------
  3034 ;; (1) _Mcu_Initialization                                   1     1      0       0
  3035 ;;                                              1 BANK0      1     1      0
  3036 ;;                             _IO_Set
  3037 ;;                           _TMR0_Set
  3038 ;;                            _ADC_Set
  3039 ;;                            _INT_Set
  3040 ;;                            _IOC_Set
  3041 ;; ---------------------------------------------------------------------------------
  3042 ;; (2) _setLED_Main                                          3     3      0     154
  3043 ;;                                              2 BANK0      3     3      0
  3044 ;;                     _LedPointSelect
  3045 ;; ---------------------------------------------------------------------------------
  3046 ;; (4) _setDimmer_PFERROR                                    2     1      1      66
  3047 ;;                                              2 BANK0      2     1      1
  3048 ;;                  _DimmerPointSelect
  3049 ;; ---------------------------------------------------------------------------------
  3050 ;; (4) _setDimmer_LoadERROR                                  2     1      1      66
  3051 ;;                                              2 BANK0      2     1      1
  3052 ;;                  _DimmerPointSelect
  3053 ;; ---------------------------------------------------------------------------------
  3054 ;; (4) _setDimmer_TempERROR                                  2     1      1      66
  3055 ;;                                              2 BANK0      2     1      1
  3056 ;;                  _DimmerPointSelect
  3057 ;; ---------------------------------------------------------------------------------
  3058 ;; (4) _setDimmerLights_TriggerAdj                           2     1      1      66
  3059 ;;                                              2 BANK0      2     1      1
  3060 ;;            _DimmerLightsPointSelect
  3061 ;; ---------------------------------------------------------------------------------
  3062 ;; (4) _setDimmerLights_AdjGo                                2     1      1      66
  3063 ;;                                              2 BANK0      2     1      1
  3064 ;;            _DimmerLightsPointSelect
  3065 ;; ---------------------------------------------------------------------------------
  3066 ;; (6) _setLoad_LightsStatus                                 4     2      2     176
  3067 ;;                                              2 BANK0      4     2      2
  3068 ;;                    _LoadPointSelect
  3069 ;; ---------------------------------------------------------------------------------
  3070 ;; (6) _setLoad_StatusOn                                     2     1      1      66
  3071 ;;                                              2 BANK0      2     1      1
  3072 ;;                    _LoadPointSelect
  3073 ;; ---------------------------------------------------------------------------------
  3074 ;; (6) _setLED                                               2     1      1     374
  3075 ;;                                              2 BANK0      2     1      1
  3076 ;;                     _LedPointSelect
  3077 ;; ---------------------------------------------------------------------------------
  3078 ;; (4) _setLoad_StatusOff                                    3     1      2     132
  3079 ;;                                              2 BANK0      3     1      2
  3080 ;;                    _LoadPointSelect
  3081 ;; ---------------------------------------------------------------------------------
  3082 ;; (5) _setDimmerLights_TriggerERROR                         3     2      1     154
  3083 ;;                                              2 BANK0      3     2      1
  3084 ;;            _DimmerLightsPointSelect
  3085 ;; ---------------------------------------------------------------------------------
  3086 ;; (5) _getDimmer_PFERROR                                    1     1      0      44
  3087 ;;                                              2 BANK0      1     1      0
  3088 ;;                  _DimmerPointSelect
  3089 ;; ---------------------------------------------------------------------------------
  3090 ;; (5) _getDimmer_LoadERROR                                  1     1      0      44
  3091 ;;                                              2 BANK0      1     1      0
  3092 ;;                  _DimmerPointSelect
  3093 ;; ---------------------------------------------------------------------------------
  3094 ;; (5) _getDimmer_TempERROR                                  1     1      0      44
  3095 ;;                                              2 BANK0      1     1      0
  3096 ;;                  _DimmerPointSelect
  3097 ;; ---------------------------------------------------------------------------------
  3098 ;; (3) _getDimmerLights_Trigger                              4     4      0     115
  3099 ;;                                              2 BANK0      4     4      0
  3100 ;;            _DimmerLightsPointSelect
  3101 ;; ---------------------------------------------------------------------------------
  3102 ;; (3) _setDimmerLights_Close                                2     1      1      66
  3103 ;;                                              2 BANK0      2     1      1
  3104 ;;            _DimmerLightsPointSelect
  3105 ;; ---------------------------------------------------------------------------------
  3106 ;; (3) _setDimmerLights_Open                                 2     1      1      66
  3107 ;;                                              2 BANK0      2     1      1
  3108 ;;            _DimmerLightsPointSelect
  3109 ;; ---------------------------------------------------------------------------------
  3110 ;; (6) _setLoad_GO                                           2     1      1      66
  3111 ;;                                              2 BANK0      2     1      1
  3112 ;;                    _LoadPointSelect
  3113 ;; ---------------------------------------------------------------------------------
  3114 ;; (3) _getDimmerLights_StatusFlag                           4     4      0     115
  3115 ;;                                              2 BANK0      4     4      0
  3116 ;;            _DimmerLightsPointSelect
  3117 ;; ---------------------------------------------------------------------------------
  3118 ;; (6) _setDimmer_Detect                                     2     1      1      66
  3119 ;;                                              2 BANK0      2     1      1
  3120 ;;                  _DimmerPointSelect
  3121 ;; ---------------------------------------------------------------------------------
  3122 ;; (3) _getDimmer_Detect                                     2     2      0      44
  3123 ;;                                              2 BANK0      2     2      0
  3124 ;;                  _DimmerPointSelect
  3125 ;; ---------------------------------------------------------------------------------
  3126 ;; (6) _setDelayOff_GO                                       4     2      2     315
  3127 ;;                                              3 BANK0      4     2      2
  3128 ;;                _DelayOffPointSelect
  3129 ;;                     _DelayTimejudge
  3130 ;; ---------------------------------------------------------------------------------
  3131 ;; (3) _setTxData                                            4     4      0     134
  3132 ;;                                              2 BANK0      4     4      0
  3133 ;;                      _RfPointSelect
  3134 ;; ---------------------------------------------------------------------------------
  3135 ;; (3) _setDimmerLights_Switch                               2     1      1      66
  3136 ;;                                              2 BANK0      2     1      1
  3137 ;;            _DimmerLightsPointSelect
  3138 ;; ---------------------------------------------------------------------------------
  3139 ;; (3) _setDimmerLights_Trigger                              2     1      1      66
  3140 ;;                                              2 BANK0      2     1      1
  3141 ;;            _DimmerLightsPointSelect
  3142 ;; ---------------------------------------------------------------------------------
  3143 ;; (3) _setRFSW_Status                                       2     1      1      66
  3144 ;;                                              2 BANK0      2     1      1
  3145 ;;                    _RfSWPointSelect
  3146 ;; ---------------------------------------------------------------------------------
  3147 ;; (3) _setSw_Status                                         2     1      1      66
  3148 ;;                                              2 BANK0      2     1      1
  3149 ;;                      _SwPointSelect
  3150 ;; ---------------------------------------------------------------------------------
  3151 ;; (2) _DlyOff_Initialization                                1     1      0      44
  3152 ;;                                              2 BANK0      1     1      0
  3153 ;;                _DelayOffPointSelect
  3154 ;; ---------------------------------------------------------------------------------
  3155 ;; (3) _CC2500_WriteREG                                      3     2      1      90
  3156 ;;                                              2 BANK0      3     2      1
  3157 ;;                   _CC2500_WriteByte
  3158 ;; ---------------------------------------------------------------------------------
  3159 ;; (2) _CC2500_PowerRST                                      1     1      0     138
  3160 ;;                                              6 BANK0      1     1      0
  3161 ;;                      _DelayTime_1us
  3162 ;;                   _CC2500_WriteByte
  3163 ;; ---------------------------------------------------------------------------------
  3164 ;; (4) _setRF_RxStatus                                       2     1      1      66
  3165 ;;                                              2 BANK0      2     1      1
  3166 ;;                      _RfPointSelect
  3167 ;; ---------------------------------------------------------------------------------
  3168 ;; (4) _CC2500_ReadStatus                                    2     2      0     114
  3169 ;;                                              2 BANK0      2     2      0
  3170 ;;                   _CC2500_WriteByte
  3171 ;;                    _CC2500_ReadByte
  3172 ;; ---------------------------------------------------------------------------------
  3173 ;; (3) _CC2500_WriteCommand                                  2     2      0      68
  3174 ;;                                              2 BANK0      2     2      0
  3175 ;;                   _CC2500_WriteByte
  3176 ;; ---------------------------------------------------------------------------------
  3177 ;; (3) _setBuz                                               5     2      3     521
  3178 ;;                                              9 BANK0      5     2      3
  3179 ;;                     _BuzPointSelect
  3180 ;;                            ___awdiv
  3181 ;; ---------------------------------------------------------------------------------
  3182 ;; (3) _setBuz_Enable                                        2     1      1      66
  3183 ;;                                              2 BANK0      2     1      1
  3184 ;;                     _BuzPointSelect
  3185 ;; ---------------------------------------------------------------------------------
  3186 ;; (2) _setBuz_Main                                          5     5      0      88
  3187 ;;                                              2 BANK0      5     5      0
  3188 ;;                     _BuzPointSelect
  3189 ;; ---------------------------------------------------------------------------------
  3190 ;; (4) ___awdiv                                              9     5      4     300
  3191 ;;                                              0 BANK0      9     5      4
  3192 ;; ---------------------------------------------------------------------------------
  3193 ;; (9) ___fttol                                             14    10      4     252
  3194 ;;                                              8 BANK0     14    10      4
  3195 ;;                           ___ftpack (ARG)
  3196 ;; ---------------------------------------------------------------------------------
  3197 ;; (10) ___ftpack                                            8     3      5     209
  3198 ;;                                              0 BANK0      8     3      5
  3199 ;; ---------------------------------------------------------------------------------
  3200 ;; (3) ___lwdiv                                              8     4      4     162
  3201 ;;                                              0 BANK0      8     4      4
  3202 ;; ---------------------------------------------------------------------------------
  3203 ;; (3) ___wmul                                               6     2      4      92
  3204 ;;                                              0 BANK0      6     2      4
  3205 ;; ---------------------------------------------------------------------------------
  3206 ;; (4) _SwPointSelect                                        2     2      0      22
  3207 ;;                                              0 BANK0      2     2      0
  3208 ;; ---------------------------------------------------------------------------------
  3209 ;; (2) _TouchPower                                           0     0      0       0
  3210 ;; ---------------------------------------------------------------------------------
  3211 ;; (4) _RfSWPointSelect                                      2     2      0      22
  3212 ;;                                              0 BANK0      2     2      0
  3213 ;; ---------------------------------------------------------------------------------
  3214 ;; (2) _setRF_Initialization                                 2     2      0       0
  3215 ;;                                              0 BANK0      1     1      0
  3216 ;; ---------------------------------------------------------------------------------
  3217 ;; (4) _RfPointSelect                                        2     2      0      22
  3218 ;;                                              0 BANK0      2     2      0
  3219 ;; ---------------------------------------------------------------------------------
  3220 ;; (4) _PowerFaultPointSelect                                2     2      0       0
  3221 ;;                                              0 BANK0      1     1      0
  3222 ;; ---------------------------------------------------------------------------------
  3223 ;; (4) _TempPointSelect                                      2     2      0       0
  3224 ;;                                              0 BANK0      1     1      0
  3225 ;; ---------------------------------------------------------------------------------
  3226 ;; (3) _setLoad_AH_AL_Restore                                3     3      0      90
  3227 ;;                                              0 BANK0      2     2      0
  3228 ;; ---------------------------------------------------------------------------------
  3229 ;; (7) _LoadPointSelect                                      2     2      0      22
  3230 ;;                                              0 BANK0      2     2      0
  3231 ;; ---------------------------------------------------------------------------------
  3232 ;; (3) _Flash_Memory_Read                                    4     4      0      47
  3233 ;;                                              0 BANK0      4     4      0
  3234 ;; ---------------------------------------------------------------------------------
  3235 ;; (2) _getAD                                                7     5      2      44
  3236 ;;                                              0 BANK0      7     5      2
  3237 ;; ---------------------------------------------------------------------------------
  3238 ;; (3) _setINT_GO                                            1     1      0      22
  3239 ;;                                              0 BANK0      1     1      0
  3240 ;; ---------------------------------------------------------------------------------
  3241 ;; (2) _IOC_Set                                              0     0      0       0
  3242 ;; ---------------------------------------------------------------------------------
  3243 ;; (2) _INT_Set                                              0     0      0       0
  3244 ;; ---------------------------------------------------------------------------------
  3245 ;; (2) _ADC_Set                                              0     0      0       0
  3246 ;; ---------------------------------------------------------------------------------
  3247 ;; (2) _TMR0_Set                                             1     1      0       0
  3248 ;;                                              0 BANK0      1     1      0
  3249 ;; ---------------------------------------------------------------------------------
  3250 ;; (2) _IO_Set                                               0     0      0       0
  3251 ;; ---------------------------------------------------------------------------------
  3252 ;; (1) _MainT_Initialization                                 1     1      0       0
  3253 ;;                                              0 BANK0      1     1      0
  3254 ;; ---------------------------------------------------------------------------------
  3255 ;; (7) _LedPointSelect                                       2     2      0      66
  3256 ;;                                              0 BANK0      2     2      0
  3257 ;; ---------------------------------------------------------------------------------
  3258 ;; (7) _DimmerPointSelect                                    2     2      0      22
  3259 ;;                                              0 BANK0      2     2      0
  3260 ;; ---------------------------------------------------------------------------------
  3261 ;; (6) _setLoad_Count                                        3     2      1      44
  3262 ;;                                              0 BANK0      2     1      1
  3263 ;; ---------------------------------------------------------------------------------
  3264 ;; (4) _DimmerLightsPointSelect                              2     2      0      22
  3265 ;;                                              0 BANK0      2     2      0
  3266 ;; ---------------------------------------------------------------------------------
  3267 ;; (7) _DelayTimejudge                                       3     3      0     161
  3268 ;;                                              0 BANK0      3     3      0
  3269 ;; ---------------------------------------------------------------------------------
  3270 ;; (3) _setRF_DimmerLights                                   5     4      1     156
  3271 ;;                                              0 BANK0      5     4      1
  3272 ;; ---------------------------------------------------------------------------------
  3273 ;; (3) _DelayOffPointSelect                                  2     2      0      22
  3274 ;;                                              0 BANK0      2     2      0
  3275 ;; ---------------------------------------------------------------------------------
  3276 ;; (3) _DelayTime_1us                                        6     4      2      92
  3277 ;;                                              0 BANK0      6     4      2
  3278 ;; ---------------------------------------------------------------------------------
  3279 ;; (4) _CC2500_ReadByte                                      2     2      0      46
  3280 ;;                                              0 BANK0      2     2      0
  3281 ;; ---------------------------------------------------------------------------------
  3282 ;; (4) _CC2500_WriteByte                                     2     2      0      46
  3283 ;;                                              0 BANK0      2     2      0
  3284 ;; ---------------------------------------------------------------------------------
  3285 ;; (4) _BuzPointSelect                                       2     2      0      22
  3286 ;;                                              0 BANK0      2     2      0
  3287 ;; ---------------------------------------------------------------------------------
  3288 ;; Estimated maximum stack depth 10
  3289 ;; ---------------------------------------------------------------------------------
  3290 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3291 ;; ---------------------------------------------------------------------------------
  3292 ;; (11) _ISR                                                 1     1      0     555
  3293 ;;                                              9 COMMON     1     1      0
  3294 ;;                            _IOC_ISR
  3295 ;;                           _TMR0_ISR
  3296 ;;                            _INT_ISR
  3297 ;; ---------------------------------------------------------------------------------
  3298 ;; (12) _INT_ISR                                             0     0      0     117
  3299 ;;                    _setRF_ReceiveGO
  3300 ;; ---------------------------------------------------------------------------------
  3301 ;; (12) _TMR0_ISR                                            4     4      0     438
  3302 ;;                                              5 COMMON     4     4      0
  3303 ;;                i1_setLoad_StatusOff
  3304 ;; ---------------------------------------------------------------------------------
  3305 ;; (13) i1_setLoad_StatusOff                                 3     1      2     438
  3306 ;;                                              2 COMMON     3     1      2
  3307 ;;                  i1_LoadPointSelect
  3308 ;; ---------------------------------------------------------------------------------
  3309 ;; (13) _setRF_ReceiveGO                                     2     1      1     117
  3310 ;;                                              2 COMMON     2     1      1
  3311 ;;                    i1_RfPointSelect
  3312 ;; ---------------------------------------------------------------------------------
  3313 ;; (12) _IOC_ISR                                             1     1      0       0
  3314 ;;                                              0 COMMON     1     1      0
  3315 ;;                   _setDimmerReClock
  3316 ;; ---------------------------------------------------------------------------------
  3317 ;; (14) i1_RfPointSelect                                     2     2      0      73
  3318 ;;                                              0 COMMON     2     2      0
  3319 ;; ---------------------------------------------------------------------------------
  3320 ;; (14) i1_LoadPointSelect                                   2     2      0      73
  3321 ;;                                              0 COMMON     2     2      0
  3322 ;; ---------------------------------------------------------------------------------
  3323 ;; (13) _setDimmerReClock                                    0     0      0       0
  3324 ;; ---------------------------------------------------------------------------------
  3325 ;; Estimated maximum stack depth 14
  3326 ;; ---------------------------------------------------------------------------------
  3327                           
  3328 ;; Call Graph Graphs:
  3329                           
  3330 ;; _main (ROOT)
  3331 ;;   _MainT_Initialization
  3332 ;;   _Mcu_Initialization
  3333 ;;     _IO_Set
  3334 ;;     _TMR0_Set
  3335 ;;     _ADC_Set
  3336 ;;     _INT_Set
  3337 ;;     _IOC_Set
  3338 ;;   _Flash_Memory_Initialization
  3339 ;;     _Flash_Memory_Read
  3340 ;;     _setPercentValue
  3341 ;;       ___ftdiv
  3342 ;;         ___ftpack
  3343 ;;         ___awtoft (ARG)
  3344 ;;           ___ftpack
  3345 ;;           ___fttol (ARG)
  3346 ;;             ___ftpack (ARG)
  3347 ;;         ___fttol (ARG)
  3348 ;;           ___ftpack (ARG)
  3349 ;;       ___awtoft
  3350 ;;         ___ftpack
  3351 ;;         ___fttol (ARG)
  3352 ;;           ___ftpack (ARG)
  3353 ;;       ___fttol
  3354 ;;         ___ftpack (ARG)
  3355 ;;     _Flash_Memory_Write
  3356 ;;       _Flash_Memory_Unlock
  3357 ;;   _LED_Initialization
  3358 ;;     _setLED_Initialization
  3359 ;;       _LedPointSelect
  3360 ;;       _setLED
  3361 ;;         _LedPointSelect
  3362 ;;   _Buzzer_Initialization
  3363 ;;     _setBuz_Initialization
  3364 ;;       _setBuz_Enable
  3365 ;;         _BuzPointSelect
  3366 ;;   _Temp_Initialization
  3367 ;;     _setTemp_Initialization
  3368 ;;       _TempPointSelect
  3369 ;;   _Load_Initialization
  3370 ;;     _setLoad_Initialization
  3371 ;;       _LoadPointSelect
  3372 ;;       _setLoad_AH_AL_Restore
  3373 ;;   _PowerFault_Initialization
  3374 ;;     _setPowerFault_Initialization
  3375 ;;       _PowerFaultPointSelect
  3376 ;;   _DelayOff_Initialization
  3377 ;;     _DlyOff_Initialization
  3378 ;;       _DelayOffPointSelect
  3379 ;;   _DimmerLights_Initialization
  3380 ;;     _setDimmerLights_Initialization
  3381 ;;       _DimmerLightsPointSelect
  3382 ;;       _getPercentValue
  3383 ;;         ___ftdiv
  3384 ;;           ___ftpack
  3385 ;;           ___awtoft (ARG)
  3386 ;;             ___ftpack
  3387 ;;             ___fttol (ARG)
  3388 ;;               ___ftpack (ARG)
  3389 ;;           ___fttol (ARG)
  3390 ;;             ___ftpack (ARG)
  3391 ;;         ___awtoft
  3392 ;;           ___ftpack
  3393 ;;           ___fttol (ARG)
  3394 ;;             ___ftpack (ARG)
  3395 ;;         ___ftmul
  3396 ;;           ___ftpack
  3397 ;;           ___awtoft (ARG)
  3398 ;;             ___ftpack
  3399 ;;             ___fttol (ARG)
  3400 ;;               ___ftpack (ARG)
  3401 ;;           ___fttol (ARG)
  3402 ;;             ___ftpack (ARG)
  3403 ;;         ___ftadd
  3404 ;;           ___ftpack
  3405 ;;           ___ftmul (ARG)
  3406 ;;             ___ftpack
  3407 ;;             ___awtoft (ARG)
  3408 ;;               ___ftpack
  3409 ;;               ___fttol (ARG)
  3410 ;;                 ___ftpack (ARG)
  3411 ;;             ___fttol (ARG)
  3412 ;;               ___ftpack (ARG)
  3413 ;;           ___awtoft (ARG)
  3414 ;;             ___ftpack
  3415 ;;             ___fttol (ARG)
  3416 ;;               ___ftpack (ARG)
  3417 ;;           ___fttol (ARG)
  3418 ;;             ___ftpack (ARG)
  3419 ;;         ___fttol
  3420 ;;           ___ftpack (ARG)
  3421 ;;   _Switch_Initialization
  3422 ;;     _TouchPower
  3423 ;;     _setSw_Initialization
  3424 ;;       _setLED
  3425 ;;         _LedPointSelect
  3426 ;;   _RF_Initialization
  3427 ;;     _setRF_Initialization
  3428 ;;   _CC2500_PowerOnInitial
  3429 ;;     _CC2500_PowerRST
  3430 ;;       _DelayTime_1us
  3431 ;;       _CC2500_WriteByte
  3432 ;;     _CC2500_InitSetREG
  3433 ;;       _CC2500_WriteREG
  3434 ;;         _CC2500_WriteByte
  3435 ;;     _CC2500_InitPATable
  3436 ;;       _CC2500_WriteREG
  3437 ;;         _CC2500_WriteByte
  3438 ;;     _CC2500_ClearTXFIFO
  3439 ;;       _CC2500_WriteCommand
  3440 ;;         _CC2500_WriteByte
  3441 ;;     _CC2500_ClearRXFIFO
  3442 ;;       _CC2500_WriteCommand
  3443 ;;         _CC2500_WriteByte
  3444 ;;     _CC2500_FrequencyCabr
  3445 ;;       _CC2500_WriteCommand
  3446 ;;         _CC2500_WriteByte
  3447 ;;       _DelayTime_1us
  3448 ;;     _CC2500_SIDLEMode
  3449 ;;       _CC2500_WriteCommand
  3450 ;;         _CC2500_WriteByte
  3451 ;;   _getLoad_AD
  3452 ;;     _LoadPointSelect
  3453 ;;     _getAD
  3454 ;;   _getTemp_AD
  3455 ;;     _TempPointSelect
  3456 ;;     _getAD
  3457 ;;   _getPowerFault_AD
  3458 ;;     _PowerFaultPointSelect
  3459 ;;     _getAD
  3460 ;;   _MainT
  3461 ;;     _setTemp_Enable
  3462 ;;       _TempPointSelect
  3463 ;;     _setLoad_Enable
  3464 ;;       _LoadPointSelect
  3465 ;;     _setBuz
  3466 ;;       _BuzPointSelect
  3467 ;;       ___awdiv
  3468 ;;     _setSw_Enable
  3469 ;;       _SwPointSelect
  3470 ;;     _setRF_Enable
  3471 ;;       _RfPointSelect
  3472 ;;       _CC2500_WriteCommand
  3473 ;;         _CC2500_WriteByte
  3474 ;;       _RF_RxDisable
  3475 ;;         _RfPointSelect
  3476 ;;         _CC2500_WriteCommand
  3477 ;;           _CC2500_WriteByte
  3478 ;;         _setINT_GO
  3479 ;;   _Flash_Memory_Main
  3480 ;;     _Flash_Memory_Modify
  3481 ;;       _Flash_Memory_Read
  3482 ;;       _Flash_Memory_Erasing
  3483 ;;         _Flash_Memory_Unlock
  3484 ;;       _Flash_Memory_Write
  3485 ;;         _Flash_Memory_Unlock
  3486 ;;   _Buzzer_Main
  3487 ;;     _setBuz_Main
  3488 ;;       _BuzPointSelect
  3489 ;;   _LED_Main
  3490 ;;     _setLED_Main
  3491 ;;       _LedPointSelect
  3492 ;;   _Temp_Main
  3493 ;;     _setTemp_Main
  3494 ;;       _TempPointSelect
  3495 ;;       _getLoad_Safe
  3496 ;;         _LoadPointSelect
  3497 ;;       _getPF_Safe
  3498 ;;         _PowerFaultPointSelect
  3499 ;;       _setOverTemp_ERROR
  3500 ;;         _TempPointSelect
  3501 ;;         _setDimmer_TempERROR
  3502 ;;           _DimmerPointSelect
  3503 ;;         _DimmerLights_ERROR
  3504 ;;           _getDimmer_TempERROR
  3505 ;;             _DimmerPointSelect
  3506 ;;           _getDimmerLights_StatusFlag
  3507 ;;             _DimmerLightsPointSelect
  3508 ;;           _setBuz
  3509 ;;             _BuzPointSelect
  3510 ;;             ___awdiv
  3511 ;;           _setDimmerLights_ERROR
  3512 ;;             _DimmerLightsPointSelect
  3513 ;;             _setLoad_StatusOff
  3514 ;;               _LoadPointSelect
  3515 ;;             _setLED
  3516 ;;               _LedPointSelect
  3517 ;;             _setSw_Status
  3518 ;;               _SwPointSelect
  3519 ;;             _setRFSW_Status
  3520 ;;               _RfSWPointSelect
  3521 ;;           _getDimmer_LoadERROR
  3522 ;;             _DimmerPointSelect
  3523 ;;           _getDimmer_PFERROR
  3524 ;;             _DimmerPointSelect
  3525 ;;           _setDimmerLights_TriggerERROR
  3526 ;;             _DimmerLightsPointSelect
  3527 ;;         _setLED
  3528 ;;           _LedPointSelect
  3529 ;;         _setSw_Enable
  3530 ;;           _SwPointSelect
  3531 ;;         _setRF_Enable
  3532 ;;           _RfPointSelect
  3533 ;;           _CC2500_WriteCommand
  3534 ;;             _CC2500_WriteByte
  3535 ;;           _RF_RxDisable
  3536 ;;             _RfPointSelect
  3537 ;;             _CC2500_WriteCommand
  3538 ;;               _CC2500_WriteByte
  3539 ;;             _setINT_GO
  3540 ;;   _Load_Main
  3541 ;;     _setLoad_Main
  3542 ;;       _LoadPointSelect
  3543 ;;       _setLoad_ERROR
  3544 ;;         _LoadPointSelect
  3545 ;;         _setDimmer_LoadERROR
  3546 ;;           _DimmerPointSelect
  3547 ;;         _DimmerLights_ERROR
  3548 ;;           _getDimmer_TempERROR
  3549 ;;             _DimmerPointSelect
  3550 ;;           _getDimmerLights_StatusFlag
  3551 ;;             _DimmerLightsPointSelect
  3552 ;;           _setBuz
  3553 ;;             _BuzPointSelect
  3554 ;;             ___awdiv
  3555 ;;           _setDimmerLights_ERROR
  3556 ;;             _DimmerLightsPointSelect
  3557 ;;             _setLoad_StatusOff
  3558 ;;               _LoadPointSelect
  3559 ;;             _setLED
  3560 ;;               _LedPointSelect
  3561 ;;             _setSw_Status
  3562 ;;               _SwPointSelect
  3563 ;;             _setRFSW_Status
  3564 ;;               _RfSWPointSelect
  3565 ;;           _getDimmer_LoadERROR
  3566 ;;             _DimmerPointSelect
  3567 ;;           _getDimmer_PFERROR
  3568 ;;             _DimmerPointSelect
  3569 ;;           _setDimmerLights_TriggerERROR
  3570 ;;             _DimmerLightsPointSelect
  3571 ;;         _setLED
  3572 ;;           _LedPointSelect
  3573 ;;         _setSw_Enable
  3574 ;;           _SwPointSelect
  3575 ;;         _setRF_Enable
  3576 ;;           _RfPointSelect
  3577 ;;           _CC2500_WriteCommand
  3578 ;;             _CC2500_WriteByte
  3579 ;;           _RF_RxDisable
  3580 ;;             _RfPointSelect
  3581 ;;             _CC2500_WriteCommand
  3582 ;;               _CC2500_WriteByte
  3583 ;;             _setINT_GO
  3584 ;;       ___lwdiv
  3585 ;;       ___wmul
  3586 ;;       _setDimmerLights_Open
  3587 ;;         _DimmerLightsPointSelect
  3588 ;;       _setLoad_AH_AL_Restore
  3589 ;;       _getTemp_Safe
  3590 ;;         _TempPointSelect
  3591 ;;       _getPF_Safe
  3592 ;;         _PowerFaultPointSelect
  3593 ;;   _PowerFault_Main
  3594 ;;     _setPowerFault_Main
  3595 ;;       _PowerFaultPointSelect
  3596 ;;       _getLoad_Safe
  3597 ;;         _LoadPointSelect
  3598 ;;       _getTemp_Safe
  3599 ;;         _TempPointSelect
  3600 ;;       _setPowerFault_ERROR
  3601 ;;         _PowerFaultPointSelect
  3602 ;;         _setDimmer_PFERROR
  3603 ;;           _DimmerPointSelect
  3604 ;;         _DimmerLights_ERROR
  3605 ;;           _getDimmer_TempERROR
  3606 ;;             _DimmerPointSelect
  3607 ;;           _getDimmerLights_StatusFlag
  3608 ;;             _DimmerLightsPointSelect
  3609 ;;           _setBuz
  3610 ;;             _BuzPointSelect
  3611 ;;             ___awdiv
  3612 ;;           _setDimmerLights_ERROR
  3613 ;;             _DimmerLightsPointSelect
  3614 ;;             _setLoad_StatusOff
  3615 ;;               _LoadPointSelect
  3616 ;;             _setLED
  3617 ;;               _LedPointSelect
  3618 ;;             _setSw_Status
  3619 ;;               _SwPointSelect
  3620 ;;             _setRFSW_Status
  3621 ;;               _RfSWPointSelect
  3622 ;;           _getDimmer_LoadERROR
  3623 ;;             _DimmerPointSelect
  3624 ;;           _getDimmer_PFERROR
  3625 ;;             _DimmerPointSelect
  3626 ;;           _setDimmerLights_TriggerERROR
  3627 ;;             _DimmerLightsPointSelect
  3628 ;;         _setLED
  3629 ;;           _LedPointSelect
  3630 ;;         _setSw_Enable
  3631 ;;           _SwPointSelect
  3632 ;;         _setRF_Enable
  3633 ;;           _RfPointSelect
  3634 ;;           _CC2500_WriteCommand
  3635 ;;             _CC2500_WriteByte
  3636 ;;           _RF_RxDisable
  3637 ;;             _RfPointSelect
  3638 ;;             _CC2500_WriteCommand
  3639 ;;               _CC2500_WriteByte
  3640 ;;             _setINT_GO
  3641 ;;   _DimmerLights_Main
  3642 ;;     _setDimmerLights_Main
  3643 ;;       _DimmerLightsPointSelect
  3644 ;;       _setDimmerLights_Open
  3645 ;;         _DimmerLightsPointSelect
  3646 ;;       _setDimmerLights_Close
  3647 ;;         _DimmerLightsPointSelect
  3648 ;;       _setDimmerLights
  3649 ;;         _DimmerLightsPointSelect
  3650 ;;         _setLED
  3651 ;;           _LedPointSelect
  3652 ;;         _setLoad_StatusOn
  3653 ;;           _LoadPointSelect
  3654 ;;         _setLoad_Count
  3655 ;;         _setDimmer_Detect
  3656 ;;           _DimmerPointSelect
  3657 ;;         _setLoad_GO
  3658 ;;           _LoadPointSelect
  3659 ;;         _setLoad_LightsStatus
  3660 ;;           _LoadPointSelect
  3661 ;;       _getDimmerLights_Trigger
  3662 ;;         _DimmerLightsPointSelect
  3663 ;;       _setDimmerLights_Adj
  3664 ;;         _DimmerLightsPointSelect
  3665 ;;         _setLoad_StatusOff
  3666 ;;           _LoadPointSelect
  3667 ;;         _setRF_DimmerLights
  3668 ;;         _setTxData
  3669 ;;           _RfPointSelect
  3670 ;;         _setPercentValue
  3671 ;;           ___ftdiv
  3672 ;;             ___ftpack
  3673 ;;             ___awtoft (ARG)
  3674 ;;               ___ftpack
  3675 ;;               ___fttol (ARG)
  3676 ;;                 ___ftpack (ARG)
  3677 ;;             ___fttol (ARG)
  3678 ;;               ___ftpack (ARG)
  3679 ;;           ___awtoft
  3680 ;;             ___ftpack
  3681 ;;             ___fttol (ARG)
  3682 ;;               ___ftpack (ARG)
  3683 ;;           ___fttol
  3684 ;;             ___ftpack (ARG)
  3685 ;;       _setBuz
  3686 ;;         _BuzPointSelect
  3687 ;;         ___awdiv
  3688 ;;     _DimmerLights_Close
  3689 ;;       _getDimmer_Detect
  3690 ;;         _DimmerPointSelect
  3691 ;;       _setDimmer_Detect
  3692 ;;         _DimmerPointSelect
  3693 ;;       _getDimmerLights_StatusFlag
  3694 ;;         _DimmerLightsPointSelect
  3695 ;;       _setLoad_GO
  3696 ;;         _LoadPointSelect
  3697 ;;   _Switch_Main
  3698 ;;     _setSw_Main
  3699 ;;       _SwPointSelect
  3700 ;;       _Sw_OnFunc
  3701 ;;         _setBuz
  3702 ;;           _BuzPointSelect
  3703 ;;           ___awdiv
  3704 ;;         _setRFSW_Status
  3705 ;;           _RfSWPointSelect
  3706 ;;         _setDimmerLights_Trigger
  3707 ;;           _DimmerLightsPointSelect
  3708 ;;         _setDimmerLights_Switch
  3709 ;;           _DimmerLightsPointSelect
  3710 ;;         _setRF_DimmerLights
  3711 ;;         _setTxData
  3712 ;;           _RfPointSelect
  3713 ;;       _Sw_AdjFunc
  3714 ;;         _setRFSW_Status
  3715 ;;           _RfSWPointSelect
  3716 ;;         _setDimmerLights_TriggerAdj
  3717 ;;           _DimmerLightsPointSelect
  3718 ;;         _setDimmerLights_AdjGo
  3719 ;;           _DimmerLightsPointSelect
  3720 ;;       _setRF_Learn
  3721 ;;         _RfPointSelect
  3722 ;;       _setBuz
  3723 ;;         _BuzPointSelect
  3724 ;;         ___awdiv
  3725 ;;       _Sw_OffFunc
  3726 ;;         _setDimmerLights_TriggerAdj
  3727 ;;           _DimmerLightsPointSelect
  3728 ;;         _setDimmerLights_AdjGo
  3729 ;;           _DimmerLightsPointSelect
  3730 ;;         _setRF_DimmerLights
  3731 ;;         _setTxData
  3732 ;;           _RfPointSelect
  3733 ;;         _setDimmerLights_Trigger
  3734 ;;           _DimmerLightsPointSelect
  3735 ;;         _setDimmerLights_Switch
  3736 ;;           _DimmerLightsPointSelect
  3737 ;;         _setDelayOff_GO
  3738 ;;           _DelayOffPointSelect
  3739 ;;           _DelayTimejudge
  3740 ;;   _RF_Main
  3741 ;;     _setRF_Main
  3742 ;;       _RfPointSelect
  3743 ;;       _RF_RxDisable
  3744 ;;         _RfPointSelect
  3745 ;;         _CC2500_WriteCommand
  3746 ;;           _CC2500_WriteByte
  3747 ;;         _setINT_GO
  3748 ;;       _CC2500_RxData
  3749 ;;         _CC2500_ReadStatus
  3750 ;;           _CC2500_WriteByte
  3751 ;;           _CC2500_ReadByte
  3752 ;;         _CC2500_WriteByte
  3753 ;;         _CC2500_ReadByte
  3754 ;;         _CC2500_WriteCommand
  3755 ;;           _CC2500_WriteByte
  3756 ;;         _setRF_RxStatus
  3757 ;;           _RfPointSelect
  3758 ;;       _getRxData
  3759 ;;         _RfPointSelect
  3760 ;;         _setLog_Code
  3761 ;;           _RfPointSelect
  3762 ;;           _setBuz
  3763 ;;             _BuzPointSelect
  3764 ;;             ___awdiv
  3765 ;;         _setControl_Lights_Table
  3766 ;;           _RfPointSelect
  3767 ;;           _setDimmerLights
  3768 ;;             _DimmerLightsPointSelect
  3769 ;;             _setLED
  3770 ;;               _LedPointSelect
  3771 ;;             _setLoad_StatusOn
  3772 ;;               _LoadPointSelect
  3773 ;;             _setLoad_Count
  3774 ;;             _setDimmer_Detect
  3775 ;;               _DimmerPointSelect
  3776 ;;             _setLoad_GO
  3777 ;;               _LoadPointSelect
  3778 ;;             _setLoad_LightsStatus
  3779 ;;               _LoadPointSelect
  3780 ;;           _setRFSW_Status
  3781 ;;             _RfSWPointSelect
  3782 ;;           _setSw_Status
  3783 ;;             _SwPointSelect
  3784 ;;           _setBuz
  3785 ;;             _BuzPointSelect
  3786 ;;             ___awdiv
  3787 ;;           _setTxData
  3788 ;;             _RfPointSelect
  3789 ;;           _setRFSW_Control
  3790 ;;             _RfSWPointSelect
  3791 ;;             _setDelayOff_GO
  3792 ;;               _DelayOffPointSelect
  3793 ;;               _DelayTimejudge
  3794 ;;             _setSw_Status
  3795 ;;               _SwPointSelect
  3796 ;;             _setDimmerLights_Trigger
  3797 ;;               _DimmerLightsPointSelect
  3798 ;;             _setDimmerLights_Switch
  3799 ;;               _DimmerLightsPointSelect
  3800 ;;             _setRF_DimmerLights
  3801 ;;             _setBuz
  3802 ;;               _BuzPointSelect
  3803 ;;               ___awdiv
  3804 ;;             _setTxData
  3805 ;;               _RfPointSelect
  3806 ;;           _setRFSW_AdjControl
  3807 ;;             _RfSWPointSelect
  3808 ;;             _setRF_DimmerValue
  3809 ;;               _setDimmerLights_AdjRF
  3810 ;;                 _DimmerLightsPointSelect
  3811 ;;                 _getPercentValue
  3812 ;;                   ___ftdiv
  3813 ;;                     ___ftpack
  3814 ;;                     ___awtoft (ARG)
  3815 ;;                       ___ftpack
  3816 ;;                       ___fttol (ARG)
  3817 ;;                         ___ftpack (ARG)
  3818 ;;                     ___fttol (ARG)
  3819 ;;                       ___ftpack (ARG)
  3820 ;;                   ___awtoft
  3821 ;;                     ___ftpack
  3822 ;;                     ___fttol (ARG)
  3823 ;;                       ___ftpack (ARG)
  3824 ;;                   ___ftmul
  3825 ;;                     ___ftpack
  3826 ;;                     ___awtoft (ARG)
  3827 ;;                       ___ftpack
  3828 ;;                       ___fttol (ARG)
  3829 ;;                         ___ftpack (ARG)
  3830 ;;                     ___fttol (ARG)
  3831 ;;                       ___ftpack (ARG)
  3832 ;;                   ___ftadd
  3833 ;;                     ___ftpack
  3834 ;;                     ___ftmul (ARG)
  3835 ;;                       ___ftpack
  3836 ;;                       ___awtoft (ARG)
  3837 ;;                         ___ftpack
  3838 ;;                         ___fttol (ARG)
  3839 ;;                           ___ftpack (ARG)
  3840 ;;                       ___fttol (ARG)
  3841 ;;                         ___ftpack (ARG)
  3842 ;;                     ___awtoft (ARG)
  3843 ;;                       ___ftpack
  3844 ;;                       ___fttol (ARG)
  3845 ;;                         ___ftpack (ARG)
  3846 ;;                     ___fttol (ARG)
  3847 ;;                       ___ftpack (ARG)
  3848 ;;                   ___fttol
  3849 ;;                     ___ftpack (ARG)
  3850 ;;             _setTxData
  3851 ;;               _RfPointSelect
  3852 ;;       _CC2500_TxData
  3853 ;;         _CC2500_WriteByte
  3854 ;;         _CC2500_WriteCommand
  3855 ;;           _CC2500_WriteByte
  3856 ;;       _CC2500_WriteCommand
  3857 ;;         _CC2500_WriteByte
  3858 ;;       _setINT_GO
  3859 ;;   _DelayOff_Main
  3860 ;;     _DlyOff_Main
  3861 ;;       _DelayOffPointSelect
  3862 ;;       _setSw_Status
  3863 ;;         _SwPointSelect
  3864 ;;       _setRFSW_Status
  3865 ;;         _RfSWPointSelect
  3866 ;;       _setRF_DimmerLights
  3867 ;;       _setDimmerLights_Trigger
  3868 ;;         _DimmerLightsPointSelect
  3869 ;;       _setDimmerLights_Switch
  3870 ;;         _DimmerLightsPointSelect
  3871 ;;       _setTxData
  3872 ;;         _RfPointSelect
  3873 ;;       _setBuz
  3874 ;;         _BuzPointSelect
  3875 ;;         ___awdiv
  3876 ;;
  3877 ;; _ISR (ROOT)
  3878 ;;   _IOC_ISR
  3879 ;;     _setDimmerReClock
  3880 ;;   _TMR0_ISR
  3881 ;;     i1_setLoad_StatusOff
  3882 ;;       i1_LoadPointSelect
  3883 ;;   _INT_ISR
  3884 ;;     _setRF_ReceiveGO
  3885 ;;       i1_RfPointSelect
  3886 ;;
  3887                           
  3888 ;; Address spaces:
  3889                           
  3890 ;;Name               Size   Autos  Total    Cost      Usage
  3891 ;;BIGRAM             3F0      0       0       0        0.0%
  3892 ;;NULL                 0      0       0       0        0.0%
  3893 ;;CODE                 0      0       0       0        0.0%
  3894 ;;BITCOMMON            E      0       1       1        7.1%
  3895 ;;BITSFR0              0      0       0       1        0.0%
  3896 ;;SFR0                 0      0       0       1        0.0%
  3897 ;;COMMON               E      A       E       2      100.0%
  3898 ;;BITSFR1              0      0       0       2        0.0%
  3899 ;;SFR1                 0      0       0       2        0.0%
  3900 ;;BITSFR2              0      0       0       3        0.0%
  3901 ;;SFR2                 0      0       0       3        0.0%
  3902 ;;STACK                0      0      12       3        0.0%
  3903 ;;BITBANK0            50      0       0       4        0.0%
  3904 ;;BITSFR3              0      0       0       4        0.0%
  3905 ;;SFR3                 0      0       0       4        0.0%
  3906 ;;BANK0               50     4D      50       5      100.0%
  3907 ;;BITSFR4              0      0       0       5        0.0%
  3908 ;;SFR4                 0      0       0       5        0.0%
  3909 ;;BITBANK1            50      0       0       6        0.0%
  3910 ;;BITSFR5              0      0       0       6        0.0%
  3911 ;;SFR5                 0      0       0       6        0.0%
  3912 ;;BANK1               50      0      50       7      100.0%
  3913 ;;BITSFR6              0      0       0       7        0.0%
  3914 ;;SFR6                 0      0       0       7        0.0%
  3915 ;;BITBANK2            50      0       0       8        0.0%
  3916 ;;BITSFR7              0      0       0       8        0.0%
  3917 ;;SFR7                 0      0       0       8        0.0%
  3918 ;;BANK2               50      0      3D       9       76.3%
  3919 ;;BITSFR8              0      0       0       9        0.0%
  3920 ;;SFR8                 0      0       0       9        0.0%
  3921 ;;BITBANK3            50      0       0      10        0.0%
  3922 ;;BITSFR9              0      0       0      10        0.0%
  3923 ;;SFR9                 0      0       0      10        0.0%
  3924 ;;BANK3               50      0      43      11       83.8%
  3925 ;;BITSFR10             0      0       0      11        0.0%
  3926 ;;SFR10                0      0       0      11        0.0%
  3927 ;;BITBANK4            50      0       0      12        0.0%
  3928 ;;BITSFR11             0      0       0      12        0.0%
  3929 ;;SFR11                0      0       0      12        0.0%
  3930 ;;BANK4               50      0      47      13       88.8%
  3931 ;;BITSFR12             0      0       0      13        0.0%
  3932 ;;SFR12                0      0       0      13        0.0%
  3933 ;;BITBANK5            50      0       0      14        0.0%
  3934 ;;BITSFR13             0      0       0      14        0.0%
  3935 ;;SFR13                0      0       0      14        0.0%
  3936 ;;BANK5               50      0       0      15        0.0%
  3937 ;;BITSFR14             0      0       0      15        0.0%
  3938 ;;SFR14                0      0       0      15        0.0%
  3939 ;;BITBANK6            50      0       0      16        0.0%
  3940 ;;BITSFR15             0      0       0      16        0.0%
  3941 ;;SFR15                0      0       0      16        0.0%
  3942 ;;BANK6               50      0       0      17        0.0%
  3943 ;;BITSFR16             0      0       0      17        0.0%
  3944 ;;SFR16                0      0       0      17        0.0%
  3945 ;;BITBANK7            50      0       0      18        0.0%
  3946 ;;BITSFR17             0      0       0      18        0.0%
  3947 ;;SFR17                0      0       0      18        0.0%
  3948 ;;BANK7               50      0       0      19        0.0%
  3949 ;;BITSFR18             0      0       0      19        0.0%
  3950 ;;SFR18                0      0       0      19        0.0%
  3951 ;;BITSFR19             0      0       0      20        0.0%
  3952 ;;SFR19                0      0       0      20        0.0%
  3953 ;;ABS                  0      0     175      20        0.0%
  3954 ;;BITBANK8            50      0       0      21        0.0%
  3955 ;;BITSFR20             0      0       0      21        0.0%
  3956 ;;SFR20                0      0       0      21        0.0%
  3957 ;;BANK8               50      0       0      22        0.0%
  3958 ;;BITSFR21             0      0       0      22        0.0%
  3959 ;;SFR21                0      0       0      22        0.0%
  3960 ;;BITBANK9            50      0       0      23        0.0%
  3961 ;;BITSFR22             0      0       0      23        0.0%
  3962 ;;SFR22                0      0       0      23        0.0%
  3963 ;;BANK9               50      0       0      24        0.0%
  3964 ;;BITSFR23             0      0       0      24        0.0%
  3965 ;;SFR23                0      0       0      24        0.0%
  3966 ;;BITBANK10           50      0       0      25        0.0%
  3967 ;;BITSFR24             0      0       0      25        0.0%
  3968 ;;SFR24                0      0       0      25        0.0%
  3969 ;;BANK10              50      0       0      26        0.0%
  3970 ;;BITSFR25             0      0       0      26        0.0%
  3971 ;;SFR25                0      0       0      26        0.0%
  3972 ;;BITBANK11           50      0       0      27        0.0%
  3973 ;;BITSFR26             0      0       0      27        0.0%
  3974 ;;SFR26                0      0       0      27        0.0%
  3975 ;;BANK11              50      0       0      28        0.0%
  3976 ;;BITSFR27             0      0       0      28        0.0%
  3977 ;;SFR27                0      0       0      28        0.0%
  3978 ;;BITBANK12           30      0       0      29        0.0%
  3979 ;;BITSFR28             0      0       0      29        0.0%
  3980 ;;SFR28                0      0       0      29        0.0%
  3981 ;;BANK12              30      0       0      30        0.0%
  3982 ;;BITSFR29             0      0       0      30        0.0%
  3983 ;;SFR29                0      0       0      30        0.0%
  3984 ;;BITSFR30             0      0       0      31        0.0%
  3985 ;;SFR30                0      0       0      31        0.0%
  3986 ;;DATA                 0      0     187      31        0.0%
  3987 ;;BITSFR31             0      0       0      32        0.0%
  3988 ;;SFR31                0      0       0      32        0.0%
  3989                           
  3990                           	global	_main
  3991                           psect	maintext,global,class=CODE,delta=2
  3992                           global __pmaintext
  3993  14ED                     __pmaintext:
  3994                           
  3995 ;; *************** function _main *****************
  3996 ;; Defined at:
  3997 ;;		line 7 in file "G:\Program\PIC\Source_File\main.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;		None
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 17F/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4015 ;;Total ram usage:        1 bytes
  4016 ;; Hardware stack levels required when called:   14
  4017 ;; This function calls:
  4018 ;;		_MainT_Initialization
  4019 ;;		_Mcu_Initialization
  4020 ;;		_Flash_Memory_Initialization
  4021 ;;		_LED_Initialization
  4022 ;;		_Buzzer_Initialization
  4023 ;;		_Temp_Initialization
  4024 ;;		_Load_Initialization
  4025 ;;		_PowerFault_Initialization
  4026 ;;		_DelayOff_Initialization
  4027 ;;		_DimmerLights_Initialization
  4028 ;;		_Switch_Initialization
  4029 ;;		_RF_Initialization
  4030 ;;		_CC2500_PowerOnInitial
  4031 ;;		_getLoad_AD
  4032 ;;		_getTemp_AD
  4033 ;;		_getPowerFault_AD
  4034 ;;		_MainT
  4035 ;;		_Flash_Memory_Main
  4036 ;;		_Buzzer_Main
  4037 ;;		_LED_Main
  4038 ;;		_Temp_Main
  4039 ;;		_Load_Main
  4040 ;;		_PowerFault_Main
  4041 ;;		_DimmerLights_Main
  4042 ;;		_Switch_Main
  4043 ;;		_RF_Main
  4044 ;;		_DelayOff_Main
  4045 ;; This function is called by:
  4046 ;;		Startup code after reset
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           psect	maintext
  4050                           	file	"G:\Program\PIC\Source_File\main.c"
  4051                           	line	7
  4052                           	global	__size_of_main
  4053  008B                     	__size_of_main	equ	__end_of_main-_main
  4054                           	
  4055  14ED                     _main:	
  4056                           	opt	stack 2
  4057                           ; Regs used in _main: [allreg]
  4058                           	line	8
  4059                           	
  4060  14ED                     l24963:	
  4061                           ;main.c: 8: MainT_Initialization();
  4062  14ED  31A2  2252  3194   	fcall	_MainT_Initialization
  4063                           	line	9
  4064                           ;main.c: 9: Mcu_Initialization();
  4065  14F0  31A2  2297  3194   	fcall	_Mcu_Initialization
  4066                           	line	10
  4067                           ;main.c: 10: Flash_Memory_Initialization();
  4068  14F3  3188  20B1  3194   	fcall	_Flash_Memory_Initialization
  4069                           	line	11
  4070                           ;main.c: 11: LED_Initialization();
  4071  14F6  31AF  2775  3194   	fcall	_LED_Initialization
  4072                           	line	12
  4073                           ;main.c: 12: Buzzer_Initialization();
  4074  14F9  31AE  26A2  3194   	fcall	_Buzzer_Initialization
  4075                           	line	15
  4076                           ;main.c: 14: ;;
  4077                           ;main.c: 15: Temp_Initialization();
  4078  14FC  31AE  2693  3194   	fcall	_Temp_Initialization
  4079                           	line	16
  4080                           ;main.c: 16: Load_Initialization();
  4081  14FF  31AE  2698  3194   	fcall	_Load_Initialization
  4082                           	line	17
  4083                           ;main.c: 17: PowerFault_Initialization();
  4084  1502  31AE  269D  3194   	fcall	_PowerFault_Initialization
  4085                           	line	18
  4086                           ;main.c: 18: DelayOff_Initialization();
  4087  1505  31AE  268E  3194   	fcall	_DelayOff_Initialization
  4088                           	line	21
  4089                           ;main.c: 21: DimmerLights_Initialization();
  4090  1508  31AF  2720  3194   	fcall	_DimmerLights_Initialization
  4091                           	line	26
  4092                           ;main.c: 22: ;;
  4093                           ;main.c: 23: ;;
  4094                           ;main.c: 24: ;;
  4095                           ;main.c: 26: Switch_Initialization();
  4096  150B  31AF  2716  3194   	fcall	_Switch_Initialization
  4097                           	line	27
  4098                           	
  4099  150E                     l24965:	
  4100                           ;main.c: 27: RF_Initialization();
  4101  150E  31AE  2675  3194   	fcall	_RF_Initialization
  4102                           	line	28
  4103                           	
  4104  1511                     l24967:	
  4105                           ;main.c: 28: CC2500_PowerOnInitial();
  4106  1511  31A2  2268  3194   	fcall	_CC2500_PowerOnInitial
  4107  1514  2D15               	goto	l24969
  4108                           	line	30
  4109                           ;main.c: 30: while(1)
  4110                           	
  4111  1515                     l7141:	
  4112                           	line	32
  4113                           	
  4114  1515                     l24969:	
  4115                           ;main.c: 31: {
  4116                           ;main.c: 32: if(TMain->PowerON)
  4117  1515  0021               	movlb 1	; select bank1
  4118  1516  086E               	movf	(_TMain)^080h,w
  4119  1517  0086               	movwf	fsr1l
  4120  1518  3001               	movlw 1	; select bank2/3
  4121  1519  0087               	movwf fsr1h	
  4122                           	
  4123  151A  1C01               	btfss	indf1,0
  4124  151B  2D1D               	goto	u9091
  4125  151C  2D1E               	goto	u9090
  4126  151D                     u9091:
  4127  151D  2D3A               	goto	l24973
  4128  151E                     u9090:
  4129                           	line	39
  4130                           	
  4131  151E                     l24971:	
  4132                           ;main.c: 33: {
  4133                           ;main.c: 35: ;;
  4134                           ;main.c: 39: getLoad_AD(1,0x05);
  4135  151E  3005               	movlw	(05h)
  4136  151F  0020               	movlb 0	; select bank0
  4137  1520  00EC               	movwf	(??_main+0)+0
  4138  1521  086C               	movf	(??_main+0)+0,w
  4139  1522  00A7               	movwf	(?_getLoad_AD)
  4140  1523  3001               	movlw	(01h)
  4141  1524  318A  22D6  3194   	fcall	_getLoad_AD
  4142                           	line	43
  4143                           ;main.c: 43: getTemp_AD(1,0x09);
  4144  1527  3009               	movlw	(09h)
  4145  1528  0020               	movlb 0	; select bank0
  4146  1529  00EC               	movwf	(??_main+0)+0
  4147  152A  086C               	movf	(??_main+0)+0,w
  4148  152B  00A7               	movwf	(?_getTemp_AD)
  4149  152C  3001               	movlw	(01h)
  4150  152D  3192  22D9  3194   	fcall	_getTemp_AD
  4151                           	line	47
  4152                           ;main.c: 47: getPowerFault_AD(1,0x11);
  4153  1530  3011               	movlw	(011h)
  4154  1531  0020               	movlb 0	; select bank0
  4155  1532  00EC               	movwf	(??_main+0)+0
  4156  1533  086C               	movf	(??_main+0)+0,w
  4157  1534  00A7               	movwf	(?_getPowerFault_AD)
  4158  1535  3001               	movlw	(01h)
  4159  1536  319B  23B8  3194   	fcall	_getPowerFault_AD
  4160  1539  2D3A               	goto	l24973
  4161                           	line	57
  4162                           	
  4163  153A                     l7142:	
  4164                           	line	59
  4165                           	
  4166  153A                     l24973:	
  4167                           ;main.c: 57: }
  4168                           ;main.c: 59: if(TMain->T0_Timerout)
  4169  153A  0021               	movlb 1	; select bank1
  4170  153B  086E               	movf	(_TMain)^080h,w
  4171  153C  0086               	movwf	fsr1l
  4172  153D  3001               	movlw 1	; select bank2/3
  4173  153E  0087               	movwf fsr1h	
  4174                           	
  4175  153F  1C81               	btfss	indf1,1
  4176  1540  2D42               	goto	u9101
  4177  1541  2D43               	goto	u9100
  4178  1542                     u9101:
  4179  1542  2D15               	goto	l24969
  4180  1543                     u9100:
  4181                           	line	61
  4182                           	
  4183  1543                     l24975:	
  4184                           ;main.c: 60: {
  4185                           ;main.c: 61: TMain->T0_Timerout = 0;
  4186  1543  086E               	movf	(_TMain)^080h,w
  4187  1544  0086               	movwf	fsr1l
  4188  1545  3001               	movlw 1	; select bank2/3
  4189  1546  0087               	movwf fsr1h	
  4190                           	
  4191  1547  1081               	bcf	indf1,1
  4192                           	line	62
  4193                           	
  4194  1548                     l24977:	
  4195                           ;main.c: 62: MainT();
  4196  1548  3190  2000  3194   	fcall	_MainT
  4197                           	line	63
  4198                           	
  4199  154B                     l24979:	
  4200                           ;main.c: 63: if(TMain->PowerON)
  4201  154B  0021               	movlb 1	; select bank1
  4202  154C  086E               	movf	(_TMain)^080h,w
  4203  154D  0086               	movwf	fsr1l
  4204  154E  3001               	movlw 1	; select bank2/3
  4205  154F  0087               	movwf fsr1h	
  4206                           	
  4207  1550  1C01               	btfss	indf1,0
  4208  1551  2D53               	goto	u9111
  4209  1552  2D54               	goto	u9110
  4210  1553                     u9111:
  4211  1553  2D15               	goto	l24969
  4212  1554                     u9110:
  4213                           	line	65
  4214                           	
  4215  1554                     l24981:	
  4216                           ;main.c: 64: {
  4217                           ;main.c: 65: Flash_Memory_Main();
  4218  1554  319A  22C1  3194   	fcall	_Flash_Memory_Main
  4219                           	line	66
  4220                           ;main.c: 66: Buzzer_Main();
  4221  1557  31AE  267A  3194   	fcall	_Buzzer_Main
  4222                           	line	67
  4223                           ;main.c: 67: LED_Main();
  4224  155A  31AF  275B  3194   	fcall	_LED_Main
  4225                           	line	70
  4226                           ;main.c: 69: ;;
  4227                           ;main.c: 70: Temp_Main();
  4228  155D  31AE  26B1  3194   	fcall	_Temp_Main
  4229                           	line	71
  4230                           	
  4231  1560                     l24983:	
  4232                           ;main.c: 71: Load_Main();
  4233  1560  31AE  26B6  3194   	fcall	_Load_Main
  4234                           	line	72
  4235                           	
  4236  1563                     l24985:	
  4237                           ;main.c: 72: PowerFault_Main();
  4238  1563  31AE  26BB  3194   	fcall	_PowerFault_Main
  4239                           	line	75
  4240                           	
  4241  1566                     l24987:	
  4242                           ;main.c: 74: ;;
  4243                           ;main.c: 75: DimmerLights_Main();
  4244  1566  31AE  26E0  3194   	fcall	_DimmerLights_Main
  4245                           	line	76
  4246                           	
  4247  1569                     l24989:	
  4248                           ;main.c: 76: Switch_Main();
  4249  1569  31AE  26AC  3194   	fcall	_Switch_Main
  4250                           	line	80
  4251                           	
  4252  156C                     l24991:	
  4253                           ;main.c: 77: ;;
  4254                           ;main.c: 78: ;;
  4255                           ;main.c: 80: RF_Main();
  4256  156C  3188  2000  3194   	fcall	_RF_Main
  4257                           	line	81
  4258                           	
  4259  156F                     l24993:	
  4260                           ;main.c: 81: DelayOff_Main();
  4261  156F  31AE  26A7  3194   	fcall	_DelayOff_Main
  4262  1572  2D15               	goto	l24969
  4263                           	line	82
  4264                           	
  4265  1573                     l7144:	
  4266  1573  2D15               	goto	l24969
  4267                           	line	83
  4268                           	
  4269  1574                     l7143:	
  4270  1574  2D15               	goto	l24969
  4271                           	line	84
  4272                           	
  4273  1575                     l7145:	
  4274                           	line	30
  4275  1575  2D15               	goto	l24969
  4276                           	
  4277  1576                     l7146:	
  4278                           	line	85
  4279                           	
  4280  1576                     l7147:	
  4281                           	global	start
  4282  1576  3180  2815         	ljmp	start
  4283                           	opt stack 0
  4284                           GLOBAL	__end_of_main
  4285  1578                     	__end_of_main:
  4286 ;; =============== function _main ends ============
  4287                           
  4288                           	signat	_main,88
  4289                           	global	_RF_Main
  4290                           psect	text3222,local,class=CODE,delta=2
  4291                           global __ptext3222
  4292  0800                     __ptext3222:
  4293                           
  4294 ;; *************** function _RF_Main *****************
  4295 ;; Defined at:
  4296 ;;		line 25 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:   13
  4317 ;; This function calls:
  4318 ;;		_setRF_Main
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           psect	text3222
  4324                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4325                           	line	25
  4326                           	global	__size_of_RF_Main
  4327  0005                     	__size_of_RF_Main	equ	__end_of_RF_Main-_RF_Main
  4328                           	
  4329  0800                     _RF_Main:	
  4330                           	opt	stack 2
  4331                           ; Regs used in _RF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4332                           	line	27
  4333                           	
  4334  0800                     l24961:	
  4335                           ;RF_Control_B1.c: 27: setRF_Main(1);
  4336  0800  3001               	movlw	(01h)
  4337  0801  318A  221E  3188   	fcall	_setRF_Main
  4338                           	line	29
  4339                           	
  4340  0804                     l13111:	
  4341  0804  0008               	return
  4342                           	opt stack 0
  4343                           GLOBAL	__end_of_RF_Main
  4344  0805                     	__end_of_RF_Main:
  4345 ;; =============== function _RF_Main ends ============
  4346                           
  4347                           	signat	_RF_Main,88
  4348                           	global	_setRF_Main
  4349                           psect	text3223,local,class=CODE,delta=2
  4350                           global __ptext3223
  4351  0A1E                     __ptext3223:
  4352                           
  4353 ;; *************** function _setRF_Main *****************
  4354 ;; Defined at:
  4355 ;;		line 59 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  rf              1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  rf              1   74[BANK0 ] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;		None               void
  4362 ;; Registers used:
  4363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4370 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  4371 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4372 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  4373 ;;Total ram usage:        3 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:   12
  4376 ;; This function calls:
  4377 ;;		_RfPointSelect
  4378 ;;		_RF_RxDisable
  4379 ;;		_CC2500_RxData
  4380 ;;		_getRxData
  4381 ;;		_CC2500_TxData
  4382 ;;		_CC2500_WriteCommand
  4383 ;;		_setINT_GO
  4384 ;; This function is called by:
  4385 ;;		_RF_Main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           psect	text3223
  4389                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4390                           	line	59
  4391                           	global	__size_of_setRF_Main
  4392  00B8                     	__size_of_setRF_Main	equ	__end_of_setRF_Main-_setRF_Main
  4393                           	
  4394  0A1E                     _setRF_Main:	
  4395                           	opt	stack 2
  4396                           ; Regs used in _setRF_Main: [wreg+fsr1l-status,0+pclath+cstack]
  4397                           ;setRF_Main@rf stored from wreg
  4398  0A1E  0020               	movlb 0	; select bank0
  4399  0A1F  00EA               	movwf	(setRF_Main@rf)
  4400                           	line	60
  4401                           	
  4402  0A20                     l24905:	
  4403                           ;RF_Control_B1.c: 60: RfPointSelect(rf);
  4404  0A20  086A               	movf	(setRF_Main@rf),w
  4405  0A21  31A0  2034  318A   	fcall	_RfPointSelect
  4406                           	line	61
  4407                           	
  4408  0A24                     l24907:	
  4409                           ;RF_Control_B1.c: 61: if(RF->Enable)
  4410  0A24  0021               	movlb 1	; select bank1
  4411  0A25  083E               	movf	(_RF)^080h,w
  4412  0A26  0086               	movwf	fsr1l
  4413  0A27  0187               	clrf fsr1h	
  4414                           	
  4415  0A28  1C01               	btfss	indf1,0
  4416  0A29  2A2B               	goto	u8971
  4417  0A2A  2A2C               	goto	u8970
  4418  0A2B                     u8971:
  4419  0A2B  2AD5               	goto	l13139
  4420  0A2C                     u8970:
  4421                           	line	72
  4422                           	
  4423  0A2C                     l24909:	
  4424                           ;RF_Control_B1.c: 62: {
  4425                           ;RF_Control_B1.c: 72: RF->Key=((RA0 || RB1 || RA6 || RA4) && RF->Learn == 0)?1:0;
  4426  0A2C  0020               	movlb 0	; select bank0
  4427  0A2D  01EB               	clrf	(_setRF_Main$16636)
  4428  0A2E  180C               	btfsc	(96/8),(96)&7
  4429  0A2F  2A31               	goto	u8981
  4430  0A30  2A32               	goto	u8980
  4431  0A31                     u8981:
  4432  0A31  2A3F               	goto	l24917
  4433  0A32                     u8980:
  4434                           	
  4435  0A32                     l24911:	
  4436  0A32  188D               	btfsc	(105/8),(105)&7
  4437  0A33  2A35               	goto	u8991
  4438  0A34  2A36               	goto	u8990
  4439  0A35                     u8991:
  4440  0A35  2A3F               	goto	l24917
  4441  0A36                     u8990:
  4442                           	
  4443  0A36                     l24913:	
  4444  0A36  1B0C               	btfsc	(102/8),(102)&7
  4445  0A37  2A39               	goto	u9001
  4446  0A38  2A3A               	goto	u9000
  4447  0A39                     u9001:
  4448  0A39  2A3F               	goto	l24917
  4449  0A3A                     u9000:
  4450                           	
  4451  0A3A                     l24915:	
  4452  0A3A  1E0C               	btfss	(100/8),(100)&7
  4453  0A3B  2A3D               	goto	u9011
  4454  0A3C  2A3E               	goto	u9010
  4455  0A3D                     u9011:
  4456  0A3D  2A4C               	goto	l24921
  4457  0A3E                     u9010:
  4458  0A3E  2A3F               	goto	l24917
  4459                           	
  4460  0A3F                     l22419:	
  4461                           	
  4462  0A3F                     l24917:	
  4463  0A3F  0021               	movlb 1	; select bank1
  4464  0A40  083E               	movf	(_RF)^080h,w
  4465  0A41  0086               	movwf	fsr1l
  4466  0A42  0187               	clrf fsr1h	
  4467                           	
  4468  0A43  1B01               	btfsc	indf1,6
  4469  0A44  2A46               	goto	u9021
  4470  0A45  2A47               	goto	u9020
  4471  0A46                     u9021:
  4472  0A46  2A4C               	goto	l24921
  4473  0A47                     u9020:
  4474                           	
  4475  0A47                     l24919:	
  4476  0A47  0020               	movlb 0	; select bank0
  4477  0A48  01EB               	clrf	(_setRF_Main$16636)
  4478  0A49  1403               	bsf	status,0
  4479  0A4A  0DEB               	rlf	(_setRF_Main$16636),f
  4480  0A4B  2A4C               	goto	l24921
  4481                           	
  4482  0A4C                     l13128:	
  4483                           	
  4484  0A4C                     l24921:	
  4485  0A4C  0021               	movlb 1	; select bank1
  4486  0A4D  083E               	movf	(_RF)^080h,w
  4487  0A4E  0086               	movwf	fsr1l
  4488  0A4F  0187               	clrf fsr1h	
  4489                           	
  4490  0A50  0020               	movlb 0	; select bank0
  4491  0A51  086B               	movf	(_setRF_Main$16636),w
  4492  0A52  1381               	bcf	indf1,7
  4493  0A53  1D03               	skipz
  4494  0A54  1781               	bsf	indf1,7
  4495                           	line	75
  4496                           	
  4497  0A55                     l24923:	
  4498                           ;RF_Control_B1.c: 75: if(RF->Key)
  4499  0A55  0021               	movlb 1	; select bank1
  4500  0A56  083E               	movf	(_RF)^080h,w
  4501  0A57  0086               	movwf	fsr1l
  4502  0A58  0187               	clrf fsr1h	
  4503                           	
  4504  0A59  1F81               	btfss	indf1,7
  4505  0A5A  2A5C               	goto	u9031
  4506  0A5B  2A5D               	goto	u9030
  4507  0A5C                     u9031:
  4508  0A5C  2A62               	goto	l24927
  4509  0A5D                     u9030:
  4510                           	line	77
  4511                           	
  4512  0A5D                     l24925:	
  4513                           ;RF_Control_B1.c: 76: {
  4514                           ;RF_Control_B1.c: 77: RF_RxDisable(1);
  4515  0A5D  3001               	movlw	(01h)
  4516  0A5E  31A5  25FE  318A   	fcall	_RF_RxDisable
  4517                           	line	78
  4518                           ;RF_Control_B1.c: 78: }
  4519  0A61  2AD5               	goto	l13139
  4520                           	line	79
  4521                           	
  4522  0A62                     l13129:	
  4523                           	line	81
  4524                           	
  4525  0A62                     l24927:	
  4526                           ;RF_Control_B1.c: 79: else
  4527                           ;RF_Control_B1.c: 80: {
  4528                           ;RF_Control_B1.c: 81: if(RF->ReceiveGO)
  4529  0A62  0021               	movlb 1	; select bank1
  4530  0A63  083E               	movf	(_RF)^080h,w
  4531  0A64  0086               	movwf	fsr1l
  4532  0A65  0187               	clrf fsr1h	
  4533                           	
  4534  0A66  1C81               	btfss	indf1,1
  4535  0A67  2A69               	goto	u9041
  4536  0A68  2A6A               	goto	u9040
  4537  0A69                     u9041:
  4538  0A69  2A76               	goto	l24935
  4539  0A6A                     u9040:
  4540                           	line	83
  4541                           	
  4542  0A6A                     l24929:	
  4543                           ;RF_Control_B1.c: 82: {
  4544                           ;RF_Control_B1.c: 83: RF->ReceiveGO=0;
  4545  0A6A  083E               	movf	(_RF)^080h,w
  4546  0A6B  0086               	movwf	fsr1l
  4547  0A6C  0187               	clrf fsr1h	
  4548                           	
  4549  0A6D  1081               	bcf	indf1,1
  4550                           	line	84
  4551                           	
  4552  0A6E                     l24931:	
  4553                           ;RF_Control_B1.c: 84: CC2500_RxData();
  4554  0A6E  3190  20DD  318A   	fcall	_CC2500_RxData
  4555                           	line	88
  4556                           	
  4557  0A71                     l24933:	
  4558                           ;RF_Control_B1.c: 88: getRxData(1);
  4559  0A71  3001               	movlw	(01h)
  4560  0A72  319F  2719  318A   	fcall	_getRxData
  4561                           	line	91
  4562                           ;RF_Control_B1.c: 91: }
  4563  0A75  2AD5               	goto	l13139
  4564                           	line	92
  4565                           	
  4566  0A76                     l13131:	
  4567                           	line	94
  4568                           	
  4569  0A76                     l24935:	
  4570                           ;RF_Control_B1.c: 92: else
  4571                           ;RF_Control_B1.c: 93: {
  4572                           ;RF_Control_B1.c: 94: if(RF->TransceiveGO)
  4573  0A76  0021               	movlb 1	; select bank1
  4574  0A77  083E               	movf	(_RF)^080h,w
  4575  0A78  0086               	movwf	fsr1l
  4576  0A79  0187               	clrf fsr1h	
  4577                           	
  4578  0A7A  1D01               	btfss	indf1,2
  4579  0A7B  2A7D               	goto	u9051
  4580  0A7C  2A7E               	goto	u9050
  4581  0A7D                     u9051:
  4582  0A7D  2AB8               	goto	l24951
  4583  0A7E                     u9050:
  4584                           	line	96
  4585                           	
  4586  0A7E                     l24937:	
  4587                           ;RF_Control_B1.c: 95: {
  4588                           ;RF_Control_B1.c: 96: RF_RxDisable(1);
  4589  0A7E  3001               	movlw	(01h)
  4590  0A7F  31A5  25FE  318A   	fcall	_RF_RxDisable
  4591                           	line	97
  4592                           	
  4593  0A82                     l24939:	
  4594                           ;RF_Control_B1.c: 97: if(RF->Debounce == 0)
  4595  0A82  0021               	movlb 1	; select bank1
  4596  0A83  083E               	movf	(_RF)^080h,w
  4597  0A84  0086               	movwf	fsr1l
  4598  0A85  0187               	clrf fsr1h	
  4599                           	
  4600  0A86  1A81               	btfsc	indf1,5
  4601  0A87  2A89               	goto	u9061
  4602  0A88  2A8A               	goto	u9060
  4603  0A89                     u9061:
  4604  0A89  2AAB               	goto	l24947
  4605  0A8A                     u9060:
  4606                           	line	99
  4607                           	
  4608  0A8A                     l24941:	
  4609                           ;RF_Control_B1.c: 98: {
  4610                           ;RF_Control_B1.c: 99: RF->DebounceTime++;
  4611  0A8A  3001               	movlw	(01h)
  4612  0A8B  0020               	movlb 0	; select bank0
  4613  0A8C  00E9               	movwf	(??_setRF_Main+0)+0
  4614  0A8D  0021               	movlb 1	; select bank1
  4615  0A8E  083E               	movf	(_RF)^080h,w
  4616  0A8F  3E01               	addlw	01h
  4617  0A90  0086               	movwf	fsr1l
  4618  0A91  0187               	clrf fsr1h	
  4619                           	
  4620  0A92  0020               	movlb 0	; select bank0
  4621  0A93  0869               	movf	(??_setRF_Main+0)+0,w
  4622  0A94  0781               	addwf	indf1,f
  4623                           	line	100
  4624                           	
  4625  0A95                     l24943:	
  4626                           ;RF_Control_B1.c: 100: if(RF->DebounceTime == 25)
  4627  0A95  0021               	movlb 1	; select bank1
  4628  0A96  083E               	movf	(_RF)^080h,w
  4629  0A97  3E01               	addlw	01h
  4630  0A98  0086               	movwf	fsr1l
  4631  0A99  0187               	clrf fsr1h	
  4632                           	
  4633  0A9A  0801               	movf	indf1,w
  4634  0A9B  3A19               	xorlw	019h&0ffh
  4635  0A9C  1D03               	skipz
  4636  0A9D  2A9F               	goto	u9071
  4637  0A9E  2AA0               	goto	u9070
  4638  0A9F                     u9071:
  4639  0A9F  2AD5               	goto	l13139
  4640  0AA0                     u9070:
  4641                           	line	102
  4642                           	
  4643  0AA0                     l24945:	
  4644                           ;RF_Control_B1.c: 101: {
  4645                           ;RF_Control_B1.c: 102: RF->DebounceTime=0;
  4646  0AA0  083E               	movf	(_RF)^080h,w
  4647  0AA1  3E01               	addlw	01h
  4648  0AA2  0086               	movwf	fsr1l
  4649  0AA3  0187               	clrf fsr1h	
  4650                           	
  4651  0AA4  0181               	clrf	indf1
  4652                           	line	103
  4653                           ;RF_Control_B1.c: 103: RF->Debounce=1;
  4654  0AA5  083E               	movf	(_RF)^080h,w
  4655  0AA6  0086               	movwf	fsr1l
  4656  0AA7  0187               	clrf fsr1h	
  4657                           	
  4658  0AA8  1681               	bsf	indf1,5
  4659  0AA9  2AD5               	goto	l13139
  4660                           	line	104
  4661                           	
  4662  0AAA                     l13135:	
  4663                           	line	105
  4664                           ;RF_Control_B1.c: 104: }
  4665                           ;RF_Control_B1.c: 105: }
  4666  0AAA  2AD5               	goto	l13139
  4667                           	line	106
  4668                           	
  4669  0AAB                     l13134:	
  4670                           	line	108
  4671                           	
  4672  0AAB                     l24947:	
  4673                           ;RF_Control_B1.c: 106: else
  4674                           ;RF_Control_B1.c: 107: {
  4675                           ;RF_Control_B1.c: 108: RF->Debounce=0;
  4676  0AAB  083E               	movf	(_RF)^080h,w
  4677  0AAC  0086               	movwf	fsr1l
  4678  0AAD  0187               	clrf fsr1h	
  4679                           	
  4680  0AAE  1281               	bcf	indf1,5
  4681                           	line	109
  4682                           ;RF_Control_B1.c: 109: RF->TransceiveGO=0;
  4683  0AAF  083E               	movf	(_RF)^080h,w
  4684  0AB0  0086               	movwf	fsr1l
  4685  0AB1  0187               	clrf fsr1h	
  4686                           	
  4687  0AB2  1101               	bcf	indf1,2
  4688                           	line	110
  4689                           	
  4690  0AB3                     l24949:	
  4691                           ;RF_Control_B1.c: 110: CC2500_TxData();
  4692  0AB3  319B  2364  318A   	fcall	_CC2500_TxData
  4693  0AB6  2AD5               	goto	l13139
  4694                           	line	111
  4695                           	
  4696  0AB7                     l13136:	
  4697                           	line	112
  4698                           ;RF_Control_B1.c: 111: }
  4699                           ;RF_Control_B1.c: 112: }
  4700  0AB7  2AD5               	goto	l13139
  4701                           	line	113
  4702                           	
  4703  0AB8                     l13133:	
  4704                           	line	115
  4705                           	
  4706  0AB8                     l24951:	
  4707                           ;RF_Control_B1.c: 113: else
  4708                           ;RF_Control_B1.c: 114: {
  4709                           ;RF_Control_B1.c: 115: if(RF->RxStatus == 0 && 1)
  4710  0AB8  0021               	movlb 1	; select bank1
  4711  0AB9  083E               	movf	(_RF)^080h,w
  4712  0ABA  0086               	movwf	fsr1l
  4713  0ABB  0187               	clrf fsr1h	
  4714                           	
  4715  0ABC  1981               	btfsc	indf1,3
  4716  0ABD  2ABF               	goto	u9081
  4717  0ABE  2AC0               	goto	u9080
  4718  0ABF                     u9081:
  4719  0ABF  2AD5               	goto	l13139
  4720  0AC0                     u9080:
  4721                           	line	117
  4722                           	
  4723  0AC0                     l24953:	
  4724                           ;RF_Control_B1.c: 116: {
  4725                           ;RF_Control_B1.c: 117: RF->RxStatus=1;
  4726  0AC0  083E               	movf	(_RF)^080h,w
  4727  0AC1  0086               	movwf	fsr1l
  4728  0AC2  0187               	clrf fsr1h	
  4729                           	
  4730  0AC3  1581               	bsf	indf1,3
  4731                           	line	118
  4732                           	
  4733  0AC4                     l24955:	
  4734                           ;RF_Control_B1.c: 118: CC2500_WriteCommand(0x36);
  4735  0AC4  3036               	movlw	(036h)
  4736  0AC5  31A2  223D  318A   	fcall	_CC2500_WriteCommand
  4737                           	line	119
  4738                           	
  4739  0AC8                     l24957:	
  4740                           ;RF_Control_B1.c: 119: CC2500_WriteCommand(0x34);
  4741  0AC8  3034               	movlw	(034h)
  4742  0AC9  31A2  223D  318A   	fcall	_CC2500_WriteCommand
  4743                           	line	120
  4744                           	
  4745  0ACC                     l24959:	
  4746                           ;RF_Control_B1.c: 120: setINT_GO(1);
  4747  0ACC  3001               	movlw	(01h)
  4748  0ACD  31AF  270C  318A   	fcall	_setINT_GO
  4749  0AD0  2AD5               	goto	l13139
  4750                           	line	121
  4751                           	
  4752  0AD1                     l13138:	
  4753  0AD1  2AD5               	goto	l13139
  4754                           	line	122
  4755                           	
  4756  0AD2                     l13137:	
  4757  0AD2  2AD5               	goto	l13139
  4758                           	line	123
  4759                           	
  4760  0AD3                     l13132:	
  4761  0AD3  2AD5               	goto	l13139
  4762                           	line	124
  4763                           	
  4764  0AD4                     l13130:	
  4765  0AD4  2AD5               	goto	l13139
  4766                           	line	125
  4767                           	
  4768  0AD5                     l13126:	
  4769                           	line	126
  4770                           	
  4771  0AD5                     l13139:	
  4772  0AD5  0008               	return
  4773                           	opt stack 0
  4774                           GLOBAL	__end_of_setRF_Main
  4775  0AD6                     	__end_of_setRF_Main:
  4776 ;; =============== function _setRF_Main ends ============
  4777                           
  4778                           	signat	_setRF_Main,4216
  4779                           	global	_getRxData
  4780                           psect	text3224,local,class=CODE,delta=2
  4781                           global __ptext3224
  4782  1F19                     __ptext3224:
  4783                           
  4784 ;; *************** function _getRxData *****************
  4785 ;; Defined at:
  4786 ;;		line 205 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  rf              1    wreg     unsigned char 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  rf              1   72[BANK0 ] unsigned char 
  4791 ;;  i               1    0        unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;		None               void
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  4801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  4804 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  4805 ;;Total ram usage:        1 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:   11
  4808 ;; This function calls:
  4809 ;;		_RfPointSelect
  4810 ;;		_setLog_Code
  4811 ;;		_setControl_Lights_Table
  4812 ;; This function is called by:
  4813 ;;		_setRF_Main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           psect	text3224
  4817                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  4818                           	line	205
  4819                           	global	__size_of_getRxData
  4820  0073                     	__size_of_getRxData	equ	__end_of_getRxData-_getRxData
  4821                           	
  4822  1F19                     _getRxData:	
  4823                           	opt	stack 2
  4824                           ; Regs used in _getRxData: [wreg+fsr1l-status,0+pclath+cstack]
  4825                           ;getRxData@rf stored from wreg
  4826                           	line	207
  4827  1F19  0020               	movlb 0	; select bank0
  4828  1F1A  00E8               	movwf	(getRxData@rf)
  4829                           	
  4830  1F1B                     l24865:	
  4831                           ;RF_Control_B1.c: 206: unsigned char i;
  4832                           ;RF_Control_B1.c: 207: RfPointSelect(rf);
  4833  1F1B  0868               	movf	(getRxData@rf),w
  4834  1F1C  31A0  2034  319F   	fcall	_RfPointSelect
  4835                           	line	208
  4836                           	
  4837  1F1F                     l24867:	
  4838                           ;RF_Control_B1.c: 208: if(RF->Learn)
  4839  1F1F  0021               	movlb 1	; select bank1
  4840  1F20  083E               	movf	(_RF)^080h,w
  4841  1F21  0086               	movwf	fsr1l
  4842  1F22  0187               	clrf fsr1h	
  4843                           	
  4844  1F23  1F01               	btfss	indf1,6
  4845  1F24  2F26               	goto	u8861
  4846  1F25  2F27               	goto	u8860
  4847  1F26                     u8861:
  4848  1F26  2F38               	goto	l24875
  4849  1F27                     u8860:
  4850                           	line	210
  4851                           	
  4852  1F27                     l24869:	
  4853                           ;RF_Control_B1.c: 209: {
  4854                           ;RF_Control_B1.c: 210: if(RF_Data[0] == 0x0 && RF_Data[1] == 0x64)
  4855  1F27  08A0               	movf	(_RF_Data)^080h,f
  4856  1F28  1D03               	skipz
  4857  1F29  2F2B               	goto	u8871
  4858  1F2A  2F2C               	goto	u8870
  4859  1F2B                     u8871:
  4860  1F2B  2F8B               	goto	l13171
  4861  1F2C                     u8870:
  4862                           	
  4863  1F2C                     l24871:	
  4864  1F2C  0821               	movf	0+(_RF_Data)^080h+01h,w
  4865  1F2D  3A64               	xorlw	064h&0ffh
  4866  1F2E  1D03               	skipz
  4867  1F2F  2F31               	goto	u8881
  4868  1F30  2F32               	goto	u8880
  4869  1F31                     u8881:
  4870  1F31  2F8B               	goto	l13171
  4871  1F32                     u8880:
  4872                           	line	212
  4873                           	
  4874  1F32                     l24873:	
  4875                           ;RF_Control_B1.c: 211: {
  4876                           ;RF_Control_B1.c: 212: setLog_Code(1);
  4877  1F32  3001               	movlw	(01h)
  4878  1F33  3199  21D6  319F   	fcall	_setLog_Code
  4879  1F36  2F8B               	goto	l13171
  4880                           	line	213
  4881                           	
  4882  1F37                     l13161:	
  4883                           	line	214
  4884                           ;RF_Control_B1.c: 213: }
  4885                           ;RF_Control_B1.c: 214: }
  4886  1F37  2F8B               	goto	l13171
  4887                           	line	215
  4888                           	
  4889  1F38                     l13160:	
  4890                           	line	217
  4891                           	
  4892  1F38                     l24875:	
  4893                           ;RF_Control_B1.c: 215: else
  4894                           ;RF_Control_B1.c: 216: {
  4895                           ;RF_Control_B1.c: 217: if(RF_Data[0] == 0x00 && RF_Data[1] == 0x02)
  4896  1F38  0021               	movlb 1	; select bank1
  4897  1F39  08A0               	movf	(_RF_Data)^080h,f
  4898  1F3A  1D03               	skipz
  4899  1F3B  2F3D               	goto	u8891
  4900  1F3C  2F3E               	goto	u8890
  4901  1F3D                     u8891:
  4902  1F3D  2F8B               	goto	l13171
  4903  1F3E                     u8890:
  4904                           	
  4905  1F3E                     l24877:	
  4906  1F3E  0821               	movf	0+(_RF_Data)^080h+01h,w
  4907  1F3F  3A02               	xorlw	02h&0ffh
  4908  1F40  1D03               	skipz
  4909  1F41  2F43               	goto	u8901
  4910  1F42  2F44               	goto	u8900
  4911  1F43                     u8901:
  4912  1F43  2F8B               	goto	l13171
  4913  1F44                     u8900:
  4914                           	line	219
  4915                           	
  4916  1F44                     l24879:	
  4917                           ;RF_Control_B1.c: 218: {
  4918                           ;RF_Control_B1.c: 219: if(RF_Data[12] == 0xff && RF_Data[13] == 0xff && RF_Data[14] == 0
                                 xff)
  4919  1F44  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  4920  1F45  3AFF               	xorlw	0FFh&0ffh
  4921  1F46  1D03               	skipz
  4922  1F47  2F49               	goto	u8911
  4923  1F48  2F4A               	goto	u8910
  4924  1F49                     u8911:
  4925  1F49  2F58               	goto	l24887
  4926  1F4A                     u8910:
  4927                           	
  4928  1F4A                     l24881:	
  4929  1F4A  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  4930  1F4B  3AFF               	xorlw	0FFh&0ffh
  4931  1F4C  1D03               	skipz
  4932  1F4D  2F4F               	goto	u8921
  4933  1F4E  2F50               	goto	u8920
  4934  1F4F                     u8921:
  4935  1F4F  2F58               	goto	l24887
  4936  1F50                     u8920:
  4937                           	
  4938  1F50                     l24883:	
  4939  1F50  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  4940  1F51  3AFF               	xorlw	0FFh&0ffh
  4941  1F52  1D03               	skipz
  4942  1F53  2F55               	goto	u8931
  4943  1F54  2F56               	goto	u8930
  4944  1F55                     u8931:
  4945  1F55  2F58               	goto	l24887
  4946  1F56                     u8930:
  4947                           	line	221
  4948                           	
  4949  1F56                     l24885:	
  4950                           ;RF_Control_B1.c: 220: {
  4951                           ;RF_Control_B1.c: 221: _nop();
  4952  1F56  0000               	nop
  4953                           	line	222
  4954                           ;RF_Control_B1.c: 222: }
  4955  1F57  2F8B               	goto	l13171
  4956                           	line	223
  4957                           	
  4958  1F58                     l13164:	
  4959                           	line	225
  4960                           	
  4961  1F58                     l24887:	
  4962                           ;RF_Control_B1.c: 223: else
  4963                           ;RF_Control_B1.c: 224: {
  4964                           ;RF_Control_B1.c: 225: if(RF_Data[12] == Product->Data[12] && RF_Data[13] == Product->Da
                                 ta[13] && RF_Data[14] == Product->Data[14])
  4965  1F58  087D               	movf	(_Product),w
  4966  1F59  3E0C               	addlw	0Ch
  4967  1F5A  0086               	movwf	fsr1l
  4968  1F5B  3001               	movlw 1	; select bank2/3
  4969  1F5C  0087               	movwf fsr1h	
  4970                           	
  4971  1F5D  0021               	movlb 1	; select bank1
  4972  1F5E  082C               	movf	0+(_RF_Data)^080h+0Ch,w
  4973  1F5F  0601               	xorwf	indf1,w
  4974  1F60  1D03               	skipz
  4975  1F61  2F63               	goto	u8941
  4976  1F62  2F64               	goto	u8940
  4977  1F63                     u8941:
  4978  1F63  2F8B               	goto	l13171
  4979  1F64                     u8940:
  4980                           	
  4981  1F64                     l24889:	
  4982  1F64  087D               	movf	(_Product),w
  4983  1F65  3E0D               	addlw	0Dh
  4984  1F66  0086               	movwf	fsr1l
  4985  1F67  3001               	movlw 1	; select bank2/3
  4986  1F68  0087               	movwf fsr1h	
  4987                           	
  4988  1F69  082D               	movf	0+(_RF_Data)^080h+0Dh,w
  4989  1F6A  0601               	xorwf	indf1,w
  4990  1F6B  1D03               	skipz
  4991  1F6C  2F6E               	goto	u8951
  4992  1F6D  2F6F               	goto	u8950
  4993  1F6E                     u8951:
  4994  1F6E  2F8B               	goto	l13171
  4995  1F6F                     u8950:
  4996                           	
  4997  1F6F                     l24891:	
  4998  1F6F  087D               	movf	(_Product),w
  4999  1F70  3E0E               	addlw	0Eh
  5000  1F71  0086               	movwf	fsr1l
  5001  1F72  3001               	movlw 1	; select bank2/3
  5002  1F73  0087               	movwf fsr1h	
  5003                           	
  5004  1F74  082E               	movf	0+(_RF_Data)^080h+0Eh,w
  5005  1F75  0601               	xorwf	indf1,w
  5006  1F76  1D03               	skipz
  5007  1F77  2F79               	goto	u8961
  5008  1F78  2F7A               	goto	u8960
  5009  1F79                     u8961:
  5010  1F79  2F8B               	goto	l13171
  5011  1F7A                     u8960:
  5012                           	line	227
  5013                           	
  5014  1F7A                     l24893:	
  5015                           ;RF_Control_B1.c: 226: {
  5016                           ;RF_Control_B1.c: 227: setControl_Lights_Table(1);
  5017  1F7A  3001               	movlw	(01h)
  5018  1F7B  3192  2258  319F   	fcall	_setControl_Lights_Table
  5019  1F7E  2F8B               	goto	l13171
  5020                           	line	228
  5021                           	
  5022  1F7F                     l13166:	
  5023  1F7F  2F8B               	goto	l13171
  5024                           	line	229
  5025                           	
  5026  1F80                     l13165:	
  5027                           	line	230
  5028                           ;RF_Control_B1.c: 228: }
  5029                           ;RF_Control_B1.c: 229: }
  5030                           ;RF_Control_B1.c: 230: }
  5031  1F80  2F8B               	goto	l13171
  5032                           	line	231
  5033                           	
  5034  1F81                     l13163:	
  5035  1F81  2F8B               	goto	l13171
  5036                           	
  5037  1F82                     l24895:	
  5038  1F82  2F8B               	goto	l13171
  5039                           	
  5040  1F83                     l24897:	
  5041  1F83  2F8B               	goto	l13171
  5042                           	line	234
  5043                           	
  5044  1F84                     l24899:	
  5045                           ;RF_Control_B1.c: 232: {
  5046                           ;RF_Control_B1.c: 233: ;
  5047                           ;RF_Control_B1.c: 234: }
  5048  1F84  2F8B               	goto	l13171
  5049                           	line	235
  5050                           	
  5051  1F85                     l13168:	
  5052  1F85  2F8B               	goto	l13171
  5053                           	
  5054  1F86                     l24901:	
  5055  1F86  2F8B               	goto	l13171
  5056                           	
  5057  1F87                     l24903:	
  5058  1F87  2F8B               	goto	l13171
  5059                           	line	238
  5060                           ;RF_Control_B1.c: 236: {
  5061                           ;RF_Control_B1.c: 237: ;
  5062                           	
  5063  1F88                     l13170:	
  5064  1F88  2F8B               	goto	l13171
  5065                           	line	243
  5066                           	
  5067  1F89                     l13169:	
  5068  1F89  2F8B               	goto	l13171
  5069                           	
  5070  1F8A                     l13167:	
  5071  1F8A  2F8B               	goto	l13171
  5072                           	
  5073  1F8B                     l13162:	
  5074                           	line	244
  5075                           	
  5076  1F8B                     l13171:	
  5077  1F8B  0008               	return
  5078                           	opt stack 0
  5079                           GLOBAL	__end_of_getRxData
  5080  1F8C                     	__end_of_getRxData:
  5081 ;; =============== function _getRxData ends ============
  5082                           
  5083                           	signat	_getRxData,4216
  5084                           	global	_setControl_Lights_Table
  5085                           psect	text3225,local,class=CODE,delta=2
  5086                           global __ptext3225
  5087  1258                     __ptext3225:
  5088                           
  5089 ;; *************** function _setControl_Lights_Table *****************
  5090 ;; Defined at:
  5091 ;;		line 262 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;  rf              1    wreg     unsigned char 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  rf              1   71[BANK0 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;		None               void
  5098 ;; Registers used:
  5099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:   10
  5112 ;; This function calls:
  5113 ;;		_RfPointSelect
  5114 ;;		_setDimmerLights
  5115 ;;		_setRFSW_Status
  5116 ;;		_setSw_Status
  5117 ;;		_setBuz
  5118 ;;		_setTxData
  5119 ;;		_setRFSW_Control
  5120 ;;		_setRFSW_AdjControl
  5121 ;; This function is called by:
  5122 ;;		_getRxData
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           psect	text3225
  5126                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5127                           	line	262
  5128                           	global	__size_of_setControl_Lights_Table
  5129  0081                     	__size_of_setControl_Lights_Table	equ	__end_of_setControl_Lights_Table-_setControl_Ligh
                                 ts_Table
  5130                           	
  5131  1258                     _setControl_Lights_Table:	
  5132                           	opt	stack 2
  5133                           ; Regs used in _setControl_Lights_Table: [wreg+fsr1l-status,0+pclath+cstack]
  5134                           ;setControl_Lights_Table@rf stored from wreg
  5135  1258  0020               	movlb 0	; select bank0
  5136  1259  00E7               	movwf	(setControl_Lights_Table@rf)
  5137                           	line	263
  5138                           	
  5139  125A                     l24837:	
  5140                           ;RF_Control_B1.c: 263: RfPointSelect(rf);
  5141  125A  0867               	movf	(setControl_Lights_Table@rf),w
  5142  125B  31A0  2034  3192   	fcall	_RfPointSelect
  5143                           	line	264
  5144                           	
  5145  125E                     l24839:	
  5146                           ;RF_Control_B1.c: 264: if(RF_Data[15] == 0x00)
  5147  125E  0021               	movlb 1	; select bank1
  5148  125F  08AF               	movf	0+(_RF_Data)^080h+0Fh,f
  5149  1260  1D03               	skipz
  5150  1261  2A63               	goto	u8821
  5151  1262  2A64               	goto	u8820
  5152  1263                     u8821:
  5153  1263  2A9F               	goto	l24851
  5154  1264                     u8820:
  5155                           	line	267
  5156                           	
  5157  1264                     l24841:	
  5158                           ;RF_Control_B1.c: 265: {
  5159                           ;RF_Control_B1.c: 267: setDimmerLights(1,0);
  5160  1264  0020               	movlb 0	; select bank0
  5161  1265  01A6               	clrf	(?_setDimmerLights)
  5162  1266  3001               	movlw	(01h)
  5163  1267  3196  26B8  3192   	fcall	_setDimmerLights
  5164                           	line	268
  5165                           ;RF_Control_B1.c: 268: setRFSW_Status(1,0);
  5166  126A  0020               	movlb 0	; select bank0
  5167  126B  01A2               	clrf	(?_setRFSW_Status)
  5168  126C  3001               	movlw	(01h)
  5169  126D  31A0  2090  3192   	fcall	_setRFSW_Status
  5170                           	line	269
  5171                           ;RF_Control_B1.c: 269: setSw_Status(1,0);
  5172  1270  0020               	movlb 0	; select bank0
  5173  1271  01A2               	clrf	(?_setSw_Status)
  5174  1272  3001               	movlw	(01h)
  5175  1273  31A0  2080  3192   	fcall	_setSw_Status
  5176                           	line	282
  5177                           	
  5178  1276                     l24843:	
  5179                           ;RF_Control_B1.c: 282: Product->Data[9]=0;
  5180  1276  087D               	movf	(_Product),w
  5181  1277  3E09               	addlw	09h
  5182  1278  0086               	movwf	fsr1l
  5183  1279  3001               	movlw 1	; select bank2/3
  5184  127A  0087               	movwf fsr1h	
  5185                           	
  5186  127B  0181               	clrf	indf1
  5187                           	line	283
  5188                           	
  5189  127C                     l24845:	
  5190                           ;RF_Control_B1.c: 283: Product->Data[11]=0;
  5191  127C  087D               	movf	(_Product),w
  5192  127D  3E0B               	addlw	0Bh
  5193  127E  0086               	movwf	fsr1l
  5194  127F  3001               	movlw 1	; select bank2/3
  5195  1280  0087               	movwf fsr1h	
  5196                           	
  5197  1281  0181               	clrf	indf1
  5198                           	line	284
  5199                           	
  5200  1282                     l24847:	
  5201                           ;RF_Control_B1.c: 284: Product->Data[15]=0;
  5202  1282  087D               	movf	(_Product),w
  5203  1283  3E0F               	addlw	0Fh
  5204  1284  0086               	movwf	fsr1l
  5205  1285  3001               	movlw 1	; select bank2/3
  5206  1286  0087               	movwf fsr1h	
  5207                           	
  5208  1287  0181               	clrf	indf1
  5209                           	line	285
  5210                           	
  5211  1288                     l24849:	
  5212                           ;RF_Control_B1.c: 285: Product->Data[17]=0;
  5213  1288  087D               	movf	(_Product),w
  5214  1289  3E11               	addlw	011h
  5215  128A  0086               	movwf	fsr1l
  5216  128B  3001               	movlw 1	; select bank2/3
  5217  128C  0087               	movwf fsr1h	
  5218                           	
  5219  128D  0181               	clrf	indf1
  5220                           	line	286
  5221                           ;RF_Control_B1.c: 286: setBuz(1,1,100);
  5222  128E  0020               	movlb 0	; select bank0
  5223  128F  01A9               	clrf	(?_setBuz)
  5224  1290  1403               	bsf	status,0
  5225  1291  0DA9               	rlf	(?_setBuz),f
  5226  1292  3064               	movlw	low(064h)
  5227  1293  00AA               	movwf	0+(?_setBuz)+01h
  5228  1294  3000               	movlw	high(064h)
  5229  1295  00AB               	movwf	(0+(?_setBuz)+01h)+1
  5230  1296  3001               	movlw	(01h)
  5231  1297  3196  2617  3192   	fcall	_setBuz
  5232                           	line	287
  5233                           ;RF_Control_B1.c: 287: setTxData(1);
  5234  129A  3001               	movlw	(01h)
  5235  129B  319A  2272  3192   	fcall	_setTxData
  5236                           	line	288
  5237                           ;RF_Control_B1.c: 288: }
  5238  129E  2AD8               	goto	l13185
  5239                           	line	289
  5240                           	
  5241  129F                     l13178:	
  5242                           	
  5243  129F                     l24851:	
  5244                           ;RF_Control_B1.c: 289: else if(RF_Data[15] == 0x20)
  5245  129F  0021               	movlb 1	; select bank1
  5246  12A0  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5247  12A1  3A20               	xorlw	020h&0ffh
  5248  12A2  1D03               	skipz
  5249  12A3  2AA5               	goto	u8831
  5250  12A4  2AA6               	goto	u8830
  5251  12A5                     u8831:
  5252  12A5  2ABD               	goto	l24857
  5253  12A6                     u8830:
  5254                           	line	291
  5255                           	
  5256  12A6                     l24853:	
  5257                           ;RF_Control_B1.c: 290: {
  5258                           ;RF_Control_B1.c: 291: Product->Data[9]=0;
  5259  12A6  087D               	movf	(_Product),w
  5260  12A7  3E09               	addlw	09h
  5261  12A8  0086               	movwf	fsr1l
  5262  12A9  3001               	movlw 1	; select bank2/3
  5263  12AA  0087               	movwf fsr1h	
  5264                           	
  5265  12AB  0181               	clrf	indf1
  5266                           	line	292
  5267                           ;RF_Control_B1.c: 292: Product->Data[11]=0;
  5268  12AC  087D               	movf	(_Product),w
  5269  12AD  3E0B               	addlw	0Bh
  5270  12AE  0086               	movwf	fsr1l
  5271  12AF  3001               	movlw 1	; select bank2/3
  5272  12B0  0087               	movwf fsr1h	
  5273                           	
  5274  12B1  0181               	clrf	indf1
  5275                           	line	293
  5276                           ;RF_Control_B1.c: 293: Product->Data[17]=0;
  5277  12B2  087D               	movf	(_Product),w
  5278  12B3  3E11               	addlw	011h
  5279  12B4  0086               	movwf	fsr1l
  5280  12B5  3001               	movlw 1	; select bank2/3
  5281  12B6  0087               	movwf fsr1h	
  5282                           	
  5283  12B7  0181               	clrf	indf1
  5284                           	line	294
  5285                           	
  5286  12B8                     l24855:	
  5287                           ;RF_Control_B1.c: 294: setTxData(1);
  5288  12B8  3001               	movlw	(01h)
  5289  12B9  319A  2272  3192   	fcall	_setTxData
  5290                           	line	295
  5291                           ;RF_Control_B1.c: 295: }
  5292  12BC  2AD8               	goto	l13185
  5293                           	line	297
  5294                           	
  5295  12BD                     l13180:	
  5296                           	
  5297  12BD                     l24857:	
  5298                           ;RF_Control_B1.c: 297: else if(RF_Data[15] == 0x01)
  5299  12BD  0021               	movlb 1	; select bank1
  5300  12BE  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5301  12BF  3A01               	xorlw	01h&0ffh
  5302  12C0  1D03               	skipz
  5303  12C1  2AC3               	goto	u8841
  5304  12C2  2AC4               	goto	u8840
  5305  12C3                     u8841:
  5306  12C3  2AC9               	goto	l24861
  5307  12C4                     u8840:
  5308                           	line	299
  5309                           	
  5310  12C4                     l24859:	
  5311                           ;RF_Control_B1.c: 298: {
  5312                           ;RF_Control_B1.c: 299: setRFSW_Control(1);
  5313  12C4  3001               	movlw	(01h)
  5314  12C5  3188  2005  3192   	fcall	_setRFSW_Control
  5315                           	line	300
  5316                           ;RF_Control_B1.c: 300: }
  5317  12C8  2AD8               	goto	l13185
  5318                           	line	302
  5319                           	
  5320  12C9                     l13182:	
  5321                           	
  5322  12C9                     l24861:	
  5323                           ;RF_Control_B1.c: 302: else if(RF_Data[15] == 0x11)
  5324  12C9  0021               	movlb 1	; select bank1
  5325  12CA  082F               	movf	0+(_RF_Data)^080h+0Fh,w
  5326  12CB  3A11               	xorlw	011h&0ffh
  5327  12CC  1D03               	skipz
  5328  12CD  2ACF               	goto	u8851
  5329  12CE  2AD0               	goto	u8850
  5330  12CF                     u8851:
  5331  12CF  2AD8               	goto	l13185
  5332  12D0                     u8850:
  5333                           	line	304
  5334                           	
  5335  12D0                     l24863:	
  5336                           ;RF_Control_B1.c: 303: {
  5337                           ;RF_Control_B1.c: 304: setRFSW_AdjControl(1);
  5338  12D0  3001               	movlw	(01h)
  5339  12D1  3198  2078  3192   	fcall	_setRFSW_AdjControl
  5340  12D4  2AD8               	goto	l13185
  5341                           	line	305
  5342                           	
  5343  12D5                     l13184:	
  5344  12D5  2AD8               	goto	l13185
  5345                           	line	332
  5346                           	
  5347  12D6                     l13183:	
  5348  12D6  2AD8               	goto	l13185
  5349                           	
  5350  12D7                     l13181:	
  5351  12D7  2AD8               	goto	l13185
  5352                           	
  5353  12D8                     l13179:	
  5354                           	
  5355  12D8                     l13185:	
  5356  12D8  0008               	return
  5357                           	opt stack 0
  5358                           GLOBAL	__end_of_setControl_Lights_Table
  5359  12D9                     	__end_of_setControl_Lights_Table:
  5360 ;; =============== function _setControl_Lights_Table ends ============
  5361                           
  5362                           	signat	_setControl_Lights_Table,4216
  5363                           	global	_PowerFault_Main
  5364                           psect	text3226,local,class=CODE,delta=2
  5365                           global __ptext3226
  5366  2EBB                     __ptext3226:
  5367                           
  5368 ;; *************** function _PowerFault_Main *****************
  5369 ;; Defined at:
  5370 ;;		line 23 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;		None               void
  5377 ;; Registers used:
  5378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5388 ;;Total ram usage:        0 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:   10
  5391 ;; This function calls:
  5392 ;;		_setPowerFault_Main
  5393 ;; This function is called by:
  5394 ;;		_main
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           psect	text3226
  5398                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  5399                           	line	23
  5400                           	global	__size_of_PowerFault_Main
  5401  0005                     	__size_of_PowerFault_Main	equ	__end_of_PowerFault_Main-_PowerFault_Main
  5402                           	
  5403  2EBB                     _PowerFault_Main:	
  5404                           	opt	stack 5
  5405                           ; Regs used in _PowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5406                           	line	25
  5407                           	
  5408  2EBB                     l24835:	
  5409                           ;PowerFault_B1.c: 25: setPowerFault_Main(1);
  5410  2EBB  3001               	movlw	(01h)
  5411  2EBC  3186  26A4  31AE   	fcall	_setPowerFault_Main
  5412                           	line	27
  5413                           	
  5414  2EBF                     l11916:	
  5415  2EBF  0008               	return
  5416                           	opt stack 0
  5417                           GLOBAL	__end_of_PowerFault_Main
  5418  2EC0                     	__end_of_PowerFault_Main:
  5419 ;; =============== function _PowerFault_Main ends ============
  5420                           
  5421                           	signat	_PowerFault_Main,88
  5422                           	global	_Load_Main
  5423                           psect	text3227,local,class=CODE,delta=2
  5424                           global __ptext3227
  5425  2EB6                     __ptext3227:
  5426                           
  5427 ;; *************** function _Load_Main *****************
  5428 ;; Defined at:
  5429 ;;		line 25 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;		None               void
  5436 ;; Registers used:
  5437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:   10
  5450 ;; This function calls:
  5451 ;;		_setLoad_Main
  5452 ;; This function is called by:
  5453 ;;		_main
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           psect	text3227
  5457                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  5458                           	line	25
  5459                           	global	__size_of_Load_Main
  5460  0005                     	__size_of_Load_Main	equ	__end_of_Load_Main-_Load_Main
  5461                           	
  5462  2EB6                     _Load_Main:	
  5463                           	opt	stack 5
  5464                           ; Regs used in _Load_Main: [wreg-status,0+pclath+cstack]
  5465                           	line	27
  5466                           	
  5467  2EB6                     l24833:	
  5468                           ;OverLoad_B1.c: 27: setLoad_Main(1);
  5469  2EB6  3001               	movlw	(01h)
  5470  2EB7  3180  2018  31AE   	fcall	_setLoad_Main
  5471                           	line	29
  5472                           	
  5473  2EBA                     l9529:	
  5474  2EBA  0008               	return
  5475                           	opt stack 0
  5476                           GLOBAL	__end_of_Load_Main
  5477  2EBB                     	__end_of_Load_Main:
  5478 ;; =============== function _Load_Main ends ============
  5479                           
  5480                           	signat	_Load_Main,88
  5481                           	global	_Temp_Main
  5482                           psect	text3228,local,class=CODE,delta=2
  5483                           global __ptext3228
  5484  2EB1                     __ptext3228:
  5485                           
  5486 ;; *************** function _Temp_Main *****************
  5487 ;; Defined at:
  5488 ;;		line 16 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;		None               void
  5495 ;; Registers used:
  5496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:   10
  5509 ;; This function calls:
  5510 ;;		_setTemp_Main
  5511 ;; This function is called by:
  5512 ;;		_main
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           psect	text3228
  5516                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  5517                           	line	16
  5518                           	global	__size_of_Temp_Main
  5519  0005                     	__size_of_Temp_Main	equ	__end_of_Temp_Main-_Temp_Main
  5520                           	
  5521  2EB1                     _Temp_Main:	
  5522                           	opt	stack 5
  5523                           ; Regs used in _Temp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5524                           	line	18
  5525                           	
  5526  2EB1                     l24831:	
  5527                           ;OverTemperature_B1.c: 18: setTemp_Main(1);
  5528  2EB1  3001               	movlw	(01h)
  5529  2EB2  318E  2699  31AE   	fcall	_setTemp_Main
  5530                           	line	20
  5531                           	
  5532  2EB5                     l10742:	
  5533  2EB5  0008               	return
  5534                           	opt stack 0
  5535                           GLOBAL	__end_of_Temp_Main
  5536  2EB6                     	__end_of_Temp_Main:
  5537 ;; =============== function _Temp_Main ends ============
  5538                           
  5539                           	signat	_Temp_Main,88
  5540                           	global	_setRFSW_AdjControl
  5541                           psect	text3229,local,class=CODE,delta=2
  5542                           global __ptext3229
  5543  1878                     __ptext3229:
  5544                           
  5545 ;; *************** function _setRFSW_AdjControl *****************
  5546 ;; Defined at:
  5547 ;;		line 396 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  sw              1    wreg     unsigned char 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;  sw              1   70[BANK0 ] unsigned char 
  5552 ;; Return value:  Size  Location     Type
  5553 ;;		None               void
  5554 ;; Registers used:
  5555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5564 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5565 ;;Total ram usage:        3 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:    9
  5568 ;; This function calls:
  5569 ;;		_RfSWPointSelect
  5570 ;;		_setRF_DimmerValue
  5571 ;;		_setTxData
  5572 ;; This function is called by:
  5573 ;;		_setControl_Lights_Table
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           psect	text3229
  5577                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  5578                           	line	396
  5579                           	global	__size_of_setRFSW_AdjControl
  5580  0043                     	__size_of_setRFSW_AdjControl	equ	__end_of_setRFSW_AdjControl-_setRFSW_AdjControl
  5581                           	
  5582  1878                     _setRFSW_AdjControl:	
  5583                           	opt	stack 2
  5584                           ; Regs used in _setRFSW_AdjControl: [wreg+fsr1l-status,0+pclath+cstack]
  5585                           ;setRFSW_AdjControl@sw stored from wreg
  5586  1878  0020               	movlb 0	; select bank0
  5587  1879  00E6               	movwf	(setRFSW_AdjControl@sw)
  5588                           	line	397
  5589                           	
  5590  187A                     l24819:	
  5591                           ;RF_Control_B1.c: 397: RfSWPointSelect(sw);
  5592  187A  0866               	movf	(setRFSW_AdjControl@sw),w
  5593  187B  31A0  2043  3198   	fcall	_RfSWPointSelect
  5594                           	line	398
  5595                           	
  5596  187E                     l24821:	
  5597                           ;RF_Control_B1.c: 398: if(RFSW->Status)
  5598  187E  0021               	movlb 1	; select bank1
  5599  187F  083F               	movf	(_RFSW)^080h,w
  5600  1880  0086               	movwf	fsr1l
  5601  1881  0187               	clrf fsr1h	
  5602                           	
  5603  1882  1C01               	btfss	indf1,0
  5604  1883  2885               	goto	u8811
  5605  1884  2886               	goto	u8810
  5606  1885                     u8811:
  5607  1885  2892               	goto	l24827
  5608  1886                     u8810:
  5609                           	line	400
  5610                           	
  5611  1886                     l24823:	
  5612                           ;RF_Control_B1.c: 399: {
  5613                           ;RF_Control_B1.c: 400: Memory->Modify=1;
  5614  1886  086D               	movf	(_Memory)^080h,w
  5615  1887  3E22               	addlw	022h
  5616  1888  0086               	movwf	fsr1l
  5617  1889  3001               	movlw 1	; select bank2/3
  5618  188A  0087               	movwf fsr1h	
  5619                           	
  5620  188B  1401               	bsf	indf1,0
  5621                           	line	401
  5622                           	
  5623  188C                     l24825:	
  5624                           ;RF_Control_B1.c: 401: setRF_DimmerValue(sw);
  5625  188C  0020               	movlb 0	; select bank0
  5626  188D  0866               	movf	(setRFSW_AdjControl@sw),w
  5627  188E  31A7  2749  3198   	fcall	_setRF_DimmerValue
  5628                           	line	402
  5629                           ;RF_Control_B1.c: 402: }
  5630  1891  28A4               	goto	l13201
  5631                           	line	403
  5632                           	
  5633  1892                     l13200:	
  5634                           	line	405
  5635                           	
  5636  1892                     l24827:	
  5637                           ;RF_Control_B1.c: 403: else
  5638                           ;RF_Control_B1.c: 404: {
  5639                           ;RF_Control_B1.c: 405: Product->Data[9]=Product->Data[20+sw];
  5640  1892  0020               	movlb 0	; select bank0
  5641  1893  0866               	movf	(setRFSW_AdjControl@sw),w
  5642  1894  3E14               	addlw	014h
  5643  1895  077D               	addwf	(_Product),w
  5644  1896  00E4               	movwf	(??_setRFSW_AdjControl+0)+0
  5645  1897  0864               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  5646  1898  0086               	movwf	fsr1l
  5647  1899  3001               	movlw 1	; select bank2/3
  5648  189A  0087               	movwf fsr1h	
  5649                           	
  5650  189B  0801               	movf	indf1,w
  5651  189C  00E5               	movwf	(??_setRFSW_AdjControl+1)+0
  5652  189D  087D               	movf	(_Product),w
  5653  189E  3E09               	addlw	09h
  5654  189F  0086               	movwf	fsr1l
  5655  18A0  3001               	movlw 1	; select bank2/3
  5656  18A1  0087               	movwf fsr1h	
  5657                           	
  5658  18A2  0865               	movf	(??_setRFSW_AdjControl+1)+0,w
  5659  18A3  0081               	movwf	indf1
  5660                           	line	406
  5661                           	
  5662  18A4                     l13201:	
  5663                           	line	407
  5664                           ;RF_Control_B1.c: 406: }
  5665                           ;RF_Control_B1.c: 407: Product->Data[17]=Product->Data[26+sw];
  5666  18A4  0020               	movlb 0	; select bank0
  5667  18A5  0866               	movf	(setRFSW_AdjControl@sw),w
  5668  18A6  3E1A               	addlw	01Ah
  5669  18A7  077D               	addwf	(_Product),w
  5670  18A8  00E4               	movwf	(??_setRFSW_AdjControl+0)+0
  5671  18A9  0864               	movf	0+(??_setRFSW_AdjControl+0)+0,w
  5672  18AA  0086               	movwf	fsr1l
  5673  18AB  3001               	movlw 1	; select bank2/3
  5674  18AC  0087               	movwf fsr1h	
  5675                           	
  5676  18AD  0801               	movf	indf1,w
  5677  18AE  00E5               	movwf	(??_setRFSW_AdjControl+1)+0
  5678  18AF  087D               	movf	(_Product),w
  5679  18B0  3E11               	addlw	011h
  5680  18B1  0086               	movwf	fsr1l
  5681  18B2  3001               	movlw 1	; select bank2/3
  5682  18B3  0087               	movwf fsr1h	
  5683                           	
  5684  18B4  0865               	movf	(??_setRFSW_AdjControl+1)+0,w
  5685  18B5  0081               	movwf	indf1
  5686                           	line	408
  5687                           	
  5688  18B6                     l24829:	
  5689                           ;RF_Control_B1.c: 408: setTxData(1);
  5690  18B6  3001               	movlw	(01h)
  5691  18B7  319A  2272  3198   	fcall	_setTxData
  5692                           	line	409
  5693                           	
  5694  18BA                     l13202:	
  5695  18BA  0008               	return
  5696                           	opt stack 0
  5697                           GLOBAL	__end_of_setRFSW_AdjControl
  5698  18BB                     	__end_of_setRFSW_AdjControl:
  5699 ;; =============== function _setRFSW_AdjControl ends ============
  5700                           
  5701                           	signat	_setRFSW_AdjControl,4216
  5702                           	global	_setPowerFault_Main
  5703                           psect	text3230,local,class=CODE,delta=2
  5704                           global __ptext3230
  5705  06A4                     __ptext3230:
  5706                           
  5707 ;; *************** function _setPowerFault_Main *****************
  5708 ;; Defined at:
  5709 ;;		line 66 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  pf              1    wreg     unsigned char 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;  pf              1   20[BANK0 ] unsigned char 
  5714 ;; Return value:  Size  Location     Type
  5715 ;;		None               void
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  5724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  5725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  5726 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  5727 ;;Total ram usage:        3 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    9
  5730 ;; This function calls:
  5731 ;;		_PowerFaultPointSelect
  5732 ;;		_getLoad_Safe
  5733 ;;		_getTemp_Safe
  5734 ;;		_setPowerFault_ERROR
  5735 ;; This function is called by:
  5736 ;;		_PowerFault_Main
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           psect	text3230
  5740                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  5741                           	line	66
  5742                           	global	__size_of_setPowerFault_Main
  5743  0147                     	__size_of_setPowerFault_Main	equ	__end_of_setPowerFault_Main-_setPowerFault_Main
  5744                           	
  5745  06A4                     _setPowerFault_Main:	
  5746                           	opt	stack 5
  5747                           ; Regs used in _setPowerFault_Main: [wreg+fsr1l-status,0+pclath+cstack]
  5748                           ;setPowerFault_Main@pf stored from wreg
  5749  06A4  0020               	movlb 0	; select bank0
  5750  06A5  00B4               	movwf	(setPowerFault_Main@pf)
  5751                           	line	67
  5752                           	
  5753  06A6                     l24765:	
  5754                           ;PowerFault_B1.c: 67: PowerFaultPointSelect(pf);
  5755  06A6  0834               	movf	(setPowerFault_Main@pf),w
  5756  06A7  31AE  26D9  3186   	fcall	_PowerFaultPointSelect
  5757                           	line	68
  5758                           	
  5759  06AA                     l24767:	
  5760                           ;PowerFault_B1.c: 68: if(PF->Enable)
  5761  06AA  0021               	movlb 1	; select bank1
  5762  06AB  083D               	movf	(_PF)^080h,w
  5763  06AC  0086               	movwf	fsr1l
  5764  06AD  0187               	clrf fsr1h	
  5765                           	
  5766  06AE  1C01               	btfss	indf1,0
  5767  06AF  2EB1               	goto	u8671
  5768  06B0  2EB2               	goto	u8670
  5769  06B1                     u8671:
  5770  06B1  2FEA               	goto	l11954
  5771  06B2                     u8670:
  5772                           	line	70
  5773                           	
  5774  06B2                     l24769:	
  5775                           ;PowerFault_B1.c: 69: {
  5776                           ;PowerFault_B1.c: 70: if(PF->ADtoGO == 0)
  5777  06B2  083D               	movf	(_PF)^080h,w
  5778  06B3  0086               	movwf	fsr1l
  5779  06B4  0187               	clrf fsr1h	
  5780                           	
  5781  06B5  1981               	btfsc	indf1,3
  5782  06B6  2EB8               	goto	u8681
  5783  06B7  2EB9               	goto	u8680
  5784  06B8                     u8681:
  5785  06B8  2F04               	goto	l24783
  5786  06B9                     u8680:
  5787                           	line	72
  5788                           	
  5789  06B9                     l24771:	
  5790                           ;PowerFault_B1.c: 71: {
  5791                           ;PowerFault_B1.c: 72: PF->Time++;
  5792  06B9  083D               	movf	(_PF)^080h,w
  5793  06BA  3E06               	addlw	06h
  5794  06BB  0086               	movwf	fsr1l
  5795  06BC  0187               	clrf fsr1h	
  5796                           	
  5797  06BD  3001               	movlw	01h
  5798  06BE  0781               	addwf	indf1,f
  5799  06BF  3141               	addfsr	fsr1,1
  5800  06C0  1803               	skipnc
  5801  06C1  0A81               	incf	indf1,f
  5802                           	line	73
  5803                           	
  5804  06C2                     l24773:	
  5805                           ;PowerFault_B1.c: 73: if(PF->Time >= 700)
  5806  06C2  083D               	movf	(_PF)^080h,w
  5807  06C3  3E06               	addlw	06h
  5808  06C4  0086               	movwf	fsr1l
  5809  06C5  0187               	clrf fsr1h	
  5810                           	
  5811  06C6  3F40               	moviw	[0]fsr1
  5812  06C7  0020               	movlb 0	; select bank0
  5813  06C8  00B2               	movwf	(??_setPowerFault_Main+0)+0
  5814  06C9  3F41               	moviw	[1]fsr1
  5815  06CA  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  5816  06CB  3002               	movlw	high(02BCh)
  5817  06CC  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5818  06CD  30BC               	movlw	low(02BCh)
  5819  06CE  1903               	skipnz
  5820  06CF  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5821  06D0  1C03               	skipc
  5822  06D1  2ED3               	goto	u8691
  5823  06D2  2ED4               	goto	u8690
  5824  06D3                     u8691:
  5825  06D3  2FEA               	goto	l11954
  5826  06D4                     u8690:
  5827                           	line	75
  5828                           	
  5829  06D4                     l24775:	
  5830                           ;PowerFault_B1.c: 74: {
  5831                           ;PowerFault_B1.c: 75: if(getLoad_Safe(1) && getTemp_Safe(1))
  5832  06D4  3001               	movlw	(01h)
  5833  06D5  31A1  21CA  3186   	fcall	_getLoad_Safe
  5834  06D8  3A00               	xorlw	0&0ffh
  5835  06D9  1903               	skipnz
  5836  06DA  2EDC               	goto	u8701
  5837  06DB  2EDD               	goto	u8700
  5838  06DC                     u8701:
  5839  06DC  2EF8               	goto	l24781
  5840  06DD                     u8700:
  5841                           	
  5842  06DD                     l24777:	
  5843  06DD  3001               	movlw	(01h)
  5844  06DE  31AF  27F2  3186   	fcall	_getTemp_Safe
  5845  06E1  3A00               	xorlw	0&0ffh
  5846  06E2  1903               	skipnz
  5847  06E3  2EE5               	goto	u8711
  5848  06E4  2EE6               	goto	u8710
  5849  06E5                     u8711:
  5850  06E5  2EF8               	goto	l24781
  5851  06E6                     u8710:
  5852                           	line	77
  5853                           	
  5854  06E6                     l24779:	
  5855                           ;PowerFault_B1.c: 76: {
  5856                           ;PowerFault_B1.c: 77: PF->Time=0;
  5857  06E6  0021               	movlb 1	; select bank1
  5858  06E7  083D               	movf	(_PF)^080h,w
  5859  06E8  3E06               	addlw	06h
  5860  06E9  0086               	movwf	fsr1l
  5861  06EA  0187               	clrf fsr1h	
  5862                           	
  5863  06EB  3000               	movlw	low(0)
  5864  06EC  3FC0               	movwi	[0]fsr1
  5865  06ED  3000               	movlw	high(0)
  5866  06EE  3FC1               	movwi	[1]fsr1
  5867                           	line	78
  5868                           ;PowerFault_B1.c: 78: PF->ADtoGO=1;
  5869  06EF  083D               	movf	(_PF)^080h,w
  5870  06F0  0086               	movwf	fsr1l
  5871  06F1  0187               	clrf fsr1h	
  5872                           	
  5873  06F2  1581               	bsf	indf1,3
  5874                           	line	79
  5875                           ;PowerFault_B1.c: 79: PF->Safe=0;
  5876  06F3  083D               	movf	(_PF)^080h,w
  5877  06F4  0086               	movwf	fsr1l
  5878  06F5  0187               	clrf fsr1h	
  5879                           	
  5880  06F6  1101               	bcf	indf1,2
  5881                           	line	80
  5882                           ;PowerFault_B1.c: 80: }
  5883  06F7  2FEA               	goto	l11954
  5884                           	line	81
  5885                           	
  5886  06F8                     l11939:	
  5887                           	line	83
  5888                           	
  5889  06F8                     l24781:	
  5890                           ;PowerFault_B1.c: 81: else
  5891                           ;PowerFault_B1.c: 82: {
  5892                           ;PowerFault_B1.c: 83: PF->Time=700;
  5893  06F8  0021               	movlb 1	; select bank1
  5894  06F9  083D               	movf	(_PF)^080h,w
  5895  06FA  3E06               	addlw	06h
  5896  06FB  0086               	movwf	fsr1l
  5897  06FC  0187               	clrf fsr1h	
  5898                           	
  5899  06FD  30BC               	movlw	low(02BCh)
  5900  06FE  3FC0               	movwi	[0]fsr1
  5901  06FF  3002               	movlw	high(02BCh)
  5902  0700  3FC1               	movwi	[1]fsr1
  5903  0701  2FEA               	goto	l11954
  5904                           	line	84
  5905                           	
  5906  0702                     l11940:	
  5907  0702  2FEA               	goto	l11954
  5908                           	line	85
  5909                           	
  5910  0703                     l11938:	
  5911                           	line	86
  5912                           ;PowerFault_B1.c: 84: }
  5913                           ;PowerFault_B1.c: 85: }
  5914                           ;PowerFault_B1.c: 86: }
  5915  0703  2FEA               	goto	l11954
  5916                           	line	87
  5917                           	
  5918  0704                     l11937:	
  5919                           	line	89
  5920                           	
  5921  0704                     l24783:	
  5922                           ;PowerFault_B1.c: 87: else
  5923                           ;PowerFault_B1.c: 88: {
  5924                           ;PowerFault_B1.c: 89: PF->Time++;
  5925  0704  083D               	movf	(_PF)^080h,w
  5926  0705  3E06               	addlw	06h
  5927  0706  0086               	movwf	fsr1l
  5928  0707  0187               	clrf fsr1h	
  5929                           	
  5930  0708  3001               	movlw	01h
  5931  0709  0781               	addwf	indf1,f
  5932  070A  3141               	addfsr	fsr1,1
  5933  070B  1803               	skipnc
  5934  070C  0A81               	incf	indf1,f
  5935                           	line	90
  5936                           	
  5937  070D                     l24785:	
  5938                           ;PowerFault_B1.c: 90: if(PF->Time >= 2)
  5939  070D  083D               	movf	(_PF)^080h,w
  5940  070E  3E06               	addlw	06h
  5941  070F  0086               	movwf	fsr1l
  5942  0710  0187               	clrf fsr1h	
  5943                           	
  5944  0711  3F40               	moviw	[0]fsr1
  5945  0712  0020               	movlb 0	; select bank0
  5946  0713  00B2               	movwf	(??_setPowerFault_Main+0)+0
  5947  0714  3F41               	moviw	[1]fsr1
  5948  0715  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  5949  0716  3000               	movlw	high(02h)
  5950  0717  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  5951  0718  3002               	movlw	low(02h)
  5952  0719  1903               	skipnz
  5953  071A  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  5954  071B  1C03               	skipc
  5955  071C  2F1E               	goto	u8721
  5956  071D  2F1F               	goto	u8720
  5957  071E                     u8721:
  5958  071E  2FEA               	goto	l11954
  5959  071F                     u8720:
  5960                           	line	92
  5961                           	
  5962  071F                     l24787:	
  5963                           ;PowerFault_B1.c: 91: {
  5964                           ;PowerFault_B1.c: 92: PF->Time=0;
  5965  071F  0021               	movlb 1	; select bank1
  5966  0720  083D               	movf	(_PF)^080h,w
  5967  0721  3E06               	addlw	06h
  5968  0722  0086               	movwf	fsr1l
  5969  0723  0187               	clrf fsr1h	
  5970                           	
  5971  0724  3000               	movlw	low(0)
  5972  0725  3FC0               	movwi	[0]fsr1
  5973  0726  3000               	movlw	high(0)
  5974  0727  3FC1               	movwi	[1]fsr1
  5975                           	line	93
  5976                           ;PowerFault_B1.c: 93: PF->ADtoGO=0;
  5977  0728  083D               	movf	(_PF)^080h,w
  5978  0729  0086               	movwf	fsr1l
  5979  072A  0187               	clrf fsr1h	
  5980                           	
  5981  072B  1181               	bcf	indf1,3
  5982                           	line	95
  5983                           ;PowerFault_B1.c: 95: if(PF->ERROR)
  5984  072C  083D               	movf	(_PF)^080h,w
  5985  072D  0086               	movwf	fsr1l
  5986  072E  0187               	clrf fsr1h	
  5987                           	
  5988  072F  1C81               	btfss	indf1,1
  5989  0730  2F32               	goto	u8731
  5990  0731  2F33               	goto	u8730
  5991  0732                     u8731:
  5992  0732  2F82               	goto	l24803
  5993  0733                     u8730:
  5994                           	line	97
  5995                           	
  5996  0733                     l24789:	
  5997                           ;PowerFault_B1.c: 96: {
  5998                           ;PowerFault_B1.c: 97: if(PF->AD <= (300+100) && PF->AD >= (300-100))
  5999  0733  083D               	movf	(_PF)^080h,w
  6000  0734  3E01               	addlw	01h
  6001  0735  0086               	movwf	fsr1l
  6002  0736  0187               	clrf fsr1h	
  6003                           	
  6004  0737  3F40               	moviw	[0]fsr1
  6005  0738  0020               	movlb 0	; select bank0
  6006  0739  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6007  073A  3F41               	moviw	[1]fsr1
  6008  073B  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6009  073C  3001               	movlw	high(0191h)
  6010  073D  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6011  073E  3091               	movlw	low(0191h)
  6012  073F  1903               	skipnz
  6013  0740  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6014  0741  1803               	skipnc
  6015  0742  2F44               	goto	u8741
  6016  0743  2F45               	goto	u8740
  6017  0744                     u8741:
  6018  0744  2F7A               	goto	l24801
  6019  0745                     u8740:
  6020                           	
  6021  0745                     l24791:	
  6022  0745  0021               	movlb 1	; select bank1
  6023  0746  083D               	movf	(_PF)^080h,w
  6024  0747  3E01               	addlw	01h
  6025  0748  0086               	movwf	fsr1l
  6026  0749  0187               	clrf fsr1h	
  6027                           	
  6028  074A  3F40               	moviw	[0]fsr1
  6029  074B  0020               	movlb 0	; select bank0
  6030  074C  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6031  074D  3F41               	moviw	[1]fsr1
  6032  074E  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6033  074F  3000               	movlw	high(0C8h)
  6034  0750  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6035  0751  30C8               	movlw	low(0C8h)
  6036  0752  1903               	skipnz
  6037  0753  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6038  0754  1C03               	skipc
  6039  0755  2F57               	goto	u8751
  6040  0756  2F58               	goto	u8750
  6041  0757                     u8751:
  6042  0757  2F7A               	goto	l24801
  6043  0758                     u8750:
  6044                           	line	99
  6045                           	
  6046  0758                     l24793:	
  6047                           ;PowerFault_B1.c: 98: {
  6048                           ;PowerFault_B1.c: 99: PF->Count++;
  6049  0758  3001               	movlw	(01h)
  6050  0759  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6051  075A  0021               	movlb 1	; select bank1
  6052  075B  083D               	movf	(_PF)^080h,w
  6053  075C  3E05               	addlw	05h
  6054  075D  0086               	movwf	fsr1l
  6055  075E  0187               	clrf fsr1h	
  6056                           	
  6057  075F  0020               	movlb 0	; select bank0
  6058  0760  0832               	movf	(??_setPowerFault_Main+0)+0,w
  6059  0761  0781               	addwf	indf1,f
  6060                           	line	100
  6061                           	
  6062  0762                     l24795:	
  6063                           ;PowerFault_B1.c: 100: if(PF->Count > 1)
  6064  0762  0021               	movlb 1	; select bank1
  6065  0763  083D               	movf	(_PF)^080h,w
  6066  0764  3E05               	addlw	05h
  6067  0765  0086               	movwf	fsr1l
  6068  0766  0187               	clrf fsr1h	
  6069                           	
  6070  0767  3002               	movlw	(02h)
  6071  0768  0201               	subwf	indf1,w
  6072  0769  1C03               	skipc
  6073  076A  2F6C               	goto	u8761
  6074  076B  2F6D               	goto	u8760
  6075  076C                     u8761:
  6076  076C  2FD3               	goto	l11947
  6077  076D                     u8760:
  6078                           	line	102
  6079                           	
  6080  076D                     l24797:	
  6081                           ;PowerFault_B1.c: 101: {
  6082                           ;PowerFault_B1.c: 102: PF->Count=0;
  6083  076D  083D               	movf	(_PF)^080h,w
  6084  076E  3E05               	addlw	05h
  6085  076F  0086               	movwf	fsr1l
  6086  0770  0187               	clrf fsr1h	
  6087                           	
  6088  0771  0181               	clrf	indf1
  6089                           	line	103
  6090                           	
  6091  0772                     l24799:	
  6092                           ;PowerFault_B1.c: 103: setPowerFault_ERROR(1,0);
  6093  0772  0020               	movlb 0	; select bank0
  6094  0773  01AF               	clrf	(?_setPowerFault_ERROR)
  6095  0774  3001               	movlw	(01h)
  6096  0775  319D  2581  3186   	fcall	_setPowerFault_ERROR
  6097  0778  2FD3               	goto	l11947
  6098                           	line	104
  6099                           	
  6100  0779                     l11945:	
  6101                           	line	105
  6102                           ;PowerFault_B1.c: 104: }
  6103                           ;PowerFault_B1.c: 105: }
  6104  0779  2FD3               	goto	l11947
  6105                           	line	106
  6106                           	
  6107  077A                     l11944:	
  6108                           	line	108
  6109                           	
  6110  077A                     l24801:	
  6111                           ;PowerFault_B1.c: 106: else
  6112                           ;PowerFault_B1.c: 107: {
  6113                           ;PowerFault_B1.c: 108: PF->Count=0;
  6114  077A  0021               	movlb 1	; select bank1
  6115  077B  083D               	movf	(_PF)^080h,w
  6116  077C  3E05               	addlw	05h
  6117  077D  0086               	movwf	fsr1l
  6118  077E  0187               	clrf fsr1h	
  6119                           	
  6120  077F  0181               	clrf	indf1
  6121  0780  2FD3               	goto	l11947
  6122                           	line	109
  6123                           	
  6124  0781                     l11946:	
  6125                           	line	110
  6126                           ;PowerFault_B1.c: 109: }
  6127                           ;PowerFault_B1.c: 110: }
  6128  0781  2FD3               	goto	l11947
  6129                           	line	111
  6130                           	
  6131  0782                     l11943:	
  6132                           	line	113
  6133                           	
  6134  0782                     l24803:	
  6135                           ;PowerFault_B1.c: 111: else
  6136                           ;PowerFault_B1.c: 112: {
  6137                           ;PowerFault_B1.c: 113: if(PF->AD >= (300+100) || PF->AD <= (310-100))
  6138  0782  083D               	movf	(_PF)^080h,w
  6139  0783  3E01               	addlw	01h
  6140  0784  0086               	movwf	fsr1l
  6141  0785  0187               	clrf fsr1h	
  6142                           	
  6143  0786  3F40               	moviw	[0]fsr1
  6144  0787  0020               	movlb 0	; select bank0
  6145  0788  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6146  0789  3F41               	moviw	[1]fsr1
  6147  078A  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6148  078B  3001               	movlw	high(0190h)
  6149  078C  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6150  078D  3090               	movlw	low(0190h)
  6151  078E  1903               	skipnz
  6152  078F  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6153  0790  1803               	skipnc
  6154  0791  2F93               	goto	u8771
  6155  0792  2F94               	goto	u8770
  6156  0793                     u8771:
  6157  0793  2FA8               	goto	l24807
  6158  0794                     u8770:
  6159                           	
  6160  0794                     l24805:	
  6161  0794  0021               	movlb 1	; select bank1
  6162  0795  083D               	movf	(_PF)^080h,w
  6163  0796  3E01               	addlw	01h
  6164  0797  0086               	movwf	fsr1l
  6165  0798  0187               	clrf fsr1h	
  6166                           	
  6167  0799  3F40               	moviw	[0]fsr1
  6168  079A  0020               	movlb 0	; select bank0
  6169  079B  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6170  079C  3F41               	moviw	[1]fsr1
  6171  079D  00B3               	movwf	(??_setPowerFault_Main+0)+0+1
  6172  079E  3000               	movlw	high(0D3h)
  6173  079F  0233               	subwf	1+(??_setPowerFault_Main+0)+0,w
  6174  07A0  30D3               	movlw	low(0D3h)
  6175  07A1  1903               	skipnz
  6176  07A2  0232               	subwf	0+(??_setPowerFault_Main+0)+0,w
  6177  07A3  1803               	skipnc
  6178  07A4  2FA6               	goto	u8781
  6179  07A5  2FA7               	goto	u8780
  6180  07A6                     u8781:
  6181  07A6  2FCC               	goto	l24815
  6182  07A7                     u8780:
  6183  07A7  2FA8               	goto	l24807
  6184                           	
  6185  07A8                     l11950:	
  6186                           	line	115
  6187                           	
  6188  07A8                     l24807:	
  6189                           ;PowerFault_B1.c: 114: {
  6190                           ;PowerFault_B1.c: 115: PF->Count++;
  6191  07A8  3001               	movlw	(01h)
  6192  07A9  00B2               	movwf	(??_setPowerFault_Main+0)+0
  6193  07AA  0021               	movlb 1	; select bank1
  6194  07AB  083D               	movf	(_PF)^080h,w
  6195  07AC  3E05               	addlw	05h
  6196  07AD  0086               	movwf	fsr1l
  6197  07AE  0187               	clrf fsr1h	
  6198                           	
  6199  07AF  0020               	movlb 0	; select bank0
  6200  07B0  0832               	movf	(??_setPowerFault_Main+0)+0,w
  6201  07B1  0781               	addwf	indf1,f
  6202                           	line	116
  6203                           	
  6204  07B2                     l24809:	
  6205                           ;PowerFault_B1.c: 116: if(PF->Count > 1)
  6206  07B2  0021               	movlb 1	; select bank1
  6207  07B3  083D               	movf	(_PF)^080h,w
  6208  07B4  3E05               	addlw	05h
  6209  07B5  0086               	movwf	fsr1l
  6210  07B6  0187               	clrf fsr1h	
  6211                           	
  6212  07B7  3002               	movlw	(02h)
  6213  07B8  0201               	subwf	indf1,w
  6214  07B9  1C03               	skipc
  6215  07BA  2FBC               	goto	u8791
  6216  07BB  2FBD               	goto	u8790
  6217  07BC                     u8791:
  6218  07BC  2FD3               	goto	l11947
  6219  07BD                     u8790:
  6220                           	line	118
  6221                           	
  6222  07BD                     l24811:	
  6223                           ;PowerFault_B1.c: 117: {
  6224                           ;PowerFault_B1.c: 118: PF->Count=0;
  6225  07BD  083D               	movf	(_PF)^080h,w
  6226  07BE  3E05               	addlw	05h
  6227  07BF  0086               	movwf	fsr1l
  6228  07C0  0187               	clrf fsr1h	
  6229                           	
  6230  07C1  0181               	clrf	indf1
  6231                           	line	119
  6232                           	
  6233  07C2                     l24813:	
  6234                           ;PowerFault_B1.c: 119: setPowerFault_ERROR(1,1);
  6235  07C2  0020               	movlb 0	; select bank0
  6236  07C3  01AF               	clrf	(?_setPowerFault_ERROR)
  6237  07C4  1403               	bsf	status,0
  6238  07C5  0DAF               	rlf	(?_setPowerFault_ERROR),f
  6239  07C6  3001               	movlw	(01h)
  6240  07C7  319D  2581  3186   	fcall	_setPowerFault_ERROR
  6241  07CA  2FD3               	goto	l11947
  6242                           	line	120
  6243                           	
  6244  07CB                     l11951:	
  6245                           	line	121
  6246                           ;PowerFault_B1.c: 120: }
  6247                           ;PowerFault_B1.c: 121: }
  6248  07CB  2FD3               	goto	l11947
  6249                           	line	122
  6250                           	
  6251  07CC                     l11948:	
  6252                           	line	124
  6253                           	
  6254  07CC                     l24815:	
  6255                           ;PowerFault_B1.c: 122: else
  6256                           ;PowerFault_B1.c: 123: {
  6257                           ;PowerFault_B1.c: 124: PF->Count=0;
  6258  07CC  0021               	movlb 1	; select bank1
  6259  07CD  083D               	movf	(_PF)^080h,w
  6260  07CE  3E05               	addlw	05h
  6261  07CF  0086               	movwf	fsr1l
  6262  07D0  0187               	clrf fsr1h	
  6263                           	
  6264  07D1  0181               	clrf	indf1
  6265  07D2  2FD3               	goto	l11947
  6266                           	line	125
  6267                           	
  6268  07D3                     l11952:	
  6269                           	line	127
  6270                           	
  6271  07D3                     l11947:	
  6272                           	line	128
  6273                           ;PowerFault_B1.c: 125: }
  6274                           ;PowerFault_B1.c: 127: }
  6275                           ;PowerFault_B1.c: 128: if(PF->ERROR == 0)
  6276  07D3  0021               	movlb 1	; select bank1
  6277  07D4  083D               	movf	(_PF)^080h,w
  6278  07D5  0086               	movwf	fsr1l
  6279  07D6  0187               	clrf fsr1h	
  6280                           	
  6281  07D7  1881               	btfsc	indf1,1
  6282  07D8  2FDA               	goto	u8801
  6283  07D9  2FDB               	goto	u8800
  6284  07DA                     u8801:
  6285  07DA  2FDF               	goto	l11953
  6286  07DB                     u8800:
  6287                           	line	130
  6288                           	
  6289  07DB                     l24817:	
  6290                           ;PowerFault_B1.c: 129: {
  6291                           ;PowerFault_B1.c: 130: PF->Safe=1;
  6292  07DB  083D               	movf	(_PF)^080h,w
  6293  07DC  0086               	movwf	fsr1l
  6294  07DD  0187               	clrf fsr1h	
  6295                           	
  6296  07DE  1501               	bsf	indf1,2
  6297                           	line	131
  6298                           	
  6299  07DF                     l11953:	
  6300                           	line	132
  6301                           ;PowerFault_B1.c: 131: }
  6302                           ;PowerFault_B1.c: 132: PF->AD=0;
  6303  07DF  083D               	movf	(_PF)^080h,w
  6304  07E0  3E01               	addlw	01h
  6305  07E1  0086               	movwf	fsr1l
  6306  07E2  0187               	clrf fsr1h	
  6307                           	
  6308  07E3  3000               	movlw	low(0)
  6309  07E4  3FC0               	movwi	[0]fsr1
  6310  07E5  3000               	movlw	high(0)
  6311  07E6  3FC1               	movwi	[1]fsr1
  6312  07E7  2FEA               	goto	l11954
  6313                           	line	133
  6314                           	
  6315  07E8                     l11942:	
  6316  07E8  2FEA               	goto	l11954
  6317                           	line	134
  6318                           	
  6319  07E9                     l11941:	
  6320  07E9  2FEA               	goto	l11954
  6321                           	line	135
  6322                           	
  6323  07EA                     l11936:	
  6324                           	line	136
  6325                           	
  6326  07EA                     l11954:	
  6327  07EA  0008               	return
  6328                           	opt stack 0
  6329                           GLOBAL	__end_of_setPowerFault_Main
  6330  07EB                     	__end_of_setPowerFault_Main:
  6331 ;; =============== function _setPowerFault_Main ends ============
  6332                           
  6333                           	signat	_setPowerFault_Main,4216
  6334                           	global	_setTemp_Main
  6335                           psect	text3231,local,class=CODE,delta=2
  6336                           global __ptext3231
  6337  0E99                     __ptext3231:
  6338                           
  6339 ;; *************** function _setTemp_Main *****************
  6340 ;; Defined at:
  6341 ;;		line 69 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  temp            1    wreg     unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  temp            1   21[BANK0 ] unsigned char 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;		None               void
  6348 ;; Registers used:
  6349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  6356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  6357 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  6358 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  6359 ;;Total ram usage:        4 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    9
  6362 ;; This function calls:
  6363 ;;		_TempPointSelect
  6364 ;;		_getLoad_Safe
  6365 ;;		_getPF_Safe
  6366 ;;		_setOverTemp_ERROR
  6367 ;; This function is called by:
  6368 ;;		_Temp_Main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           psect	text3231
  6372                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  6373                           	line	69
  6374                           	global	__size_of_setTemp_Main
  6375  0167                     	__size_of_setTemp_Main	equ	__end_of_setTemp_Main-_setTemp_Main
  6376                           	
  6377  0E99                     _setTemp_Main:	
  6378                           	opt	stack 5
  6379                           ; Regs used in _setTemp_Main: [wreg+fsr1l-status,0+pclath+cstack]
  6380                           ;setTemp_Main@temp stored from wreg
  6381  0E99  0020               	movlb 0	; select bank0
  6382  0E9A  00B5               	movwf	(setTemp_Main@temp)
  6383                           	line	70
  6384                           	
  6385  0E9B                     l24707:	
  6386                           ;OverTemperature_B1.c: 70: TempPointSelect(temp);
  6387  0E9B  0835               	movf	(setTemp_Main@temp),w
  6388  0E9C  31AE  26C0  318E   	fcall	_TempPointSelect
  6389                           	line	71
  6390                           	
  6391  0E9F                     l24709:	
  6392                           ;OverTemperature_B1.c: 71: if(Temp->Enable)
  6393  0E9F  087C               	movf	(_Temp),w
  6394  0EA0  0086               	movwf	fsr1l
  6395  0EA1  3001               	movlw 1	; select bank2/3
  6396  0EA2  0087               	movwf fsr1h	
  6397                           	
  6398  0EA3  1C01               	btfss	indf1,0
  6399  0EA4  2EA6               	goto	u8551
  6400  0EA5  2EA7               	goto	u8550
  6401  0EA6                     u8551:
  6402  0EA6  2FFF               	goto	l10783
  6403  0EA7                     u8550:
  6404                           	line	73
  6405                           	
  6406  0EA7                     l24711:	
  6407                           ;OverTemperature_B1.c: 72: {
  6408                           ;OverTemperature_B1.c: 73: if(Temp->ADtoGO == 0)
  6409  0EA7  087C               	movf	(_Temp),w
  6410  0EA8  0086               	movwf	fsr1l
  6411  0EA9  3001               	movlw 1	; select bank2/3
  6412  0EAA  0087               	movwf fsr1h	
  6413                           	
  6414  0EAB  1901               	btfsc	indf1,2
  6415  0EAC  2EAE               	goto	u8561
  6416  0EAD  2EAF               	goto	u8560
  6417  0EAE                     u8561:
  6418  0EAE  2EFE               	goto	l24725
  6419  0EAF                     u8560:
  6420                           	line	75
  6421                           	
  6422  0EAF                     l24713:	
  6423                           ;OverTemperature_B1.c: 74: {
  6424                           ;OverTemperature_B1.c: 75: Temp->Time++;
  6425  0EAF  087C               	movf	(_Temp),w
  6426  0EB0  3E01               	addlw	01h
  6427  0EB1  0086               	movwf	fsr1l
  6428  0EB2  3001               	movlw 1	; select bank2/3
  6429  0EB3  0087               	movwf fsr1h	
  6430                           	
  6431  0EB4  3001               	movlw	01h
  6432  0EB5  0781               	addwf	indf1,f
  6433  0EB6  3141               	addfsr	fsr1,1
  6434  0EB7  1803               	skipnc
  6435  0EB8  0A81               	incf	indf1,f
  6436                           	line	76
  6437                           	
  6438  0EB9                     l24715:	
  6439                           ;OverTemperature_B1.c: 76: if(Temp->Time >= 500)
  6440  0EB9  087C               	movf	(_Temp),w
  6441  0EBA  3E01               	addlw	01h
  6442  0EBB  0086               	movwf	fsr1l
  6443  0EBC  3001               	movlw 1	; select bank2/3
  6444  0EBD  0087               	movwf fsr1h	
  6445                           	
  6446  0EBE  3F40               	moviw	[0]fsr1
  6447  0EBF  0020               	movlb 0	; select bank0
  6448  0EC0  00B2               	movwf	(??_setTemp_Main+0)+0
  6449  0EC1  3F41               	moviw	[1]fsr1
  6450  0EC2  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6451  0EC3  3001               	movlw	high(01F4h)
  6452  0EC4  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6453  0EC5  30F4               	movlw	low(01F4h)
  6454  0EC6  1903               	skipnz
  6455  0EC7  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6456  0EC8  1C03               	skipc
  6457  0EC9  2ECB               	goto	u8571
  6458  0ECA  2ECC               	goto	u8570
  6459  0ECB                     u8571:
  6460  0ECB  2FFF               	goto	l10783
  6461  0ECC                     u8570:
  6462                           	line	78
  6463                           	
  6464  0ECC                     l24717:	
  6465                           ;OverTemperature_B1.c: 77: {
  6466                           ;OverTemperature_B1.c: 78: if(getLoad_Safe(1) && getPF_Safe(1))
  6467  0ECC  3001               	movlw	(01h)
  6468  0ECD  31A1  21CA  318E   	fcall	_getLoad_Safe
  6469  0ED0  3A00               	xorlw	0&0ffh
  6470  0ED1  1903               	skipnz
  6471  0ED2  2ED4               	goto	u8581
  6472  0ED3  2ED5               	goto	u8580
  6473  0ED4                     u8581:
  6474  0ED4  2EF2               	goto	l24723
  6475  0ED5                     u8580:
  6476                           	
  6477  0ED5                     l24719:	
  6478  0ED5  3001               	movlw	(01h)
  6479  0ED6  31A0  2061  318E   	fcall	_getPF_Safe
  6480  0ED9  3A00               	xorlw	0&0ffh
  6481  0EDA  1903               	skipnz
  6482  0EDB  2EDD               	goto	u8591
  6483  0EDC  2EDE               	goto	u8590
  6484  0EDD                     u8591:
  6485  0EDD  2EF2               	goto	l24723
  6486  0EDE                     u8590:
  6487                           	line	80
  6488                           	
  6489  0EDE                     l24721:	
  6490                           ;OverTemperature_B1.c: 79: {
  6491                           ;OverTemperature_B1.c: 80: Temp->Time=0;
  6492  0EDE  087C               	movf	(_Temp),w
  6493  0EDF  3E01               	addlw	01h
  6494  0EE0  0086               	movwf	fsr1l
  6495  0EE1  3001               	movlw 1	; select bank2/3
  6496  0EE2  0087               	movwf fsr1h	
  6497                           	
  6498  0EE3  3000               	movlw	low(0)
  6499  0EE4  3FC0               	movwi	[0]fsr1
  6500  0EE5  3000               	movlw	high(0)
  6501  0EE6  3FC1               	movwi	[1]fsr1
  6502                           	line	81
  6503                           ;OverTemperature_B1.c: 81: Temp->ADtoGO=1;
  6504  0EE7  087C               	movf	(_Temp),w
  6505  0EE8  0086               	movwf	fsr1l
  6506  0EE9  3001               	movlw 1	; select bank2/3
  6507  0EEA  0087               	movwf fsr1h	
  6508                           	
  6509  0EEB  1501               	bsf	indf1,2
  6510                           	line	82
  6511                           ;OverTemperature_B1.c: 82: Temp->Safe=0;
  6512  0EEC  087C               	movf	(_Temp),w
  6513  0EED  0086               	movwf	fsr1l
  6514  0EEE  3001               	movlw 1	; select bank2/3
  6515  0EEF  0087               	movwf fsr1h	
  6516                           	
  6517  0EF0  1201               	bcf	indf1,4
  6518                           	line	83
  6519                           ;OverTemperature_B1.c: 83: }
  6520  0EF1  2FFF               	goto	l10783
  6521                           	line	84
  6522                           	
  6523  0EF2                     l10770:	
  6524                           	line	86
  6525                           	
  6526  0EF2                     l24723:	
  6527                           ;OverTemperature_B1.c: 84: else
  6528                           ;OverTemperature_B1.c: 85: {
  6529                           ;OverTemperature_B1.c: 86: Temp->Time=1000;
  6530  0EF2  087C               	movf	(_Temp),w
  6531  0EF3  3E01               	addlw	01h
  6532  0EF4  0086               	movwf	fsr1l
  6533  0EF5  3001               	movlw 1	; select bank2/3
  6534  0EF6  0087               	movwf fsr1h	
  6535                           	
  6536  0EF7  30E8               	movlw	low(03E8h)
  6537  0EF8  3FC0               	movwi	[0]fsr1
  6538  0EF9  3003               	movlw	high(03E8h)
  6539  0EFA  3FC1               	movwi	[1]fsr1
  6540  0EFB  2FFF               	goto	l10783
  6541                           	line	87
  6542                           	
  6543  0EFC                     l10771:	
  6544  0EFC  2FFF               	goto	l10783
  6545                           	line	88
  6546                           	
  6547  0EFD                     l10769:	
  6548                           	line	89
  6549                           ;OverTemperature_B1.c: 87: }
  6550                           ;OverTemperature_B1.c: 88: }
  6551                           ;OverTemperature_B1.c: 89: }
  6552  0EFD  2FFF               	goto	l10783
  6553                           	line	90
  6554                           	
  6555  0EFE                     l10768:	
  6556                           	line	92
  6557                           	
  6558  0EFE                     l24725:	
  6559                           ;OverTemperature_B1.c: 90: else
  6560                           ;OverTemperature_B1.c: 91: {
  6561                           ;OverTemperature_B1.c: 92: Temp->Time++;
  6562  0EFE  087C               	movf	(_Temp),w
  6563  0EFF  3E01               	addlw	01h
  6564  0F00  0086               	movwf	fsr1l
  6565  0F01  3001               	movlw 1	; select bank2/3
  6566  0F02  0087               	movwf fsr1h	
  6567                           	
  6568  0F03  3001               	movlw	01h
  6569  0F04  0781               	addwf	indf1,f
  6570  0F05  3141               	addfsr	fsr1,1
  6571  0F06  1803               	skipnc
  6572  0F07  0A81               	incf	indf1,f
  6573                           	line	93
  6574                           	
  6575  0F08                     l24727:	
  6576                           ;OverTemperature_B1.c: 93: if(Temp->Time >= 4)
  6577  0F08  087C               	movf	(_Temp),w
  6578  0F09  3E01               	addlw	01h
  6579  0F0A  0086               	movwf	fsr1l
  6580  0F0B  3001               	movlw 1	; select bank2/3
  6581  0F0C  0087               	movwf fsr1h	
  6582                           	
  6583  0F0D  3F40               	moviw	[0]fsr1
  6584  0F0E  0020               	movlb 0	; select bank0
  6585  0F0F  00B2               	movwf	(??_setTemp_Main+0)+0
  6586  0F10  3F41               	moviw	[1]fsr1
  6587  0F11  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6588  0F12  3000               	movlw	high(04h)
  6589  0F13  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6590  0F14  3004               	movlw	low(04h)
  6591  0F15  1903               	skipnz
  6592  0F16  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6593  0F17  1C03               	skipc
  6594  0F18  2F1A               	goto	u8601
  6595  0F19  2F1B               	goto	u8600
  6596  0F1A                     u8601:
  6597  0F1A  2FFF               	goto	l10783
  6598  0F1B                     u8600:
  6599                           	line	95
  6600                           	
  6601  0F1B                     l24729:	
  6602                           ;OverTemperature_B1.c: 94: {
  6603                           ;OverTemperature_B1.c: 95: Temp->Time=0;
  6604  0F1B  087C               	movf	(_Temp),w
  6605  0F1C  3E01               	addlw	01h
  6606  0F1D  0086               	movwf	fsr1l
  6607  0F1E  3001               	movlw 1	; select bank2/3
  6608  0F1F  0087               	movwf fsr1h	
  6609                           	
  6610  0F20  3000               	movlw	low(0)
  6611  0F21  3FC0               	movwi	[0]fsr1
  6612  0F22  3000               	movlw	high(0)
  6613  0F23  3FC1               	movwi	[1]fsr1
  6614                           	line	96
  6615                           ;OverTemperature_B1.c: 96: Temp->ADtoGO=0;
  6616  0F24  087C               	movf	(_Temp),w
  6617  0F25  0086               	movwf	fsr1l
  6618  0F26  3001               	movlw 1	; select bank2/3
  6619  0F27  0087               	movwf fsr1h	
  6620                           	
  6621  0F28  1101               	bcf	indf1,2
  6622                           	line	97
  6623                           ;OverTemperature_B1.c: 97: Temp->AD=Temp->ADH[1];
  6624  0F29  087C               	movf	(_Temp),w
  6625  0F2A  3E08               	addlw	08h
  6626  0F2B  0086               	movwf	fsr1l
  6627  0F2C  3001               	movlw 1	; select bank2/3
  6628  0F2D  0087               	movwf fsr1h	
  6629                           	
  6630  0F2E  3F40               	moviw	[0]fsr1
  6631  0F2F  00B2               	movwf	(??_setTemp_Main+0)+0
  6632  0F30  3F41               	moviw	[1]fsr1
  6633  0F31  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6634  0F32  087C               	movf	(_Temp),w
  6635  0F33  3E04               	addlw	04h
  6636  0F34  0086               	movwf	fsr1l
  6637  0F35  3001               	movlw 1	; select bank2/3
  6638  0F36  0087               	movwf fsr1h	
  6639                           	
  6640  0F37  0832               	movf	0+(??_setTemp_Main+0)+0,w
  6641  0F38  3FC0               	movwi	[0]fsr1
  6642  0F39  0833               	movf	1+(??_setTemp_Main+0)+0,w
  6643  0F3A  3FC1               	movwi	[1]fsr1
  6644                           	line	98
  6645                           ;OverTemperature_B1.c: 98: if(Temp->ERROR)
  6646  0F3B  087C               	movf	(_Temp),w
  6647  0F3C  0086               	movwf	fsr1l
  6648  0F3D  3001               	movlw 1	; select bank2/3
  6649  0F3E  0087               	movwf fsr1h	
  6650                           	
  6651  0F3F  1C81               	btfss	indf1,1
  6652  0F40  2F42               	goto	u8611
  6653  0F41  2F43               	goto	u8610
  6654  0F42                     u8611:
  6655  0F42  2F7E               	goto	l24743
  6656  0F43                     u8610:
  6657                           	line	100
  6658                           	
  6659  0F43                     l24731:	
  6660                           ;OverTemperature_B1.c: 99: {
  6661                           ;OverTemperature_B1.c: 100: if(Temp->AD >= 540)
  6662  0F43  087C               	movf	(_Temp),w
  6663  0F44  3E04               	addlw	04h
  6664  0F45  0086               	movwf	fsr1l
  6665  0F46  3001               	movlw 1	; select bank2/3
  6666  0F47  0087               	movwf fsr1h	
  6667                           	
  6668  0F48  3F40               	moviw	[0]fsr1
  6669  0F49  00B2               	movwf	(??_setTemp_Main+0)+0
  6670  0F4A  3F41               	moviw	[1]fsr1
  6671  0F4B  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6672  0F4C  3002               	movlw	high(021Ch)
  6673  0F4D  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6674  0F4E  301C               	movlw	low(021Ch)
  6675  0F4F  1903               	skipnz
  6676  0F50  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6677  0F51  1C03               	skipc
  6678  0F52  2F54               	goto	u8621
  6679  0F53  2F55               	goto	u8620
  6680  0F54                     u8621:
  6681  0F54  2F76               	goto	l24741
  6682  0F55                     u8620:
  6683                           	line	102
  6684                           	
  6685  0F55                     l24733:	
  6686                           ;OverTemperature_B1.c: 101: {
  6687                           ;OverTemperature_B1.c: 102: Temp->Count++;
  6688  0F55  3001               	movlw	(01h)
  6689  0F56  00B2               	movwf	(??_setTemp_Main+0)+0
  6690  0F57  087C               	movf	(_Temp),w
  6691  0F58  3E03               	addlw	03h
  6692  0F59  0086               	movwf	fsr1l
  6693  0F5A  3001               	movlw 1	; select bank2/3
  6694  0F5B  0087               	movwf fsr1h	
  6695                           	
  6696  0F5C  0832               	movf	(??_setTemp_Main+0)+0,w
  6697  0F5D  0781               	addwf	indf1,f
  6698                           	line	103
  6699                           	
  6700  0F5E                     l24735:	
  6701                           ;OverTemperature_B1.c: 103: if(Temp->Count >= 3)
  6702  0F5E  087C               	movf	(_Temp),w
  6703  0F5F  3E03               	addlw	03h
  6704  0F60  0086               	movwf	fsr1l
  6705  0F61  3001               	movlw 1	; select bank2/3
  6706  0F62  0087               	movwf fsr1h	
  6707                           	
  6708  0F63  3003               	movlw	(03h)
  6709  0F64  0201               	subwf	indf1,w
  6710  0F65  1C03               	skipc
  6711  0F66  2F68               	goto	u8631
  6712  0F67  2F69               	goto	u8630
  6713  0F68                     u8631:
  6714  0F68  2FBB               	goto	l10778
  6715  0F69                     u8630:
  6716                           	line	105
  6717                           	
  6718  0F69                     l24737:	
  6719                           ;OverTemperature_B1.c: 104: {
  6720                           ;OverTemperature_B1.c: 105: Temp->Count=0;
  6721  0F69  087C               	movf	(_Temp),w
  6722  0F6A  3E03               	addlw	03h
  6723  0F6B  0086               	movwf	fsr1l
  6724  0F6C  3001               	movlw 1	; select bank2/3
  6725  0F6D  0087               	movwf fsr1h	
  6726                           	
  6727  0F6E  0181               	clrf	indf1
  6728                           	line	106
  6729                           	
  6730  0F6F                     l24739:	
  6731                           ;OverTemperature_B1.c: 106: setOverTemp_ERROR(1,0);
  6732  0F6F  01AF               	clrf	(?_setOverTemp_ERROR)
  6733  0F70  3001               	movlw	(01h)
  6734  0F71  319D  25E1  318E   	fcall	_setOverTemp_ERROR
  6735  0F74  2FBB               	goto	l10778
  6736                           	line	107
  6737                           	
  6738  0F75                     l10776:	
  6739                           	line	108
  6740                           ;OverTemperature_B1.c: 107: }
  6741                           ;OverTemperature_B1.c: 108: }
  6742  0F75  2FBB               	goto	l10778
  6743                           	line	109
  6744                           	
  6745  0F76                     l10775:	
  6746                           	line	111
  6747                           	
  6748  0F76                     l24741:	
  6749                           ;OverTemperature_B1.c: 109: else
  6750                           ;OverTemperature_B1.c: 110: {
  6751                           ;OverTemperature_B1.c: 111: Temp->Count=0;
  6752  0F76  087C               	movf	(_Temp),w
  6753  0F77  3E03               	addlw	03h
  6754  0F78  0086               	movwf	fsr1l
  6755  0F79  3001               	movlw 1	; select bank2/3
  6756  0F7A  0087               	movwf fsr1h	
  6757                           	
  6758  0F7B  0181               	clrf	indf1
  6759  0F7C  2FBB               	goto	l10778
  6760                           	line	112
  6761                           	
  6762  0F7D                     l10777:	
  6763                           	line	113
  6764                           ;OverTemperature_B1.c: 112: }
  6765                           ;OverTemperature_B1.c: 113: }
  6766  0F7D  2FBB               	goto	l10778
  6767                           	line	114
  6768                           	
  6769  0F7E                     l10774:	
  6770                           	line	116
  6771                           	
  6772  0F7E                     l24743:	
  6773                           ;OverTemperature_B1.c: 114: else
  6774                           ;OverTemperature_B1.c: 115: {
  6775                           ;OverTemperature_B1.c: 116: if(Temp->AD <= 475)
  6776  0F7E  087C               	movf	(_Temp),w
  6777  0F7F  3E04               	addlw	04h
  6778  0F80  0086               	movwf	fsr1l
  6779  0F81  3001               	movlw 1	; select bank2/3
  6780  0F82  0087               	movwf fsr1h	
  6781                           	
  6782  0F83  3F40               	moviw	[0]fsr1
  6783  0F84  0020               	movlb 0	; select bank0
  6784  0F85  00B2               	movwf	(??_setTemp_Main+0)+0
  6785  0F86  3F41               	moviw	[1]fsr1
  6786  0F87  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6787  0F88  3001               	movlw	high(01DCh)
  6788  0F89  0233               	subwf	1+(??_setTemp_Main+0)+0,w
  6789  0F8A  30DC               	movlw	low(01DCh)
  6790  0F8B  1903               	skipnz
  6791  0F8C  0232               	subwf	0+(??_setTemp_Main+0)+0,w
  6792  0F8D  1803               	skipnc
  6793  0F8E  2F90               	goto	u8641
  6794  0F8F  2F91               	goto	u8640
  6795  0F90                     u8641:
  6796  0F90  2FB4               	goto	l24753
  6797  0F91                     u8640:
  6798                           	line	118
  6799                           	
  6800  0F91                     l24745:	
  6801                           ;OverTemperature_B1.c: 117: {
  6802                           ;OverTemperature_B1.c: 118: Temp->Count++;
  6803  0F91  3001               	movlw	(01h)
  6804  0F92  00B2               	movwf	(??_setTemp_Main+0)+0
  6805  0F93  087C               	movf	(_Temp),w
  6806  0F94  3E03               	addlw	03h
  6807  0F95  0086               	movwf	fsr1l
  6808  0F96  3001               	movlw 1	; select bank2/3
  6809  0F97  0087               	movwf fsr1h	
  6810                           	
  6811  0F98  0832               	movf	(??_setTemp_Main+0)+0,w
  6812  0F99  0781               	addwf	indf1,f
  6813                           	line	119
  6814                           	
  6815  0F9A                     l24747:	
  6816                           ;OverTemperature_B1.c: 119: if(Temp->Count >= 3)
  6817  0F9A  087C               	movf	(_Temp),w
  6818  0F9B  3E03               	addlw	03h
  6819  0F9C  0086               	movwf	fsr1l
  6820  0F9D  3001               	movlw 1	; select bank2/3
  6821  0F9E  0087               	movwf fsr1h	
  6822                           	
  6823  0F9F  3003               	movlw	(03h)
  6824  0FA0  0201               	subwf	indf1,w
  6825  0FA1  1C03               	skipc
  6826  0FA2  2FA4               	goto	u8651
  6827  0FA3  2FA5               	goto	u8650
  6828  0FA4                     u8651:
  6829  0FA4  2FBB               	goto	l10778
  6830  0FA5                     u8650:
  6831                           	line	121
  6832                           	
  6833  0FA5                     l24749:	
  6834                           ;OverTemperature_B1.c: 120: {
  6835                           ;OverTemperature_B1.c: 121: Temp->Count=0;
  6836  0FA5  087C               	movf	(_Temp),w
  6837  0FA6  3E03               	addlw	03h
  6838  0FA7  0086               	movwf	fsr1l
  6839  0FA8  3001               	movlw 1	; select bank2/3
  6840  0FA9  0087               	movwf fsr1h	
  6841                           	
  6842  0FAA  0181               	clrf	indf1
  6843                           	line	122
  6844                           	
  6845  0FAB                     l24751:	
  6846                           ;OverTemperature_B1.c: 122: setOverTemp_ERROR(1,1);
  6847  0FAB  01AF               	clrf	(?_setOverTemp_ERROR)
  6848  0FAC  1403               	bsf	status,0
  6849  0FAD  0DAF               	rlf	(?_setOverTemp_ERROR),f
  6850  0FAE  3001               	movlw	(01h)
  6851  0FAF  319D  25E1  318E   	fcall	_setOverTemp_ERROR
  6852  0FB2  2FBB               	goto	l10778
  6853                           	line	123
  6854                           	
  6855  0FB3                     l10780:	
  6856                           	line	124
  6857                           ;OverTemperature_B1.c: 123: }
  6858                           ;OverTemperature_B1.c: 124: }
  6859  0FB3  2FBB               	goto	l10778
  6860                           	line	125
  6861                           	
  6862  0FB4                     l10779:	
  6863                           	line	127
  6864                           	
  6865  0FB4                     l24753:	
  6866                           ;OverTemperature_B1.c: 125: else
  6867                           ;OverTemperature_B1.c: 126: {
  6868                           ;OverTemperature_B1.c: 127: Temp->Count=0;
  6869  0FB4  087C               	movf	(_Temp),w
  6870  0FB5  3E03               	addlw	03h
  6871  0FB6  0086               	movwf	fsr1l
  6872  0FB7  3001               	movlw 1	; select bank2/3
  6873  0FB8  0087               	movwf fsr1h	
  6874                           	
  6875  0FB9  0181               	clrf	indf1
  6876  0FBA  2FBB               	goto	l10778
  6877                           	line	128
  6878                           	
  6879  0FBB                     l10781:	
  6880                           	line	129
  6881                           	
  6882  0FBB                     l10778:	
  6883                           	line	130
  6884                           ;OverTemperature_B1.c: 128: }
  6885                           ;OverTemperature_B1.c: 129: }
  6886                           ;OverTemperature_B1.c: 130: if(Temp->ERROR == 0)
  6887  0FBB  087C               	movf	(_Temp),w
  6888  0FBC  0086               	movwf	fsr1l
  6889  0FBD  3001               	movlw 1	; select bank2/3
  6890  0FBE  0087               	movwf fsr1h	
  6891                           	
  6892  0FBF  1881               	btfsc	indf1,1
  6893  0FC0  2FC2               	goto	u8661
  6894  0FC1  2FC3               	goto	u8660
  6895  0FC2                     u8661:
  6896  0FC2  2FC9               	goto	l24757
  6897  0FC3                     u8660:
  6898                           	line	132
  6899                           	
  6900  0FC3                     l24755:	
  6901                           ;OverTemperature_B1.c: 131: {
  6902                           ;OverTemperature_B1.c: 132: Temp->Safe=1;
  6903  0FC3  087C               	movf	(_Temp),w
  6904  0FC4  0086               	movwf	fsr1l
  6905  0FC5  3001               	movlw 1	; select bank2/3
  6906  0FC6  0087               	movwf fsr1h	
  6907                           	
  6908  0FC7  1601               	bsf	indf1,4
  6909  0FC8  2FC9               	goto	l24757
  6910                           	line	133
  6911                           	
  6912  0FC9                     l10782:	
  6913                           	line	134
  6914                           	
  6915  0FC9                     l24757:	
  6916                           ;OverTemperature_B1.c: 133: }
  6917                           ;OverTemperature_B1.c: 134: Product->Data[24]=Temp->AD >> 8;
  6918  0FC9  087C               	movf	(_Temp),w
  6919  0FCA  3E04               	addlw	04h
  6920  0FCB  0086               	movwf	fsr1l
  6921  0FCC  3001               	movlw 1	; select bank2/3
  6922  0FCD  0087               	movwf fsr1h	
  6923                           	
  6924  0FCE  3F40               	moviw	[0]fsr1
  6925  0FCF  0020               	movlb 0	; select bank0
  6926  0FD0  00B2               	movwf	(??_setTemp_Main+0)+0
  6927  0FD1  3F41               	moviw	[1]fsr1
  6928  0FD2  00B3               	movwf	(??_setTemp_Main+0)+0+1
  6929  0FD3  0833               	movf	1+(??_setTemp_Main+0)+0,w
  6930  0FD4  00B4               	movwf	(??_setTemp_Main+2)+0
  6931  0FD5  087D               	movf	(_Product),w
  6932  0FD6  3E18               	addlw	018h
  6933  0FD7  0086               	movwf	fsr1l
  6934  0FD8  3001               	movlw 1	; select bank2/3
  6935  0FD9  0087               	movwf fsr1h	
  6936                           	
  6937  0FDA  0834               	movf	(??_setTemp_Main+2)+0,w
  6938  0FDB  0081               	movwf	indf1
  6939                           	line	135
  6940                           	
  6941  0FDC                     l24759:	
  6942                           ;OverTemperature_B1.c: 135: Product->Data[25]=Temp->AD;
  6943  0FDC  087C               	movf	(_Temp),w
  6944  0FDD  3E04               	addlw	04h
  6945  0FDE  0086               	movwf	fsr1l
  6946  0FDF  3001               	movlw 1	; select bank2/3
  6947  0FE0  0087               	movwf fsr1h	
  6948                           	
  6949  0FE1  0801               	movf	indf1,w
  6950  0FE2  00B2               	movwf	(??_setTemp_Main+0)+0
  6951  0FE3  087D               	movf	(_Product),w
  6952  0FE4  3E19               	addlw	019h
  6953  0FE5  0086               	movwf	fsr1l
  6954  0FE6  3001               	movlw 1	; select bank2/3
  6955  0FE7  0087               	movwf fsr1h	
  6956                           	
  6957  0FE8  0832               	movf	(??_setTemp_Main+0)+0,w
  6958  0FE9  0081               	movwf	indf1
  6959                           	line	136
  6960                           	
  6961  0FEA                     l24761:	
  6962                           ;OverTemperature_B1.c: 136: Temp->ADH[0]=0;
  6963  0FEA  087C               	movf	(_Temp),w
  6964  0FEB  3E06               	addlw	06h
  6965  0FEC  0086               	movwf	fsr1l
  6966  0FED  3001               	movlw 1	; select bank2/3
  6967  0FEE  0087               	movwf fsr1h	
  6968                           	
  6969  0FEF  3000               	movlw	low(0)
  6970  0FF0  3FC0               	movwi	[0]fsr1
  6971  0FF1  3000               	movlw	high(0)
  6972  0FF2  3FC1               	movwi	[1]fsr1
  6973                           	line	137
  6974                           	
  6975  0FF3                     l24763:	
  6976                           ;OverTemperature_B1.c: 137: Temp->ADH[1]=0;
  6977  0FF3  087C               	movf	(_Temp),w
  6978  0FF4  3E08               	addlw	08h
  6979  0FF5  0086               	movwf	fsr1l
  6980  0FF6  3001               	movlw 1	; select bank2/3
  6981  0FF7  0087               	movwf fsr1h	
  6982                           	
  6983  0FF8  3000               	movlw	low(0)
  6984  0FF9  3FC0               	movwi	[0]fsr1
  6985  0FFA  3000               	movlw	high(0)
  6986  0FFB  3FC1               	movwi	[1]fsr1
  6987  0FFC  2FFF               	goto	l10783
  6988                           	line	138
  6989                           	
  6990  0FFD                     l10773:	
  6991  0FFD  2FFF               	goto	l10783
  6992                           	line	139
  6993                           	
  6994  0FFE                     l10772:	
  6995  0FFE  2FFF               	goto	l10783
  6996                           	line	140
  6997                           	
  6998  0FFF                     l10767:	
  6999                           	line	141
  7000                           	
  7001  0FFF                     l10783:	
  7002  0FFF  0008               	return
  7003                           	opt stack 0
  7004                           GLOBAL	__end_of_setTemp_Main
  7005  1000                     	__end_of_setTemp_Main:
  7006 ;; =============== function _setTemp_Main ends ============
  7007                           
  7008                           	signat	_setTemp_Main,4216
  7009                           	global	_setLoad_Main
  7010                           psect	text3232,local,class=CODE,delta=2
  7011                           global __ptext3232
  7012  0018                     __ptext3232:
  7013                           
  7014 ;; *************** function _setLoad_Main *****************
  7015 ;; Defined at:
  7016 ;;		line 69 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  load            1    wreg     unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  load            1   22[BANK0 ] unsigned char 
  7021 ;;  i               1    0        unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;		None               void
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  7032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  7033 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
  7034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
  7035 ;;Total ram usage:        5 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:    9
  7038 ;; This function calls:
  7039 ;;		_LoadPointSelect
  7040 ;;		_setLoad_ERROR
  7041 ;;		___lwdiv
  7042 ;;		___wmul
  7043 ;;		_setDimmerLights_Open
  7044 ;;		_setLoad_AH_AL_Restore
  7045 ;;		_getTemp_Safe
  7046 ;;		_getPF_Safe
  7047 ;; This function is called by:
  7048 ;;		_Load_Main
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           psect	text3232
  7052                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  7053                           	line	69
  7054                           	global	__size_of_setLoad_Main
  7055  0312                     	__size_of_setLoad_Main	equ	__end_of_setLoad_Main-_setLoad_Main
  7056                           	
  7057  0018                     _setLoad_Main:	
  7058                           	opt	stack 5
  7059                           ; Regs used in _setLoad_Main: [wreg-status,0+pclath+cstack]
  7060                           ;setLoad_Main@load stored from wreg
  7061                           	line	71
  7062  0018  0020               	movlb 0	; select bank0
  7063  0019  00B6               	movwf	(setLoad_Main@load)
  7064                           	
  7065  001A                     l24611:	
  7066                           ;OverLoad_B1.c: 70: char i;
  7067                           ;OverLoad_B1.c: 71: LoadPointSelect(load);
  7068  001A  0836               	movf	(setLoad_Main@load),w
  7069  001B  31AF  27BA  3180   	fcall	_LoadPointSelect
  7070                           	line	72
  7071                           	
  7072  001E                     l24613:	
  7073                           ;OverLoad_B1.c: 72: if(Load->ERROR)
  7074  001E  0020               	movlb 0	; select bank0
  7075  001F  086E               	movf	(_Load),w
  7076  0020  0086               	movwf	fsr1l
  7077  0021  3002               	movlw 2	; select bank4/5
  7078  0022  0087               	movwf fsr1h	
  7079                           	
  7080  0023  1E81               	btfss	indf1,5
  7081  0024  2826               	goto	u8341
  7082  0025  2827               	goto	u8340
  7083  0026                     u8341:
  7084  0026  2853               	goto	l24623
  7085  0027                     u8340:
  7086                           	line	74
  7087                           	
  7088  0027                     l24615:	
  7089                           ;OverLoad_B1.c: 73: {
  7090                           ;OverLoad_B1.c: 74: Load->ErrorTime++;
  7091  0027  086E               	movf	(_Load),w
  7092  0028  3E03               	addlw	03h
  7093  0029  0086               	movwf	fsr1l
  7094  002A  3002               	movlw 2	; select bank4/5
  7095  002B  0087               	movwf fsr1h	
  7096                           	
  7097  002C  3001               	movlw	01h
  7098  002D  0781               	addwf	indf1,f
  7099  002E  3141               	addfsr	fsr1,1
  7100  002F  1803               	skipnc
  7101  0030  0A81               	incf	indf1,f
  7102                           	line	75
  7103                           	
  7104  0031                     l24617:	
  7105                           ;OverLoad_B1.c: 75: if(Load->ErrorTime >= 1000)
  7106  0031  086E               	movf	(_Load),w
  7107  0032  3E03               	addlw	03h
  7108  0033  0086               	movwf	fsr1l
  7109  0034  3002               	movlw 2	; select bank4/5
  7110  0035  0087               	movwf fsr1h	
  7111                           	
  7112  0036  3F40               	moviw	[0]fsr1
  7113  0037  00B2               	movwf	(??_setLoad_Main+0)+0
  7114  0038  3F41               	moviw	[1]fsr1
  7115  0039  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7116  003A  3003               	movlw	high(03E8h)
  7117  003B  0233               	subwf	1+(??_setLoad_Main+0)+0,w
  7118  003C  30E8               	movlw	low(03E8h)
  7119  003D  1903               	skipnz
  7120  003E  0232               	subwf	0+(??_setLoad_Main+0)+0,w
  7121  003F  1C03               	skipc
  7122  0040  2842               	goto	u8351
  7123  0041  2843               	goto	u8350
  7124  0042                     u8351:
  7125  0042  2B29               	goto	l9571
  7126  0043                     u8350:
  7127                           	line	77
  7128                           	
  7129  0043                     l24619:	
  7130                           ;OverLoad_B1.c: 76: {
  7131                           ;OverLoad_B1.c: 77: Load->ErrorTime=0;
  7132  0043  086E               	movf	(_Load),w
  7133  0044  3E03               	addlw	03h
  7134  0045  0086               	movwf	fsr1l
  7135  0046  3002               	movlw 2	; select bank4/5
  7136  0047  0087               	movwf fsr1h	
  7137                           	
  7138  0048  3000               	movlw	low(0)
  7139  0049  3FC0               	movwi	[0]fsr1
  7140  004A  3000               	movlw	high(0)
  7141  004B  3FC1               	movwi	[1]fsr1
  7142                           	line	78
  7143                           	
  7144  004C                     l24621:	
  7145                           ;OverLoad_B1.c: 78: setLoad_ERROR(load,0);
  7146  004C  01AF               	clrf	(?_setLoad_ERROR)
  7147  004D  0836               	movf	(setLoad_Main@load),w
  7148  004E  3190  2068  3180   	fcall	_setLoad_ERROR
  7149  0051  2B29               	goto	l9571
  7150                           	line	79
  7151                           	
  7152  0052                     l9547:	
  7153                           	line	80
  7154                           ;OverLoad_B1.c: 79: }
  7155                           ;OverLoad_B1.c: 80: }
  7156  0052  2B29               	goto	l9571
  7157                           	line	81
  7158                           	
  7159  0053                     l9546:	
  7160                           	line	83
  7161                           	
  7162  0053                     l24623:	
  7163                           ;OverLoad_B1.c: 81: else
  7164                           ;OverLoad_B1.c: 82: {
  7165                           ;OverLoad_B1.c: 83: if(Load->ADtoGO)
  7166  0053  0020               	movlb 0	; select bank0
  7167  0054  086E               	movf	(_Load),w
  7168  0055  0086               	movwf	fsr1l
  7169  0056  3002               	movlw 2	; select bank4/5
  7170  0057  0087               	movwf fsr1h	
  7171                           	
  7172  0058  1E01               	btfss	indf1,4
  7173  0059  285B               	goto	u8361
  7174  005A  285C               	goto	u8360
  7175  005B                     u8361:
  7176  005B  2AAA               	goto	l24687
  7177  005C                     u8360:
  7178                           	line	85
  7179                           	
  7180  005C                     l24625:	
  7181                           ;OverLoad_B1.c: 84: {
  7182                           ;OverLoad_B1.c: 85: Load->LightsCount=Load->Lights1Status+Load->Lights2Status+Load->Ligh
                                 ts3Status;
  7183  005C  086E               	movf	(_Load),w
  7184  005D  3E45               	addlw	045h
  7185  005E  0086               	movwf	fsr1l
  7186  005F  3002               	movlw 2	; select bank4/5
  7187  0060  0087               	movwf fsr1h	
  7188                           	
  7189  0061  086E               	movf	(_Load),w
  7190  0062  3E44               	addlw	044h
  7191  0063  0084               	movwf	fsr0l
  7192  0064  3002               	movlw 2	; select bank4/5
  7193  0065  0085               	movwf fsr0h	
  7194                           	
  7195  0066  0800               	movf	indf0,w
  7196  0067  00B2               	movwf	(??_setLoad_Main+0)+0
  7197  0068  086E               	movf	(_Load),w
  7198  0069  3E43               	addlw	043h
  7199  006A  0084               	movwf	fsr0l
  7200  006B  3002               	movlw 2	; select bank4/5
  7201  006C  0085               	movwf fsr0h	
  7202                           	
  7203  006D  0800               	movf	indf0,w
  7204  006E  0732               	addwf	(??_setLoad_Main+0)+0,w
  7205  006F  0701               	addwf	indf1,w
  7206  0070  00B3               	movwf	(??_setLoad_Main+1)+0
  7207  0071  086E               	movf	(_Load),w
  7208  0072  3E3E               	addlw	03Eh
  7209  0073  0086               	movwf	fsr1l
  7210  0074  3002               	movlw 2	; select bank4/5
  7211  0075  0087               	movwf fsr1h	
  7212                           	
  7213  0076  0833               	movf	(??_setLoad_Main+1)+0,w
  7214  0077  0081               	movwf	indf1
  7215                           	line	86
  7216                           	
  7217  0078                     l24627:	
  7218                           ;OverLoad_B1.c: 86: Load->Time++;
  7219  0078  086E               	movf	(_Load),w
  7220  0079  3E01               	addlw	01h
  7221  007A  0086               	movwf	fsr1l
  7222  007B  3002               	movlw 2	; select bank4/5
  7223  007C  0087               	movwf fsr1h	
  7224                           	
  7225  007D  3001               	movlw	01h
  7226  007E  0781               	addwf	indf1,f
  7227  007F  3141               	addfsr	fsr1,1
  7228  0080  1803               	skipnc
  7229  0081  0A81               	incf	indf1,f
  7230                           	line	87
  7231                           	
  7232  0082                     l24629:	
  7233                           ;OverLoad_B1.c: 87: if(Load->Time >= 4)
  7234  0082  086E               	movf	(_Load),w
  7235  0083  3E01               	addlw	01h
  7236  0084  0086               	movwf	fsr1l
  7237  0085  3002               	movlw 2	; select bank4/5
  7238  0086  0087               	movwf fsr1h	
  7239                           	
  7240  0087  3F40               	moviw	[0]fsr1
  7241  0088  00B2               	movwf	(??_setLoad_Main+0)+0
  7242  0089  3F41               	moviw	[1]fsr1
  7243  008A  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7244  008B  3000               	movlw	high(04h)
  7245  008C  0233               	subwf	1+(??_setLoad_Main+0)+0,w
  7246  008D  3004               	movlw	low(04h)
  7247  008E  1903               	skipnz
  7248  008F  0232               	subwf	0+(??_setLoad_Main+0)+0,w
  7249  0090  1C03               	skipc
  7250  0091  2893               	goto	u8371
  7251  0092  2894               	goto	u8370
  7252  0093                     u8371:
  7253  0093  2B29               	goto	l9571
  7254  0094                     u8370:
  7255                           	line	89
  7256                           	
  7257  0094                     l24631:	
  7258                           ;OverLoad_B1.c: 88: {
  7259                           ;OverLoad_B1.c: 89: Load->Time=0;
  7260  0094  086E               	movf	(_Load),w
  7261  0095  3E01               	addlw	01h
  7262  0096  0086               	movwf	fsr1l
  7263  0097  3002               	movlw 2	; select bank4/5
  7264  0098  0087               	movwf fsr1h	
  7265                           	
  7266  0099  3000               	movlw	low(0)
  7267  009A  3FC0               	movwi	[0]fsr1
  7268  009B  3000               	movlw	high(0)
  7269  009C  3FC1               	movwi	[1]fsr1
  7270                           	line	90
  7271                           ;OverLoad_B1.c: 90: Load->ADtoGO=0;
  7272  009D  086E               	movf	(_Load),w
  7273  009E  0086               	movwf	fsr1l
  7274  009F  3002               	movlw 2	; select bank4/5
  7275  00A0  0087               	movwf fsr1h	
  7276                           	
  7277  00A1  1201               	bcf	indf1,4
  7278                           	line	91
  7279                           	
  7280  00A2                     l24633:	
  7281                           ;OverLoad_B1.c: 91: Load->ADH=((Load->AH[2]+Load->AH[3]+Load->AH[4])/3);
  7282  00A2  3003               	movlw	low(03h)
  7283  00A3  00A0               	movwf	(?___lwdiv)
  7284  00A4  3000               	movlw	high(03h)
  7285  00A5  00A1               	movwf	((?___lwdiv))+1
  7286  00A6  086E               	movf	(_Load),w
  7287  00A7  3E10               	addlw	010h
  7288  00A8  0086               	movwf	fsr1l
  7289  00A9  3002               	movlw 2	; select bank4/5
  7290  00AA  0087               	movwf fsr1h	
  7291                           	
  7292  00AB  086E               	movf	(_Load),w
  7293  00AC  3E0C               	addlw	0Ch
  7294  00AD  0084               	movwf	fsr0l
  7295  00AE  3002               	movlw 2	; select bank4/5
  7296  00AF  0085               	movwf fsr0h	
  7297                           	
  7298  00B0  3F00               	moviw	[0]fsr0
  7299  00B1  00B2               	movwf	(??_setLoad_Main+0)+0
  7300  00B2  3F01               	moviw	[1]fsr0
  7301  00B3  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7302  00B4  086E               	movf	(_Load),w
  7303  00B5  3E0E               	addlw	0Eh
  7304  00B6  0084               	movwf	fsr0l
  7305  00B7  3002               	movlw 2	; select bank4/5
  7306  00B8  0085               	movwf fsr0h	
  7307                           	
  7308  00B9  3F00               	moviw	[0]fsr0
  7309  00BA  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7310  00BB  00B4               	movwf	(??_setLoad_Main+2)+0
  7311  00BC  3F01               	moviw	[1]fsr0
  7312  00BD  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7313  00BE  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7314  00BF  3F40               	moviw	[0]fsr1
  7315  00C0  0734               	addwf	0+(??_setLoad_Main+2)+0,w
  7316  00C1  00A2               	movwf	0+(?___lwdiv)+02h
  7317  00C2  3F41               	moviw	[1]fsr1
  7318  00C3  3D35               	addwfc	1+(??_setLoad_Main+2)+0,w
  7319  00C4  00A3               	movwf	0+(?___lwdiv)+02h+1
  7320  00C5  3198  20FE  3180   	fcall	___lwdiv
  7321  00C8  0020               	movlb 0	; select bank0
  7322  00C9  086E               	movf	(_Load),w
  7323  00CA  3E2E               	addlw	02Eh
  7324  00CB  0086               	movwf	fsr1l
  7325  00CC  3002               	movlw 2	; select bank4/5
  7326  00CD  0087               	movwf fsr1h	
  7327                           	
  7328  00CE  0820               	movf	(0+(?___lwdiv)),w
  7329  00CF  3FC0               	movwi	[0]fsr1
  7330  00D0  0821               	movf	(1+(?___lwdiv)),w
  7331  00D1  3FC1               	movwi	[1]fsr1
  7332                           	line	92
  7333                           	
  7334  00D2                     l24635:	
  7335                           ;OverLoad_B1.c: 92: Load->ADL=((Load->AL[2]+Load->AL[3]+Load->AL[4])/3);
  7336  00D2  3003               	movlw	low(03h)
  7337  00D3  00A0               	movwf	(?___lwdiv)
  7338  00D4  3000               	movlw	high(03h)
  7339  00D5  00A1               	movwf	((?___lwdiv))+1
  7340  00D6  086E               	movf	(_Load),w
  7341  00D7  3E22               	addlw	022h
  7342  00D8  0086               	movwf	fsr1l
  7343  00D9  3002               	movlw 2	; select bank4/5
  7344  00DA  0087               	movwf fsr1h	
  7345                           	
  7346  00DB  086E               	movf	(_Load),w
  7347  00DC  3E1E               	addlw	01Eh
  7348  00DD  0084               	movwf	fsr0l
  7349  00DE  3002               	movlw 2	; select bank4/5
  7350  00DF  0085               	movwf fsr0h	
  7351                           	
  7352  00E0  3F00               	moviw	[0]fsr0
  7353  00E1  00B2               	movwf	(??_setLoad_Main+0)+0
  7354  00E2  3F01               	moviw	[1]fsr0
  7355  00E3  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7356  00E4  086E               	movf	(_Load),w
  7357  00E5  3E20               	addlw	020h
  7358  00E6  0084               	movwf	fsr0l
  7359  00E7  3002               	movlw 2	; select bank4/5
  7360  00E8  0085               	movwf fsr0h	
  7361                           	
  7362  00E9  3F00               	moviw	[0]fsr0
  7363  00EA  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7364  00EB  00B4               	movwf	(??_setLoad_Main+2)+0
  7365  00EC  3F01               	moviw	[1]fsr0
  7366  00ED  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7367  00EE  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7368  00EF  3F40               	moviw	[0]fsr1
  7369  00F0  0734               	addwf	0+(??_setLoad_Main+2)+0,w
  7370  00F1  00A2               	movwf	0+(?___lwdiv)+02h
  7371  00F2  3F41               	moviw	[1]fsr1
  7372  00F3  3D35               	addwfc	1+(??_setLoad_Main+2)+0,w
  7373  00F4  00A3               	movwf	0+(?___lwdiv)+02h+1
  7374  00F5  3198  20FE  3180   	fcall	___lwdiv
  7375  00F8  0020               	movlb 0	; select bank0
  7376  00F9  086E               	movf	(_Load),w
  7377  00FA  3E30               	addlw	030h
  7378  00FB  0086               	movwf	fsr1l
  7379  00FC  3002               	movlw 2	; select bank4/5
  7380  00FD  0087               	movwf fsr1h	
  7381                           	
  7382  00FE  0820               	movf	(0+(?___lwdiv)),w
  7383  00FF  3FC0               	movwi	[0]fsr1
  7384  0100  0821               	movf	(1+(?___lwdiv)),w
  7385  0101  3FC1               	movwi	[1]fsr1
  7386                           	line	93
  7387                           ;OverLoad_B1.c: 93: if(Load->ADH > Load->ADL)
  7388  0102  086E               	movf	(_Load),w
  7389  0103  3E2E               	addlw	02Eh
  7390  0104  0086               	movwf	fsr1l
  7391  0105  3002               	movlw 2	; select bank4/5
  7392  0106  0087               	movwf fsr1h	
  7393                           	
  7394  0107  3F40               	moviw	[0]fsr1
  7395  0108  00B2               	movwf	(??_setLoad_Main+0)+0
  7396  0109  3F41               	moviw	[1]fsr1
  7397  010A  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7398  010B  086E               	movf	(_Load),w
  7399  010C  3E30               	addlw	030h
  7400  010D  0086               	movwf	fsr1l
  7401  010E  3002               	movlw 2	; select bank4/5
  7402  010F  0087               	movwf fsr1h	
  7403                           	
  7404  0110  3F40               	moviw	[0]fsr1
  7405  0111  00B4               	movwf	(??_setLoad_Main+2)+0
  7406  0112  3F41               	moviw	[1]fsr1
  7407  0113  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7408  0114  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7409  0115  0235               	subwf	1+(??_setLoad_Main+2)+0,w
  7410  0116  1D03               	skipz
  7411  0117  291A               	goto	u8385
  7412  0118  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7413  0119  0234               	subwf	0+(??_setLoad_Main+2)+0,w
  7414  011A                     u8385:
  7415  011A  1803               	skipnc
  7416  011B  291D               	goto	u8381
  7417  011C  291E               	goto	u8380
  7418  011D                     u8381:
  7419  011D  2AA3               	goto	l24685
  7420  011E                     u8380:
  7421                           	line	95
  7422                           	
  7423  011E                     l24637:	
  7424                           ;OverLoad_B1.c: 94: {
  7425                           ;OverLoad_B1.c: 95: Load->AD=(Load->ADH-Load->ADL);
  7426  011E  086E               	movf	(_Load),w
  7427  011F  3E2E               	addlw	02Eh
  7428  0120  0086               	movwf	fsr1l
  7429  0121  3002               	movlw 2	; select bank4/5
  7430  0122  0087               	movwf fsr1h	
  7431                           	
  7432  0123  086E               	movf	(_Load),w
  7433  0124  3E30               	addlw	030h
  7434  0125  0084               	movwf	fsr0l
  7435  0126  3002               	movlw 2	; select bank4/5
  7436  0127  0085               	movwf fsr0h	
  7437                           	
  7438  0128  3F00               	moviw	[0]fsr0
  7439  0129  00B2               	movwf	(??_setLoad_Main+0)+0
  7440  012A  3F01               	moviw	[1]fsr0
  7441  012B  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7442  012C  09B2               	comf	(??_setLoad_Main+0)+0,f
  7443  012D  09B3               	comf	(??_setLoad_Main+0)+1,f
  7444  012E  0AB2               	incf	(??_setLoad_Main+0)+0,f
  7445  012F  1903               	skipnz
  7446  0130  0AB3               	incf	(??_setLoad_Main+0)+1,f
  7447  0131  3F40               	moviw	[0]fsr1
  7448  0132  0732               	addwf	0+(??_setLoad_Main+0)+0,w
  7449  0133  00B4               	movwf	(??_setLoad_Main+2)+0
  7450  0134  3F41               	moviw	[1]fsr1
  7451  0135  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7452  0136  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7453  0137  086E               	movf	(_Load),w
  7454  0138  3E2C               	addlw	02Ch
  7455  0139  0086               	movwf	fsr1l
  7456  013A  3002               	movlw 2	; select bank4/5
  7457  013B  0087               	movwf fsr1h	
  7458                           	
  7459  013C  0834               	movf	0+(??_setLoad_Main+2)+0,w
  7460  013D  3FC0               	movwi	[0]fsr1
  7461  013E  0835               	movf	1+(??_setLoad_Main+2)+0,w
  7462  013F  3FC1               	movwi	[1]fsr1
  7463                           	line	96
  7464                           	
  7465  0140                     l24639:	
  7466                           ;OverLoad_B1.c: 96: if(Load->Count < 10)
  7467  0140  086E               	movf	(_Load),w
  7468  0141  3E3A               	addlw	03Ah
  7469  0142  0086               	movwf	fsr1l
  7470  0143  3002               	movlw 2	; select bank4/5
  7471  0144  0087               	movwf fsr1h	
  7472                           	
  7473  0145  300A               	movlw	(0Ah)
  7474  0146  0201               	subwf	indf1,w
  7475  0147  1803               	skipnc
  7476  0148  294A               	goto	u8391
  7477  0149  294B               	goto	u8390
  7478  014A                     u8391:
  7479  014A  29A3               	goto	l24653
  7480  014B                     u8390:
  7481                           	line	98
  7482                           	
  7483  014B                     l24641:	
  7484                           ;OverLoad_B1.c: 97: {
  7485                           ;OverLoad_B1.c: 98: Load->Count++;
  7486  014B  3001               	movlw	(01h)
  7487  014C  00B2               	movwf	(??_setLoad_Main+0)+0
  7488  014D  086E               	movf	(_Load),w
  7489  014E  3E3A               	addlw	03Ah
  7490  014F  0086               	movwf	fsr1l
  7491  0150  3002               	movlw 2	; select bank4/5
  7492  0151  0087               	movwf fsr1h	
  7493                           	
  7494  0152  0832               	movf	(??_setLoad_Main+0)+0,w
  7495  0153  0781               	addwf	indf1,f
  7496                           	line	99
  7497                           	
  7498  0154                     l24643:	
  7499                           ;OverLoad_B1.c: 99: if(Load->Count == 1)
  7500  0154  086E               	movf	(_Load),w
  7501  0155  3E3A               	addlw	03Ah
  7502  0156  0086               	movwf	fsr1l
  7503  0157  3002               	movlw 2	; select bank4/5
  7504  0158  0087               	movwf fsr1h	
  7505                           	
  7506  0159  0801               	movf	indf1,w
  7507  015A  3A01               	xorlw	01h&0ffh
  7508  015B  1D03               	skipz
  7509  015C  295E               	goto	u8401
  7510  015D  295F               	goto	u8400
  7511  015E                     u8401:
  7512  015E  2968               	goto	l9553
  7513  015F                     u8400:
  7514                           	line	101
  7515                           	
  7516  015F                     l24645:	
  7517                           ;OverLoad_B1.c: 100: {
  7518                           ;OverLoad_B1.c: 101: Load->JudgeValue=255;
  7519  015F  086E               	movf	(_Load),w
  7520  0160  3E36               	addlw	036h
  7521  0161  0086               	movwf	fsr1l
  7522  0162  3002               	movlw 2	; select bank4/5
  7523  0163  0087               	movwf fsr1h	
  7524                           	
  7525  0164  30FF               	movlw	low(0FFh)
  7526  0165  3FC0               	movwi	[0]fsr1
  7527  0166  3000               	movlw	high(0FFh)
  7528  0167  3FC1               	movwi	[1]fsr1
  7529                           	line	102
  7530                           	
  7531  0168                     l9553:	
  7532                           	line	103
  7533                           ;OverLoad_B1.c: 102: }
  7534                           ;OverLoad_B1.c: 103: if(Load->Count == 3)
  7535  0168  086E               	movf	(_Load),w
  7536  0169  3E3A               	addlw	03Ah
  7537  016A  0086               	movwf	fsr1l
  7538  016B  3002               	movlw 2	; select bank4/5
  7539  016C  0087               	movwf fsr1h	
  7540                           	
  7541  016D  0801               	movf	indf1,w
  7542  016E  3A03               	xorlw	03h&0ffh
  7543  016F  1D03               	skipz
  7544  0170  2972               	goto	u8411
  7545  0171  2973               	goto	u8410
  7546  0172                     u8411:
  7547  0172  29A3               	goto	l24653
  7548  0173                     u8410:
  7549                           	line	105
  7550                           	
  7551  0173                     l24647:	
  7552                           ;OverLoad_B1.c: 104: {
  7553                           ;OverLoad_B1.c: 105: if(Load->LightsCount == 1)
  7554  0173  086E               	movf	(_Load),w
  7555  0174  3E3E               	addlw	03Eh
  7556  0175  0086               	movwf	fsr1l
  7557  0176  3002               	movlw 2	; select bank4/5
  7558  0177  0087               	movwf fsr1h	
  7559                           	
  7560  0178  0801               	movf	indf1,w
  7561  0179  3A01               	xorlw	01h&0ffh
  7562  017A  1D03               	skipz
  7563  017B  297D               	goto	u8421
  7564  017C  297E               	goto	u8420
  7565  017D                     u8421:
  7566  017D  2988               	goto	l24651
  7567  017E                     u8420:
  7568                           	line	107
  7569                           	
  7570  017E                     l24649:	
  7571                           ;OverLoad_B1.c: 106: {
  7572                           ;OverLoad_B1.c: 107: Load->JudgeValue=0x1a;
  7573  017E  086E               	movf	(_Load),w
  7574  017F  3E36               	addlw	036h
  7575  0180  0086               	movwf	fsr1l
  7576  0181  3002               	movlw 2	; select bank4/5
  7577  0182  0087               	movwf fsr1h	
  7578                           	
  7579  0183  301A               	movlw	low(01Ah)
  7580  0184  3FC0               	movwi	[0]fsr1
  7581  0185  3000               	movlw	high(01Ah)
  7582  0186  3FC1               	movwi	[1]fsr1
  7583                           	line	108
  7584                           ;OverLoad_B1.c: 108: }
  7585  0187  29A3               	goto	l24653
  7586                           	line	109
  7587                           	
  7588  0188                     l9555:	
  7589                           	line	111
  7590                           	
  7591  0188                     l24651:	
  7592                           ;OverLoad_B1.c: 109: else
  7593                           ;OverLoad_B1.c: 110: {
  7594                           ;OverLoad_B1.c: 111: Load->JudgeValue=0x1a+Load->TotalLoad;
  7595  0188  086E               	movf	(_Load),w
  7596  0189  3E06               	addlw	06h
  7597  018A  0086               	movwf	fsr1l
  7598  018B  3002               	movlw 2	; select bank4/5
  7599  018C  0087               	movwf fsr1h	
  7600                           	
  7601  018D  3F40               	moviw	[0]fsr1
  7602  018E  00B2               	movwf	(??_setLoad_Main+0)+0
  7603  018F  3F41               	moviw	[1]fsr1
  7604  0190  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7605  0191  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7606  0192  3E1A               	addlw	low(01Ah)
  7607  0193  00B4               	movwf	(??_setLoad_Main+2)+0
  7608  0194  3000               	movlw	high(01Ah)
  7609  0195  3D33               	addwfc	1+(??_setLoad_Main+0)+0,w
  7610  0196  00B5               	movwf	1+(??_setLoad_Main+2)+0
  7611  0197  086E               	movf	(_Load),w
  7612  0198  3E36               	addlw	036h
  7613  0199  0086               	movwf	fsr1l
  7614  019A  3002               	movlw 2	; select bank4/5
  7615  019B  0087               	movwf fsr1h	
  7616                           	
  7617  019C  0834               	movf	0+(??_setLoad_Main+2)+0,w
  7618  019D  3FC0               	movwi	[0]fsr1
  7619  019E  0835               	movf	1+(??_setLoad_Main+2)+0,w
  7620  019F  3FC1               	movwi	[1]fsr1
  7621  01A0  29A3               	goto	l24653
  7622                           	line	112
  7623                           	
  7624  01A1                     l9556:	
  7625  01A1  29A3               	goto	l24653
  7626                           	line	113
  7627                           	
  7628  01A2                     l9554:	
  7629  01A2  29A3               	goto	l24653
  7630                           	line	114
  7631                           	
  7632  01A3                     l9552:	
  7633                           	line	115
  7634                           	
  7635  01A3                     l24653:	
  7636                           ;OverLoad_B1.c: 112: }
  7637                           ;OverLoad_B1.c: 113: }
  7638                           ;OverLoad_B1.c: 114: }
  7639                           ;OverLoad_B1.c: 115: if(Load->AD >= Load->JudgeValue)
  7640  01A3  086E               	movf	(_Load),w
  7641  01A4  3E36               	addlw	036h
  7642  01A5  0086               	movwf	fsr1l
  7643  01A6  3002               	movlw 2	; select bank4/5
  7644  01A7  0087               	movwf fsr1h	
  7645                           	
  7646  01A8  3F40               	moviw	[0]fsr1
  7647  01A9  00B2               	movwf	(??_setLoad_Main+0)+0
  7648  01AA  3F41               	moviw	[1]fsr1
  7649  01AB  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7650  01AC  086E               	movf	(_Load),w
  7651  01AD  3E2C               	addlw	02Ch
  7652  01AE  0086               	movwf	fsr1l
  7653  01AF  3002               	movlw 2	; select bank4/5
  7654  01B0  0087               	movwf fsr1h	
  7655                           	
  7656  01B1  3F40               	moviw	[0]fsr1
  7657  01B2  00B4               	movwf	(??_setLoad_Main+2)+0
  7658  01B3  3F41               	moviw	[1]fsr1
  7659  01B4  00B5               	movwf	(??_setLoad_Main+2)+0+1
  7660  01B5  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7661  01B6  0235               	subwf	1+(??_setLoad_Main+2)+0,w
  7662  01B7  1D03               	skipz
  7663  01B8  29BB               	goto	u8435
  7664  01B9  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7665  01BA  0234               	subwf	0+(??_setLoad_Main+2)+0,w
  7666  01BB                     u8435:
  7667  01BB  1C03               	skipc
  7668  01BC  29BE               	goto	u8431
  7669  01BD  29BF               	goto	u8430
  7670  01BE                     u8431:
  7671  01BE  29E2               	goto	l24663
  7672  01BF                     u8430:
  7673                           	line	117
  7674                           	
  7675  01BF                     l24655:	
  7676                           ;OverLoad_B1.c: 116: {
  7677                           ;OverLoad_B1.c: 117: Load->ErrorCount++;
  7678  01BF  3001               	movlw	(01h)
  7679  01C0  00B2               	movwf	(??_setLoad_Main+0)+0
  7680  01C1  086E               	movf	(_Load),w
  7681  01C2  3E3C               	addlw	03Ch
  7682  01C3  0086               	movwf	fsr1l
  7683  01C4  3002               	movlw 2	; select bank4/5
  7684  01C5  0087               	movwf fsr1h	
  7685                           	
  7686  01C6  0832               	movf	(??_setLoad_Main+0)+0,w
  7687  01C7  0781               	addwf	indf1,f
  7688                           	line	118
  7689                           	
  7690  01C8                     l24657:	
  7691                           ;OverLoad_B1.c: 118: if(Load->ErrorCount >2)
  7692  01C8  086E               	movf	(_Load),w
  7693  01C9  3E3C               	addlw	03Ch
  7694  01CA  0086               	movwf	fsr1l
  7695  01CB  3002               	movlw 2	; select bank4/5
  7696  01CC  0087               	movwf fsr1h	
  7697                           	
  7698  01CD  3003               	movlw	(03h)
  7699  01CE  0201               	subwf	indf1,w
  7700  01CF  1C03               	skipc
  7701  01D0  29D2               	goto	u8441
  7702  01D1  29D3               	goto	u8440
  7703  01D2                     u8441:
  7704  01D2  2AA3               	goto	l24685
  7705  01D3                     u8440:
  7706                           	line	120
  7707                           	
  7708  01D3                     l24659:	
  7709                           ;OverLoad_B1.c: 119: {
  7710                           ;OverLoad_B1.c: 120: Load->ErrorCount=0;
  7711  01D3  086E               	movf	(_Load),w
  7712  01D4  3E3C               	addlw	03Ch
  7713  01D5  0086               	movwf	fsr1l
  7714  01D6  3002               	movlw 2	; select bank4/5
  7715  01D7  0087               	movwf fsr1h	
  7716                           	
  7717  01D8  0181               	clrf	indf1
  7718                           	line	121
  7719                           	
  7720  01D9                     l24661:	
  7721                           ;OverLoad_B1.c: 121: setLoad_ERROR(load,1);
  7722  01D9  01AF               	clrf	(?_setLoad_ERROR)
  7723  01DA  1403               	bsf	status,0
  7724  01DB  0DAF               	rlf	(?_setLoad_ERROR),f
  7725  01DC  0836               	movf	(setLoad_Main@load),w
  7726  01DD  3190  2068  3180   	fcall	_setLoad_ERROR
  7727  01E0  2AA3               	goto	l24685
  7728                           	line	128
  7729                           	
  7730  01E1                     l9558:	
  7731                           	line	129
  7732                           ;OverLoad_B1.c: 128: }
  7733                           ;OverLoad_B1.c: 129: }
  7734  01E1  2AA3               	goto	l24685
  7735                           	line	130
  7736                           	
  7737  01E2                     l9557:	
  7738                           	line	132
  7739                           	
  7740  01E2                     l24663:	
  7741                           ;OverLoad_B1.c: 130: else
  7742                           ;OverLoad_B1.c: 131: {
  7743                           ;OverLoad_B1.c: 132: Load->ErrorCount=0;
  7744  01E2  0020               	movlb 0	; select bank0
  7745  01E3  086E               	movf	(_Load),w
  7746  01E4  3E3C               	addlw	03Ch
  7747  01E5  0086               	movwf	fsr1l
  7748  01E6  3002               	movlw 2	; select bank4/5
  7749  01E7  0087               	movwf fsr1h	
  7750                           	
  7751  01E8  0181               	clrf	indf1
  7752                           	line	133
  7753                           ;OverLoad_B1.c: 133: if(Load->Count > 5)
  7754  01E9  086E               	movf	(_Load),w
  7755  01EA  3E3A               	addlw	03Ah
  7756  01EB  0086               	movwf	fsr1l
  7757  01EC  3002               	movlw 2	; select bank4/5
  7758  01ED  0087               	movwf fsr1h	
  7759                           	
  7760  01EE  3006               	movlw	(06h)
  7761  01EF  0201               	subwf	indf1,w
  7762  01F0  1C03               	skipc
  7763  01F1  29F3               	goto	u8451
  7764  01F2  29F4               	goto	u8450
  7765  01F3                     u8451:
  7766  01F3  2AA3               	goto	l24685
  7767  01F4                     u8450:
  7768                           	line	135
  7769                           	
  7770  01F4                     l24665:	
  7771                           ;OverLoad_B1.c: 134: {
  7772                           ;OverLoad_B1.c: 135: if(Load->SafeCount < 6)
  7773  01F4  086E               	movf	(_Load),w
  7774  01F5  3E42               	addlw	042h
  7775  01F6  0086               	movwf	fsr1l
  7776  01F7  3002               	movlw 2	; select bank4/5
  7777  01F8  0087               	movwf fsr1h	
  7778                           	
  7779  01F9  3006               	movlw	(06h)
  7780  01FA  0201               	subwf	indf1,w
  7781  01FB  1803               	skipnc
  7782  01FC  29FE               	goto	u8461
  7783  01FD  29FF               	goto	u8460
  7784  01FE                     u8461:
  7785  01FE  2A09               	goto	l24669
  7786  01FF                     u8460:
  7787                           	line	137
  7788                           	
  7789  01FF                     l24667:	
  7790                           ;OverLoad_B1.c: 136: {
  7791                           ;OverLoad_B1.c: 137: Load->SafeCount++;
  7792  01FF  3001               	movlw	(01h)
  7793  0200  00B2               	movwf	(??_setLoad_Main+0)+0
  7794  0201  086E               	movf	(_Load),w
  7795  0202  3E42               	addlw	042h
  7796  0203  0086               	movwf	fsr1l
  7797  0204  3002               	movlw 2	; select bank4/5
  7798  0205  0087               	movwf fsr1h	
  7799                           	
  7800  0206  0832               	movf	(??_setLoad_Main+0)+0,w
  7801  0207  0781               	addwf	indf1,f
  7802  0208  2A09               	goto	l24669
  7803                           	line	138
  7804                           	
  7805  0209                     l9561:	
  7806                           	line	139
  7807                           	
  7808  0209                     l24669:	
  7809                           ;OverLoad_B1.c: 138: }
  7810                           ;OverLoad_B1.c: 139: if(Load->SafeCount > 6-5)
  7811  0209  086E               	movf	(_Load),w
  7812  020A  3E42               	addlw	042h
  7813  020B  0086               	movwf	fsr1l
  7814  020C  3002               	movlw 2	; select bank4/5
  7815  020D  0087               	movwf fsr1h	
  7816                           	
  7817  020E  3002               	movlw	(02h)
  7818  020F  0201               	subwf	indf1,w
  7819  0210  1C03               	skipc
  7820  0211  2A13               	goto	u8471
  7821  0212  2A14               	goto	u8470
  7822  0213                     u8471:
  7823  0213  2A60               	goto	l24679
  7824  0214                     u8470:
  7825                           	line	141
  7826                           	
  7827  0214                     l24671:	
  7828                           ;OverLoad_B1.c: 140: {
  7829                           ;OverLoad_B1.c: 141: if(Load->StatusOn)
  7830  0214  086E               	movf	(_Load),w
  7831  0215  3E46               	addlw	046h
  7832  0216  0086               	movwf	fsr1l
  7833  0217  3002               	movlw 2	; select bank4/5
  7834  0218  0087               	movwf fsr1h	
  7835                           	
  7836  0219  1C01               	btfss	indf1,0
  7837  021A  2A1C               	goto	u8481
  7838  021B  2A1D               	goto	u8480
  7839  021C                     u8481:
  7840  021C  2A53               	goto	l24677
  7841  021D                     u8480:
  7842                           	line	143
  7843                           	
  7844  021D                     l24673:	
  7845                           ;OverLoad_B1.c: 142: {
  7846                           ;OverLoad_B1.c: 143: Load->StatusOn=0;
  7847  021D  086E               	movf	(_Load),w
  7848  021E  3E46               	addlw	046h
  7849  021F  0086               	movwf	fsr1l
  7850  0220  3002               	movlw 2	; select bank4/5
  7851  0221  0087               	movwf fsr1h	
  7852                           	
  7853  0222  1001               	bcf	indf1,0
  7854                           	line	144
  7855                           ;OverLoad_B1.c: 144: Load->TotalLoad=Load->AD;
  7856  0223  086E               	movf	(_Load),w
  7857  0224  3E2C               	addlw	02Ch
  7858  0225  0086               	movwf	fsr1l
  7859  0226  3002               	movlw 2	; select bank4/5
  7860  0227  0087               	movwf fsr1h	
  7861                           	
  7862  0228  3F40               	moviw	[0]fsr1
  7863  0229  00B2               	movwf	(??_setLoad_Main+0)+0
  7864  022A  3F41               	moviw	[1]fsr1
  7865  022B  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7866  022C  086E               	movf	(_Load),w
  7867  022D  3E06               	addlw	06h
  7868  022E  0086               	movwf	fsr1l
  7869  022F  3002               	movlw 2	; select bank4/5
  7870  0230  0087               	movwf fsr1h	
  7871                           	
  7872  0231  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7873  0232  3FC0               	movwi	[0]fsr1
  7874  0233  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7875  0234  3FC1               	movwi	[1]fsr1
  7876                           	line	145
  7877                           	
  7878  0235                     l24675:	
  7879                           ;OverLoad_B1.c: 145: Load->JudgeValue=0x1a*Load->LightsCount;
  7880  0235  086E               	movf	(_Load),w
  7881  0236  3E3E               	addlw	03Eh
  7882  0237  0086               	movwf	fsr1l
  7883  0238  3002               	movlw 2	; select bank4/5
  7884  0239  0087               	movwf fsr1h	
  7885                           	
  7886  023A  0801               	movf	indf1,w
  7887  023B  00B2               	movwf	(??_setLoad_Main+0)+0
  7888  023C  01B3               	clrf	(??_setLoad_Main+0)+0+1
  7889  023D  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7890  023E  00A0               	movwf	(?___wmul)
  7891  023F  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7892  0240  00A1               	movwf	(?___wmul+1)
  7893  0241  301A               	movlw	low(01Ah)
  7894  0242  00A2               	movwf	0+(?___wmul)+02h
  7895  0243  3000               	movlw	high(01Ah)
  7896  0244  00A3               	movwf	(0+(?___wmul)+02h)+1
  7897  0245  31A3  2350  3180   	fcall	___wmul
  7898  0248  0020               	movlb 0	; select bank0
  7899  0249  086E               	movf	(_Load),w
  7900  024A  3E36               	addlw	036h
  7901  024B  0086               	movwf	fsr1l
  7902  024C  3002               	movlw 2	; select bank4/5
  7903  024D  0087               	movwf fsr1h	
  7904                           	
  7905  024E  0820               	movf	(0+(?___wmul)),w
  7906  024F  3FC0               	movwi	[0]fsr1
  7907  0250  0821               	movf	(1+(?___wmul)),w
  7908  0251  3FC1               	movwi	[1]fsr1
  7909  0252  2A53               	goto	l24677
  7910                           	line	146
  7911                           	
  7912  0253                     l9563:	
  7913                           	line	147
  7914                           	
  7915  0253                     l24677:	
  7916                           ;OverLoad_B1.c: 146: }
  7917                           ;OverLoad_B1.c: 147: Load->Safe=1;
  7918  0253  086E               	movf	(_Load),w
  7919  0254  0086               	movwf	fsr1l
  7920  0255  3002               	movlw 2	; select bank4/5
  7921  0256  0087               	movwf fsr1h	
  7922                           	
  7923  0257  1581               	bsf	indf1,3
  7924                           	line	149
  7925                           ;OverLoad_B1.c: 149: setDimmerLights_Open(1,1);
  7926  0258  01A2               	clrf	(?_setDimmerLights_Open)
  7927  0259  1403               	bsf	status,0
  7928  025A  0DA2               	rlf	(?_setDimmerLights_Open),f
  7929  025B  3001               	movlw	(01h)
  7930  025C  31A1  2163  3180   	fcall	_setDimmerLights_Open
  7931  025F  2A60               	goto	l24679
  7932                           	line	159
  7933                           	
  7934  0260                     l9562:	
  7935                           	line	160
  7936                           	
  7937  0260                     l24679:	
  7938                           ;OverLoad_B1.c: 159: }
  7939                           ;OverLoad_B1.c: 160: if(Load->StatusOff)
  7940  0260  0020               	movlb 0	; select bank0
  7941  0261  086E               	movf	(_Load),w
  7942  0262  3E46               	addlw	046h
  7943  0263  0086               	movwf	fsr1l
  7944  0264  3002               	movlw 2	; select bank4/5
  7945  0265  0087               	movwf fsr1h	
  7946                           	
  7947  0266  1C81               	btfss	indf1,1
  7948  0267  2A69               	goto	u8491
  7949  0268  2A6A               	goto	u8490
  7950  0269                     u8491:
  7951  0269  2AA3               	goto	l24685
  7952  026A                     u8490:
  7953                           	line	162
  7954                           	
  7955  026A                     l24681:	
  7956                           ;OverLoad_B1.c: 161: {
  7957                           ;OverLoad_B1.c: 162: Load->StatusOff=0;
  7958  026A  086E               	movf	(_Load),w
  7959  026B  3E46               	addlw	046h
  7960  026C  0086               	movwf	fsr1l
  7961  026D  3002               	movlw 2	; select bank4/5
  7962  026E  0087               	movwf fsr1h	
  7963                           	
  7964  026F  1081               	bcf	indf1,1
  7965                           	line	163
  7966                           ;OverLoad_B1.c: 163: Load->TotalLoad=Load->AD;
  7967  0270  086E               	movf	(_Load),w
  7968  0271  3E2C               	addlw	02Ch
  7969  0272  0086               	movwf	fsr1l
  7970  0273  3002               	movlw 2	; select bank4/5
  7971  0274  0087               	movwf fsr1h	
  7972                           	
  7973  0275  3F40               	moviw	[0]fsr1
  7974  0276  00B2               	movwf	(??_setLoad_Main+0)+0
  7975  0277  3F41               	moviw	[1]fsr1
  7976  0278  00B3               	movwf	(??_setLoad_Main+0)+0+1
  7977  0279  086E               	movf	(_Load),w
  7978  027A  3E06               	addlw	06h
  7979  027B  0086               	movwf	fsr1l
  7980  027C  3002               	movlw 2	; select bank4/5
  7981  027D  0087               	movwf fsr1h	
  7982                           	
  7983  027E  0832               	movf	0+(??_setLoad_Main+0)+0,w
  7984  027F  3FC0               	movwi	[0]fsr1
  7985  0280  0833               	movf	1+(??_setLoad_Main+0)+0,w
  7986  0281  3FC1               	movwi	[1]fsr1
  7987                           	line	164
  7988                           	
  7989  0282                     l24683:	
  7990                           ;OverLoad_B1.c: 164: Load->JudgeValue=0x1a*Load->LightsCount;
  7991  0282  086E               	movf	(_Load),w
  7992  0283  3E3E               	addlw	03Eh
  7993  0284  0086               	movwf	fsr1l
  7994  0285  3002               	movlw 2	; select bank4/5
  7995  0286  0087               	movwf fsr1h	
  7996                           	
  7997  0287  0801               	movf	indf1,w
  7998  0288  00B2               	movwf	(??_setLoad_Main+0)+0
  7999  0289  01B3               	clrf	(??_setLoad_Main+0)+0+1
  8000  028A  0832               	movf	0+(??_setLoad_Main+0)+0,w
  8001  028B  00A0               	movwf	(?___wmul)
  8002  028C  0833               	movf	1+(??_setLoad_Main+0)+0,w
  8003  028D  00A1               	movwf	(?___wmul+1)
  8004  028E  301A               	movlw	low(01Ah)
  8005  028F  00A2               	movwf	0+(?___wmul)+02h
  8006  0290  3000               	movlw	high(01Ah)
  8007  0291  00A3               	movwf	(0+(?___wmul)+02h)+1
  8008  0292  31A3  2350  3180   	fcall	___wmul
  8009  0295  0020               	movlb 0	; select bank0
  8010  0296  086E               	movf	(_Load),w
  8011  0297  3E36               	addlw	036h
  8012  0298  0086               	movwf	fsr1l
  8013  0299  3002               	movlw 2	; select bank4/5
  8014  029A  0087               	movwf fsr1h	
  8015                           	
  8016  029B  0820               	movf	(0+(?___wmul)),w
  8017  029C  3FC0               	movwi	[0]fsr1
  8018  029D  0821               	movf	(1+(?___wmul)),w
  8019  029E  3FC1               	movwi	[1]fsr1
  8020  029F  2AA3               	goto	l24685
  8021                           	line	165
  8022                           	
  8023  02A0                     l9564:	
  8024  02A0  2AA3               	goto	l24685
  8025                           	line	166
  8026                           	
  8027  02A1                     l9560:	
  8028  02A1  2AA3               	goto	l24685
  8029                           	line	167
  8030                           	
  8031  02A2                     l9559:	
  8032  02A2  2AA3               	goto	l24685
  8033                           	line	168
  8034                           	
  8035  02A3                     l9551:	
  8036                           	line	169
  8037                           	
  8038  02A3                     l24685:	
  8039                           ;OverLoad_B1.c: 165: }
  8040                           ;OverLoad_B1.c: 166: }
  8041                           ;OverLoad_B1.c: 167: }
  8042                           ;OverLoad_B1.c: 168: }
  8043                           ;OverLoad_B1.c: 169: setLoad_AH_AL_Restore(load);
  8044  02A3  0020               	movlb 0	; select bank0
  8045  02A4  0836               	movf	(setLoad_Main@load),w
  8046  02A5  31A5  2569  3180   	fcall	_setLoad_AH_AL_Restore
  8047  02A8  2B29               	goto	l9571
  8048                           	line	180
  8049                           	
  8050  02A9                     l9550:	
  8051                           	line	181
  8052                           ;OverLoad_B1.c: 180: }
  8053                           ;OverLoad_B1.c: 181: }
  8054  02A9  2B29               	goto	l9571
  8055                           	line	182
  8056                           	
  8057  02AA                     l9549:	
  8058                           	line	184
  8059                           	
  8060  02AA                     l24687:	
  8061                           ;OverLoad_B1.c: 182: else
  8062                           ;OverLoad_B1.c: 183: {
  8063                           ;OverLoad_B1.c: 184: if(Load->GO)
  8064  02AA  0020               	movlb 0	; select bank0
  8065  02AB  086E               	movf	(_Load),w
  8066  02AC  0086               	movwf	fsr1l
  8067  02AD  3002               	movlw 2	; select bank4/5
  8068  02AE  0087               	movwf fsr1h	
  8069                           	
  8070  02AF  1C81               	btfss	indf1,1
  8071  02B0  2AB2               	goto	u8501
  8072  02B1  2AB3               	goto	u8500
  8073  02B2                     u8501:
  8074  02B2  2AE0               	goto	l24699
  8075  02B3                     u8500:
  8076                           	line	186
  8077                           	
  8078  02B3                     l24689:	
  8079                           ;OverLoad_B1.c: 185: {
  8080                           ;OverLoad_B1.c: 186: if(Load->LightsON == 0)
  8081  02B3  086E               	movf	(_Load),w
  8082  02B4  0086               	movwf	fsr1l
  8083  02B5  3002               	movlw 2	; select bank4/5
  8084  02B6  0087               	movwf fsr1h	
  8085                           	
  8086  02B7  1901               	btfsc	indf1,2
  8087  02B8  2ABA               	goto	u8511
  8088  02B9  2ABB               	goto	u8510
  8089  02BA                     u8511:
  8090  02BA  2AC6               	goto	l24693
  8091  02BB                     u8510:
  8092                           	line	188
  8093                           	
  8094  02BB                     l24691:	
  8095                           ;OverLoad_B1.c: 187: {
  8096                           ;OverLoad_B1.c: 188: Load->LightsON=1;
  8097  02BB  086E               	movf	(_Load),w
  8098  02BC  0086               	movwf	fsr1l
  8099  02BD  3002               	movlw 2	; select bank4/5
  8100  02BE  0087               	movwf fsr1h	
  8101                           	
  8102  02BF  1501               	bsf	indf1,2
  8103                           	line	189
  8104                           ;OverLoad_B1.c: 189: Load->Safe=0;
  8105  02C0  086E               	movf	(_Load),w
  8106  02C1  0086               	movwf	fsr1l
  8107  02C2  3002               	movlw 2	; select bank4/5
  8108  02C3  0087               	movwf fsr1h	
  8109                           	
  8110  02C4  1181               	bcf	indf1,3
  8111  02C5  2AC6               	goto	l24693
  8112                           	line	190
  8113                           	
  8114  02C6                     l9567:	
  8115                           	line	191
  8116                           	
  8117  02C6                     l24693:	
  8118                           ;OverLoad_B1.c: 190: }
  8119                           ;OverLoad_B1.c: 191: if(getTemp_Safe(1) && getPF_Safe(1))
  8120  02C6  3001               	movlw	(01h)
  8121  02C7  31AF  27F2  3180   	fcall	_getTemp_Safe
  8122  02CA  3A00               	xorlw	0&0ffh
  8123  02CB  1903               	skipnz
  8124  02CC  2ACE               	goto	u8521
  8125  02CD  2ACF               	goto	u8520
  8126  02CE                     u8521:
  8127  02CE  2B29               	goto	l9571
  8128  02CF                     u8520:
  8129                           	
  8130  02CF                     l24695:	
  8131  02CF  3001               	movlw	(01h)
  8132  02D0  31A0  2061  3180   	fcall	_getPF_Safe
  8133  02D3  3A00               	xorlw	0&0ffh
  8134  02D4  1903               	skipnz
  8135  02D5  2AD7               	goto	u8531
  8136  02D6  2AD8               	goto	u8530
  8137  02D7                     u8531:
  8138  02D7  2B29               	goto	l9571
  8139  02D8                     u8530:
  8140                           	line	193
  8141                           	
  8142  02D8                     l24697:	
  8143                           ;OverLoad_B1.c: 192: {
  8144                           ;OverLoad_B1.c: 193: Load->ADtoGO=1;
  8145  02D8  0020               	movlb 0	; select bank0
  8146  02D9  086E               	movf	(_Load),w
  8147  02DA  0086               	movwf	fsr1l
  8148  02DB  3002               	movlw 2	; select bank4/5
  8149  02DC  0087               	movwf fsr1h	
  8150                           	
  8151  02DD  1601               	bsf	indf1,4
  8152  02DE  2B29               	goto	l9571
  8153                           	line	194
  8154                           	
  8155  02DF                     l9568:	
  8156                           	line	195
  8157                           ;OverLoad_B1.c: 194: }
  8158                           ;OverLoad_B1.c: 195: }
  8159  02DF  2B29               	goto	l9571
  8160                           	line	196
  8161                           	
  8162  02E0                     l9566:	
  8163                           	line	198
  8164                           	
  8165  02E0                     l24699:	
  8166                           ;OverLoad_B1.c: 196: else
  8167                           ;OverLoad_B1.c: 197: {
  8168                           ;OverLoad_B1.c: 198: if(Load->LightsON)
  8169  02E0  086E               	movf	(_Load),w
  8170  02E1  0086               	movwf	fsr1l
  8171  02E2  3002               	movlw 2	; select bank4/5
  8172  02E3  0087               	movwf fsr1h	
  8173                           	
  8174  02E4  1D01               	btfss	indf1,2
  8175  02E5  2AE7               	goto	u8541
  8176  02E6  2AE8               	goto	u8540
  8177  02E7                     u8541:
  8178  02E7  2B29               	goto	l9571
  8179  02E8                     u8540:
  8180                           	line	200
  8181                           	
  8182  02E8                     l24701:	
  8183                           ;OverLoad_B1.c: 199: {
  8184                           ;OverLoad_B1.c: 200: Load->LightsON=0;
  8185  02E8  086E               	movf	(_Load),w
  8186  02E9  0086               	movwf	fsr1l
  8187  02EA  3002               	movlw 2	; select bank4/5
  8188  02EB  0087               	movwf fsr1h	
  8189                           	
  8190  02EC  1101               	bcf	indf1,2
  8191                           	line	201
  8192                           ;OverLoad_B1.c: 201: Load->Safe=1;
  8193  02ED  086E               	movf	(_Load),w
  8194  02EE  0086               	movwf	fsr1l
  8195  02EF  3002               	movlw 2	; select bank4/5
  8196  02F0  0087               	movwf fsr1h	
  8197                           	
  8198  02F1  1581               	bsf	indf1,3
  8199                           	line	202
  8200                           ;OverLoad_B1.c: 202: Load->ErrorCount=0;
  8201  02F2  086E               	movf	(_Load),w
  8202  02F3  3E3C               	addlw	03Ch
  8203  02F4  0086               	movwf	fsr1l
  8204  02F5  3002               	movlw 2	; select bank4/5
  8205  02F6  0087               	movwf fsr1h	
  8206                           	
  8207  02F7  0181               	clrf	indf1
  8208                           	line	203
  8209                           ;OverLoad_B1.c: 203: Load->Count=0;
  8210  02F8  086E               	movf	(_Load),w
  8211  02F9  3E3A               	addlw	03Ah
  8212  02FA  0086               	movwf	fsr1l
  8213  02FB  3002               	movlw 2	; select bank4/5
  8214  02FC  0087               	movwf fsr1h	
  8215                           	
  8216  02FD  0181               	clrf	indf1
  8217                           	line	204
  8218                           ;OverLoad_B1.c: 204: Load->TotalLoad=0;
  8219  02FE  086E               	movf	(_Load),w
  8220  02FF  3E06               	addlw	06h
  8221  0300  0086               	movwf	fsr1l
  8222  0301  3002               	movlw 2	; select bank4/5
  8223  0302  0087               	movwf fsr1h	
  8224                           	
  8225  0303  3000               	movlw	low(0)
  8226  0304  3FC0               	movwi	[0]fsr1
  8227  0305  3000               	movlw	high(0)
  8228  0306  3FC1               	movwi	[1]fsr1
  8229                           	line	205
  8230                           ;OverLoad_B1.c: 205: Load->NumberCount=0;
  8231  0307  086E               	movf	(_Load),w
  8232  0308  3E3F               	addlw	03Fh
  8233  0309  0086               	movwf	fsr1l
  8234  030A  3002               	movlw 2	; select bank4/5
  8235  030B  0087               	movwf fsr1h	
  8236                           	
  8237  030C  0181               	clrf	indf1
  8238                           	line	206
  8239                           ;OverLoad_B1.c: 206: Load->StatusOn=0;
  8240  030D  086E               	movf	(_Load),w
  8241  030E  3E46               	addlw	046h
  8242  030F  0086               	movwf	fsr1l
  8243  0310  3002               	movlw 2	; select bank4/5
  8244  0311  0087               	movwf fsr1h	
  8245                           	
  8246  0312  1001               	bcf	indf1,0
  8247                           	line	207
  8248                           ;OverLoad_B1.c: 207: Load->StatusOff=0;
  8249  0313  086E               	movf	(_Load),w
  8250  0314  3E46               	addlw	046h
  8251  0315  0086               	movwf	fsr1l
  8252  0316  3002               	movlw 2	; select bank4/5
  8253  0317  0087               	movwf fsr1h	
  8254                           	
  8255  0318  1081               	bcf	indf1,1
  8256                           	line	208
  8257                           	
  8258  0319                     l24703:	
  8259                           ;OverLoad_B1.c: 208: setLoad_AH_AL_Restore(1);
  8260  0319  3001               	movlw	(01h)
  8261  031A  31A5  2569  3180   	fcall	_setLoad_AH_AL_Restore
  8262                           	line	211
  8263                           	
  8264  031D                     l24705:	
  8265                           ;OverLoad_B1.c: 211: setDimmerLights_Open(1,1);
  8266  031D  0020               	movlb 0	; select bank0
  8267  031E  01A2               	clrf	(?_setDimmerLights_Open)
  8268  031F  1403               	bsf	status,0
  8269  0320  0DA2               	rlf	(?_setDimmerLights_Open),f
  8270  0321  3001               	movlw	(01h)
  8271  0322  31A1  2163  3180   	fcall	_setDimmerLights_Open
  8272  0325  2B29               	goto	l9571
  8273                           	line	235
  8274                           	
  8275  0326                     l9570:	
  8276  0326  2B29               	goto	l9571
  8277                           	line	236
  8278                           	
  8279  0327                     l9569:	
  8280  0327  2B29               	goto	l9571
  8281                           	line	237
  8282                           	
  8283  0328                     l9565:	
  8284  0328  2B29               	goto	l9571
  8285                           	line	238
  8286                           	
  8287  0329                     l9548:	
  8288                           	line	239
  8289                           	
  8290  0329                     l9571:	
  8291  0329  0008               	return
  8292                           	opt stack 0
  8293                           GLOBAL	__end_of_setLoad_Main
  8294  032A                     	__end_of_setLoad_Main:
  8295 ;; =============== function _setLoad_Main ends ============
  8296                           
  8297                           	signat	_setLoad_Main,4216
  8298                           	global	_DimmerLights_Main
  8299                           psect	text3233,local,class=CODE,delta=2
  8300                           global __ptext3233
  8301  2EE0                     __ptext3233:
  8302                           
  8303 ;; *************** function _DimmerLights_Main *****************
  8304 ;; Defined at:
  8305 ;;		line 84 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;		None               void
  8312 ;; Registers used:
  8313 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8323 ;;Total ram usage:        0 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    9
  8326 ;; This function calls:
  8327 ;;		_setDimmerLights_Main
  8328 ;;		_DimmerLights_Close
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           psect	text3233
  8334                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
  8335                           	line	84
  8336                           	global	__size_of_DimmerLights_Main
  8337  0008                     	__size_of_DimmerLights_Main	equ	__end_of_DimmerLights_Main-_DimmerLights_Main
  8338                           	
  8339  2EE0                     _DimmerLights_Main:	
  8340                           	opt	stack 6
  8341                           ; Regs used in _DimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
  8342                           	line	86
  8343                           	
  8344  2EE0                     l24609:	
  8345                           ;Dimmer_B1.c: 86: setDimmerLights_Main(1);
  8346  2EE0  3001               	movlw	(01h)
  8347  2EE1  3197  275B  31AE   	fcall	_setDimmerLights_Main
  8348                           	line	95
  8349                           ;Dimmer_B1.c: 95: DimmerLights_Close();
  8350  2EE4  31A3  23E9  31AE   	fcall	_DimmerLights_Close
  8351                           	line	96
  8352                           	
  8353  2EE7                     l4701:	
  8354  2EE7  0008               	return
  8355                           	opt stack 0
  8356                           GLOBAL	__end_of_DimmerLights_Main
  8357  2EE8                     	__end_of_DimmerLights_Main:
  8358 ;; =============== function _DimmerLights_Main ends ============
  8359                           
  8360                           	signat	_DimmerLights_Main,88
  8361                           	global	_setRF_DimmerValue
  8362                           psect	text3234,local,class=CODE,delta=2
  8363                           global __ptext3234
  8364  2749                     __ptext3234:
  8365                           
  8366 ;; *************** function _setRF_DimmerValue *****************
  8367 ;; Defined at:
  8368 ;;		line 420 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  lights          1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  lights          1   67[BANK0 ] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;		None               void
  8375 ;; Registers used:
  8376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  8383 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
  8385 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8386 ;;Total ram usage:        3 bytes
  8387 ;; Hardware stack levels used:    1
  8388 ;; Hardware stack levels required when called:    8
  8389 ;; This function calls:
  8390 ;;		_setDimmerLights_AdjRF
  8391 ;; This function is called by:
  8392 ;;		_setRFSW_AdjControl
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           psect	text3234
  8396                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
  8397                           	line	420
  8398                           	global	__size_of_setRF_DimmerValue
  8399  0039                     	__size_of_setRF_DimmerValue	equ	__end_of_setRF_DimmerValue-_setRF_DimmerValue
  8400                           	
  8401  2749                     _setRF_DimmerValue:	
  8402                           	opt	stack 2
  8403                           ; Regs used in _setRF_DimmerValue: [wreg+fsr1l-status,0+pclath+cstack]
  8404                           ;setRF_DimmerValue@lights stored from wreg
  8405  2749  0020               	movlb 0	; select bank0
  8406  274A  00E3               	movwf	(setRF_DimmerValue@lights)
  8407                           	line	421
  8408                           	
  8409  274B                     l24597:	
  8410                           ;RF_Control_B1.c: 421: if(RF_Data[9] > 0x64)
  8411  274B  3065               	movlw	(065h)
  8412  274C  0021               	movlb 1	; select bank1
  8413  274D  0229               	subwf	0+(_RF_Data)^080h+09h,w
  8414  274E  1C03               	skipc
  8415  274F  2F51               	goto	u8331
  8416  2750  2F52               	goto	u8330
  8417  2751                     u8331:
  8418  2751  2F59               	goto	l24601
  8419  2752                     u8330:
  8420                           	line	423
  8421                           	
  8422  2752                     l24599:	
  8423                           ;RF_Control_B1.c: 422: {
  8424                           ;RF_Control_B1.c: 423: RF_Data[9]=0x64;
  8425  2752  3064               	movlw	(064h)
  8426  2753  0020               	movlb 0	; select bank0
  8427  2754  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  8428  2755  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  8429  2756  0021               	movlb 1	; select bank1
  8430  2757  00A9               	movwf	0+(_RF_Data)^080h+09h
  8431  2758  2F59               	goto	l24601
  8432                           	line	424
  8433                           	
  8434  2759                     l13208:	
  8435                           	line	425
  8436                           	
  8437  2759                     l24601:	
  8438                           ;RF_Control_B1.c: 424: }
  8439                           ;RF_Control_B1.c: 425: Product->Data[9]=RF_Data[9];
  8440  2759  0829               	movf	0+(_RF_Data)^080h+09h,w
  8441  275A  0020               	movlb 0	; select bank0
  8442  275B  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  8443  275C  087D               	movf	(_Product),w
  8444  275D  3E09               	addlw	09h
  8445  275E  0086               	movwf	fsr1l
  8446  275F  3001               	movlw 1	; select bank2/3
  8447  2760  0087               	movwf fsr1h	
  8448                           	
  8449  2761  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  8450  2762  0081               	movwf	indf1
  8451                           	line	426
  8452                           	
  8453  2763                     l24603:	
  8454                           ;RF_Control_B1.c: 426: Product->Data[11]=lights;
  8455  2763  0863               	movf	(setRF_DimmerValue@lights),w
  8456  2764  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  8457  2765  087D               	movf	(_Product),w
  8458  2766  3E0B               	addlw	0Bh
  8459  2767  0086               	movwf	fsr1l
  8460  2768  3001               	movlw 1	; select bank2/3
  8461  2769  0087               	movwf fsr1h	
  8462                           	
  8463  276A  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  8464  276B  0081               	movwf	indf1
  8465                           	line	427
  8466                           	
  8467  276C                     l24605:	
  8468                           ;RF_Control_B1.c: 427: Product->Data[(20+lights)]=Product->Data[9];
  8469  276C  087D               	movf	(_Product),w
  8470  276D  3E09               	addlw	09h
  8471  276E  0086               	movwf	fsr1l
  8472  276F  3001               	movlw 1	; select bank2/3
  8473  2770  0087               	movwf fsr1h	
  8474                           	
  8475  2771  0801               	movf	indf1,w
  8476  2772  00E1               	movwf	(??_setRF_DimmerValue+0)+0
  8477  2773  0863               	movf	(setRF_DimmerValue@lights),w
  8478  2774  3E14               	addlw	014h
  8479  2775  077D               	addwf	(_Product),w
  8480  2776  00E2               	movwf	(??_setRF_DimmerValue+1)+0
  8481  2777  0862               	movf	0+(??_setRF_DimmerValue+1)+0,w
  8482  2778  0086               	movwf	fsr1l
  8483  2779  3001               	movlw 1	; select bank2/3
  8484  277A  0087               	movwf fsr1h	
  8485                           	
  8486  277B  0861               	movf	(??_setRF_DimmerValue+0)+0,w
  8487  277C  0081               	movwf	indf1
  8488                           	line	428
  8489                           	
  8490  277D                     l24607:	
  8491                           ;RF_Control_B1.c: 428: setDimmerLights_AdjRF(lights);
  8492  277D  0863               	movf	(setRF_DimmerValue@lights),w
  8493  277E  31A3  232C  31A7   	fcall	_setDimmerLights_AdjRF
  8494                           	line	429
  8495                           	
  8496  2781                     l13209:	
  8497  2781  0008               	return
  8498                           	opt stack 0
  8499                           GLOBAL	__end_of_setRF_DimmerValue
  8500  2782                     	__end_of_setRF_DimmerValue:
  8501 ;; =============== function _setRF_DimmerValue ends ============
  8502                           
  8503                           	signat	_setRF_DimmerValue,4216
  8504                           	global	_setPowerFault_ERROR
  8505                           psect	text3235,local,class=CODE,delta=2
  8506                           global __ptext3235
  8507  1D81                     __ptext3235:
  8508                           
  8509 ;; *************** function _setPowerFault_ERROR *****************
  8510 ;; Defined at:
  8511 ;;		line 139 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  pf              1    wreg     unsigned char 
  8514 ;;  command         1   15[BANK0 ] unsigned char 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  pf              1   17[BANK0 ] unsigned char 
  8517 ;; Return value:  Size  Location     Type
  8518 ;;		None               void
  8519 ;; Registers used:
  8520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8521 ;; Tracked objects:
  8522 ;;		On entry : 0/0
  8523 ;;		On exit  : 0/0
  8524 ;;		Unchanged: 0/0
  8525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8529 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8530 ;;Total ram usage:        3 bytes
  8531 ;; Hardware stack levels used:    1
  8532 ;; Hardware stack levels required when called:    8
  8533 ;; This function calls:
  8534 ;;		_PowerFaultPointSelect
  8535 ;;		_setDimmer_PFERROR
  8536 ;;		_DimmerLights_ERROR
  8537 ;;		_setLED
  8538 ;;		_setSw_Enable
  8539 ;;		_setRF_Enable
  8540 ;; This function is called by:
  8541 ;;		_setPowerFault_Main
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           psect	text3235
  8545                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
  8546                           	line	139
  8547                           	global	__size_of_setPowerFault_ERROR
  8548  0060                     	__size_of_setPowerFault_ERROR	equ	__end_of_setPowerFault_ERROR-_setPowerFault_ERROR
  8549                           	
  8550  1D81                     _setPowerFault_ERROR:	
  8551                           	opt	stack 5
  8552                           ; Regs used in _setPowerFault_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  8553                           ;setPowerFault_ERROR@pf stored from wreg
  8554  1D81  0020               	movlb 0	; select bank0
  8555  1D82  00B1               	movwf	(setPowerFault_ERROR@pf)
  8556                           	line	140
  8557                           	
  8558  1D83                     l24569:	
  8559                           ;PowerFault_B1.c: 140: PowerFaultPointSelect(pf);
  8560  1D83  0831               	movf	(setPowerFault_ERROR@pf),w
  8561  1D84  31AE  26D9  319D   	fcall	_PowerFaultPointSelect
  8562                           	line	141
  8563                           	
  8564  1D87                     l24571:	
  8565                           ;PowerFault_B1.c: 141: if(command == 1)
  8566  1D87  0020               	movlb 0	; select bank0
  8567  1D88  082F               	movf	(setPowerFault_ERROR@command),w
  8568  1D89  3A01               	xorlw	01h&0ffh
  8569  1D8A  1D03               	skipz
  8570  1D8B  2D8D               	goto	u8321
  8571  1D8C  2D8E               	goto	u8320
  8572  1D8D                     u8321:
  8573  1D8D  2DB4               	goto	l24585
  8574  1D8E                     u8320:
  8575                           	line	143
  8576                           	
  8577  1D8E                     l24573:	
  8578                           ;PowerFault_B1.c: 142: {
  8579                           ;PowerFault_B1.c: 143: PF->ERROR=1;
  8580  1D8E  0021               	movlb 1	; select bank1
  8581  1D8F  083D               	movf	(_PF)^080h,w
  8582  1D90  0086               	movwf	fsr1l
  8583  1D91  0187               	clrf fsr1h	
  8584                           	
  8585  1D92  1481               	bsf	indf1,1
  8586                           	line	144
  8587                           	
  8588  1D93                     l24575:	
  8589                           ;PowerFault_B1.c: 144: setDimmer_PFERROR(1,1);
  8590  1D93  0020               	movlb 0	; select bank0
  8591  1D94  01A2               	clrf	(?_setDimmer_PFERROR)
  8592  1D95  1403               	bsf	status,0
  8593  1D96  0DA2               	rlf	(?_setDimmer_PFERROR),f
  8594  1D97  3001               	movlw	(01h)
  8595  1D98  31A0  20E0  319D   	fcall	_setDimmer_PFERROR
  8596                           	line	145
  8597                           	
  8598  1D9B                     l24577:	
  8599                           ;PowerFault_B1.c: 145: DimmerLights_ERROR();
  8600  1D9B  3191  2159  319D   	fcall	_DimmerLights_ERROR
  8601                           	line	146
  8602                           	
  8603  1D9E                     l24579:	
  8604                           ;PowerFault_B1.c: 146: setLED(99,11);
  8605  1D9E  300B               	movlw	(0Bh)
  8606  1D9F  0020               	movlb 0	; select bank0
  8607  1DA0  00B0               	movwf	(??_setPowerFault_ERROR+0)+0
  8608  1DA1  0830               	movf	(??_setPowerFault_ERROR+0)+0,w
  8609  1DA2  00A2               	movwf	(?_setLED)
  8610  1DA3  3063               	movlw	(063h)
  8611  1DA4  3193  23DD  319D   	fcall	_setLED
  8612                           	line	149
  8613                           	
  8614  1DA7                     l24581:	
  8615                           ;PowerFault_B1.c: 149: setSw_Enable(1,0);
  8616  1DA7  0020               	movlb 0	; select bank0
  8617  1DA8  01A2               	clrf	(?_setSw_Enable)
  8618  1DA9  3001               	movlw	(01h)
  8619  1DAA  31A1  2100  319D   	fcall	_setSw_Enable
  8620                           	line	159
  8621                           	
  8622  1DAD                     l24583:	
  8623                           ;PowerFault_B1.c: 159: setRF_Enable(1,0);
  8624  1DAD  0020               	movlb 0	; select bank0
  8625  1DAE  01A5               	clrf	(?_setRF_Enable)
  8626  1DAF  3001               	movlw	(01h)
  8627  1DB0  31A4  2460  319D   	fcall	_setRF_Enable
  8628                           	line	161
  8629                           ;PowerFault_B1.c: 161: }
  8630  1DB3  2DE0               	goto	l11959
  8631                           	line	162
  8632                           	
  8633  1DB4                     l11957:	
  8634                           	line	164
  8635                           	
  8636  1DB4                     l24585:	
  8637                           ;PowerFault_B1.c: 162: else
  8638                           ;PowerFault_B1.c: 163: {
  8639                           ;PowerFault_B1.c: 164: PF->ERROR=0;
  8640  1DB4  0021               	movlb 1	; select bank1
  8641  1DB5  083D               	movf	(_PF)^080h,w
  8642  1DB6  0086               	movwf	fsr1l
  8643  1DB7  0187               	clrf fsr1h	
  8644                           	
  8645  1DB8  1081               	bcf	indf1,1
  8646                           	line	165
  8647                           ;PowerFault_B1.c: 165: PF->Safe=1;
  8648  1DB9  083D               	movf	(_PF)^080h,w
  8649  1DBA  0086               	movwf	fsr1l
  8650  1DBB  0187               	clrf fsr1h	
  8651                           	
  8652  1DBC  1501               	bsf	indf1,2
  8653                           	line	166
  8654                           	
  8655  1DBD                     l24587:	
  8656                           ;PowerFault_B1.c: 166: setDimmer_PFERROR(1,0);
  8657  1DBD  0020               	movlb 0	; select bank0
  8658  1DBE  01A2               	clrf	(?_setDimmer_PFERROR)
  8659  1DBF  3001               	movlw	(01h)
  8660  1DC0  31A0  20E0  319D   	fcall	_setDimmer_PFERROR
  8661                           	line	167
  8662                           	
  8663  1DC3                     l24589:	
  8664                           ;PowerFault_B1.c: 167: DimmerLights_ERROR();
  8665  1DC3  3191  2159  319D   	fcall	_DimmerLights_ERROR
  8666                           	line	168
  8667                           	
  8668  1DC6                     l24591:	
  8669                           ;PowerFault_B1.c: 168: setLED(99,10);
  8670  1DC6  300A               	movlw	(0Ah)
  8671  1DC7  0020               	movlb 0	; select bank0
  8672  1DC8  00B0               	movwf	(??_setPowerFault_ERROR+0)+0
  8673  1DC9  0830               	movf	(??_setPowerFault_ERROR+0)+0,w
  8674  1DCA  00A2               	movwf	(?_setLED)
  8675  1DCB  3063               	movlw	(063h)
  8676  1DCC  3193  23DD  319D   	fcall	_setLED
  8677                           	line	171
  8678                           	
  8679  1DCF                     l24593:	
  8680                           ;PowerFault_B1.c: 171: setSw_Enable(1,1);
  8681  1DCF  0020               	movlb 0	; select bank0
  8682  1DD0  01A2               	clrf	(?_setSw_Enable)
  8683  1DD1  1403               	bsf	status,0
  8684  1DD2  0DA2               	rlf	(?_setSw_Enable),f
  8685  1DD3  3001               	movlw	(01h)
  8686  1DD4  31A1  2100  319D   	fcall	_setSw_Enable
  8687                           	line	182
  8688                           	
  8689  1DD7                     l24595:	
  8690                           ;PowerFault_B1.c: 182: setRF_Enable(1,1);
  8691  1DD7  0020               	movlb 0	; select bank0
  8692  1DD8  01A5               	clrf	(?_setRF_Enable)
  8693  1DD9  1403               	bsf	status,0
  8694  1DDA  0DA5               	rlf	(?_setRF_Enable),f
  8695  1DDB  3001               	movlw	(01h)
  8696  1DDC  31A4  2460  319D   	fcall	_setRF_Enable
  8697  1DDF  2DE0               	goto	l11959
  8698                           	line	184
  8699                           	
  8700  1DE0                     l11958:	
  8701                           	line	185
  8702                           	
  8703  1DE0                     l11959:	
  8704  1DE0  0008               	return
  8705                           	opt stack 0
  8706                           GLOBAL	__end_of_setPowerFault_ERROR
  8707  1DE1                     	__end_of_setPowerFault_ERROR:
  8708 ;; =============== function _setPowerFault_ERROR ends ============
  8709                           
  8710                           	signat	_setPowerFault_ERROR,8312
  8711                           	global	_setOverTemp_ERROR
  8712                           psect	text3236,local,class=CODE,delta=2
  8713                           global __ptext3236
  8714  1DE1                     __ptext3236:
  8715                           
  8716 ;; *************** function _setOverTemp_ERROR *****************
  8717 ;; Defined at:
  8718 ;;		line 144 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  temp            1    wreg     unsigned char 
  8721 ;;  command         1   15[BANK0 ] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  temp            1   17[BANK0 ] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;		None               void
  8726 ;; Registers used:
  8727 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8733 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8736 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8737 ;;Total ram usage:        3 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    8
  8740 ;; This function calls:
  8741 ;;		_TempPointSelect
  8742 ;;		_setDimmer_TempERROR
  8743 ;;		_DimmerLights_ERROR
  8744 ;;		_setLED
  8745 ;;		_setSw_Enable
  8746 ;;		_setRF_Enable
  8747 ;; This function is called by:
  8748 ;;		_setTemp_Main
  8749 ;; This function uses a non-reentrant model
  8750 ;;
  8751                           psect	text3236
  8752                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
  8753                           	line	144
  8754                           	global	__size_of_setOverTemp_ERROR
  8755  0061                     	__size_of_setOverTemp_ERROR	equ	__end_of_setOverTemp_ERROR-_setOverTemp_ERROR
  8756                           	
  8757  1DE1                     _setOverTemp_ERROR:	
  8758                           	opt	stack 5
  8759                           ; Regs used in _setOverTemp_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  8760                           ;setOverTemp_ERROR@temp stored from wreg
  8761  1DE1  0020               	movlb 0	; select bank0
  8762  1DE2  00B1               	movwf	(setOverTemp_ERROR@temp)
  8763                           	line	145
  8764                           	
  8765  1DE3                     l24545:	
  8766                           ;OverTemperature_B1.c: 145: TempPointSelect(temp);
  8767  1DE3  0831               	movf	(setOverTemp_ERROR@temp),w
  8768  1DE4  31AE  26C0  319D   	fcall	_TempPointSelect
  8769                           	line	146
  8770                           	
  8771  1DE7                     l24547:	
  8772                           ;OverTemperature_B1.c: 146: if(command)
  8773  1DE7  0020               	movlb 0	; select bank0
  8774  1DE8  082F               	movf	(setOverTemp_ERROR@command),w
  8775  1DE9  1D03               	skipz
  8776  1DEA  2DEC               	goto	u8300
  8777  1DEB  2E11               	goto	l24561
  8778  1DEC                     u8300:
  8779                           	line	148
  8780                           	
  8781  1DEC                     l24549:	
  8782                           ;OverTemperature_B1.c: 147: {
  8783                           ;OverTemperature_B1.c: 148: Temp->ERROR=1;
  8784  1DEC  087C               	movf	(_Temp),w
  8785  1DED  0086               	movwf	fsr1l
  8786  1DEE  3001               	movlw 1	; select bank2/3
  8787  1DEF  0087               	movwf fsr1h	
  8788                           	
  8789  1DF0  1481               	bsf	indf1,1
  8790                           	line	149
  8791                           	
  8792  1DF1                     l24551:	
  8793                           ;OverTemperature_B1.c: 149: setDimmer_TempERROR(1,1);
  8794  1DF1  01A2               	clrf	(?_setDimmer_TempERROR)
  8795  1DF2  1403               	bsf	status,0
  8796  1DF3  0DA2               	rlf	(?_setDimmer_TempERROR),f
  8797  1DF4  3001               	movlw	(01h)
  8798  1DF5  31A0  20C0  319D   	fcall	_setDimmer_TempERROR
  8799                           	line	150
  8800                           	
  8801  1DF8                     l24553:	
  8802                           ;OverTemperature_B1.c: 150: DimmerLights_ERROR();
  8803  1DF8  3191  2159  319D   	fcall	_DimmerLights_ERROR
  8804                           	line	152
  8805                           	
  8806  1DFB                     l24555:	
  8807                           ;OverTemperature_B1.c: 152: setLED(99,11);
  8808  1DFB  300B               	movlw	(0Bh)
  8809  1DFC  0020               	movlb 0	; select bank0
  8810  1DFD  00B0               	movwf	(??_setOverTemp_ERROR+0)+0
  8811  1DFE  0830               	movf	(??_setOverTemp_ERROR+0)+0,w
  8812  1DFF  00A2               	movwf	(?_setLED)
  8813  1E00  3063               	movlw	(063h)
  8814  1E01  3193  23DD  319D   	fcall	_setLED
  8815                           	line	155
  8816                           	
  8817  1E04                     l24557:	
  8818                           ;OverTemperature_B1.c: 155: setSw_Enable(1,0);
  8819  1E04  0020               	movlb 0	; select bank0
  8820  1E05  01A2               	clrf	(?_setSw_Enable)
  8821  1E06  3001               	movlw	(01h)
  8822  1E07  31A1  2100  319D   	fcall	_setSw_Enable
  8823                           	line	165
  8824                           	
  8825  1E0A                     l24559:	
  8826                           ;OverTemperature_B1.c: 165: setRF_Enable(1,0);
  8827  1E0A  0020               	movlb 0	; select bank0
  8828  1E0B  01A5               	clrf	(?_setRF_Enable)
  8829  1E0C  3001               	movlw	(01h)
  8830  1E0D  31A4  2460  319D   	fcall	_setRF_Enable
  8831                           	line	167
  8832                           ;OverTemperature_B1.c: 167: }
  8833  1E10  2E41               	goto	l10789
  8834                           	line	168
  8835                           	
  8836  1E11                     l10786:	
  8837                           	
  8838  1E11                     l24561:	
  8839                           ;OverTemperature_B1.c: 168: else if(command == 0)
  8840  1E11  0020               	movlb 0	; select bank0
  8841  1E12  08AF               	movf	(setOverTemp_ERROR@command),f
  8842  1E13  1D03               	skipz
  8843  1E14  2E16               	goto	u8311
  8844  1E15  2E17               	goto	u8310
  8845  1E16                     u8311:
  8846  1E16  2E41               	goto	l10789
  8847  1E17                     u8310:
  8848                           	line	170
  8849                           	
  8850  1E17                     l24563:	
  8851                           ;OverTemperature_B1.c: 169: {
  8852                           ;OverTemperature_B1.c: 170: Temp->ERROR=0;
  8853  1E17  087C               	movf	(_Temp),w
  8854  1E18  0086               	movwf	fsr1l
  8855  1E19  3001               	movlw 1	; select bank2/3
  8856  1E1A  0087               	movwf fsr1h	
  8857                           	
  8858  1E1B  1081               	bcf	indf1,1
  8859                           	line	171
  8860                           	
  8861  1E1C                     l24565:	
  8862                           ;OverTemperature_B1.c: 171: setDimmer_TempERROR(1,0);
  8863  1E1C  01A2               	clrf	(?_setDimmer_TempERROR)
  8864  1E1D  3001               	movlw	(01h)
  8865  1E1E  31A0  20C0  319D   	fcall	_setDimmer_TempERROR
  8866                           	line	172
  8867                           	
  8868  1E21                     l24567:	
  8869                           ;OverTemperature_B1.c: 172: Temp->Safe=1;
  8870  1E21  087C               	movf	(_Temp),w
  8871  1E22  0086               	movwf	fsr1l
  8872  1E23  3001               	movlw 1	; select bank2/3
  8873  1E24  0087               	movwf fsr1h	
  8874                           	
  8875  1E25  1601               	bsf	indf1,4
  8876                           	line	173
  8877                           ;OverTemperature_B1.c: 173: setLED(99,10);
  8878  1E26  300A               	movlw	(0Ah)
  8879  1E27  0020               	movlb 0	; select bank0
  8880  1E28  00B0               	movwf	(??_setOverTemp_ERROR+0)+0
  8881  1E29  0830               	movf	(??_setOverTemp_ERROR+0)+0,w
  8882  1E2A  00A2               	movwf	(?_setLED)
  8883  1E2B  3063               	movlw	(063h)
  8884  1E2C  3193  23DD  319D   	fcall	_setLED
  8885                           	line	177
  8886                           ;OverTemperature_B1.c: 177: setSw_Enable(1,1);
  8887  1E2F  0020               	movlb 0	; select bank0
  8888  1E30  01A2               	clrf	(?_setSw_Enable)
  8889  1E31  1403               	bsf	status,0
  8890  1E32  0DA2               	rlf	(?_setSw_Enable),f
  8891  1E33  3001               	movlw	(01h)
  8892  1E34  31A1  2100  319D   	fcall	_setSw_Enable
  8893                           	line	189
  8894                           ;OverTemperature_B1.c: 189: setRF_Enable(1,1);
  8895  1E37  0020               	movlb 0	; select bank0
  8896  1E38  01A5               	clrf	(?_setRF_Enable)
  8897  1E39  1403               	bsf	status,0
  8898  1E3A  0DA5               	rlf	(?_setRF_Enable),f
  8899  1E3B  3001               	movlw	(01h)
  8900  1E3C  31A4  2460  319D   	fcall	_setRF_Enable
  8901  1E3F  2E41               	goto	l10789
  8902                           	line	191
  8903                           	
  8904  1E40                     l10788:	
  8905  1E40  2E41               	goto	l10789
  8906                           	line	192
  8907                           	
  8908  1E41                     l10787:	
  8909                           	
  8910  1E41                     l10789:	
  8911  1E41  0008               	return
  8912                           	opt stack 0
  8913                           GLOBAL	__end_of_setOverTemp_ERROR
  8914  1E42                     	__end_of_setOverTemp_ERROR:
  8915 ;; =============== function _setOverTemp_ERROR ends ============
  8916                           
  8917                           	signat	_setOverTemp_ERROR,8312
  8918                           	global	_setLoad_ERROR
  8919                           psect	text3237,local,class=CODE,delta=2
  8920                           global __ptext3237
  8921  1068                     __ptext3237:
  8922                           
  8923 ;; *************** function _setLoad_ERROR *****************
  8924 ;; Defined at:
  8925 ;;		line 242 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  load            1    wreg     unsigned char 
  8928 ;;  command         1   15[BANK0 ] unsigned char 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;  load            1   17[BANK0 ] unsigned char 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;		None               void
  8933 ;; Registers used:
  8934 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  8940 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8941 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8942 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  8943 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  8944 ;;Total ram usage:        3 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    8
  8947 ;; This function calls:
  8948 ;;		_LoadPointSelect
  8949 ;;		_setDimmer_LoadERROR
  8950 ;;		_DimmerLights_ERROR
  8951 ;;		_setLED
  8952 ;;		_setSw_Enable
  8953 ;;		_setRF_Enable
  8954 ;; This function is called by:
  8955 ;;		_setLoad_Main
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           psect	text3237
  8959                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
  8960                           	line	242
  8961                           	global	__size_of_setLoad_ERROR
  8962  0075                     	__size_of_setLoad_ERROR	equ	__end_of_setLoad_ERROR-_setLoad_ERROR
  8963                           	
  8964  1068                     _setLoad_ERROR:	
  8965                           	opt	stack 5
  8966                           ; Regs used in _setLoad_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
  8967                           ;setLoad_ERROR@load stored from wreg
  8968  1068  0020               	movlb 0	; select bank0
  8969  1069  00B1               	movwf	(setLoad_ERROR@load)
  8970                           	line	243
  8971                           	
  8972  106A                     l24509:	
  8973                           ;OverLoad_B1.c: 243: LoadPointSelect(load);
  8974  106A  0831               	movf	(setLoad_ERROR@load),w
  8975  106B  31AF  27BA  3190   	fcall	_LoadPointSelect
  8976                           	line	244
  8977                           	
  8978  106E                     l24511:	
  8979                           ;OverLoad_B1.c: 244: if(command)
  8980  106E  0020               	movlb 0	; select bank0
  8981  106F  082F               	movf	(setLoad_ERROR@command),w
  8982  1070  1D03               	skipz
  8983  1071  2873               	goto	u8280
  8984  1072  28A6               	goto	l24529
  8985  1073                     u8280:
  8986                           	line	246
  8987                           	
  8988  1073                     l24513:	
  8989                           ;OverLoad_B1.c: 245: {
  8990                           ;OverLoad_B1.c: 246: setDimmer_LoadERROR(1,1);
  8991  1073  01A2               	clrf	(?_setDimmer_LoadERROR)
  8992  1074  1403               	bsf	status,0
  8993  1075  0DA2               	rlf	(?_setDimmer_LoadERROR),f
  8994  1076  3001               	movlw	(01h)
  8995  1077  31A0  20D0  3190   	fcall	_setDimmer_LoadERROR
  8996                           	line	247
  8997                           	
  8998  107A                     l24515:	
  8999                           ;OverLoad_B1.c: 247: Load->ERROR=1;
  9000  107A  0020               	movlb 0	; select bank0
  9001  107B  086E               	movf	(_Load),w
  9002  107C  0086               	movwf	fsr1l
  9003  107D  3002               	movlw 2	; select bank4/5
  9004  107E  0087               	movwf fsr1h	
  9005                           	
  9006  107F  1681               	bsf	indf1,5
  9007                           	line	248
  9008                           	
  9009  1080                     l24517:	
  9010                           ;OverLoad_B1.c: 248: Load->ErrorStatus=1;
  9011  1080  086E               	movf	(_Load),w
  9012  1081  3E05               	addlw	05h
  9013  1082  0086               	movwf	fsr1l
  9014  1083  3002               	movlw 2	; select bank4/5
  9015  1084  0087               	movwf fsr1h	
  9016                           	
  9017  1085  0181               	clrf	indf1
  9018  1086  1403               	bsf	status,0
  9019  1087  0D81               	rlf	indf1,f
  9020                           	line	249
  9021                           	
  9022  1088                     l24519:	
  9023                           ;OverLoad_B1.c: 249: Load->Safe=0;
  9024  1088  086E               	movf	(_Load),w
  9025  1089  0086               	movwf	fsr1l
  9026  108A  3002               	movlw 2	; select bank4/5
  9027  108B  0087               	movwf fsr1h	
  9028                           	
  9029  108C  1181               	bcf	indf1,3
  9030                           	line	250
  9031                           	
  9032  108D                     l24521:	
  9033                           ;OverLoad_B1.c: 250: DimmerLights_ERROR();
  9034  108D  3191  2159  3190   	fcall	_DimmerLights_ERROR
  9035                           	line	251
  9036                           	
  9037  1090                     l24523:	
  9038                           ;OverLoad_B1.c: 251: setLED(99,11);
  9039  1090  300B               	movlw	(0Bh)
  9040  1091  0020               	movlb 0	; select bank0
  9041  1092  00B0               	movwf	(??_setLoad_ERROR+0)+0
  9042  1093  0830               	movf	(??_setLoad_ERROR+0)+0,w
  9043  1094  00A2               	movwf	(?_setLED)
  9044  1095  3063               	movlw	(063h)
  9045  1096  3193  23DD  3190   	fcall	_setLED
  9046                           	line	254
  9047                           	
  9048  1099                     l24525:	
  9049                           ;OverLoad_B1.c: 254: setSw_Enable(1,0);
  9050  1099  0020               	movlb 0	; select bank0
  9051  109A  01A2               	clrf	(?_setSw_Enable)
  9052  109B  3001               	movlw	(01h)
  9053  109C  31A1  2100  3190   	fcall	_setSw_Enable
  9054                           	line	266
  9055                           	
  9056  109F                     l24527:	
  9057                           ;OverLoad_B1.c: 266: setRF_Enable(1,0);
  9058  109F  0020               	movlb 0	; select bank0
  9059  10A0  01A5               	clrf	(?_setRF_Enable)
  9060  10A1  3001               	movlw	(01h)
  9061  10A2  31A4  2460  3190   	fcall	_setRF_Enable
  9062                           	line	268
  9063                           ;OverLoad_B1.c: 268: }
  9064  10A5  28DC               	goto	l9577
  9065                           	line	269
  9066                           	
  9067  10A6                     l9574:	
  9068                           	
  9069  10A6                     l24529:	
  9070                           ;OverLoad_B1.c: 269: else if(command == 0)
  9071  10A6  0020               	movlb 0	; select bank0
  9072  10A7  08AF               	movf	(setLoad_ERROR@command),f
  9073  10A8  1D03               	skipz
  9074  10A9  28AB               	goto	u8291
  9075  10AA  28AC               	goto	u8290
  9076  10AB                     u8291:
  9077  10AB  28DC               	goto	l9577
  9078  10AC                     u8290:
  9079                           	line	271
  9080                           	
  9081  10AC                     l24531:	
  9082                           ;OverLoad_B1.c: 270: {
  9083                           ;OverLoad_B1.c: 271: setDimmer_LoadERROR(1,0);
  9084  10AC  01A2               	clrf	(?_setDimmer_LoadERROR)
  9085  10AD  3001               	movlw	(01h)
  9086  10AE  31A0  20D0  3190   	fcall	_setDimmer_LoadERROR
  9087                           	line	272
  9088                           	
  9089  10B1                     l24533:	
  9090                           ;OverLoad_B1.c: 272: Load->ERROR=0;
  9091  10B1  0020               	movlb 0	; select bank0
  9092  10B2  086E               	movf	(_Load),w
  9093  10B3  0086               	movwf	fsr1l
  9094  10B4  3002               	movlw 2	; select bank4/5
  9095  10B5  0087               	movwf fsr1h	
  9096                           	
  9097  10B6  1281               	bcf	indf1,5
  9098                           	line	273
  9099                           	
  9100  10B7                     l24535:	
  9101                           ;OverLoad_B1.c: 273: Load->ErrorStatus=0;
  9102  10B7  086E               	movf	(_Load),w
  9103  10B8  3E05               	addlw	05h
  9104  10B9  0086               	movwf	fsr1l
  9105  10BA  3002               	movlw 2	; select bank4/5
  9106  10BB  0087               	movwf fsr1h	
  9107                           	
  9108  10BC  0181               	clrf	indf1
  9109                           	line	274
  9110                           	
  9111  10BD                     l24537:	
  9112                           ;OverLoad_B1.c: 274: Load->Safe=1;
  9113  10BD  086E               	movf	(_Load),w
  9114  10BE  0086               	movwf	fsr1l
  9115  10BF  3002               	movlw 2	; select bank4/5
  9116  10C0  0087               	movwf fsr1h	
  9117                           	
  9118  10C1  1581               	bsf	indf1,3
  9119                           	line	275
  9120                           	
  9121  10C2                     l24539:	
  9122                           ;OverLoad_B1.c: 275: setLED(99,10);
  9123  10C2  300A               	movlw	(0Ah)
  9124  10C3  00B0               	movwf	(??_setLoad_ERROR+0)+0
  9125  10C4  0830               	movf	(??_setLoad_ERROR+0)+0,w
  9126  10C5  00A2               	movwf	(?_setLED)
  9127  10C6  3063               	movlw	(063h)
  9128  10C7  3193  23DD  3190   	fcall	_setLED
  9129                           	line	278
  9130                           	
  9131  10CA                     l24541:	
  9132                           ;OverLoad_B1.c: 278: setSw_Enable(1,1);
  9133  10CA  0020               	movlb 0	; select bank0
  9134  10CB  01A2               	clrf	(?_setSw_Enable)
  9135  10CC  1403               	bsf	status,0
  9136  10CD  0DA2               	rlf	(?_setSw_Enable),f
  9137  10CE  3001               	movlw	(01h)
  9138  10CF  31A1  2100  3190   	fcall	_setSw_Enable
  9139                           	line	290
  9140                           	
  9141  10D2                     l24543:	
  9142                           ;OverLoad_B1.c: 290: setRF_Enable(1,1);
  9143  10D2  0020               	movlb 0	; select bank0
  9144  10D3  01A5               	clrf	(?_setRF_Enable)
  9145  10D4  1403               	bsf	status,0
  9146  10D5  0DA5               	rlf	(?_setRF_Enable),f
  9147  10D6  3001               	movlw	(01h)
  9148  10D7  31A4  2460  3190   	fcall	_setRF_Enable
  9149  10DA  28DC               	goto	l9577
  9150                           	line	292
  9151                           	
  9152  10DB                     l9576:	
  9153  10DB  28DC               	goto	l9577
  9154                           	line	293
  9155                           	
  9156  10DC                     l9575:	
  9157                           	
  9158  10DC                     l9577:	
  9159  10DC  0008               	return
  9160                           	opt stack 0
  9161                           GLOBAL	__end_of_setLoad_ERROR
  9162  10DD                     	__end_of_setLoad_ERROR:
  9163 ;; =============== function _setLoad_ERROR ends ============
  9164                           
  9165                           	signat	_setLoad_ERROR,8312
  9166                           	global	_Switch_Main
  9167                           psect	text3238,local,class=CODE,delta=2
  9168                           global __ptext3238
  9169  2EAC                     __ptext3238:
  9170                           
  9171 ;; *************** function _Switch_Main *****************
  9172 ;; Defined at:
  9173 ;;		line 57 in file "G:\Program\PIC\Source_File\Switch_B1.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;		None
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;		None               void
  9180 ;; Registers used:
  9181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    8
  9194 ;; This function calls:
  9195 ;;		_setSw_Main
  9196 ;; This function is called by:
  9197 ;;		_main
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           psect	text3238
  9201                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
  9202                           	line	57
  9203                           	global	__size_of_Switch_Main
  9204  0005                     	__size_of_Switch_Main	equ	__end_of_Switch_Main-_Switch_Main
  9205                           	
  9206  2EAC                     _Switch_Main:	
  9207                           	opt	stack 7
  9208                           ; Regs used in _Switch_Main: [wreg+fsr1l-status,0+pclath+cstack]
  9209                           	line	59
  9210                           	
  9211  2EAC                     l24507:	
  9212                           ;Switch_B1.c: 59: setSw_Main(1);
  9213  2EAC  3001               	movlw	(01h)
  9214  2EAD  3185  2517  31AE   	fcall	_setSw_Main
  9215                           	line	70
  9216                           	
  9217  2EB0                     l14364:	
  9218  2EB0  0008               	return
  9219                           	opt stack 0
  9220                           GLOBAL	__end_of_Switch_Main
  9221  2EB1                     	__end_of_Switch_Main:
  9222 ;; =============== function _Switch_Main ends ============
  9223                           
  9224                           	signat	_Switch_Main,88
  9225                           	global	_Flash_Memory_Main
  9226                           psect	text3239,local,class=CODE,delta=2
  9227                           global __ptext3239
  9228  1AC1                     __ptext3239:
  9229                           
  9230 ;; *************** function _Flash_Memory_Main *****************
  9231 ;; Defined at:
  9232 ;;		line 408 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;		None               void
  9239 ;; Registers used:
  9240 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    7
  9253 ;; This function calls:
  9254 ;;		_Flash_Memory_Modify
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           psect	text3239
  9260                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
  9261                           	line	408
  9262                           	global	__size_of_Flash_Memory_Main
  9263  0050                     	__size_of_Flash_Memory_Main	equ	__end_of_Flash_Memory_Main-_Flash_Memory_Main
  9264                           	
  9265  1AC1                     _Flash_Memory_Main:	
  9266                           	opt	stack 8
  9267                           ; Regs used in _Flash_Memory_Main: [wreg+fsr1l-status,0+pclath+cstack]
  9268                           	line	409
  9269                           	
  9270  1AC1                     l24493:	
  9271                           ;MCU_16f1518_B1.c: 409: if(Memory->GO)
  9272  1AC1  0021               	movlb 1	; select bank1
  9273  1AC2  086D               	movf	(_Memory)^080h,w
  9274  1AC3  3E22               	addlw	022h
  9275  1AC4  0086               	movwf	fsr1l
  9276  1AC5  3001               	movlw 1	; select bank2/3
  9277  1AC6  0087               	movwf fsr1h	
  9278                           	
  9279  1AC7  1C81               	btfss	indf1,1
  9280  1AC8  2ACA               	goto	u8251
  9281  1AC9  2ACB               	goto	u8250
  9282  1ACA                     u8251:
  9283  1ACA  2B10               	goto	l8377
  9284  1ACB                     u8250:
  9285                           	line	411
  9286                           	
  9287  1ACB                     l24495:	
  9288                           ;MCU_16f1518_B1.c: 410: {
  9289                           ;MCU_16f1518_B1.c: 411: if(Memory->Modify)
  9290  1ACB  086D               	movf	(_Memory)^080h,w
  9291  1ACC  3E22               	addlw	022h
  9292  1ACD  0086               	movwf	fsr1l
  9293  1ACE  3001               	movlw 1	; select bank2/3
  9294  1ACF  0087               	movwf fsr1h	
  9295                           	
  9296  1AD0  1C01               	btfss	indf1,0
  9297  1AD1  2AD3               	goto	u8261
  9298  1AD2  2AD4               	goto	u8260
  9299  1AD3                     u8261:
  9300  1AD3  2B07               	goto	l24505
  9301  1AD4                     u8260:
  9302                           	line	413
  9303                           	
  9304  1AD4                     l24497:	
  9305                           ;MCU_16f1518_B1.c: 412: {
  9306                           ;MCU_16f1518_B1.c: 413: Memory->Time++;
  9307  1AD4  086D               	movf	(_Memory)^080h,w
  9308  1AD5  3E23               	addlw	023h
  9309  1AD6  0086               	movwf	fsr1l
  9310  1AD7  3001               	movlw 1	; select bank2/3
  9311  1AD8  0087               	movwf fsr1h	
  9312                           	
  9313  1AD9  3001               	movlw	01h
  9314  1ADA  0781               	addwf	indf1,f
  9315  1ADB  3141               	addfsr	fsr1,1
  9316  1ADC  1803               	skipnc
  9317  1ADD  0A81               	incf	indf1,f
  9318                           	line	414
  9319                           	
  9320  1ADE                     l24499:	
  9321                           ;MCU_16f1518_B1.c: 414: if(Memory->Time == 50)
  9322  1ADE  086D               	movf	(_Memory)^080h,w
  9323  1ADF  3E23               	addlw	023h
  9324  1AE0  0086               	movwf	fsr1l
  9325  1AE1  3001               	movlw 1	; select bank2/3
  9326  1AE2  0087               	movwf fsr1h	
  9327                           	
  9328  1AE3  3F40               	moviw	[0]fsr1
  9329  1AE4  3A32               	xorlw	low(032h)
  9330  1AE5  1D03               	skipz
  9331  1AE6  2AE9               	goto	u8275
  9332  1AE7  3F41               	moviw	[1]fsr1
  9333  1AE8  3A00               	xorlw	high(032h)
  9334  1AE9                     u8275:
  9335  1AE9  1D03               	skipz
  9336  1AEA  2AEC               	goto	u8271
  9337  1AEB  2AED               	goto	u8270
  9338  1AEC                     u8271:
  9339  1AEC  2B10               	goto	l8377
  9340  1AED                     u8270:
  9341                           	line	416
  9342                           	
  9343  1AED                     l24501:	
  9344                           ;MCU_16f1518_B1.c: 415: {
  9345                           ;MCU_16f1518_B1.c: 416: Memory->Time=0;
  9346  1AED  086D               	movf	(_Memory)^080h,w
  9347  1AEE  3E23               	addlw	023h
  9348  1AEF  0086               	movwf	fsr1l
  9349  1AF0  3001               	movlw 1	; select bank2/3
  9350  1AF1  0087               	movwf fsr1h	
  9351                           	
  9352  1AF2  3000               	movlw	low(0)
  9353  1AF3  3FC0               	movwi	[0]fsr1
  9354  1AF4  3000               	movlw	high(0)
  9355  1AF5  3FC1               	movwi	[1]fsr1
  9356                           	line	417
  9357                           ;MCU_16f1518_B1.c: 417: Memory->Modify=0;
  9358  1AF6  086D               	movf	(_Memory)^080h,w
  9359  1AF7  3E22               	addlw	022h
  9360  1AF8  0086               	movwf	fsr1l
  9361  1AF9  3001               	movlw 1	; select bank2/3
  9362  1AFA  0087               	movwf fsr1h	
  9363                           	
  9364  1AFB  1001               	bcf	indf1,0
  9365                           	line	418
  9366                           ;MCU_16f1518_B1.c: 418: Memory->GO=0;
  9367  1AFC  086D               	movf	(_Memory)^080h,w
  9368  1AFD  3E22               	addlw	022h
  9369  1AFE  0086               	movwf	fsr1l
  9370  1AFF  3001               	movlw 1	; select bank2/3
  9371  1B00  0087               	movwf fsr1h	
  9372                           	
  9373  1B01  1081               	bcf	indf1,1
  9374                           	line	419
  9375                           	
  9376  1B02                     l24503:	
  9377                           ;MCU_16f1518_B1.c: 419: Flash_Memory_Modify();
  9378  1B02  3193  235B  319A   	fcall	_Flash_Memory_Modify
  9379  1B05  2B10               	goto	l8377
  9380                           	line	420
  9381                           	
  9382  1B06                     l8375:	
  9383                           	line	421
  9384                           ;MCU_16f1518_B1.c: 420: }
  9385                           ;MCU_16f1518_B1.c: 421: }
  9386  1B06  2B10               	goto	l8377
  9387                           	line	422
  9388                           	
  9389  1B07                     l8374:	
  9390                           	line	424
  9391                           	
  9392  1B07                     l24505:	
  9393                           ;MCU_16f1518_B1.c: 422: else
  9394                           ;MCU_16f1518_B1.c: 423: {
  9395                           ;MCU_16f1518_B1.c: 424: Memory->GO=0;
  9396  1B07  0021               	movlb 1	; select bank1
  9397  1B08  086D               	movf	(_Memory)^080h,w
  9398  1B09  3E22               	addlw	022h
  9399  1B0A  0086               	movwf	fsr1l
  9400  1B0B  3001               	movlw 1	; select bank2/3
  9401  1B0C  0087               	movwf fsr1h	
  9402                           	
  9403  1B0D  1081               	bcf	indf1,1
  9404  1B0E  2B10               	goto	l8377
  9405                           	line	425
  9406                           	
  9407  1B0F                     l8376:	
  9408  1B0F  2B10               	goto	l8377
  9409                           	line	426
  9410                           	
  9411  1B10                     l8373:	
  9412                           	line	427
  9413                           	
  9414  1B10                     l8377:	
  9415  1B10  0008               	return
  9416                           	opt stack 0
  9417                           GLOBAL	__end_of_Flash_Memory_Main
  9418  1B11                     	__end_of_Flash_Memory_Main:
  9419 ;; =============== function _Flash_Memory_Main ends ============
  9420                           
  9421                           	signat	_Flash_Memory_Main,88
  9422                           	global	_MainT
  9423                           psect	text3240,local,class=CODE,delta=2
  9424                           global __ptext3240
  9425  1000                     __ptext3240:
  9426                           
  9427 ;; *************** function _MainT *****************
  9428 ;; Defined at:
  9429 ;;		line 102 in file "G:\Program\PIC\Source_File\main.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;		None
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;		None
  9434 ;; Return value:  Size  Location     Type
  9435 ;;		None               void
  9436 ;; Registers used:
  9437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9446 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
  9447 ;;Total ram usage:        1 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    8
  9450 ;; This function calls:
  9451 ;;		_setTemp_Enable
  9452 ;;		_setLoad_Enable
  9453 ;;		_setBuz
  9454 ;;		_setSw_Enable
  9455 ;;		_setRF_Enable
  9456 ;; This function is called by:
  9457 ;;		_main
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text3240
  9461                           	file	"G:\Program\PIC\Source_File\main.c"
  9462                           	line	102
  9463                           	global	__size_of_MainT
  9464  0068                     	__size_of_MainT	equ	__end_of_MainT-_MainT
  9465                           	
  9466  1000                     _MainT:	
  9467                           	opt	stack 7
  9468                           ; Regs used in _MainT: [wreg+fsr1l-status,0+pclath+cstack]
  9469                           	line	104
  9470                           	
  9471  1000                     l24477:	
  9472                           ;main.c: 104: if(!TMain->PowerON)
  9473  1000  0021               	movlb 1	; select bank1
  9474  1001  086E               	movf	(_TMain)^080h,w
  9475  1002  0086               	movwf	fsr1l
  9476  1003  3001               	movlw 1	; select bank2/3
  9477  1004  0087               	movwf fsr1h	
  9478                           	
  9479  1005  1801               	btfsc	indf1,0
  9480  1006  2808               	goto	u8231
  9481  1007  2809               	goto	u8230
  9482  1008                     u8231:
  9483  1008  2867               	goto	l7156
  9484  1009                     u8230:
  9485                           	line	106
  9486                           	
  9487  1009                     l24479:	
  9488                           ;main.c: 105: {
  9489                           ;main.c: 106: TMain->PowerCount++;
  9490  1009  086E               	movf	(_TMain)^080h,w
  9491  100A  3E01               	addlw	01h
  9492  100B  0086               	movwf	fsr1l
  9493  100C  3001               	movlw 1	; select bank2/3
  9494  100D  0087               	movwf fsr1h	
  9495                           	
  9496  100E  3001               	movlw	01h
  9497  100F  0781               	addwf	indf1,f
  9498  1010  3141               	addfsr	fsr1,1
  9499  1011  1803               	skipnc
  9500  1012  0A81               	incf	indf1,f
  9501                           	line	107
  9502                           	
  9503  1013                     l24481:	
  9504                           ;main.c: 107: if(TMain->PowerCount == 150)
  9505  1013  086E               	movf	(_TMain)^080h,w
  9506  1014  3E01               	addlw	01h
  9507  1015  0086               	movwf	fsr1l
  9508  1016  3001               	movlw 1	; select bank2/3
  9509  1017  0087               	movwf fsr1h	
  9510                           	
  9511  1018  3F40               	moviw	[0]fsr1
  9512  1019  3A96               	xorlw	low(096h)
  9513  101A  1D03               	skipz
  9514  101B  281E               	goto	u8245
  9515  101C  3F41               	moviw	[1]fsr1
  9516  101D  3A00               	xorlw	high(096h)
  9517  101E                     u8245:
  9518  101E  1D03               	skipz
  9519  101F  2821               	goto	u8241
  9520  1020  2822               	goto	u8240
  9521  1021                     u8241:
  9522  1021  2867               	goto	l7156
  9523  1022                     u8240:
  9524                           	line	109
  9525                           	
  9526  1022                     l24483:	
  9527                           ;main.c: 108: {
  9528                           ;main.c: 109: TMain->PowerCount=0;
  9529  1022  086E               	movf	(_TMain)^080h,w
  9530  1023  3E01               	addlw	01h
  9531  1024  0086               	movwf	fsr1l
  9532  1025  3001               	movlw 1	; select bank2/3
  9533  1026  0087               	movwf fsr1h	
  9534                           	
  9535  1027  3000               	movlw	low(0)
  9536  1028  3FC0               	movwi	[0]fsr1
  9537  1029  3000               	movlw	high(0)
  9538  102A  3FC1               	movwi	[1]fsr1
  9539                           	line	110
  9540                           ;main.c: 110: TMain->PowerON=1;
  9541  102B  086E               	movf	(_TMain)^080h,w
  9542  102C  0086               	movwf	fsr1l
  9543  102D  3001               	movlw 1	; select bank2/3
  9544  102E  0087               	movwf fsr1h	
  9545                           	
  9546  102F  1401               	bsf	indf1,0
  9547                           	line	113
  9548                           	
  9549  1030                     l24485:	
  9550                           ;main.c: 113: setTemp_Enable(1,1);
  9551  1030  0020               	movlb 0	; select bank0
  9552  1031  01A1               	clrf	(?_setTemp_Enable)
  9553  1032  1403               	bsf	status,0
  9554  1033  0DA1               	rlf	(?_setTemp_Enable),f
  9555  1034  3001               	movlw	(01h)
  9556  1035  31A0  20F0  3190   	fcall	_setTemp_Enable
  9557                           	line	117
  9558                           	
  9559  1038                     l24487:	
  9560                           ;main.c: 117: setLoad_Enable(1,1);
  9561  1038  0020               	movlb 0	; select bank0
  9562  1039  01A2               	clrf	(?_setLoad_Enable)
  9563  103A  1403               	bsf	status,0
  9564  103B  0DA2               	rlf	(?_setLoad_Enable),f
  9565  103C  3001               	movlw	(01h)
  9566  103D  3187  27EB  3190   	fcall	_setLoad_Enable
  9567                           	line	123
  9568                           	
  9569  1040                     l24489:	
  9570                           ;main.c: 123: setBuz(1,3,50);
  9571  1040  3003               	movlw	(03h)
  9572  1041  0020               	movlb 0	; select bank0
  9573  1042  00AE               	movwf	(??_MainT+0)+0
  9574  1043  082E               	movf	(??_MainT+0)+0,w
  9575  1044  00A9               	movwf	(?_setBuz)
  9576  1045  3032               	movlw	low(032h)
  9577  1046  00AA               	movwf	0+(?_setBuz)+01h
  9578  1047  3000               	movlw	high(032h)
  9579  1048  00AB               	movwf	(0+(?_setBuz)+01h)+1
  9580  1049  3001               	movlw	(01h)
  9581  104A  3196  2617  3190   	fcall	_setBuz
  9582                           	line	124
  9583                           	
  9584  104D                     l24491:	
  9585                           ;main.c: 124: TMain->SelfTest=1;
  9586  104D  0021               	movlb 1	; select bank1
  9587  104E  086E               	movf	(_TMain)^080h,w
  9588  104F  3E03               	addlw	03h
  9589  1050  0086               	movwf	fsr1l
  9590  1051  3001               	movlw 1	; select bank2/3
  9591  1052  0087               	movwf fsr1h	
  9592                           	
  9593  1053  1401               	bsf	indf1,0
  9594                           	line	127
  9595                           ;main.c: 127: setSw_Enable(1,1);
  9596  1054  0020               	movlb 0	; select bank0
  9597  1055  01A2               	clrf	(?_setSw_Enable)
  9598  1056  1403               	bsf	status,0
  9599  1057  0DA2               	rlf	(?_setSw_Enable),f
  9600  1058  3001               	movlw	(01h)
  9601  1059  31A1  2100  3190   	fcall	_setSw_Enable
  9602                           	line	139
  9603                           ;main.c: 139: setRF_Enable(1,1);
  9604  105C  0020               	movlb 0	; select bank0
  9605  105D  01A5               	clrf	(?_setRF_Enable)
  9606  105E  1403               	bsf	status,0
  9607  105F  0DA5               	rlf	(?_setRF_Enable),f
  9608  1060  3001               	movlw	(01h)
  9609  1061  31A4  2460  3190   	fcall	_setRF_Enable
  9610  1064  2867               	goto	l7156
  9611                           	line	143
  9612                           	
  9613  1065                     l7154:	
  9614                           	line	144
  9615                           ;main.c: 143: }
  9616                           ;main.c: 144: }
  9617  1065  2867               	goto	l7156
  9618                           	line	145
  9619                           	
  9620  1066                     l7153:	
  9621  1066  2867               	goto	l7156
  9622                           	line	190
  9623                           ;main.c: 145: else
  9624                           ;main.c: 146: {
  9625                           	
  9626  1067                     l7155:	
  9627                           	line	191
  9628                           	
  9629  1067                     l7156:	
  9630  1067  0008               	return
  9631                           	opt stack 0
  9632                           GLOBAL	__end_of_MainT
  9633  1068                     	__end_of_MainT:
  9634 ;; =============== function _MainT ends ============
  9635                           
  9636                           	signat	_MainT,88
  9637                           	global	_setDimmerLights_Main
  9638                           psect	text3241,local,class=CODE,delta=2
  9639                           global __ptext3241
  9640  175B                     __ptext3241:
  9641                           
  9642 ;; *************** function _setDimmerLights_Main *****************
  9643 ;; Defined at:
  9644 ;;		line 99 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  lights          1    wreg     unsigned char 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  lights          1   54[BANK0 ] unsigned char 
  9649 ;;  close           1   53[BANK0 ] unsigned char 
  9650 ;;  open            1   52[BANK0 ] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;		None               void
  9653 ;; Registers used:
  9654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
  9660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
  9663 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
  9664 ;;Total ram usage:        3 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    8
  9667 ;; This function calls:
  9668 ;;		_DimmerLightsPointSelect
  9669 ;;		_setDimmerLights_Open
  9670 ;;		_setDimmerLights_Close
  9671 ;;		_setDimmerLights
  9672 ;;		_getDimmerLights_Trigger
  9673 ;;		_setDimmerLights_Adj
  9674 ;;		_setBuz
  9675 ;; This function is called by:
  9676 ;;		_DimmerLights_Main
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           psect	text3241
  9680                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
  9681                           	line	99
  9682                           	global	__size_of_setDimmerLights_Main
  9683  00A5                     	__size_of_setDimmerLights_Main	equ	__end_of_setDimmerLights_Main-_setDimmerLights_Main
  9684                           	
  9685  175B                     _setDimmerLights_Main:	
  9686                           	opt	stack 6
  9687                           ; Regs used in _setDimmerLights_Main: [wreg+fsr1l-status,0+pclath+cstack]
  9688                           ;setDimmerLights_Main@lights stored from wreg
  9689  175B  0020               	movlb 0	; select bank0
  9690  175C  00D6               	movwf	(setDimmerLights_Main@lights)
  9691                           	line	100
  9692                           	
  9693  175D                     l24435:	
  9694                           ;Dimmer_B1.c: 100: char open=1,close=1;
  9695  175D  01D4               	clrf	(setDimmerLights_Main@open)
  9696  175E  1403               	bsf	status,0
  9697  175F  0DD4               	rlf	(setDimmerLights_Main@open),f
  9698  1760  01D5               	clrf	(setDimmerLights_Main@close)
  9699  1761  1403               	bsf	status,0
  9700  1762  0DD5               	rlf	(setDimmerLights_Main@close),f
  9701                           	line	101
  9702                           	
  9703  1763                     l24437:	
  9704                           ;Dimmer_B1.c: 101: DimmerLightsPointSelect(lights);
  9705  1763  0856               	movf	(setDimmerLights_Main@lights),w
  9706  1764  31AF  27AC  3197   	fcall	_DimmerLightsPointSelect
  9707                           	line	102
  9708                           	
  9709  1767                     l24439:	
  9710                           ;Dimmer_B1.c: 102: if(DimmerLights->Trigger)
  9711  1767  0020               	movlb 0	; select bank0
  9712  1768  086D               	movf	(_DimmerLights),w
  9713  1769  3E09               	addlw	09h
  9714  176A  0086               	movwf	fsr1l
  9715  176B  3001               	movlw 1	; select bank2/3
  9716  176C  0087               	movwf fsr1h	
  9717                           	
  9718  176D  1C81               	btfss	indf1,1
  9719  176E  2F70               	goto	u8161
  9720  176F  2F71               	goto	u8160
  9721  1770                     u8161:
  9722  1770  2FBA               	goto	l24463
  9723  1771                     u8160:
  9724                           	line	145
  9725                           	
  9726  1771                     l24441:	
  9727                           ;Dimmer_B1.c: 103: {
  9728                           ;Dimmer_B1.c: 145: if(open)
  9729  1771  0854               	movf	(setDimmerLights_Main@open),w
  9730  1772  1D03               	skipz
  9731  1773  2F75               	goto	u8170
  9732  1774  2FFF               	goto	l4714
  9733  1775                     u8170:
  9734                           	line	147
  9735                           	
  9736  1775                     l24443:	
  9737                           ;Dimmer_B1.c: 146: {
  9738                           ;Dimmer_B1.c: 147: if(DimmerLights->Switch)
  9739  1775  086D               	movf	(_DimmerLights),w
  9740  1776  3E09               	addlw	09h
  9741  1777  0086               	movwf	fsr1l
  9742  1778  3001               	movlw 1	; select bank2/3
  9743  1779  0087               	movwf fsr1h	
  9744                           	
  9745  177A  1C01               	btfss	indf1,0
  9746  177B  2F7D               	goto	u8181
  9747  177C  2F7E               	goto	u8180
  9748  177D                     u8181:
  9749  177D  2F9F               	goto	l24455
  9750  177E                     u8180:
  9751                           	line	189
  9752                           	
  9753  177E                     l24445:	
  9754                           ;Dimmer_B1.c: 148: {
  9755                           ;Dimmer_B1.c: 189: if(close)
  9756  177E  0855               	movf	(setDimmerLights_Main@close),w
  9757  177F  1D03               	skipz
  9758  1780  2F82               	goto	u8190
  9759  1781  2FFF               	goto	l4714
  9760  1782                     u8190:
  9761                           	line	191
  9762                           	
  9763  1782                     l24447:	
  9764                           ;Dimmer_B1.c: 190: {
  9765                           ;Dimmer_B1.c: 191: DimmerLights->Trigger=0;
  9766  1782  086D               	movf	(_DimmerLights),w
  9767  1783  3E09               	addlw	09h
  9768  1784  0086               	movwf	fsr1l
  9769  1785  3001               	movlw 1	; select bank2/3
  9770  1786  0087               	movwf fsr1h	
  9771                           	
  9772  1787  1081               	bcf	indf1,1
  9773                           	line	192
  9774                           	
  9775  1788                     l24449:	
  9776                           ;Dimmer_B1.c: 192: setDimmerLights_Open(lights,0);
  9777  1788  01A2               	clrf	(?_setDimmerLights_Open)
  9778  1789  0856               	movf	(setDimmerLights_Main@lights),w
  9779  178A  31A1  2163  3197   	fcall	_setDimmerLights_Open
  9780                           	line	193
  9781                           	
  9782  178D                     l24451:	
  9783                           ;Dimmer_B1.c: 193: setDimmerLights_Close(lights,1);
  9784  178D  0020               	movlb 0	; select bank0
  9785  178E  01A2               	clrf	(?_setDimmerLights_Close)
  9786  178F  1403               	bsf	status,0
  9787  1790  0DA2               	rlf	(?_setDimmerLights_Close),f
  9788  1791  0856               	movf	(setDimmerLights_Main@lights),w
  9789  1792  31A1  2174  3197   	fcall	_setDimmerLights_Close
  9790                           	line	194
  9791                           	
  9792  1795                     l24453:	
  9793                           ;Dimmer_B1.c: 194: setDimmerLights(lights,1);
  9794  1795  0020               	movlb 0	; select bank0
  9795  1796  01A6               	clrf	(?_setDimmerLights)
  9796  1797  1403               	bsf	status,0
  9797  1798  0DA6               	rlf	(?_setDimmerLights),f
  9798  1799  0856               	movf	(setDimmerLights_Main@lights),w
  9799  179A  3196  26B8  3197   	fcall	_setDimmerLights
  9800  179D  2FFF               	goto	l4714
  9801                           	line	195
  9802                           	
  9803  179E                     l4707:	
  9804                           	line	196
  9805                           ;Dimmer_B1.c: 195: }
  9806                           ;Dimmer_B1.c: 196: }
  9807  179E  2FFF               	goto	l4714
  9808                           	line	197
  9809                           	
  9810  179F                     l4706:	
  9811                           	line	199
  9812                           	
  9813  179F                     l24455:	
  9814                           ;Dimmer_B1.c: 197: else
  9815                           ;Dimmer_B1.c: 198: {
  9816                           ;Dimmer_B1.c: 199: DimmerLights->Trigger=0;
  9817  179F  0020               	movlb 0	; select bank0
  9818  17A0  086D               	movf	(_DimmerLights),w
  9819  17A1  3E09               	addlw	09h
  9820  17A2  0086               	movwf	fsr1l
  9821  17A3  3001               	movlw 1	; select bank2/3
  9822  17A4  0087               	movwf fsr1h	
  9823                           	
  9824  17A5  1081               	bcf	indf1,1
  9825                           	line	200
  9826                           	
  9827  17A6                     l24457:	
  9828                           ;Dimmer_B1.c: 200: setDimmerLights_Open(lights,0);
  9829  17A6  01A2               	clrf	(?_setDimmerLights_Open)
  9830  17A7  0856               	movf	(setDimmerLights_Main@lights),w
  9831  17A8  31A1  2163  3197   	fcall	_setDimmerLights_Open
  9832                           	line	201
  9833                           	
  9834  17AB                     l24459:	
  9835                           ;Dimmer_B1.c: 201: setDimmerLights_Close(lights,0);
  9836  17AB  0020               	movlb 0	; select bank0
  9837  17AC  01A2               	clrf	(?_setDimmerLights_Close)
  9838  17AD  0856               	movf	(setDimmerLights_Main@lights),w
  9839  17AE  31A1  2174  3197   	fcall	_setDimmerLights_Close
  9840                           	line	202
  9841                           	
  9842  17B1                     l24461:	
  9843                           ;Dimmer_B1.c: 202: setDimmerLights(lights,0);
  9844  17B1  0020               	movlb 0	; select bank0
  9845  17B2  01A6               	clrf	(?_setDimmerLights)
  9846  17B3  0856               	movf	(setDimmerLights_Main@lights),w
  9847  17B4  3196  26B8  3197   	fcall	_setDimmerLights
  9848  17B7  2FFF               	goto	l4714
  9849                           	line	203
  9850                           	
  9851  17B8                     l4708:	
  9852  17B8  2FFF               	goto	l4714
  9853                           	line	204
  9854                           	
  9855  17B9                     l4705:	
  9856                           	line	205
  9857                           ;Dimmer_B1.c: 203: }
  9858                           ;Dimmer_B1.c: 204: }
  9859                           ;Dimmer_B1.c: 205: }
  9860  17B9  2FFF               	goto	l4714
  9861                           	line	206
  9862                           	
  9863  17BA                     l4704:	
  9864                           	line	208
  9865                           	
  9866  17BA                     l24463:	
  9867                           ;Dimmer_B1.c: 206: else
  9868                           ;Dimmer_B1.c: 207: {
  9869                           ;Dimmer_B1.c: 208: if(DimmerLights->TriggerAdj)
  9870  17BA  0020               	movlb 0	; select bank0
  9871  17BB  086D               	movf	(_DimmerLights),w
  9872  17BC  3E09               	addlw	09h
  9873  17BD  0086               	movwf	fsr1l
  9874  17BE  3001               	movlw 1	; select bank2/3
  9875  17BF  0087               	movwf fsr1h	
  9876                           	
  9877  17C0  1D81               	btfss	indf1,3
  9878  17C1  2FC3               	goto	u8201
  9879  17C2  2FC4               	goto	u8200
  9880  17C3                     u8201:
  9881  17C3  2FFF               	goto	l4714
  9882  17C4                     u8200:
  9883                           	line	210
  9884                           	
  9885  17C4                     l24465:	
  9886                           ;Dimmer_B1.c: 209: {
  9887                           ;Dimmer_B1.c: 210: if(!getDimmerLights_Trigger())
  9888  17C4  31A4  2410  3197   	fcall	_getDimmerLights_Trigger
  9889  17C7  3800               	iorlw	0
  9890  17C8  1D03               	skipz
  9891  17C9  2FCB               	goto	u8211
  9892  17CA  2FCC               	goto	u8210
  9893  17CB                     u8211:
  9894  17CB  2FFF               	goto	l4714
  9895  17CC                     u8210:
  9896                           	line	212
  9897                           	
  9898  17CC                     l24467:	
  9899                           ;Dimmer_B1.c: 211: {
  9900                           ;Dimmer_B1.c: 212: DimmerLightsPointSelect(lights);
  9901  17CC  0020               	movlb 0	; select bank0
  9902  17CD  0856               	movf	(setDimmerLights_Main@lights),w
  9903  17CE  31AF  27AC  3197   	fcall	_DimmerLightsPointSelect
  9904                           	line	213
  9905                           	
  9906  17D1                     l24469:	
  9907                           ;Dimmer_B1.c: 213: DimmerLights->TriggerAdj=0;
  9908  17D1  0020               	movlb 0	; select bank0
  9909  17D2  086D               	movf	(_DimmerLights),w
  9910  17D3  3E09               	addlw	09h
  9911  17D4  0086               	movwf	fsr1l
  9912  17D5  3001               	movlw 1	; select bank2/3
  9913  17D6  0087               	movwf fsr1h	
  9914                           	
  9915  17D7  1181               	bcf	indf1,3
  9916                           	line	214
  9917                           	
  9918  17D8                     l24471:	
  9919                           ;Dimmer_B1.c: 214: if(DimmerLights->AdjGo)
  9920  17D8  086D               	movf	(_DimmerLights),w
  9921  17D9  3E09               	addlw	09h
  9922  17DA  0086               	movwf	fsr1l
  9923  17DB  3001               	movlw 1	; select bank2/3
  9924  17DC  0087               	movwf fsr1h	
  9925                           	
  9926  17DD  1D01               	btfss	indf1,2
  9927  17DE  2FE0               	goto	u8221
  9928  17DF  2FE1               	goto	u8220
  9929  17E0                     u8221:
  9930  17E0  2FF5               	goto	l24475
  9931  17E1                     u8220:
  9932                           	line	216
  9933                           	
  9934  17E1                     l24473:	
  9935                           ;Dimmer_B1.c: 215: {
  9936                           ;Dimmer_B1.c: 216: setDimmerLights_Adj(lights,1);
  9937  17E1  01D0               	clrf	(?_setDimmerLights_Adj)
  9938  17E2  1403               	bsf	status,0
  9939  17E3  0DD0               	rlf	(?_setDimmerLights_Adj),f
  9940  17E4  0856               	movf	(setDimmerLights_Main@lights),w
  9941  17E5  319E  2642  3197   	fcall	_setDimmerLights_Adj
  9942                           	line	217
  9943                           ;Dimmer_B1.c: 217: setBuz(1,1,100);
  9944  17E8  0020               	movlb 0	; select bank0
  9945  17E9  01A9               	clrf	(?_setBuz)
  9946  17EA  1403               	bsf	status,0
  9947  17EB  0DA9               	rlf	(?_setBuz),f
  9948  17EC  3064               	movlw	low(064h)
  9949  17ED  00AA               	movwf	0+(?_setBuz)+01h
  9950  17EE  3000               	movlw	high(064h)
  9951  17EF  00AB               	movwf	(0+(?_setBuz)+01h)+1
  9952  17F0  3001               	movlw	(01h)
  9953  17F1  3196  2617  3197   	fcall	_setBuz
  9954                           	line	218
  9955                           ;Dimmer_B1.c: 218: }
  9956  17F4  2FFF               	goto	l4714
  9957                           	line	219
  9958                           	
  9959  17F5                     l4712:	
  9960                           	line	221
  9961                           	
  9962  17F5                     l24475:	
  9963                           ;Dimmer_B1.c: 219: else
  9964                           ;Dimmer_B1.c: 220: {
  9965                           ;Dimmer_B1.c: 221: setDimmerLights_Adj(lights,0);
  9966  17F5  0020               	movlb 0	; select bank0
  9967  17F6  01D0               	clrf	(?_setDimmerLights_Adj)
  9968  17F7  0856               	movf	(setDimmerLights_Main@lights),w
  9969  17F8  319E  2642  3197   	fcall	_setDimmerLights_Adj
  9970  17FB  2FFF               	goto	l4714
  9971                           	line	222
  9972                           	
  9973  17FC                     l4713:	
  9974  17FC  2FFF               	goto	l4714
  9975                           	line	223
  9976                           	
  9977  17FD                     l4711:	
  9978  17FD  2FFF               	goto	l4714
  9979                           	line	224
  9980                           	
  9981  17FE                     l4710:	
  9982  17FE  2FFF               	goto	l4714
  9983                           	line	225
  9984                           	
  9985  17FF                     l4709:	
  9986                           	line	226
  9987                           	
  9988  17FF                     l4714:	
  9989  17FF  0008               	return
  9990                           	opt stack 0
  9991                           GLOBAL	__end_of_setDimmerLights_Main
  9992  1800                     	__end_of_setDimmerLights_Main:
  9993 ;; =============== function _setDimmerLights_Main ends ============
  9994                           
  9995                           	signat	_setDimmerLights_Main,4216
  9996                           	global	_DimmerLights_Initialization
  9997                           psect	text3242,local,class=CODE,delta=2
  9998                           global __ptext3242
  9999  2F20                     __ptext3242:
 10000                           
 10001 ;; *************** function _DimmerLights_Initialization *****************
 10002 ;; Defined at:
 10003 ;;		line 33 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;		None
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;		None
 10008 ;; Return value:  Size  Location     Type
 10009 ;;		None               void
 10010 ;; Registers used:
 10011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10021 ;;Total ram usage:        1 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    8
 10024 ;; This function calls:
 10025 ;;		_setDimmerLights_Initialization
 10026 ;; This function is called by:
 10027 ;;		_main
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           psect	text3242
 10031                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 10032                           	line	33
 10033                           	global	__size_of_DimmerLights_Initialization
 10034  000A                     	__size_of_DimmerLights_Initialization	equ	__end_of_DimmerLights_Initialization-_DimmerL
                                 ights_Initialization
 10035                           	
 10036  2F20                     _DimmerLights_Initialization:	
 10037                           	opt	stack 7
 10038                           ; Regs used in _DimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 10039                           	line	35
 10040                           	
 10041  2F20                     l24431:	
 10042                           ;Dimmer_B1.c: 35: DimmerLights11=&DimmerLights1;
 10043  2F20  304A               	movlw	(_DimmerLights1)&0ffh
 10044  2F21  0020               	movlb 0	; select bank0
 10045  2F22  00E2               	movwf	(??_DimmerLights_Initialization+0)+0
 10046  2F23  0862               	movf	(??_DimmerLights_Initialization+0)+0,w
 10047  2F24  00FB               	movwf	(_DimmerLights11)
 10048                           	line	36
 10049                           	
 10050  2F25                     l24433:	
 10051                           ;Dimmer_B1.c: 36: setDimmerLights_Initialization(1);
 10052  2F25  3001               	movlw	(01h)
 10053  2F26  31A7  27C0  31AF   	fcall	_setDimmerLights_Initialization
 10054                           	line	48
 10055                           	
 10056  2F29                     l4690:	
 10057  2F29  0008               	return
 10058                           	opt stack 0
 10059                           GLOBAL	__end_of_DimmerLights_Initialization
 10060  2F2A                     	__end_of_DimmerLights_Initialization:
 10061 ;; =============== function _DimmerLights_Initialization ends ============
 10062                           
 10063                           	signat	_DimmerLights_Initialization,88
 10064                           	global	_setSw_Main
 10065                           psect	text3243,local,class=CODE,delta=2
 10066                           global __ptext3243
 10067  0517                     __ptext3243:
 10068                           
 10069 ;; *************** function _setSw_Main *****************
 10070 ;; Defined at:
 10071 ;;		line 93 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;  sw              1    wreg     unsigned char 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  sw              1   18[BANK0 ] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;		None               void
 10078 ;; Registers used:
 10079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10087 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 10089 ;;Total ram usage:        4 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    7
 10092 ;; This function calls:
 10093 ;;		_SwPointSelect
 10094 ;;		_Sw_OnFunc
 10095 ;;		_Sw_AdjFunc
 10096 ;;		_setRF_Learn
 10097 ;;		_setBuz
 10098 ;;		_Sw_OffFunc
 10099 ;; This function is called by:
 10100 ;;		_Switch_Main
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           psect	text3243
 10104                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 10105                           	line	93
 10106                           	global	__size_of_setSw_Main
 10107  018D                     	__size_of_setSw_Main	equ	__end_of_setSw_Main-_setSw_Main
 10108                           	
 10109  0517                     _setSw_Main:	
 10110                           	opt	stack 7
 10111                           ; Regs used in _setSw_Main: [wreg+fsr1l-status,0+pclath+cstack]
 10112                           ;setSw_Main@sw stored from wreg
 10113  0517  0020               	movlb 0	; select bank0
 10114  0518  00B2               	movwf	(setSw_Main@sw)
 10115                           	line	94
 10116                           	
 10117  0519                     l24357:	
 10118                           ;Switch_B1.c: 94: SwPointSelect(sw);
 10119  0519  0832               	movf	(setSw_Main@sw),w
 10120  051A  31AF  27C8  3185   	fcall	_SwPointSelect
 10121                           	line	122
 10122                           	
 10123  051D                     l24359:	
 10124                           ;Switch_B1.c: 122: Sw->Touch=(RA0 || RB1 || RA6 || RA4)?1:0;
 10125  051D  0020               	movlb 0	; select bank0
 10126  051E  01B1               	clrf	(_setSw_Main$18089)
 10127  051F  1403               	bsf	status,0
 10128  0520  0DB1               	rlf	(_setSw_Main$18089),f
 10129                           	
 10130  0521                     l24361:	
 10131  0521  180C               	btfsc	(96/8),(96)&7
 10132  0522  2D24               	goto	u7991
 10133  0523  2D25               	goto	u7990
 10134  0524                     u7991:
 10135  0524  2D33               	goto	l24371
 10136  0525                     u7990:
 10137                           	
 10138  0525                     l24363:	
 10139  0525  188D               	btfsc	(105/8),(105)&7
 10140  0526  2D28               	goto	u8001
 10141  0527  2D29               	goto	u8000
 10142  0528                     u8001:
 10143  0528  2D33               	goto	l24371
 10144  0529                     u8000:
 10145                           	
 10146  0529                     l24365:	
 10147  0529  1B0C               	btfsc	(102/8),(102)&7
 10148  052A  2D2C               	goto	u8011
 10149  052B  2D2D               	goto	u8010
 10150  052C                     u8011:
 10151  052C  2D33               	goto	l24371
 10152  052D                     u8010:
 10153                           	
 10154  052D                     l24367:	
 10155  052D  1A0C               	btfsc	(100/8),(100)&7
 10156  052E  2D30               	goto	u8021
 10157  052F  2D31               	goto	u8020
 10158  0530                     u8021:
 10159  0530  2D33               	goto	l24371
 10160  0531                     u8020:
 10161                           	
 10162  0531                     l24369:	
 10163  0531  01B1               	clrf	(_setSw_Main$18089)
 10164  0532  2D33               	goto	l24371
 10165                           	
 10166  0533                     l14377:	
 10167                           	
 10168  0533                     l24371:	
 10169  0533  086F               	movf	(_Sw),w
 10170  0534  0086               	movwf	fsr1l
 10171  0535  3001               	movlw 1	; select bank2/3
 10172  0536  0087               	movwf fsr1h	
 10173                           	
 10174  0537  0831               	movf	(_setSw_Main$18089),w
 10175  0538  1081               	bcf	indf1,1
 10176  0539  1D03               	skipz
 10177  053A  1481               	bsf	indf1,1
 10178                           	line	125
 10179                           ;Switch_B1.c: 125: if(Sw->Enable)
 10180  053B  086F               	movf	(_Sw),w
 10181  053C  0086               	movwf	fsr1l
 10182  053D  3001               	movlw 1	; select bank2/3
 10183  053E  0087               	movwf fsr1h	
 10184                           	
 10185  053F  1C01               	btfss	indf1,0
 10186  0540  2D42               	goto	u8031
 10187  0541  2D43               	goto	u8030
 10188  0542                     u8031:
 10189  0542  2EA3               	goto	l14395
 10190  0543                     u8030:
 10191                           	line	127
 10192                           	
 10193  0543                     l24373:	
 10194                           ;Switch_B1.c: 126: {
 10195                           ;Switch_B1.c: 127: if(Sw->Touch)
 10196  0543  086F               	movf	(_Sw),w
 10197  0544  0086               	movwf	fsr1l
 10198  0545  3001               	movlw 1	; select bank2/3
 10199  0546  0087               	movwf fsr1h	
 10200                           	
 10201  0547  1C81               	btfss	indf1,1
 10202  0548  2D4A               	goto	u8041
 10203  0549  2D4B               	goto	u8040
 10204  054A                     u8041:
 10205  054A  2E43               	goto	l24419
 10206  054B                     u8040:
 10207                           	line	129
 10208                           	
 10209  054B                     l24375:	
 10210                           ;Switch_B1.c: 128: {
 10211                           ;Switch_B1.c: 129: if(!Sw->Debounce)
 10212  054B  086F               	movf	(_Sw),w
 10213  054C  0086               	movwf	fsr1l
 10214  054D  3001               	movlw 1	; select bank2/3
 10215  054E  0087               	movwf fsr1h	
 10216                           	
 10217  054F  1901               	btfsc	indf1,2
 10218  0550  2D52               	goto	u8051
 10219  0551  2D53               	goto	u8050
 10220  0552                     u8051:
 10221  0552  2D78               	goto	l24385
 10222  0553                     u8050:
 10223                           	line	131
 10224                           	
 10225  0553                     l24377:	
 10226                           ;Switch_B1.c: 130: {
 10227                           ;Switch_B1.c: 131: Sw->DebounceTime++;
 10228  0553  3001               	movlw	(01h)
 10229  0554  00AF               	movwf	(??_setSw_Main+0)+0
 10230  0555  086F               	movf	(_Sw),w
 10231  0556  3E02               	addlw	02h
 10232  0557  0086               	movwf	fsr1l
 10233  0558  3001               	movlw 1	; select bank2/3
 10234  0559  0087               	movwf fsr1h	
 10235                           	
 10236  055A  082F               	movf	(??_setSw_Main+0)+0,w
 10237  055B  0781               	addwf	indf1,f
 10238                           	line	132
 10239                           	
 10240  055C                     l24379:	
 10241                           ;Switch_B1.c: 132: if(Sw->DebounceTime >= 10)
 10242  055C  086F               	movf	(_Sw),w
 10243  055D  3E02               	addlw	02h
 10244  055E  0086               	movwf	fsr1l
 10245  055F  3001               	movlw 1	; select bank2/3
 10246  0560  0087               	movwf fsr1h	
 10247                           	
 10248  0561  300A               	movlw	(0Ah)
 10249  0562  0201               	subwf	indf1,w
 10250  0563  1C03               	skipc
 10251  0564  2D66               	goto	u8061
 10252  0565  2D67               	goto	u8060
 10253  0566                     u8061:
 10254  0566  2EA3               	goto	l14395
 10255  0567                     u8060:
 10256                           	line	134
 10257                           	
 10258  0567                     l24381:	
 10259                           ;Switch_B1.c: 133: {
 10260                           ;Switch_B1.c: 134: Sw->DebounceTime=0;
 10261  0567  086F               	movf	(_Sw),w
 10262  0568  3E02               	addlw	02h
 10263  0569  0086               	movwf	fsr1l
 10264  056A  3001               	movlw 1	; select bank2/3
 10265  056B  0087               	movwf fsr1h	
 10266                           	
 10267  056C  0181               	clrf	indf1
 10268                           	line	135
 10269                           ;Switch_B1.c: 135: Sw->Debounce=1;
 10270  056D  086F               	movf	(_Sw),w
 10271  056E  0086               	movwf	fsr1l
 10272  056F  3001               	movlw 1	; select bank2/3
 10273  0570  0087               	movwf fsr1h	
 10274                           	
 10275  0571  1501               	bsf	indf1,2
 10276                           	line	136
 10277                           	
 10278  0572                     l24383:	
 10279                           ;Switch_B1.c: 136: Sw_OnFunc(sw);
 10280  0572  0832               	movf	(setSw_Main@sw),w
 10281  0573  319C  24C6  3185   	fcall	_Sw_OnFunc
 10282  0576  2EA3               	goto	l14395
 10283                           	line	137
 10284                           	
 10285  0577                     l14381:	
 10286                           	line	138
 10287                           ;Switch_B1.c: 137: }
 10288                           ;Switch_B1.c: 138: }
 10289  0577  2EA3               	goto	l14395
 10290                           	line	139
 10291                           	
 10292  0578                     l14380:	
 10293                           	line	141
 10294                           	
 10295  0578                     l24385:	
 10296                           ;Switch_B1.c: 139: else
 10297                           ;Switch_B1.c: 140: {
 10298                           ;Switch_B1.c: 141: if(!Sw->Hold1)
 10299  0578  0020               	movlb 0	; select bank0
 10300  0579  086F               	movf	(_Sw),w
 10301  057A  0086               	movwf	fsr1l
 10302  057B  3001               	movlw 1	; select bank2/3
 10303  057C  0087               	movwf fsr1h	
 10304                           	
 10305  057D  1981               	btfsc	indf1,3
 10306  057E  2D80               	goto	u8071
 10307  057F  2D81               	goto	u8070
 10308  0580                     u8071:
 10309  0580  2DB1               	goto	l24395
 10310  0581                     u8070:
 10311                           	line	143
 10312                           	
 10313  0581                     l24387:	
 10314                           ;Switch_B1.c: 142: {
 10315                           ;Switch_B1.c: 143: Sw->Hold1Time++;
 10316  0581  086F               	movf	(_Sw),w
 10317  0582  3E03               	addlw	03h
 10318  0583  0086               	movwf	fsr1l
 10319  0584  3001               	movlw 1	; select bank2/3
 10320  0585  0087               	movwf fsr1h	
 10321                           	
 10322  0586  3001               	movlw	01h
 10323  0587  0781               	addwf	indf1,f
 10324  0588  3141               	addfsr	fsr1,1
 10325  0589  1803               	skipnc
 10326  058A  0A81               	incf	indf1,f
 10327                           	line	144
 10328                           	
 10329  058B                     l24389:	
 10330                           ;Switch_B1.c: 144: if(Sw->Hold1Time >= 150)
 10331  058B  086F               	movf	(_Sw),w
 10332  058C  3E03               	addlw	03h
 10333  058D  0086               	movwf	fsr1l
 10334  058E  3001               	movlw 1	; select bank2/3
 10335  058F  0087               	movwf fsr1h	
 10336                           	
 10337  0590  3F40               	moviw	[0]fsr1
 10338  0591  00AF               	movwf	(??_setSw_Main+0)+0
 10339  0592  3F41               	moviw	[1]fsr1
 10340  0593  00B0               	movwf	(??_setSw_Main+0)+0+1
 10341  0594  3000               	movlw	high(096h)
 10342  0595  0230               	subwf	1+(??_setSw_Main+0)+0,w
 10343  0596  3096               	movlw	low(096h)
 10344  0597  1903               	skipnz
 10345  0598  022F               	subwf	0+(??_setSw_Main+0)+0,w
 10346  0599  1C03               	skipc
 10347  059A  2D9C               	goto	u8081
 10348  059B  2D9D               	goto	u8080
 10349  059C                     u8081:
 10350  059C  2EA3               	goto	l14395
 10351  059D                     u8080:
 10352                           	line	146
 10353                           	
 10354  059D                     l24391:	
 10355                           ;Switch_B1.c: 145: {
 10356                           ;Switch_B1.c: 146: Sw->Hold1Time=0;
 10357  059D  086F               	movf	(_Sw),w
 10358  059E  3E03               	addlw	03h
 10359  059F  0086               	movwf	fsr1l
 10360  05A0  3001               	movlw 1	; select bank2/3
 10361  05A1  0087               	movwf fsr1h	
 10362                           	
 10363  05A2  3000               	movlw	low(0)
 10364  05A3  3FC0               	movwi	[0]fsr1
 10365  05A4  3000               	movlw	high(0)
 10366  05A5  3FC1               	movwi	[1]fsr1
 10367                           	line	147
 10368                           ;Switch_B1.c: 147: Sw->Hold1=1;
 10369  05A6  086F               	movf	(_Sw),w
 10370  05A7  0086               	movwf	fsr1l
 10371  05A8  3001               	movlw 1	; select bank2/3
 10372  05A9  0087               	movwf fsr1h	
 10373                           	
 10374  05AA  1581               	bsf	indf1,3
 10375                           	line	149
 10376                           	
 10377  05AB                     l24393:	
 10378                           ;Switch_B1.c: 149: Sw_AdjFunc(sw);
 10379  05AB  0832               	movf	(setSw_Main@sw),w
 10380  05AC  31A5  250C  3185   	fcall	_Sw_AdjFunc
 10381  05AF  2EA3               	goto	l14395
 10382                           	line	151
 10383                           	
 10384  05B0                     l14384:	
 10385                           	line	152
 10386                           ;Switch_B1.c: 151: }
 10387                           ;Switch_B1.c: 152: }
 10388  05B0  2EA3               	goto	l14395
 10389                           	line	153
 10390                           	
 10391  05B1                     l14383:	
 10392                           	line	155
 10393                           	
 10394  05B1                     l24395:	
 10395                           ;Switch_B1.c: 153: else
 10396                           ;Switch_B1.c: 154: {
 10397                           ;Switch_B1.c: 155: if(!Sw->Hold2)
 10398  05B1  0020               	movlb 0	; select bank0
 10399  05B2  086F               	movf	(_Sw),w
 10400  05B3  0086               	movwf	fsr1l
 10401  05B4  3001               	movlw 1	; select bank2/3
 10402  05B5  0087               	movwf fsr1h	
 10403                           	
 10404  05B6  1A01               	btfsc	indf1,4
 10405  05B7  2DB9               	goto	u8091
 10406  05B8  2DBA               	goto	u8090
 10407  05B9                     u8091:
 10408  05B9  2E05               	goto	l24409
 10409  05BA                     u8090:
 10410                           	line	157
 10411                           	
 10412  05BA                     l24397:	
 10413                           ;Switch_B1.c: 156: {
 10414                           ;Switch_B1.c: 157: Sw->Hold2Time++;
 10415  05BA  086F               	movf	(_Sw),w
 10416  05BB  3E05               	addlw	05h
 10417  05BC  0086               	movwf	fsr1l
 10418  05BD  3001               	movlw 1	; select bank2/3
 10419  05BE  0087               	movwf fsr1h	
 10420                           	
 10421  05BF  3001               	movlw	01h
 10422  05C0  0781               	addwf	indf1,f
 10423  05C1  3141               	addfsr	fsr1,1
 10424  05C2  1803               	skipnc
 10425  05C3  0A81               	incf	indf1,f
 10426                           	line	158
 10427                           	
 10428  05C4                     l24399:	
 10429                           ;Switch_B1.c: 158: if(Sw->Hold2Time >= 150)
 10430  05C4  086F               	movf	(_Sw),w
 10431  05C5  3E05               	addlw	05h
 10432  05C6  0086               	movwf	fsr1l
 10433  05C7  3001               	movlw 1	; select bank2/3
 10434  05C8  0087               	movwf fsr1h	
 10435                           	
 10436  05C9  3F40               	moviw	[0]fsr1
 10437  05CA  00AF               	movwf	(??_setSw_Main+0)+0
 10438  05CB  3F41               	moviw	[1]fsr1
 10439  05CC  00B0               	movwf	(??_setSw_Main+0)+0+1
 10440  05CD  3000               	movlw	high(096h)
 10441  05CE  0230               	subwf	1+(??_setSw_Main+0)+0,w
 10442  05CF  3096               	movlw	low(096h)
 10443  05D0  1903               	skipnz
 10444  05D1  022F               	subwf	0+(??_setSw_Main+0)+0,w
 10445  05D2  1C03               	skipc
 10446  05D3  2DD5               	goto	u8101
 10447  05D4  2DD6               	goto	u8100
 10448  05D5                     u8101:
 10449  05D5  2EA3               	goto	l14395
 10450  05D6                     u8100:
 10451                           	line	160
 10452                           	
 10453  05D6                     l24401:	
 10454                           ;Switch_B1.c: 159: {
 10455                           ;Switch_B1.c: 160: Sw->Hold2Time=0;
 10456  05D6  086F               	movf	(_Sw),w
 10457  05D7  3E05               	addlw	05h
 10458  05D8  0086               	movwf	fsr1l
 10459  05D9  3001               	movlw 1	; select bank2/3
 10460  05DA  0087               	movwf fsr1h	
 10461                           	
 10462  05DB  3000               	movlw	low(0)
 10463  05DC  3FC0               	movwi	[0]fsr1
 10464  05DD  3000               	movlw	high(0)
 10465  05DE  3FC1               	movwi	[1]fsr1
 10466                           	line	161
 10467                           ;Switch_B1.c: 161: Sw->Hold2=1;
 10468  05DF  086F               	movf	(_Sw),w
 10469  05E0  0086               	movwf	fsr1l
 10470  05E1  3001               	movlw 1	; select bank2/3
 10471  05E2  0087               	movwf fsr1h	
 10472                           	
 10473  05E3  1601               	bsf	indf1,4
 10474                           	line	163
 10475                           	
 10476  05E4                     l24403:	
 10477                           ;Switch_B1.c: 163: setRF_Learn(1,1);
 10478  05E4  01A2               	clrf	(?_setRF_Learn)
 10479  05E5  1403               	bsf	status,0
 10480  05E6  0DA2               	rlf	(?_setRF_Learn),f
 10481  05E7  3001               	movlw	(01h)
 10482  05E8  31A1  2120  3185   	fcall	_setRF_Learn
 10483                           	line	164
 10484                           	
 10485  05EB                     l24405:	
 10486                           ;Switch_B1.c: 164: if(TMain->First)
 10487  05EB  0021               	movlb 1	; select bank1
 10488  05EC  086E               	movf	(_TMain)^080h,w
 10489  05ED  3E03               	addlw	03h
 10490  05EE  0086               	movwf	fsr1l
 10491  05EF  3001               	movlw 1	; select bank2/3
 10492  05F0  0087               	movwf fsr1h	
 10493                           	
 10494  05F1  1C81               	btfss	indf1,1
 10495  05F2  2DF4               	goto	u8111
 10496  05F3  2DF5               	goto	u8110
 10497  05F4                     u8111:
 10498  05F4  2EA3               	goto	l14395
 10499  05F5                     u8110:
 10500                           	line	166
 10501                           	
 10502  05F5                     l24407:	
 10503                           ;Switch_B1.c: 165: {
 10504                           ;Switch_B1.c: 166: setBuz(1,2,100);
 10505  05F5  3002               	movlw	(02h)
 10506  05F6  0020               	movlb 0	; select bank0
 10507  05F7  00AF               	movwf	(??_setSw_Main+0)+0
 10508  05F8  082F               	movf	(??_setSw_Main+0)+0,w
 10509  05F9  00A9               	movwf	(?_setBuz)
 10510  05FA  3064               	movlw	low(064h)
 10511  05FB  00AA               	movwf	0+(?_setBuz)+01h
 10512  05FC  3000               	movlw	high(064h)
 10513  05FD  00AB               	movwf	(0+(?_setBuz)+01h)+1
 10514  05FE  3001               	movlw	(01h)
 10515  05FF  3196  2617  3185   	fcall	_setBuz
 10516  0602  2EA3               	goto	l14395
 10517                           	line	167
 10518                           	
 10519  0603                     l14388:	
 10520  0603  2EA3               	goto	l14395
 10521                           	line	169
 10522                           	
 10523  0604                     l14387:	
 10524                           	line	170
 10525                           ;Switch_B1.c: 167: }
 10526                           ;Switch_B1.c: 169: }
 10527                           ;Switch_B1.c: 170: }
 10528  0604  2EA3               	goto	l14395
 10529                           	line	171
 10530                           	
 10531  0605                     l14386:	
 10532                           	line	173
 10533                           	
 10534  0605                     l24409:	
 10535                           ;Switch_B1.c: 171: else
 10536                           ;Switch_B1.c: 172: {
 10537                           ;Switch_B1.c: 173: if(!Sw->Hold3)
 10538  0605  0020               	movlb 0	; select bank0
 10539  0606  086F               	movf	(_Sw),w
 10540  0607  0086               	movwf	fsr1l
 10541  0608  3001               	movlw 1	; select bank2/3
 10542  0609  0087               	movwf fsr1h	
 10543                           	
 10544  060A  1A81               	btfsc	indf1,5
 10545  060B  2E0D               	goto	u8121
 10546  060C  2E0E               	goto	u8120
 10547  060D                     u8121:
 10548  060D  2EA3               	goto	l14395
 10549  060E                     u8120:
 10550                           	line	175
 10551                           	
 10552  060E                     l24411:	
 10553                           ;Switch_B1.c: 174: {
 10554                           ;Switch_B1.c: 175: Sw->Hold3Time++;
 10555  060E  086F               	movf	(_Sw),w
 10556  060F  3E07               	addlw	07h
 10557  0610  0086               	movwf	fsr1l
 10558  0611  3001               	movlw 1	; select bank2/3
 10559  0612  0087               	movwf fsr1h	
 10560                           	
 10561  0613  3001               	movlw	01h
 10562  0614  0781               	addwf	indf1,f
 10563  0615  3141               	addfsr	fsr1,1
 10564  0616  1803               	skipnc
 10565  0617  0A81               	incf	indf1,f
 10566                           	line	176
 10567                           	
 10568  0618                     l24413:	
 10569                           ;Switch_B1.c: 176: if(Sw->Hold3Time >= 300)
 10570  0618  086F               	movf	(_Sw),w
 10571  0619  3E07               	addlw	07h
 10572  061A  0086               	movwf	fsr1l
 10573  061B  3001               	movlw 1	; select bank2/3
 10574  061C  0087               	movwf fsr1h	
 10575                           	
 10576  061D  3F40               	moviw	[0]fsr1
 10577  061E  00AF               	movwf	(??_setSw_Main+0)+0
 10578  061F  3F41               	moviw	[1]fsr1
 10579  0620  00B0               	movwf	(??_setSw_Main+0)+0+1
 10580  0621  3001               	movlw	high(012Ch)
 10581  0622  0230               	subwf	1+(??_setSw_Main+0)+0,w
 10582  0623  302C               	movlw	low(012Ch)
 10583  0624  1903               	skipnz
 10584  0625  022F               	subwf	0+(??_setSw_Main+0)+0,w
 10585  0626  1C03               	skipc
 10586  0627  2E29               	goto	u8131
 10587  0628  2E2A               	goto	u8130
 10588  0629                     u8131:
 10589  0629  2EA3               	goto	l14395
 10590  062A                     u8130:
 10591                           	line	178
 10592                           	
 10593  062A                     l24415:	
 10594                           ;Switch_B1.c: 177: {
 10595                           ;Switch_B1.c: 178: Sw->Hold3Time=0;
 10596  062A  086F               	movf	(_Sw),w
 10597  062B  3E07               	addlw	07h
 10598  062C  0086               	movwf	fsr1l
 10599  062D  3001               	movlw 1	; select bank2/3
 10600  062E  0087               	movwf fsr1h	
 10601                           	
 10602  062F  3000               	movlw	low(0)
 10603  0630  3FC0               	movwi	[0]fsr1
 10604  0631  3000               	movlw	high(0)
 10605  0632  3FC1               	movwi	[1]fsr1
 10606                           	line	179
 10607                           ;Switch_B1.c: 179: Sw->Hold3=1;
 10608  0633  086F               	movf	(_Sw),w
 10609  0634  0086               	movwf	fsr1l
 10610  0635  3001               	movlw 1	; select bank2/3
 10611  0636  0087               	movwf fsr1h	
 10612                           	
 10613  0637  1681               	bsf	indf1,5
 10614                           	line	180
 10615                           	
 10616  0638                     l24417:	
 10617                           ;Switch_B1.c: 180: setRF_Learn(1,0);
 10618  0638  01A2               	clrf	(?_setRF_Learn)
 10619  0639  3001               	movlw	(01h)
 10620  063A  31A1  2120  3185   	fcall	_setRF_Learn
 10621  063D  2EA3               	goto	l14395
 10622                           	line	181
 10623                           	
 10624  063E                     l14391:	
 10625  063E  2EA3               	goto	l14395
 10626                           	line	182
 10627                           	
 10628  063F                     l14390:	
 10629  063F  2EA3               	goto	l14395
 10630                           	line	183
 10631                           	
 10632  0640                     l14389:	
 10633  0640  2EA3               	goto	l14395
 10634                           	line	184
 10635                           	
 10636  0641                     l14385:	
 10637  0641  2EA3               	goto	l14395
 10638                           	line	185
 10639                           	
 10640  0642                     l14382:	
 10641                           	line	186
 10642                           ;Switch_B1.c: 181: }
 10643                           ;Switch_B1.c: 182: }
 10644                           ;Switch_B1.c: 183: }
 10645                           ;Switch_B1.c: 184: }
 10646                           ;Switch_B1.c: 185: }
 10647                           ;Switch_B1.c: 186: }
 10648  0642  2EA3               	goto	l14395
 10649                           	line	187
 10650                           	
 10651  0643                     l14379:	
 10652                           	line	189
 10653                           	
 10654  0643                     l24419:	
 10655                           ;Switch_B1.c: 187: else
 10656                           ;Switch_B1.c: 188: {
 10657                           ;Switch_B1.c: 189: if(Sw->Debounce)
 10658  0643  0020               	movlb 0	; select bank0
 10659  0644  086F               	movf	(_Sw),w
 10660  0645  0086               	movwf	fsr1l
 10661  0646  3001               	movlw 1	; select bank2/3
 10662  0647  0087               	movwf fsr1h	
 10663                           	
 10664  0648  1D01               	btfss	indf1,2
 10665  0649  2E4B               	goto	u8141
 10666  064A  2E4C               	goto	u8140
 10667  064B                     u8141:
 10668  064B  2EA3               	goto	l14395
 10669  064C                     u8140:
 10670                           	line	191
 10671                           	
 10672  064C                     l24421:	
 10673                           ;Switch_B1.c: 190: {
 10674                           ;Switch_B1.c: 191: Sw->DebounceTime++;
 10675  064C  3001               	movlw	(01h)
 10676  064D  00AF               	movwf	(??_setSw_Main+0)+0
 10677  064E  086F               	movf	(_Sw),w
 10678  064F  3E02               	addlw	02h
 10679  0650  0086               	movwf	fsr1l
 10680  0651  3001               	movlw 1	; select bank2/3
 10681  0652  0087               	movwf fsr1h	
 10682                           	
 10683  0653  082F               	movf	(??_setSw_Main+0)+0,w
 10684  0654  0781               	addwf	indf1,f
 10685                           	line	192
 10686                           	
 10687  0655                     l24423:	
 10688                           ;Switch_B1.c: 192: if(Sw->DebounceTime >= 10)
 10689  0655  086F               	movf	(_Sw),w
 10690  0656  3E02               	addlw	02h
 10691  0657  0086               	movwf	fsr1l
 10692  0658  3001               	movlw 1	; select bank2/3
 10693  0659  0087               	movwf fsr1h	
 10694                           	
 10695  065A  300A               	movlw	(0Ah)
 10696  065B  0201               	subwf	indf1,w
 10697  065C  1C03               	skipc
 10698  065D  2E5F               	goto	u8151
 10699  065E  2E60               	goto	u8150
 10700  065F                     u8151:
 10701  065F  2EA3               	goto	l14395
 10702  0660                     u8150:
 10703                           	line	194
 10704                           	
 10705  0660                     l24425:	
 10706                           ;Switch_B1.c: 193: {
 10707                           ;Switch_B1.c: 194: Sw->DebounceTime=0;
 10708  0660  086F               	movf	(_Sw),w
 10709  0661  3E02               	addlw	02h
 10710  0662  0086               	movwf	fsr1l
 10711  0663  3001               	movlw 1	; select bank2/3
 10712  0664  0087               	movwf fsr1h	
 10713                           	
 10714  0665  0181               	clrf	indf1
 10715                           	line	195
 10716                           ;Switch_B1.c: 195: Sw->Debounce=0;
 10717  0666  086F               	movf	(_Sw),w
 10718  0667  0086               	movwf	fsr1l
 10719  0668  3001               	movlw 1	; select bank2/3
 10720  0669  0087               	movwf fsr1h	
 10721                           	
 10722  066A  1101               	bcf	indf1,2
 10723                           	line	196
 10724                           ;Switch_B1.c: 196: Sw->Hold1Time=0;
 10725  066B  086F               	movf	(_Sw),w
 10726  066C  3E03               	addlw	03h
 10727  066D  0086               	movwf	fsr1l
 10728  066E  3001               	movlw 1	; select bank2/3
 10729  066F  0087               	movwf fsr1h	
 10730                           	
 10731  0670  3000               	movlw	low(0)
 10732  0671  3FC0               	movwi	[0]fsr1
 10733  0672  3000               	movlw	high(0)
 10734  0673  3FC1               	movwi	[1]fsr1
 10735                           	line	197
 10736                           ;Switch_B1.c: 197: Sw->Hold1=0;
 10737  0674  086F               	movf	(_Sw),w
 10738  0675  0086               	movwf	fsr1l
 10739  0676  3001               	movlw 1	; select bank2/3
 10740  0677  0087               	movwf fsr1h	
 10741                           	
 10742  0678  1181               	bcf	indf1,3
 10743                           	line	198
 10744                           ;Switch_B1.c: 198: Sw->Hold2Time=0;
 10745  0679  086F               	movf	(_Sw),w
 10746  067A  3E05               	addlw	05h
 10747  067B  0086               	movwf	fsr1l
 10748  067C  3001               	movlw 1	; select bank2/3
 10749  067D  0087               	movwf fsr1h	
 10750                           	
 10751  067E  3000               	movlw	low(0)
 10752  067F  3FC0               	movwi	[0]fsr1
 10753  0680  3000               	movlw	high(0)
 10754  0681  3FC1               	movwi	[1]fsr1
 10755                           	line	199
 10756                           ;Switch_B1.c: 199: Sw->Hold2=0;
 10757  0682  086F               	movf	(_Sw),w
 10758  0683  0086               	movwf	fsr1l
 10759  0684  3001               	movlw 1	; select bank2/3
 10760  0685  0087               	movwf fsr1h	
 10761                           	
 10762  0686  1201               	bcf	indf1,4
 10763                           	line	200
 10764                           ;Switch_B1.c: 200: Sw->Hold3Time=0;
 10765  0687  086F               	movf	(_Sw),w
 10766  0688  3E07               	addlw	07h
 10767  0689  0086               	movwf	fsr1l
 10768  068A  3001               	movlw 1	; select bank2/3
 10769  068B  0087               	movwf fsr1h	
 10770                           	
 10771  068C  3000               	movlw	low(0)
 10772  068D  3FC0               	movwi	[0]fsr1
 10773  068E  3000               	movlw	high(0)
 10774  068F  3FC1               	movwi	[1]fsr1
 10775                           	line	201
 10776                           ;Switch_B1.c: 201: Sw->Hold3=0;
 10777  0690  086F               	movf	(_Sw),w
 10778  0691  0086               	movwf	fsr1l
 10779  0692  3001               	movlw 1	; select bank2/3
 10780  0693  0087               	movwf fsr1h	
 10781                           	
 10782  0694  1281               	bcf	indf1,5
 10783                           	line	202
 10784                           	
 10785  0695                     l24427:	
 10786                           ;Switch_B1.c: 202: setRF_Learn(1,0);
 10787  0695  01A2               	clrf	(?_setRF_Learn)
 10788  0696  3001               	movlw	(01h)
 10789  0697  31A1  2120  3185   	fcall	_setRF_Learn
 10790                           	line	203
 10791                           	
 10792  069A                     l24429:	
 10793                           ;Switch_B1.c: 203: Sw_OffFunc(sw);
 10794  069A  0020               	movlb 0	; select bank0
 10795  069B  0832               	movf	(setSw_Main@sw),w
 10796  069C  3191  21D8  3185   	fcall	_Sw_OffFunc
 10797  069F  2EA3               	goto	l14395
 10798                           	line	204
 10799                           	
 10800  06A0                     l14394:	
 10801  06A0  2EA3               	goto	l14395
 10802                           	line	205
 10803                           	
 10804  06A1                     l14393:	
 10805  06A1  2EA3               	goto	l14395
 10806                           	line	206
 10807                           	
 10808  06A2                     l14392:	
 10809  06A2  2EA3               	goto	l14395
 10810                           	line	207
 10811                           	
 10812  06A3                     l14378:	
 10813                           	line	208
 10814                           	
 10815  06A3                     l14395:	
 10816  06A3  0008               	return
 10817                           	opt stack 0
 10818                           GLOBAL	__end_of_setSw_Main
 10819  06A4                     	__end_of_setSw_Main:
 10820 ;; =============== function _setSw_Main ends ============
 10821                           
 10822                           	signat	_setSw_Main,4216
 10823                           	global	_Flash_Memory_Modify
 10824                           psect	text3244,local,class=CODE,delta=2
 10825                           global __ptext3244
 10826  135B                     __ptext3244:
 10827                           
 10828 ;; *************** function _Flash_Memory_Modify *****************
 10829 ;; Defined at:
 10830 ;;		line 482 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  i               1    6[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;		None               void
 10837 ;; Registers used:
 10838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 10845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 10846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 10847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 10848 ;;Total ram usage:        3 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    6
 10851 ;; This function calls:
 10852 ;;		_Flash_Memory_Read
 10853 ;;		_Flash_Memory_Erasing
 10854 ;;		_Flash_Memory_Write
 10855 ;; This function is called by:
 10856 ;;		_Flash_Memory_Main
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           psect	text3244
 10860                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 10861                           	line	482
 10862                           	global	__size_of_Flash_Memory_Modify
 10863  0082                     	__size_of_Flash_Memory_Modify	equ	__end_of_Flash_Memory_Modify-_Flash_Memory_Modify
 10864                           	
 10865  135B                     _Flash_Memory_Modify:	
 10866                           	opt	stack 8
 10867                           ; Regs used in _Flash_Memory_Modify: [wreg+fsr1l-status,0+pclath+cstack]
 10868                           	line	484
 10869                           	
 10870  135B                     l24331:	
 10871                           ;MCU_16f1518_B1.c: 483: char i;
 10872                           ;MCU_16f1518_B1.c: 484: for(i=0;i<32;i++)
 10873  135B  0020               	movlb 0	; select bank0
 10874  135C  01A6               	clrf	(Flash_Memory_Modify@i)
 10875                           	
 10876  135D                     l24333:	
 10877  135D  3020               	movlw	(020h)
 10878  135E  0226               	subwf	(Flash_Memory_Modify@i),w
 10879  135F  1C03               	skipc
 10880  1360  2B62               	goto	u7961
 10881  1361  2B63               	goto	u7960
 10882  1362                     u7961:
 10883  1362  2B65               	goto	l24337
 10884  1363                     u7960:
 10885  1363  2B81               	goto	l24343
 10886                           	
 10887  1364                     l24335:	
 10888  1364  2B81               	goto	l24343
 10889                           	line	485
 10890                           	
 10891  1365                     l8394:	
 10892                           	line	486
 10893                           	
 10894  1365                     l24337:	
 10895                           ;MCU_16f1518_B1.c: 485: {
 10896                           ;MCU_16f1518_B1.c: 486: Memory->Data[i]=Flash_Memory_Read(i);
 10897  1365  0826               	movf	(Flash_Memory_Modify@i),w
 10898  1366  31A2  22B0  3193   	fcall	_Flash_Memory_Read
 10899  1369  0020               	movlb 0	; select bank0
 10900  136A  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 10901  136B  0826               	movf	(Flash_Memory_Modify@i),w
 10902  136C  0021               	movlb 1	; select bank1
 10903  136D  076D               	addwf	(_Memory)^080h,w
 10904  136E  0020               	movlb 0	; select bank0
 10905  136F  00A5               	movwf	(??_Flash_Memory_Modify+1)+0
 10906  1370  0825               	movf	0+(??_Flash_Memory_Modify+1)+0,w
 10907  1371  0086               	movwf	fsr1l
 10908  1372  3001               	movlw 1	; select bank2/3
 10909  1373  0087               	movwf fsr1h	
 10910                           	
 10911  1374  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 10912  1375  0081               	movwf	indf1
 10913                           	line	484
 10914                           	
 10915  1376                     l24339:	
 10916  1376  3001               	movlw	(01h)
 10917  1377  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 10918  1378  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 10919  1379  07A6               	addwf	(Flash_Memory_Modify@i),f
 10920                           	
 10921  137A                     l24341:	
 10922  137A  3020               	movlw	(020h)
 10923  137B  0226               	subwf	(Flash_Memory_Modify@i),w
 10924  137C  1C03               	skipc
 10925  137D  2B7F               	goto	u7971
 10926  137E  2B80               	goto	u7970
 10927  137F                     u7971:
 10928  137F  2B65               	goto	l24337
 10929  1380                     u7970:
 10930  1380  2B81               	goto	l24343
 10931                           	
 10932  1381                     l8395:	
 10933                           	line	488
 10934                           	
 10935  1381                     l24343:	
 10936                           ;MCU_16f1518_B1.c: 487: }
 10937                           ;MCU_16f1518_B1.c: 488: Memory->Data[0]=Product->Data[12];
 10938  1381  087D               	movf	(_Product),w
 10939  1382  3E0C               	addlw	0Ch
 10940  1383  0086               	movwf	fsr1l
 10941  1384  3001               	movlw 1	; select bank2/3
 10942  1385  0087               	movwf fsr1h	
 10943                           	
 10944  1386  0801               	movf	indf1,w
 10945  1387  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 10946  1388  0021               	movlb 1	; select bank1
 10947  1389  086D               	movf	(_Memory)^080h,w
 10948  138A  0086               	movwf	fsr1l
 10949  138B  3001               	movlw 1	; select bank2/3
 10950  138C  0087               	movwf fsr1h	
 10951                           	
 10952  138D  0020               	movlb 0	; select bank0
 10953  138E  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 10954  138F  0081               	movwf	indf1
 10955                           	line	489
 10956                           ;MCU_16f1518_B1.c: 489: Memory->Data[1]=Product->Data[13];
 10957  1390  087D               	movf	(_Product),w
 10958  1391  3E0D               	addlw	0Dh
 10959  1392  0086               	movwf	fsr1l
 10960  1393  3001               	movlw 1	; select bank2/3
 10961  1394  0087               	movwf fsr1h	
 10962                           	
 10963  1395  0801               	movf	indf1,w
 10964  1396  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 10965  1397  0021               	movlb 1	; select bank1
 10966  1398  086D               	movf	(_Memory)^080h,w
 10967  1399  3E01               	addlw	01h
 10968  139A  0086               	movwf	fsr1l
 10969  139B  3001               	movlw 1	; select bank2/3
 10970  139C  0087               	movwf fsr1h	
 10971                           	
 10972  139D  0020               	movlb 0	; select bank0
 10973  139E  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 10974  139F  0081               	movwf	indf1
 10975                           	line	490
 10976                           ;MCU_16f1518_B1.c: 490: Memory->Data[2]=Product->Data[14];
 10977  13A0  087D               	movf	(_Product),w
 10978  13A1  3E0E               	addlw	0Eh
 10979  13A2  0086               	movwf	fsr1l
 10980  13A3  3001               	movlw 1	; select bank2/3
 10981  13A4  0087               	movwf fsr1h	
 10982                           	
 10983  13A5  0801               	movf	indf1,w
 10984  13A6  00A4               	movwf	(??_Flash_Memory_Modify+0)+0
 10985  13A7  0021               	movlb 1	; select bank1
 10986  13A8  086D               	movf	(_Memory)^080h,w
 10987  13A9  3E02               	addlw	02h
 10988  13AA  0086               	movwf	fsr1l
 10989  13AB  3001               	movlw 1	; select bank2/3
 10990  13AC  0087               	movwf fsr1h	
 10991                           	
 10992  13AD  0020               	movlb 0	; select bank0
 10993  13AE  0824               	movf	(??_Flash_Memory_Modify+0)+0,w
 10994  13AF  0081               	movwf	indf1
 10995                           	line	496
 10996                           ;MCU_16f1518_B1.c: 496: if(Memory->LoopSave)
 10997  13B0  0021               	movlb 1	; select bank1
 10998  13B1  086D               	movf	(_Memory)^080h,w
 10999  13B2  3E22               	addlw	022h
 11000  13B3  0086               	movwf	fsr1l
 11001  13B4  3001               	movlw 1	; select bank2/3
 11002  13B5  0087               	movwf fsr1h	
 11003                           	
 11004  13B6  1D01               	btfss	indf1,2
 11005  13B7  2BB9               	goto	u7981
 11006  13B8  2BBA               	goto	u7980
 11007  13B9                     u7981:
 11008  13B9  2BD4               	goto	l24349
 11009  13BA                     u7980:
 11010                           	line	498
 11011                           	
 11012  13BA                     l24345:	
 11013                           ;MCU_16f1518_B1.c: 497: {
 11014                           ;MCU_16f1518_B1.c: 498: Memory->LoopSave=0;
 11015  13BA  086D               	movf	(_Memory)^080h,w
 11016  13BB  3E22               	addlw	022h
 11017  13BC  0086               	movwf	fsr1l
 11018  13BD  3001               	movlw 1	; select bank2/3
 11019  13BE  0087               	movwf fsr1h	
 11020                           	
 11021  13BF  1101               	bcf	indf1,2
 11022                           	line	499
 11023                           ;MCU_16f1518_B1.c: 499: TMain->FirstOpen=0;
 11024  13C0  086E               	movf	(_TMain)^080h,w
 11025  13C1  0086               	movwf	fsr1l
 11026  13C2  3001               	movlw 1	; select bank2/3
 11027  13C3  0087               	movwf fsr1h	
 11028                           	
 11029  13C4  1281               	bcf	indf1,5
 11030                           	line	500
 11031                           ;MCU_16f1518_B1.c: 500: TMain->First=0;
 11032  13C5  086E               	movf	(_TMain)^080h,w
 11033  13C6  3E03               	addlw	03h
 11034  13C7  0086               	movwf	fsr1l
 11035  13C8  3001               	movlw 1	; select bank2/3
 11036  13C9  0087               	movwf fsr1h	
 11037                           	
 11038  13CA  1081               	bcf	indf1,1
 11039                           	line	501
 11040                           	
 11041  13CB                     l24347:	
 11042                           ;MCU_16f1518_B1.c: 501: Memory->Data[30]=1;
 11043  13CB  086D               	movf	(_Memory)^080h,w
 11044  13CC  3E1E               	addlw	01Eh
 11045  13CD  0086               	movwf	fsr1l
 11046  13CE  3001               	movlw 1	; select bank2/3
 11047  13CF  0087               	movwf fsr1h	
 11048                           	
 11049  13D0  0181               	clrf	indf1
 11050  13D1  1403               	bsf	status,0
 11051  13D2  0D81               	rlf	indf1,f
 11052  13D3  2BD4               	goto	l24349
 11053                           	line	502
 11054                           	
 11055  13D4                     l8396:	
 11056                           	line	503
 11057                           	
 11058  13D4                     l24349:	
 11059                           ;MCU_16f1518_B1.c: 502: }
 11060                           ;MCU_16f1518_B1.c: 503: GIE=0;
 11061  13D4  138B               	bcf	(95/8),(95)&7
 11062                           	line	504
 11063                           	
 11064  13D5                     l24351:	
 11065                           ;MCU_16f1518_B1.c: 504: Flash_Memory_Erasing();
 11066  13D5  31AF  2768  3193   	fcall	_Flash_Memory_Erasing
 11067                           	line	505
 11068                           	
 11069  13D8                     l24353:	
 11070                           ;MCU_16f1518_B1.c: 505: Flash_Memory_Write();
 11071  13D8  31A7  2711  3193   	fcall	_Flash_Memory_Write
 11072                           	line	506
 11073                           	
 11074  13DB                     l24355:	
 11075                           ;MCU_16f1518_B1.c: 506: GIE=1;
 11076  13DB  178B               	bsf	(95/8),(95)&7
 11077                           	line	507
 11078                           	
 11079  13DC                     l8397:	
 11080  13DC  0008               	return
 11081                           	opt stack 0
 11082                           GLOBAL	__end_of_Flash_Memory_Modify
 11083  13DD                     	__end_of_Flash_Memory_Modify:
 11084 ;; =============== function _Flash_Memory_Modify ends ============
 11085                           
 11086                           	signat	_Flash_Memory_Modify,88
 11087                           	global	_setRF_Enable
 11088                           psect	text3245,local,class=CODE,delta=2
 11089                           global __ptext3245
 11090  2460                     __ptext3245:
 11091                           
 11092 ;; *************** function _setRF_Enable *****************
 11093 ;; Defined at:
 11094 ;;		line 172 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  rf              1    wreg     unsigned char 
 11097 ;;  command         1    5[BANK0 ] unsigned char 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  rf              1    6[BANK0 ] unsigned char 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;		None               void
 11102 ;; Registers used:
 11103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11109 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11113 ;;Total ram usage:        2 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; Hardware stack levels required when called:    7
 11116 ;; This function calls:
 11117 ;;		_RfPointSelect
 11118 ;;		_CC2500_WriteCommand
 11119 ;;		_RF_RxDisable
 11120 ;; This function is called by:
 11121 ;;		_MainT
 11122 ;;		_setLoad_ERROR
 11123 ;;		_setOverTemp_ERROR
 11124 ;;		_setPowerFault_ERROR
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           psect	text3245
 11128                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 11129                           	line	172
 11130                           	global	__size_of_setRF_Enable
 11131  0029                     	__size_of_setRF_Enable	equ	__end_of_setRF_Enable-_setRF_Enable
 11132                           	
 11133  2460                     _setRF_Enable:	
 11134                           	opt	stack 5
 11135                           ; Regs used in _setRF_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 11136                           ;setRF_Enable@rf stored from wreg
 11137  2460  0020               	movlb 0	; select bank0
 11138  2461  00A6               	movwf	(setRF_Enable@rf)
 11139                           	line	173
 11140                           	
 11141  2462                     l24315:	
 11142                           ;RF_Control_B1.c: 173: RfPointSelect(rf);
 11143  2462  0826               	movf	(setRF_Enable@rf),w
 11144  2463  31A0  2034  31A4   	fcall	_RfPointSelect
 11145                           	line	174
 11146                           	
 11147  2466                     l24317:	
 11148                           ;RF_Control_B1.c: 174: if(command)
 11149  2466  0020               	movlb 0	; select bank0
 11150  2467  0825               	movf	(setRF_Enable@command),w
 11151  2468  1D03               	skipz
 11152  2469  2C6B               	goto	u7950
 11153  246A  2C71               	goto	l24321
 11154  246B                     u7950:
 11155                           	line	176
 11156                           	
 11157  246B                     l24319:	
 11158                           ;RF_Control_B1.c: 175: {
 11159                           ;RF_Control_B1.c: 176: RF->Enable=1;
 11160  246B  0021               	movlb 1	; select bank1
 11161  246C  083E               	movf	(_RF)^080h,w
 11162  246D  0086               	movwf	fsr1l
 11163  246E  0187               	clrf fsr1h	
 11164                           	
 11165  246F  1401               	bsf	indf1,0
 11166                           	line	177
 11167                           ;RF_Control_B1.c: 177: }
 11168  2470  2C88               	goto	l13151
 11169                           	line	178
 11170                           	
 11171  2471                     l13149:	
 11172                           	line	180
 11173                           	
 11174  2471                     l24321:	
 11175                           ;RF_Control_B1.c: 178: else
 11176                           ;RF_Control_B1.c: 179: {
 11177                           ;RF_Control_B1.c: 180: RF->Enable=0;
 11178  2471  0021               	movlb 1	; select bank1
 11179  2472  083E               	movf	(_RF)^080h,w
 11180  2473  0086               	movwf	fsr1l
 11181  2474  0187               	clrf fsr1h	
 11182                           	
 11183  2475  1001               	bcf	indf1,0
 11184                           	line	181
 11185                           ;RF_Control_B1.c: 181: RF->Learn=0;
 11186  2476  083E               	movf	(_RF)^080h,w
 11187  2477  0086               	movwf	fsr1l
 11188  2478  0187               	clrf fsr1h	
 11189                           	
 11190  2479  1301               	bcf	indf1,6
 11191                           	line	182
 11192                           	
 11193  247A                     l24323:	
 11194                           ;RF_Control_B1.c: 182: Transceive_GO=0;
 11195  247A  127A               	bcf	(_Transceive_GO/8),(_Transceive_GO)&7
 11196                           	line	183
 11197                           	
 11198  247B                     l24325:	
 11199                           ;RF_Control_B1.c: 183: CC2500_WriteCommand(0x36);
 11200  247B  3036               	movlw	(036h)
 11201  247C  31A2  223D  31A4   	fcall	_CC2500_WriteCommand
 11202                           	line	184
 11203                           	
 11204  247F                     l24327:	
 11205                           ;RF_Control_B1.c: 184: CC2500_WriteCommand(0x3B);
 11206  247F  303B               	movlw	(03Bh)
 11207  2480  31A2  223D  31A4   	fcall	_CC2500_WriteCommand
 11208                           	line	185
 11209                           	
 11210  2483                     l24329:	
 11211                           ;RF_Control_B1.c: 185: RF_RxDisable(1);
 11212  2483  3001               	movlw	(01h)
 11213  2484  31A5  25FE  31A4   	fcall	_RF_RxDisable
 11214  2487  2C88               	goto	l13151
 11215                           	line	186
 11216                           	
 11217  2488                     l13150:	
 11218                           	line	187
 11219                           	
 11220  2488                     l13151:	
 11221  2488  0008               	return
 11222                           	opt stack 0
 11223                           GLOBAL	__end_of_setRF_Enable
 11224  2489                     	__end_of_setRF_Enable:
 11225 ;; =============== function _setRF_Enable ends ============
 11226                           
 11227                           	signat	_setRF_Enable,8312
 11228                           	global	_Switch_Initialization
 11229                           psect	text3246,local,class=CODE,delta=2
 11230                           global __ptext3246
 11231  2F16                     __ptext3246:
 11232                           
 11233 ;; *************** function _Switch_Initialization *****************
 11234 ;; Defined at:
 11235 ;;		line 39 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;		None
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;		None
 11240 ;; Return value:  Size  Location     Type
 11241 ;;		None               void
 11242 ;; Registers used:
 11243 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11253 ;;Total ram usage:        0 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:    7
 11256 ;; This function calls:
 11257 ;;		_TouchPower
 11258 ;;		_setSw_Initialization
 11259 ;; This function is called by:
 11260 ;;		_main
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           psect	text3246
 11264                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 11265                           	line	39
 11266                           	global	__size_of_Switch_Initialization
 11267  000A                     	__size_of_Switch_Initialization	equ	__end_of_Switch_Initialization-_Switch_Initializati
                                 on
 11268                           	
 11269  2F16                     _Switch_Initialization:	
 11270                           	opt	stack 8
 11271                           ; Regs used in _Switch_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11272                           	line	40
 11273                           	
 11274  2F16                     l24309:	
 11275                           ;Switch_B1.c: 40: TouchPower();
 11276  2F16  31AE  26F1  31AF   	fcall	_TouchPower
 11277                           	line	42
 11278                           	
 11279  2F19                     l24311:	
 11280                           ;Switch_B1.c: 42: WPUB1=0;
 11281  2F19  0024               	movlb 4	; select bank4
 11282  2F1A  108D               	bcf	(4201/8)^0200h,(4201)&7
 11283                           	line	46
 11284                           	
 11285  2F1B                     l24313:	
 11286                           ;Switch_B1.c: 46: setSw_Initialization(1);
 11287  2F1B  3001               	movlw	(01h)
 11288  2F1C  31A2  2201  31AF   	fcall	_setSw_Initialization
 11289                           	line	54
 11290                           	
 11291  2F1F                     l14361:	
 11292  2F1F  0008               	return
 11293                           	opt stack 0
 11294                           GLOBAL	__end_of_Switch_Initialization
 11295  2F20                     	__end_of_Switch_Initialization:
 11296 ;; =============== function _Switch_Initialization ends ============
 11297                           
 11298                           	signat	_Switch_Initialization,88
 11299                           	global	_Flash_Memory_Initialization
 11300                           psect	text3247,local,class=CODE,delta=2
 11301                           global __ptext3247
 11302  08B1                     __ptext3247:
 11303                           
 11304 ;; *************** function _Flash_Memory_Initialization *****************
 11305 ;; Defined at:
 11306 ;;		line 369 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;		None
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  i               1   49[BANK0 ] unsigned char 
 11311 ;; Return value:  Size  Location     Type
 11312 ;;		None               void
 11313 ;; Registers used:
 11314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11323 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11324 ;;Total ram usage:        2 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    7
 11327 ;; This function calls:
 11328 ;;		_Flash_Memory_Read
 11329 ;;		_setPercentValue
 11330 ;;		_Flash_Memory_Write
 11331 ;; This function is called by:
 11332 ;;		_main
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           psect	text3247
 11336                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 11337                           	line	369
 11338                           	global	__size_of_Flash_Memory_Initialization
 11339  00B5                     	__size_of_Flash_Memory_Initialization	equ	__end_of_Flash_Memory_Initialization-_Flash_M
                                 emory_Initialization
 11340                           	
 11341  08B1                     _Flash_Memory_Initialization:	
 11342                           	opt	stack 8
 11343                           ; Regs used in _Flash_Memory_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11344                           	line	371
 11345                           	
 11346  08B1                     l24273:	
 11347                           ;MCU_16f1518_B1.c: 370: char i;
 11348                           ;MCU_16f1518_B1.c: 371: if(Flash_Memory_Read(31) == 0xaa)
 11349  08B1  301F               	movlw	(01Fh)
 11350  08B2  31A2  22B0  3188   	fcall	_Flash_Memory_Read
 11351  08B5  3AAA               	xorlw	0AAh&0ffh
 11352  08B6  1D03               	skipz
 11353  08B7  28B9               	goto	u7931
 11354  08B8  28BA               	goto	u7930
 11355  08B9                     u7931:
 11356  08B9  291B               	goto	l24289
 11357  08BA                     u7930:
 11358                           	line	373
 11359                           	
 11360  08BA                     l24275:	
 11361                           ;MCU_16f1518_B1.c: 372: {
 11362                           ;MCU_16f1518_B1.c: 373: Product->Data[12]=Flash_Memory_Read(0);
 11363  08BA  3000               	movlw	(0)
 11364  08BB  31A2  22B0  3188   	fcall	_Flash_Memory_Read
 11365  08BE  0020               	movlb 0	; select bank0
 11366  08BF  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11367  08C0  087D               	movf	(_Product),w
 11368  08C1  3E0C               	addlw	0Ch
 11369  08C2  0086               	movwf	fsr1l
 11370  08C3  3001               	movlw 1	; select bank2/3
 11371  08C4  0087               	movwf fsr1h	
 11372                           	
 11373  08C5  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11374  08C6  0081               	movwf	indf1
 11375                           	line	374
 11376                           ;MCU_16f1518_B1.c: 374: Product->Data[13]=Flash_Memory_Read(1);
 11377  08C7  3001               	movlw	(01h)
 11378  08C8  31A2  22B0  3188   	fcall	_Flash_Memory_Read
 11379  08CB  0020               	movlb 0	; select bank0
 11380  08CC  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11381  08CD  087D               	movf	(_Product),w
 11382  08CE  3E0D               	addlw	0Dh
 11383  08CF  0086               	movwf	fsr1l
 11384  08D0  3001               	movlw 1	; select bank2/3
 11385  08D1  0087               	movwf fsr1h	
 11386                           	
 11387  08D2  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11388  08D3  0081               	movwf	indf1
 11389                           	line	375
 11390                           ;MCU_16f1518_B1.c: 375: Product->Data[14]=Flash_Memory_Read(2);
 11391  08D4  3002               	movlw	(02h)
 11392  08D5  31A2  22B0  3188   	fcall	_Flash_Memory_Read
 11393  08D8  0020               	movlb 0	; select bank0
 11394  08D9  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11395  08DA  087D               	movf	(_Product),w
 11396  08DB  3E0E               	addlw	0Eh
 11397  08DC  0086               	movwf	fsr1l
 11398  08DD  3001               	movlw 1	; select bank2/3
 11399  08DE  0087               	movwf fsr1h	
 11400                           	
 11401  08DF  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11402  08E0  0081               	movwf	indf1
 11403                           	line	381
 11404                           	
 11405  08E1                     l24277:	
 11406                           ;MCU_16f1518_B1.c: 381: i=setPercentValue(((char)((100-60)*1.5)));
 11407  08E1  303C               	movlw	(03Ch)
 11408  08E2  3199  2145  3188   	fcall	_setPercentValue
 11409  08E5  0020               	movlb 0	; select bank0
 11410  08E6  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11411  08E7  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11412  08E8  00D1               	movwf	(Flash_Memory_Initialization@i)
 11413                           	line	382
 11414                           	
 11415  08E9                     l24279:	
 11416                           ;MCU_16f1518_B1.c: 382: Product->Data[21]=i;
 11417  08E9  0851               	movf	(Flash_Memory_Initialization@i),w
 11418  08EA  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11419  08EB  087D               	movf	(_Product),w
 11420  08EC  3E15               	addlw	015h
 11421  08ED  0086               	movwf	fsr1l
 11422  08EE  3001               	movlw 1	; select bank2/3
 11423  08EF  0087               	movwf fsr1h	
 11424                           	
 11425  08F0  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11426  08F1  0081               	movwf	indf1
 11427                           	line	383
 11428                           	
 11429  08F2                     l24281:	
 11430                           ;MCU_16f1518_B1.c: 383: Product->Data[22]=i;
 11431  08F2  0851               	movf	(Flash_Memory_Initialization@i),w
 11432  08F3  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11433  08F4  087D               	movf	(_Product),w
 11434  08F5  3E16               	addlw	016h
 11435  08F6  0086               	movwf	fsr1l
 11436  08F7  3001               	movlw 1	; select bank2/3
 11437  08F8  0087               	movwf fsr1h	
 11438                           	
 11439  08F9  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11440  08FA  0081               	movwf	indf1
 11441                           	line	384
 11442                           	
 11443  08FB                     l24283:	
 11444                           ;MCU_16f1518_B1.c: 384: Product->Data[23]=i;
 11445  08FB  0851               	movf	(Flash_Memory_Initialization@i),w
 11446  08FC  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11447  08FD  087D               	movf	(_Product),w
 11448  08FE  3E17               	addlw	017h
 11449  08FF  0086               	movwf	fsr1l
 11450  0900  3001               	movlw 1	; select bank2/3
 11451  0901  0087               	movwf fsr1h	
 11452                           	
 11453  0902  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11454  0903  0081               	movwf	indf1
 11455                           	line	386
 11456                           	
 11457  0904                     l24285:	
 11458                           ;MCU_16f1518_B1.c: 386: if(Flash_Memory_Read(30) == 1)
 11459  0904  301E               	movlw	(01Eh)
 11460  0905  31A2  22B0  3188   	fcall	_Flash_Memory_Read
 11461  0908  3A01               	xorlw	01h&0ffh
 11462  0909  1D03               	skipz
 11463  090A  290C               	goto	u7941
 11464  090B  290D               	goto	u7940
 11465  090C                     u7941:
 11466  090C  2965               	goto	l8370
 11467  090D                     u7940:
 11468                           	line	388
 11469                           	
 11470  090D                     l24287:	
 11471                           ;MCU_16f1518_B1.c: 387: {
 11472                           ;MCU_16f1518_B1.c: 388: TMain->FirstOpen=0;
 11473  090D  0021               	movlb 1	; select bank1
 11474  090E  086E               	movf	(_TMain)^080h,w
 11475  090F  0086               	movwf	fsr1l
 11476  0910  3001               	movlw 1	; select bank2/3
 11477  0911  0087               	movwf fsr1h	
 11478                           	
 11479  0912  1281               	bcf	indf1,5
 11480                           	line	389
 11481                           ;MCU_16f1518_B1.c: 389: TMain->First=0;
 11482  0913  086E               	movf	(_TMain)^080h,w
 11483  0914  3E03               	addlw	03h
 11484  0915  0086               	movwf	fsr1l
 11485  0916  3001               	movlw 1	; select bank2/3
 11486  0917  0087               	movwf fsr1h	
 11487                           	
 11488  0918  1081               	bcf	indf1,1
 11489  0919  2965               	goto	l8370
 11490                           	line	390
 11491                           	
 11492  091A                     l8368:	
 11493                           	line	391
 11494                           ;MCU_16f1518_B1.c: 390: }
 11495                           ;MCU_16f1518_B1.c: 391: }
 11496  091A  2965               	goto	l8370
 11497                           	line	392
 11498                           	
 11499  091B                     l8367:	
 11500                           	line	394
 11501                           	
 11502  091B                     l24289:	
 11503                           ;MCU_16f1518_B1.c: 392: else
 11504                           ;MCU_16f1518_B1.c: 393: {
 11505                           ;MCU_16f1518_B1.c: 394: i=setPercentValue(((char)((100-60)*1.5)));
 11506  091B  303C               	movlw	(03Ch)
 11507  091C  3199  2145  3188   	fcall	_setPercentValue
 11508  091F  0020               	movlb 0	; select bank0
 11509  0920  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11510  0921  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11511  0922  00D1               	movwf	(Flash_Memory_Initialization@i)
 11512                           	line	395
 11513                           	
 11514  0923                     l24291:	
 11515                           ;MCU_16f1518_B1.c: 395: Memory->Data[3]=i;
 11516  0923  0851               	movf	(Flash_Memory_Initialization@i),w
 11517  0924  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11518  0925  0021               	movlb 1	; select bank1
 11519  0926  086D               	movf	(_Memory)^080h,w
 11520  0927  3E03               	addlw	03h
 11521  0928  0086               	movwf	fsr1l
 11522  0929  3001               	movlw 1	; select bank2/3
 11523  092A  0087               	movwf fsr1h	
 11524                           	
 11525  092B  0020               	movlb 0	; select bank0
 11526  092C  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11527  092D  0081               	movwf	indf1
 11528                           	line	396
 11529                           	
 11530  092E                     l24293:	
 11531                           ;MCU_16f1518_B1.c: 396: Memory->Data[4]=i;
 11532  092E  0851               	movf	(Flash_Memory_Initialization@i),w
 11533  092F  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11534  0930  0021               	movlb 1	; select bank1
 11535  0931  086D               	movf	(_Memory)^080h,w
 11536  0932  3E04               	addlw	04h
 11537  0933  0086               	movwf	fsr1l
 11538  0934  3001               	movlw 1	; select bank2/3
 11539  0935  0087               	movwf fsr1h	
 11540                           	
 11541  0936  0020               	movlb 0	; select bank0
 11542  0937  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11543  0938  0081               	movwf	indf1
 11544                           	line	397
 11545                           	
 11546  0939                     l24295:	
 11547                           ;MCU_16f1518_B1.c: 397: Memory->Data[5]=i;
 11548  0939  0851               	movf	(Flash_Memory_Initialization@i),w
 11549  093A  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11550  093B  0021               	movlb 1	; select bank1
 11551  093C  086D               	movf	(_Memory)^080h,w
 11552  093D  3E05               	addlw	05h
 11553  093E  0086               	movwf	fsr1l
 11554  093F  3001               	movlw 1	; select bank2/3
 11555  0940  0087               	movwf fsr1h	
 11556                           	
 11557  0941  0020               	movlb 0	; select bank0
 11558  0942  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11559  0943  0081               	movwf	indf1
 11560                           	line	398
 11561                           	
 11562  0944                     l24297:	
 11563                           ;MCU_16f1518_B1.c: 398: Product->Data[21]=i;
 11564  0944  0851               	movf	(Flash_Memory_Initialization@i),w
 11565  0945  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11566  0946  087D               	movf	(_Product),w
 11567  0947  3E15               	addlw	015h
 11568  0948  0086               	movwf	fsr1l
 11569  0949  3001               	movlw 1	; select bank2/3
 11570  094A  0087               	movwf fsr1h	
 11571                           	
 11572  094B  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11573  094C  0081               	movwf	indf1
 11574                           	line	399
 11575                           	
 11576  094D                     l24299:	
 11577                           ;MCU_16f1518_B1.c: 399: Product->Data[22]=i;
 11578  094D  0851               	movf	(Flash_Memory_Initialization@i),w
 11579  094E  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11580  094F  087D               	movf	(_Product),w
 11581  0950  3E16               	addlw	016h
 11582  0951  0086               	movwf	fsr1l
 11583  0952  3001               	movlw 1	; select bank2/3
 11584  0953  0087               	movwf fsr1h	
 11585                           	
 11586  0954  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11587  0955  0081               	movwf	indf1
 11588                           	line	400
 11589                           	
 11590  0956                     l24301:	
 11591                           ;MCU_16f1518_B1.c: 400: Product->Data[23]=i;
 11592  0956  0851               	movf	(Flash_Memory_Initialization@i),w
 11593  0957  00D0               	movwf	(??_Flash_Memory_Initialization+0)+0
 11594  0958  087D               	movf	(_Product),w
 11595  0959  3E17               	addlw	017h
 11596  095A  0086               	movwf	fsr1l
 11597  095B  3001               	movlw 1	; select bank2/3
 11598  095C  0087               	movwf fsr1h	
 11599                           	
 11600  095D  0850               	movf	(??_Flash_Memory_Initialization+0)+0,w
 11601  095E  0081               	movwf	indf1
 11602                           	line	401
 11603                           	
 11604  095F                     l24303:	
 11605                           ;MCU_16f1518_B1.c: 401: GIE=0;
 11606  095F  138B               	bcf	(95/8),(95)&7
 11607                           	line	402
 11608                           	
 11609  0960                     l24305:	
 11610                           ;MCU_16f1518_B1.c: 402: Flash_Memory_Write();
 11611  0960  31A7  2711  3188   	fcall	_Flash_Memory_Write
 11612                           	line	403
 11613                           	
 11614  0963                     l24307:	
 11615                           ;MCU_16f1518_B1.c: 403: GIE=1;
 11616  0963  178B               	bsf	(95/8),(95)&7
 11617  0964  2965               	goto	l8370
 11618                           	line	404
 11619                           	
 11620  0965                     l8369:	
 11621                           	line	405
 11622                           	
 11623  0965                     l8370:	
 11624  0965  0008               	return
 11625                           	opt stack 0
 11626                           GLOBAL	__end_of_Flash_Memory_Initialization
 11627  0966                     	__end_of_Flash_Memory_Initialization:
 11628 ;; =============== function _Flash_Memory_Initialization ends ============
 11629                           
 11630                           	signat	_Flash_Memory_Initialization,88
 11631                           	global	_LED_Initialization
 11632                           psect	text3248,local,class=CODE,delta=2
 11633                           global __ptext3248
 11634  2F75                     __ptext3248:
 11635                           
 11636 ;; *************** function _LED_Initialization *****************
 11637 ;; Defined at:
 11638 ;;		line 36 in file "G:\Program\PIC\Source_File\LED_B1.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;		None
 11641 ;; Auto vars:     Size  Location     Type
 11642 ;;		None
 11643 ;; Return value:  Size  Location     Type
 11644 ;;		None               void
 11645 ;; Registers used:
 11646 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11647 ;; Tracked objects:
 11648 ;;		On entry : 0/0
 11649 ;;		On exit  : 0/0
 11650 ;;		Unchanged: 0/0
 11651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11656 ;;Total ram usage:        0 bytes
 11657 ;; Hardware stack levels used:    1
 11658 ;; Hardware stack levels required when called:    7
 11659 ;; This function calls:
 11660 ;;		_setLED_Initialization
 11661 ;; This function is called by:
 11662 ;;		_main
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           psect	text3248
 11666                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 11667                           	line	36
 11668                           	global	__size_of_LED_Initialization
 11669  000D                     	__size_of_LED_Initialization	equ	__end_of_LED_Initialization-_LED_Initialization
 11670                           	
 11671  2F75                     _LED_Initialization:	
 11672                           	opt	stack 8
 11673                           ; Regs used in _LED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 11674                           	line	38
 11675                           	
 11676  2F75                     l24271:	
 11677                           ;LED_B1.c: 38: setLED_Initialization(1);
 11678  2F75  3001               	movlw	(01h)
 11679  2F76  31A1  21DC  31AF   	fcall	_setLED_Initialization
 11680                           	line	41
 11681                           ;LED_B1.c: 41: setLED_Initialization(2);
 11682  2F79  3002               	movlw	(02h)
 11683  2F7A  31A1  21DC  31AF   	fcall	_setLED_Initialization
 11684                           	line	47
 11685                           ;LED_B1.c: 47: setLED_Initialization(99);
 11686  2F7D  3063               	movlw	(063h)
 11687  2F7E  31A1  21DC  31AF   	fcall	_setLED_Initialization
 11688                           	line	49
 11689                           	
 11690  2F81                     l5937:	
 11691  2F81  0008               	return
 11692                           	opt stack 0
 11693                           GLOBAL	__end_of_LED_Initialization
 11694  2F82                     	__end_of_LED_Initialization:
 11695 ;; =============== function _LED_Initialization ends ============
 11696                           
 11697                           	signat	_LED_Initialization,88
 11698                           	global	_setDimmerLights_AdjRF
 11699                           psect	text3249,local,class=CODE,delta=2
 11700                           global __ptext3249
 11701  232C                     __ptext3249:
 11702                           
 11703 ;; *************** function _setDimmerLights_AdjRF *****************
 11704 ;; Defined at:
 11705 ;;		line 438 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;  lights          1    wreg     unsigned char 
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;  lights          1   64[BANK0 ] unsigned char 
 11710 ;; Return value:  Size  Location     Type
 11711 ;;		None               void
 11712 ;; Registers used:
 11713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 11723 ;;Total ram usage:        2 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:    7
 11726 ;; This function calls:
 11727 ;;		_DimmerLightsPointSelect
 11728 ;;		_getPercentValue
 11729 ;; This function is called by:
 11730 ;;		_setRF_DimmerValue
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           psect	text3249
 11734                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 11735                           	line	438
 11736                           	global	__size_of_setDimmerLights_AdjRF
 11737  0024                     	__size_of_setDimmerLights_AdjRF	equ	__end_of_setDimmerLights_AdjRF-_setDimmerLights_Adj
                                 RF
 11738                           	
 11739  232C                     _setDimmerLights_AdjRF:	
 11740                           	opt	stack 2
 11741                           ; Regs used in _setDimmerLights_AdjRF: [wreg+fsr1l-status,0+pclath+cstack]
 11742                           ;setDimmerLights_AdjRF@lights stored from wreg
 11743  232C  0020               	movlb 0	; select bank0
 11744  232D  00E0               	movwf	(setDimmerLights_AdjRF@lights)
 11745                           	line	439
 11746                           	
 11747  232E                     l24263:	
 11748                           ;Dimmer_B1.c: 439: DimmerLightsPointSelect(lights);
 11749  232E  0860               	movf	(setDimmerLights_AdjRF@lights),w
 11750  232F  31AF  27AC  31A3   	fcall	_DimmerLightsPointSelect
 11751                           	line	440
 11752                           	
 11753  2332                     l24265:	
 11754                           ;Dimmer_B1.c: 440: DimmerLights->AdjRF=1;
 11755  2332  0020               	movlb 0	; select bank0
 11756  2333  086D               	movf	(_DimmerLights),w
 11757  2334  0086               	movwf	fsr1l
 11758  2335  3001               	movlw 1	; select bank2/3
 11759  2336  0087               	movwf fsr1h	
 11760                           	
 11761  2337  1501               	bsf	indf1,2
 11762                           	line	441
 11763                           	
 11764  2338                     l24267:	
 11765                           ;Dimmer_B1.c: 441: DimmerLights->Signal=1;
 11766  2338  086D               	movf	(_DimmerLights),w
 11767  2339  0086               	movwf	fsr1l
 11768  233A  3001               	movlw 1	; select bank2/3
 11769  233B  0087               	movwf fsr1h	
 11770                           	
 11771  233C  1481               	bsf	indf1,1
 11772                           	line	442
 11773                           	
 11774  233D                     l24269:	
 11775                           ;Dimmer_B1.c: 442: DimmerLights->MaxmumValue=getPercentValue(Product->Data[9]);
 11776  233D  087D               	movf	(_Product),w
 11777  233E  3E09               	addlw	09h
 11778  233F  0086               	movwf	fsr1l
 11779  2340  3001               	movlw 1	; select bank2/3
 11780  2341  0087               	movwf fsr1h	
 11781                           	
 11782  2342  0801               	movf	indf1,w
 11783  2343  319C  2469  31A3   	fcall	_getPercentValue
 11784  2346  0020               	movlb 0	; select bank0
 11785  2347  00DF               	movwf	(??_setDimmerLights_AdjRF+0)+0
 11786  2348  086D               	movf	(_DimmerLights),w
 11787  2349  3E05               	addlw	05h
 11788  234A  0086               	movwf	fsr1l
 11789  234B  3001               	movlw 1	; select bank2/3
 11790  234C  0087               	movwf fsr1h	
 11791                           	
 11792  234D  085F               	movf	(??_setDimmerLights_AdjRF+0)+0,w
 11793  234E  0081               	movwf	indf1
 11794                           	line	443
 11795                           	
 11796  234F                     l4763:	
 11797  234F  0008               	return
 11798                           	opt stack 0
 11799                           GLOBAL	__end_of_setDimmerLights_AdjRF
 11800  2350                     	__end_of_setDimmerLights_AdjRF:
 11801 ;; =============== function _setDimmerLights_AdjRF ends ============
 11802                           
 11803                           	signat	_setDimmerLights_AdjRF,4216
 11804                           	global	_DimmerLights_ERROR
 11805                           psect	text3250,local,class=CODE,delta=2
 11806                           global __ptext3250
 11807  1159                     __ptext3250:
 11808                           
 11809 ;; *************** function _DimmerLights_ERROR *****************
 11810 ;; Defined at:
 11811 ;;		line 278 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;		None               void
 11818 ;; Registers used:
 11819 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 11827 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11828 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 11829 ;;Total ram usage:        1 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; Hardware stack levels required when called:    7
 11832 ;; This function calls:
 11833 ;;		_getDimmer_TempERROR
 11834 ;;		_getDimmerLights_StatusFlag
 11835 ;;		_setBuz
 11836 ;;		_setDimmerLights_ERROR
 11837 ;;		_getDimmer_LoadERROR
 11838 ;;		_getDimmer_PFERROR
 11839 ;;		_setDimmerLights_TriggerERROR
 11840 ;; This function is called by:
 11841 ;;		_setLoad_ERROR
 11842 ;;		_setOverTemp_ERROR
 11843 ;;		_setPowerFault_ERROR
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           psect	text3250
 11847                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 11848                           	line	278
 11849                           	global	__size_of_DimmerLights_ERROR
 11850  007F                     	__size_of_DimmerLights_ERROR	equ	__end_of_DimmerLights_ERROR-_DimmerLights_ERROR
 11851                           	
 11852  1159                     _DimmerLights_ERROR:	
 11853                           	opt	stack 5
 11854                           ; Regs used in _DimmerLights_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 11855                           	line	279
 11856                           	
 11857  1159                     l24245:	
 11858                           ;Dimmer_B1.c: 279: if(getDimmer_TempERROR(1))
 11859  1159  3001               	movlw	(01h)
 11860  115A  31AF  27D6  3191   	fcall	_getDimmer_TempERROR
 11861  115D  3A00               	xorlw	0&0ffh
 11862  115E  1903               	skipnz
 11863  115F  2961               	goto	u7881
 11864  1160  2962               	goto	u7880
 11865  1161                     u7881:
 11866  1161  297C               	goto	l24251
 11867  1162                     u7880:
 11868                           	line	281
 11869                           	
 11870  1162                     l24247:	
 11871                           ;Dimmer_B1.c: 280: {
 11872                           ;Dimmer_B1.c: 281: if(getDimmerLights_StatusFlag())
 11873  1162  31A3  239B  3191   	fcall	_getDimmerLights_StatusFlag
 11874  1165  3A00               	xorlw	0&0ffh
 11875  1166  1903               	skipnz
 11876  1167  2969               	goto	u7891
 11877  1168  296A               	goto	u7890
 11878  1169                     u7891:
 11879  1169  2977               	goto	l4732
 11880  116A                     u7890:
 11881                           	line	283
 11882                           	
 11883  116A                     l24249:	
 11884                           ;Dimmer_B1.c: 282: {
 11885                           ;Dimmer_B1.c: 283: setBuz(1,10,300);
 11886  116A  300A               	movlw	(0Ah)
 11887  116B  0020               	movlb 0	; select bank0
 11888  116C  00AE               	movwf	(??_DimmerLights_ERROR+0)+0
 11889  116D  082E               	movf	(??_DimmerLights_ERROR+0)+0,w
 11890  116E  00A9               	movwf	(?_setBuz)
 11891  116F  302C               	movlw	low(012Ch)
 11892  1170  00AA               	movwf	0+(?_setBuz)+01h
 11893  1171  3001               	movlw	high(012Ch)
 11894  1172  00AB               	movwf	(0+(?_setBuz)+01h)+1
 11895  1173  3001               	movlw	(01h)
 11896  1174  3196  2617  3191   	fcall	_setBuz
 11897                           	line	284
 11898                           	
 11899  1177                     l4732:	
 11900                           	line	287
 11901                           ;Dimmer_B1.c: 284: }
 11902                           ;Dimmer_B1.c: 287: setDimmerLights_ERROR(1);
 11903  1177  3001               	movlw	(01h)
 11904  1178  319C  240E  3191   	fcall	_setDimmerLights_ERROR
 11905                           	line	295
 11906                           ;Dimmer_B1.c: 295: }
 11907  117B  29AB               	goto	l4733
 11908                           	line	296
 11909                           	
 11910  117C                     l4731:	
 11911                           	
 11912  117C                     l24251:	
 11913                           ;Dimmer_B1.c: 296: else if(getDimmer_LoadERROR(1))
 11914  117C  3001               	movlw	(01h)
 11915  117D  31AF  27E4  3191   	fcall	_getDimmer_LoadERROR
 11916  1180  3A00               	xorlw	0&0ffh
 11917  1181  1903               	skipnz
 11918  1182  2984               	goto	u7901
 11919  1183  2985               	goto	u7900
 11920  1184                     u7901:
 11921  1184  299C               	goto	l24255
 11922  1185                     u7900:
 11923                           	line	298
 11924                           	
 11925  1185                     l24253:	
 11926                           ;Dimmer_B1.c: 297: {
 11927                           ;Dimmer_B1.c: 298: setBuz(1,5,300);
 11928  1185  3005               	movlw	(05h)
 11929  1186  0020               	movlb 0	; select bank0
 11930  1187  00AE               	movwf	(??_DimmerLights_ERROR+0)+0
 11931  1188  082E               	movf	(??_DimmerLights_ERROR+0)+0,w
 11932  1189  00A9               	movwf	(?_setBuz)
 11933  118A  302C               	movlw	low(012Ch)
 11934  118B  00AA               	movwf	0+(?_setBuz)+01h
 11935  118C  3001               	movlw	high(012Ch)
 11936  118D  00AB               	movwf	(0+(?_setBuz)+01h)+1
 11937  118E  3001               	movlw	(01h)
 11938  118F  3196  2617  3191   	fcall	_setBuz
 11939                           	line	299
 11940                           ;Dimmer_B1.c: 299: setDimmerLights_ERROR(Dimmer->Load);
 11941  1192  0021               	movlb 1	; select bank1
 11942  1193  083A               	movf	(_Dimmer)^080h,w
 11943  1194  3E01               	addlw	01h
 11944  1195  0086               	movwf	fsr1l
 11945  1196  0187               	clrf fsr1h	
 11946                           	
 11947  1197  0801               	movf	indf1,w
 11948  1198  319C  240E  3191   	fcall	_setDimmerLights_ERROR
 11949                           	line	300
 11950                           ;Dimmer_B1.c: 300: }
 11951  119B  29AB               	goto	l4733
 11952                           	line	301
 11953                           	
 11954  119C                     l4734:	
 11955                           	
 11956  119C                     l24255:	
 11957                           ;Dimmer_B1.c: 301: else if(getDimmer_PFERROR(1))
 11958  119C  3001               	movlw	(01h)
 11959  119D  31A0  2052  3191   	fcall	_getDimmer_PFERROR
 11960  11A0  3A00               	xorlw	0&0ffh
 11961  11A1  1903               	skipnz
 11962  11A2  29A4               	goto	u7911
 11963  11A3  29A5               	goto	u7910
 11964  11A4                     u7911:
 11965  11A4  29AB               	goto	l4733
 11966  11A5                     u7910:
 11967                           	line	304
 11968                           	
 11969  11A5                     l24257:	
 11970                           ;Dimmer_B1.c: 302: {
 11971                           ;Dimmer_B1.c: 304: setDimmerLights_ERROR(1);
 11972  11A5  3001               	movlw	(01h)
 11973  11A6  319C  240E  3191   	fcall	_setDimmerLights_ERROR
 11974  11A9  29AB               	goto	l4733
 11975                           	line	312
 11976                           	
 11977  11AA                     l4736:	
 11978  11AA  29AB               	goto	l4733
 11979                           	line	314
 11980                           	
 11981  11AB                     l4735:	
 11982                           	
 11983  11AB                     l4733:	
 11984                           ;Dimmer_B1.c: 312: }
 11985                           ;Dimmer_B1.c: 314: setDimmerLights_TriggerERROR(1,0);
 11986  11AB  0020               	movlb 0	; select bank0
 11987  11AC  01A2               	clrf	(?_setDimmerLights_TriggerERROR)
 11988  11AD  3001               	movlw	(01h)
 11989  11AE  31A7  2782  3191   	fcall	_setDimmerLights_TriggerERROR
 11990                           	line	323
 11991                           	
 11992  11B1                     l24259:	
 11993                           ;Dimmer_B1.c: 323: if(TMain->SelfTest == 0)
 11994  11B1  0021               	movlb 1	; select bank1
 11995  11B2  086E               	movf	(_TMain)^080h,w
 11996  11B3  3E03               	addlw	03h
 11997  11B4  0086               	movwf	fsr1l
 11998  11B5  3001               	movlw 1	; select bank2/3
 11999  11B6  0087               	movwf fsr1h	
 12000                           	
 12001  11B7  1801               	btfsc	indf1,0
 12002  11B8  29BA               	goto	u7921
 12003  11B9  29BB               	goto	u7920
 12004  11BA                     u7921:
 12005  11BA  29D7               	goto	l4738
 12006  11BB                     u7920:
 12007                           	line	325
 12008                           	
 12009  11BB                     l24261:	
 12010                           ;Dimmer_B1.c: 324: {
 12011                           ;Dimmer_B1.c: 325: TMain->i=0;
 12012  11BB  086E               	movf	(_TMain)^080h,w
 12013  11BC  3E0E               	addlw	0Eh
 12014  11BD  0086               	movwf	fsr1l
 12015  11BE  3001               	movlw 1	; select bank2/3
 12016  11BF  0087               	movwf fsr1h	
 12017                           	
 12018  11C0  1001               	bcf	indf1,0
 12019                           	line	326
 12020                           ;Dimmer_B1.c: 326: TMain->j=0;
 12021  11C1  086E               	movf	(_TMain)^080h,w
 12022  11C2  3E0E               	addlw	0Eh
 12023  11C3  0086               	movwf	fsr1l
 12024  11C4  3001               	movlw 1	; select bank2/3
 12025  11C5  0087               	movwf fsr1h	
 12026                           	
 12027  11C6  1081               	bcf	indf1,1
 12028                           	line	327
 12029                           ;Dimmer_B1.c: 327: TMain->k=1;
 12030  11C7  086E               	movf	(_TMain)^080h,w
 12031  11C8  3E0E               	addlw	0Eh
 12032  11C9  0086               	movwf	fsr1l
 12033  11CA  3001               	movlw 1	; select bank2/3
 12034  11CB  0087               	movwf fsr1h	
 12035                           	
 12036  11CC  1501               	bsf	indf1,2
 12037                           	line	328
 12038                           ;Dimmer_B1.c: 328: TMain->Count2=0;
 12039  11CD  086E               	movf	(_TMain)^080h,w
 12040  11CE  3E08               	addlw	08h
 12041  11CF  0086               	movwf	fsr1l
 12042  11D0  3001               	movlw 1	; select bank2/3
 12043  11D1  0087               	movwf fsr1h	
 12044                           	
 12045  11D2  3000               	movlw	low(0)
 12046  11D3  3FC0               	movwi	[0]fsr1
 12047  11D4  3000               	movlw	high(0)
 12048  11D5  3FC1               	movwi	[1]fsr1
 12049  11D6  29D7               	goto	l4738
 12050                           	line	329
 12051                           	
 12052  11D7                     l4737:	
 12053                           	line	330
 12054                           	
 12055  11D7                     l4738:	
 12056  11D7  0008               	return
 12057                           	opt stack 0
 12058                           GLOBAL	__end_of_DimmerLights_ERROR
 12059  11D8                     	__end_of_DimmerLights_ERROR:
 12060 ;; =============== function _DimmerLights_ERROR ends ============
 12061                           
 12062                           	signat	_DimmerLights_ERROR,88
 12063                           	global	_setDimmerLights_Adj
 12064                           psect	text3251,local,class=CODE,delta=2
 12065                           global __ptext3251
 12066  1E42                     __ptext3251:
 12067                           
 12068 ;; *************** function _setDimmerLights_Adj *****************
 12069 ;; Defined at:
 12070 ;;		line 408 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12071 ;; Parameters:    Size  Location     Type
 12072 ;;  lights          1    wreg     unsigned char 
 12073 ;;  status          1   48[BANK0 ] unsigned char 
 12074 ;; Auto vars:     Size  Location     Type
 12075 ;;  lights          1   51[BANK0 ] unsigned char 
 12076 ;; Return value:  Size  Location     Type
 12077 ;;		None               void
 12078 ;; Registers used:
 12079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12080 ;; Tracked objects:
 12081 ;;		On entry : 0/0
 12082 ;;		On exit  : 0/0
 12083 ;;		Unchanged: 0/0
 12084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12085 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12087 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 12089 ;;Total ram usage:        4 bytes
 12090 ;; Hardware stack levels used:    1
 12091 ;; Hardware stack levels required when called:    7
 12092 ;; This function calls:
 12093 ;;		_DimmerLightsPointSelect
 12094 ;;		_setLoad_StatusOff
 12095 ;;		_setRF_DimmerLights
 12096 ;;		_setTxData
 12097 ;;		_setPercentValue
 12098 ;; This function is called by:
 12099 ;;		_setDimmerLights_Main
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           psect	text3251
 12103                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12104                           	line	408
 12105                           	global	__size_of_setDimmerLights_Adj
 12106  006A                     	__size_of_setDimmerLights_Adj	equ	__end_of_setDimmerLights_Adj-_setDimmerLights_Adj
 12107                           	
 12108  1E42                     _setDimmerLights_Adj:	
 12109                           	opt	stack 6
 12110                           ; Regs used in _setDimmerLights_Adj: [wreg+fsr1l-status,0+pclath+cstack]
 12111                           ;setDimmerLights_Adj@lights stored from wreg
 12112  1E42  0020               	movlb 0	; select bank0
 12113  1E43  00D3               	movwf	(setDimmerLights_Adj@lights)
 12114                           	line	409
 12115                           	
 12116  1E44                     l24227:	
 12117                           ;Dimmer_B1.c: 409: DimmerLightsPointSelect(lights);
 12118  1E44  0853               	movf	(setDimmerLights_Adj@lights),w
 12119  1E45  31AF  27AC  319E   	fcall	_DimmerLightsPointSelect
 12120                           	line	410
 12121                           	
 12122  1E48                     l24229:	
 12123                           ;Dimmer_B1.c: 410: if(status)
 12124  1E48  0020               	movlb 0	; select bank0
 12125  1E49  0850               	movf	(setDimmerLights_Adj@status),w
 12126  1E4A  1D03               	skipz
 12127  1E4B  2E4D               	goto	u7860
 12128  1E4C  2E58               	goto	l24233
 12129  1E4D                     u7860:
 12130                           	line	412
 12131                           	
 12132  1E4D                     l24231:	
 12133                           ;Dimmer_B1.c: 411: {
 12134                           ;Dimmer_B1.c: 412: DimmerLights->AdjFlag=1;
 12135  1E4D  086D               	movf	(_DimmerLights),w
 12136  1E4E  0086               	movwf	fsr1l
 12137  1E4F  3001               	movlw 1	; select bank2/3
 12138  1E50  0087               	movwf fsr1h	
 12139                           	
 12140  1E51  1581               	bsf	indf1,3
 12141                           	line	413
 12142                           ;Dimmer_B1.c: 413: DimmerLights->Signal=1;
 12143  1E52  086D               	movf	(_DimmerLights),w
 12144  1E53  0086               	movwf	fsr1l
 12145  1E54  3001               	movlw 1	; select bank2/3
 12146  1E55  0087               	movwf fsr1h	
 12147                           	
 12148  1E56  1481               	bsf	indf1,1
 12149                           	line	414
 12150                           ;Dimmer_B1.c: 414: }
 12151  1E57  2EAB               	goto	l4757
 12152                           	line	415
 12153                           	
 12154  1E58                     l4754:	
 12155                           	line	417
 12156                           	
 12157  1E58                     l24233:	
 12158                           ;Dimmer_B1.c: 415: else
 12159                           ;Dimmer_B1.c: 416: {
 12160                           ;Dimmer_B1.c: 417: if(DimmerLights->AdjFlag)
 12161  1E58  086D               	movf	(_DimmerLights),w
 12162  1E59  0086               	movwf	fsr1l
 12163  1E5A  3001               	movlw 1	; select bank2/3
 12164  1E5B  0087               	movwf fsr1h	
 12165                           	
 12166  1E5C  1D81               	btfss	indf1,3
 12167  1E5D  2E5F               	goto	u7871
 12168  1E5E  2E60               	goto	u7870
 12169  1E5F                     u7871:
 12170  1E5F  2EAB               	goto	l4757
 12171  1E60                     u7870:
 12172                           	line	419
 12173                           	
 12174  1E60                     l24235:	
 12175                           ;Dimmer_B1.c: 418: {
 12176                           ;Dimmer_B1.c: 419: DimmerLights->Signal=0;
 12177  1E60  086D               	movf	(_DimmerLights),w
 12178  1E61  0086               	movwf	fsr1l
 12179  1E62  3001               	movlw 1	; select bank2/3
 12180  1E63  0087               	movwf fsr1h	
 12181                           	
 12182  1E64  1081               	bcf	indf1,1
 12183                           	line	420
 12184                           ;Dimmer_B1.c: 420: DimmerLights->AdjFlag=0;
 12185  1E65  086D               	movf	(_DimmerLights),w
 12186  1E66  0086               	movwf	fsr1l
 12187  1E67  3001               	movlw 1	; select bank2/3
 12188  1E68  0087               	movwf fsr1h	
 12189                           	
 12190  1E69  1181               	bcf	indf1,3
 12191                           	line	421
 12192                           	
 12193  1E6A                     l24237:	
 12194                           ;Dimmer_B1.c: 421: setLoad_StatusOff(1,0,1);
 12195  1E6A  01A2               	clrf	(?_setLoad_StatusOff)
 12196  1E6B  01A3               	clrf	0+(?_setLoad_StatusOff)+01h
 12197  1E6C  1403               	bsf	status,0
 12198  1E6D  0DA3               	rlf	0+(?_setLoad_StatusOff)+01h,f
 12199  1E6E  3001               	movlw	(01h)
 12200  1E6F  31A6  26A1  319E   	fcall	_setLoad_StatusOff
 12201                           	line	422
 12202                           	
 12203  1E72                     l24239:	
 12204                           ;Dimmer_B1.c: 422: DimmerLights->MaxmumValue=DimmerLights->DimmingValue;
 12205  1E72  0020               	movlb 0	; select bank0
 12206  1E73  086D               	movf	(_DimmerLights),w
 12207  1E74  3E04               	addlw	04h
 12208  1E75  0086               	movwf	fsr1l
 12209  1E76  3001               	movlw 1	; select bank2/3
 12210  1E77  0087               	movwf fsr1h	
 12211                           	
 12212  1E78  0801               	movf	indf1,w
 12213  1E79  00D1               	movwf	(??_setDimmerLights_Adj+0)+0
 12214  1E7A  086D               	movf	(_DimmerLights),w
 12215  1E7B  3E05               	addlw	05h
 12216  1E7C  0086               	movwf	fsr1l
 12217  1E7D  3001               	movlw 1	; select bank2/3
 12218  1E7E  0087               	movwf fsr1h	
 12219                           	
 12220  1E7F  0851               	movf	(??_setDimmerLights_Adj+0)+0,w
 12221  1E80  0081               	movwf	indf1
 12222                           	line	423
 12223                           ;Dimmer_B1.c: 423: setRF_DimmerLights(lights,1);
 12224  1E81  01A0               	clrf	(?_setRF_DimmerLights)
 12225  1E82  1403               	bsf	status,0
 12226  1E83  0DA0               	rlf	(?_setRF_DimmerLights),f
 12227  1E84  0853               	movf	(setDimmerLights_Adj@lights),w
 12228  1E85  319D  2523  319E   	fcall	_setRF_DimmerLights
 12229                           	line	424
 12230                           ;Dimmer_B1.c: 424: setTxData(1);
 12231  1E88  3001               	movlw	(01h)
 12232  1E89  319A  2272  319E   	fcall	_setTxData
 12233                           	line	425
 12234                           	
 12235  1E8C                     l24241:	
 12236                           ;Dimmer_B1.c: 425: Memory->Modify=1;
 12237  1E8C  0021               	movlb 1	; select bank1
 12238  1E8D  086D               	movf	(_Memory)^080h,w
 12239  1E8E  3E22               	addlw	022h
 12240  1E8F  0086               	movwf	fsr1l
 12241  1E90  3001               	movlw 1	; select bank2/3
 12242  1E91  0087               	movwf fsr1h	
 12243                           	
 12244  1E92  1401               	bsf	indf1,0
 12245                           	line	426
 12246                           	
 12247  1E93                     l24243:	
 12248                           ;Dimmer_B1.c: 426: Product->Data[(20+lights)]=setPercentValue(DimmerLights->MaxmumValue)
                                 ;
 12249  1E93  0020               	movlb 0	; select bank0
 12250  1E94  086D               	movf	(_DimmerLights),w
 12251  1E95  3E05               	addlw	05h
 12252  1E96  0086               	movwf	fsr1l
 12253  1E97  3001               	movlw 1	; select bank2/3
 12254  1E98  0087               	movwf fsr1h	
 12255                           	
 12256  1E99  0801               	movf	indf1,w
 12257  1E9A  3199  2145  319E   	fcall	_setPercentValue
 12258  1E9D  0020               	movlb 0	; select bank0
 12259  1E9E  00D1               	movwf	(??_setDimmerLights_Adj+0)+0
 12260  1E9F  0853               	movf	(setDimmerLights_Adj@lights),w
 12261  1EA0  3E14               	addlw	014h
 12262  1EA1  077D               	addwf	(_Product),w
 12263  1EA2  00D2               	movwf	(??_setDimmerLights_Adj+1)+0
 12264  1EA3  0852               	movf	0+(??_setDimmerLights_Adj+1)+0,w
 12265  1EA4  0086               	movwf	fsr1l
 12266  1EA5  3001               	movlw 1	; select bank2/3
 12267  1EA6  0087               	movwf fsr1h	
 12268                           	
 12269  1EA7  0851               	movf	(??_setDimmerLights_Adj+0)+0,w
 12270  1EA8  0081               	movwf	indf1
 12271  1EA9  2EAB               	goto	l4757
 12272                           	line	427
 12273                           	
 12274  1EAA                     l4756:	
 12275  1EAA  2EAB               	goto	l4757
 12276                           	line	428
 12277                           	
 12278  1EAB                     l4755:	
 12279                           	line	429
 12280                           	
 12281  1EAB                     l4757:	
 12282  1EAB  0008               	return
 12283                           	opt stack 0
 12284                           GLOBAL	__end_of_setDimmerLights_Adj
 12285  1EAC                     	__end_of_setDimmerLights_Adj:
 12286 ;; =============== function _setDimmerLights_Adj ends ============
 12287                           
 12288                           	signat	_setDimmerLights_Adj,8312
 12289                           	global	_setDimmerLights_Initialization
 12290                           psect	text3252,local,class=CODE,delta=2
 12291                           global __ptext3252
 12292  27C0                     __ptext3252:
 12293                           
 12294 ;; *************** function _setDimmerLights_Initialization *****************
 12295 ;; Defined at:
 12296 ;;		line 50 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  lights          1    wreg     unsigned char 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  lights          1   65[BANK0 ] unsigned char 
 12301 ;; Return value:  Size  Location     Type
 12302 ;;		None               void
 12303 ;; Registers used:
 12304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12305 ;; Tracked objects:
 12306 ;;		On entry : 0/0
 12307 ;;		On exit  : 0/0
 12308 ;;		Unchanged: 0/0
 12309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12313 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12314 ;;Total ram usage:        3 bytes
 12315 ;; Hardware stack levels used:    1
 12316 ;; Hardware stack levels required when called:    7
 12317 ;; This function calls:
 12318 ;;		_DimmerLightsPointSelect
 12319 ;;		_getPercentValue
 12320 ;; This function is called by:
 12321 ;;		_DimmerLights_Initialization
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           psect	text3252
 12325                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 12326                           	line	50
 12327                           	global	__size_of_setDimmerLights_Initialization
 12328  0040                     	__size_of_setDimmerLights_Initialization	equ	__end_of_setDimmerLights_Initialization-_s
                                 etDimmerLights_Initialization
 12329                           	
 12330  27C0                     _setDimmerLights_Initialization:	
 12331                           	opt	stack 7
 12332                           ; Regs used in _setDimmerLights_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 12333                           ;setDimmerLights_Initialization@lights stored from wreg
 12334  27C0  0020               	movlb 0	; select bank0
 12335  27C1  00E1               	movwf	(setDimmerLights_Initialization@lights)
 12336                           	line	51
 12337                           	
 12338  27C2                     l24215:	
 12339                           ;Dimmer_B1.c: 51: DimmerLightsPointSelect(lights);
 12340  27C2  0861               	movf	(setDimmerLights_Initialization@lights),w
 12341  27C3  31AF  27AC  31A7   	fcall	_DimmerLightsPointSelect
 12342                           	line	53
 12343                           	
 12344  27C6                     l24217:	
 12345                           ;Dimmer_B1.c: 53: DimmerLights->MinimumValue=((char)((100-20)*1.5));
 12346  27C6  3078               	movlw	(078h)
 12347  27C7  0020               	movlb 0	; select bank0
 12348  27C8  00DF               	movwf	(??_setDimmerLights_Initialization+0)+0
 12349  27C9  086D               	movf	(_DimmerLights),w
 12350  27CA  3E06               	addlw	06h
 12351  27CB  0086               	movwf	fsr1l
 12352  27CC  3001               	movlw 1	; select bank2/3
 12353  27CD  0087               	movwf fsr1h	
 12354                           	
 12355  27CE  085F               	movf	(??_setDimmerLights_Initialization+0)+0,w
 12356  27CF  0081               	movwf	indf1
 12357                           	line	54
 12358                           	
 12359  27D0                     l24219:	
 12360                           ;Dimmer_B1.c: 54: DimmerLights->Open=1;
 12361  27D0  086D               	movf	(_DimmerLights),w
 12362  27D1  3E09               	addlw	09h
 12363  27D2  0086               	movwf	fsr1l
 12364  27D3  3001               	movlw 1	; select bank2/3
 12365  27D4  0087               	movwf fsr1h	
 12366                           	
 12367  27D5  1681               	bsf	indf1,5
 12368                           	line	55
 12369                           	
 12370  27D6                     l24221:	
 12371                           ;Dimmer_B1.c: 55: DimmerLights->Close=1;
 12372  27D6  086D               	movf	(_DimmerLights),w
 12373  27D7  3E09               	addlw	09h
 12374  27D8  0086               	movwf	fsr1l
 12375  27D9  3001               	movlw 1	; select bank2/3
 12376  27DA  0087               	movwf fsr1h	
 12377                           	
 12378  27DB  1701               	bsf	indf1,6
 12379                           	line	58
 12380                           	
 12381  27DC                     l24223:	
 12382                           ;Dimmer_B1.c: 58: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 12383  27DC  086D               	movf	(_DimmerLights),w
 12384  27DD  3E06               	addlw	06h
 12385  27DE  0086               	movwf	fsr1l
 12386  27DF  3001               	movlw 1	; select bank2/3
 12387  27E0  0087               	movwf fsr1h	
 12388                           	
 12389  27E1  0801               	movf	indf1,w
 12390  27E2  00DF               	movwf	(??_setDimmerLights_Initialization+0)+0
 12391  27E3  086D               	movf	(_DimmerLights),w
 12392  27E4  3E04               	addlw	04h
 12393  27E5  0086               	movwf	fsr1l
 12394  27E6  3001               	movlw 1	; select bank2/3
 12395  27E7  0087               	movwf fsr1h	
 12396                           	
 12397  27E8  085F               	movf	(??_setDimmerLights_Initialization+0)+0,w
 12398  27E9  0081               	movwf	indf1
 12399                           	line	64
 12400                           	
 12401  27EA                     l24225:	
 12402                           ;Dimmer_B1.c: 64: DimmerLights->MaxmumValue=getPercentValue(Product->Data[(20+lights)]);
 12403  27EA  0861               	movf	(setDimmerLights_Initialization@lights),w
 12404  27EB  3E14               	addlw	014h
 12405  27EC  077D               	addwf	(_Product),w
 12406  27ED  00DF               	movwf	(??_setDimmerLights_Initialization+0)+0
 12407  27EE  085F               	movf	0+(??_setDimmerLights_Initialization+0)+0,w
 12408  27EF  0086               	movwf	fsr1l
 12409  27F0  3001               	movlw 1	; select bank2/3
 12410  27F1  0087               	movwf fsr1h	
 12411                           	
 12412  27F2  0801               	movf	indf1,w
 12413  27F3  319C  2469  31A7   	fcall	_getPercentValue
 12414  27F6  0020               	movlb 0	; select bank0
 12415  27F7  00E0               	movwf	(??_setDimmerLights_Initialization+1)+0
 12416  27F8  086D               	movf	(_DimmerLights),w
 12417  27F9  3E05               	addlw	05h
 12418  27FA  0086               	movwf	fsr1l
 12419  27FB  3001               	movlw 1	; select bank2/3
 12420  27FC  0087               	movwf fsr1h	
 12421                           	
 12422  27FD  0860               	movf	(??_setDimmerLights_Initialization+1)+0,w
 12423  27FE  0081               	movwf	indf1
 12424                           	line	68
 12425                           	
 12426  27FF                     l4693:	
 12427  27FF  0008               	return
 12428                           	opt stack 0
 12429                           GLOBAL	__end_of_setDimmerLights_Initialization
 12430  2800                     	__end_of_setDimmerLights_Initialization:
 12431 ;; =============== function _setDimmerLights_Initialization ends ============
 12432                           
 12433                           	signat	_setDimmerLights_Initialization,4216
 12434                           	global	_DelayOff_Main
 12435                           psect	text3253,local,class=CODE,delta=2
 12436                           global __ptext3253
 12437  2EA7                     __ptext3253:
 12438                           
 12439 ;; *************** function _DelayOff_Main *****************
 12440 ;; Defined at:
 12441 ;;		line 44 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;		None
 12446 ;; Return value:  Size  Location     Type
 12447 ;;		None               void
 12448 ;; Registers used:
 12449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12459 ;;Total ram usage:        0 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:    7
 12462 ;; This function calls:
 12463 ;;		_DlyOff_Main
 12464 ;; This function is called by:
 12465 ;;		_main
 12466 ;; This function uses a non-reentrant model
 12467 ;;
 12468                           psect	text3253
 12469                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 12470                           	line	44
 12471                           	global	__size_of_DelayOff_Main
 12472  0005                     	__size_of_DelayOff_Main	equ	__end_of_DelayOff_Main-_DelayOff_Main
 12473                           	
 12474  2EA7                     _DelayOff_Main:	
 12475                           	opt	stack 8
 12476                           ; Regs used in _DelayOff_Main: [wreg-status,0+pclath+cstack]
 12477                           	line	46
 12478                           	
 12479  2EA7                     l24213:	
 12480                           ;DelayOff_B1.c: 46: DlyOff_Main(1);
 12481  2EA7  3001               	movlw	(01h)
 12482  2EA8  3194  2464  31AE   	fcall	_DlyOff_Main
 12483                           	line	54
 12484                           	
 12485  2EAB                     l3501:	
 12486  2EAB  0008               	return
 12487                           	opt stack 0
 12488                           GLOBAL	__end_of_DelayOff_Main
 12489  2EAC                     	__end_of_DelayOff_Main:
 12490 ;; =============== function _DelayOff_Main ends ============
 12491                           
 12492                           	signat	_DelayOff_Main,88
 12493                           	global	_CC2500_PowerOnInitial
 12494                           psect	text3254,local,class=CODE,delta=2
 12495                           global __ptext3254
 12496  2268                     __ptext3254:
 12497                           
 12498 ;; *************** function _CC2500_PowerOnInitial *****************
 12499 ;; Defined at:
 12500 ;;		line 98 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;		None
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;		None
 12505 ;; Return value:  Size  Location     Type
 12506 ;;		None               void
 12507 ;; Registers used:
 12508 ;;		wreg, status,2, status,0, pclath, cstack
 12509 ;; Tracked objects:
 12510 ;;		On entry : 0/0
 12511 ;;		On exit  : 0/0
 12512 ;;		Unchanged: 0/0
 12513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12518 ;;Total ram usage:        0 bytes
 12519 ;; Hardware stack levels used:    1
 12520 ;; Hardware stack levels required when called:    7
 12521 ;; This function calls:
 12522 ;;		_CC2500_PowerRST
 12523 ;;		_CC2500_InitSetREG
 12524 ;;		_CC2500_InitPATable
 12525 ;;		_CC2500_ClearTXFIFO
 12526 ;;		_CC2500_ClearRXFIFO
 12527 ;;		_CC2500_FrequencyCabr
 12528 ;;		_CC2500_SIDLEMode
 12529 ;; This function is called by:
 12530 ;;		_main
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           psect	text3254
 12534                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 12535                           	line	98
 12536                           	global	__size_of_CC2500_PowerOnInitial
 12537  0016                     	__size_of_CC2500_PowerOnInitial	equ	__end_of_CC2500_PowerOnInitial-_CC2500_PowerOnIniti
                                 al
 12538                           	
 12539  2268                     _CC2500_PowerOnInitial:	
 12540                           	opt	stack 8
 12541                           ; Regs used in _CC2500_PowerOnInitial: [wreg+status,2+status,0+pclath+cstack]
 12542                           	line	99
 12543                           	
 12544  2268                     l24211:	
 12545                           ;CC2500_B1.c: 99: CC2500_PowerRST();
 12546  2268  31A6  266A  31A2   	fcall	_CC2500_PowerRST
 12547                           	line	100
 12548                           ;CC2500_B1.c: 100: CC2500_InitSetREG();
 12549  226B  31A5  253A  31A2   	fcall	_CC2500_InitSetREG
 12550                           	line	101
 12551                           ;CC2500_B1.c: 101: CC2500_InitPATable();
 12552  226E  31A3  23C2  31A2   	fcall	_CC2500_InitPATable
 12553                           	line	102
 12554                           ;CC2500_B1.c: 102: CC2500_ClearTXFIFO();
 12555  2271  31AE  267F  31A2   	fcall	_CC2500_ClearTXFIFO
 12556                           	line	103
 12557                           ;CC2500_B1.c: 103: CC2500_ClearRXFIFO();
 12558  2274  31AE  2684  31A2   	fcall	_CC2500_ClearRXFIFO
 12559                           	line	104
 12560                           ;CC2500_B1.c: 104: CC2500_FrequencyCabr();
 12561  2277  31AF  274E  31A2   	fcall	_CC2500_FrequencyCabr
 12562                           	line	105
 12563                           ;CC2500_B1.c: 105: CC2500_SIDLEMode();
 12564  227A  31AE  2689  31A2   	fcall	_CC2500_SIDLEMode
 12565                           	line	106
 12566                           	
 12567  227D                     l2298:	
 12568  227D  0008               	return
 12569                           	opt stack 0
 12570                           GLOBAL	__end_of_CC2500_PowerOnInitial
 12571  227E                     	__end_of_CC2500_PowerOnInitial:
 12572 ;; =============== function _CC2500_PowerOnInitial ends ============
 12573                           
 12574                           	signat	_CC2500_PowerOnInitial,88
 12575                           	global	_Buzzer_Initialization
 12576                           psect	text3255,local,class=CODE,delta=2
 12577                           global __ptext3255
 12578  2EA2                     __ptext3255:
 12579                           
 12580 ;; *************** function _Buzzer_Initialization *****************
 12581 ;; Defined at:
 12582 ;;		line 20 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;		None
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;		None
 12587 ;; Return value:  Size  Location     Type
 12588 ;;		None               void
 12589 ;; Registers used:
 12590 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12600 ;;Total ram usage:        0 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; Hardware stack levels required when called:    7
 12603 ;; This function calls:
 12604 ;;		_setBuz_Initialization
 12605 ;; This function is called by:
 12606 ;;		_main
 12607 ;; This function uses a non-reentrant model
 12608 ;;
 12609                           psect	text3255
 12610                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 12611                           	line	20
 12612                           	global	__size_of_Buzzer_Initialization
 12613  0005                     	__size_of_Buzzer_Initialization	equ	__end_of_Buzzer_Initialization-_Buzzer_Initializati
                                 on
 12614                           	
 12615  2EA2                     _Buzzer_Initialization:	
 12616                           	opt	stack 8
 12617                           ; Regs used in _Buzzer_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 12618                           	line	22
 12619                           	
 12620  2EA2                     l24209:	
 12621                           ;Buzzer_B1.c: 22: setBuz_Initialization(1);
 12622  2EA2  3001               	movlw	(01h)
 12623  2EA3  31AF  2703  31AE   	fcall	_setBuz_Initialization
 12624                           	line	24
 12625                           	
 12626  2EA6                     l1107:	
 12627  2EA6  0008               	return
 12628                           	opt stack 0
 12629                           GLOBAL	__end_of_Buzzer_Initialization
 12630  2EA7                     	__end_of_Buzzer_Initialization:
 12631 ;; =============== function _Buzzer_Initialization ends ============
 12632                           
 12633                           	signat	_Buzzer_Initialization,88
 12634                           	global	_Sw_OffFunc
 12635                           psect	text3256,local,class=CODE,delta=2
 12636                           global __ptext3256
 12637  11D8                     __ptext3256:
 12638                           
 12639 ;; *************** function _Sw_OffFunc *****************
 12640 ;; Defined at:
 12641 ;;		line 233 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  sw              1    wreg     unsigned char 
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;  sw              1    9[BANK0 ] unsigned char 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;		None               void
 12648 ;; Registers used:
 12649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12657 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 12658 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 12659 ;;Total ram usage:        3 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    6
 12662 ;; This function calls:
 12663 ;;		_setDimmerLights_TriggerAdj
 12664 ;;		_setDimmerLights_AdjGo
 12665 ;;		_setRF_DimmerLights
 12666 ;;		_setTxData
 12667 ;;		_setDimmerLights_Trigger
 12668 ;;		_setDimmerLights_Switch
 12669 ;;		_setDelayOff_GO
 12670 ;; This function is called by:
 12671 ;;		_setSw_Main
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           psect	text3256
 12675                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 12676                           	line	233
 12677                           	global	__size_of_Sw_OffFunc
 12678  0080                     	__size_of_Sw_OffFunc	equ	__end_of_Sw_OffFunc-_Sw_OffFunc
 12679                           	
 12680  11D8                     _Sw_OffFunc:	
 12681                           	opt	stack 7
 12682                           ; Regs used in _Sw_OffFunc: [wreg+fsr1l-status,0+pclath+cstack]
 12683                           ;Sw_OffFunc@sw stored from wreg
 12684  11D8  0020               	movlb 0	; select bank0
 12685  11D9  00A9               	movwf	(Sw_OffFunc@sw)
 12686                           	line	234
 12687                           	
 12688  11DA                     l24189:	
 12689                           ;Switch_B1.c: 234: if(Sw->Flag)
 12690  11DA  086F               	movf	(_Sw),w
 12691  11DB  0086               	movwf	fsr1l
 12692  11DC  3001               	movlw 1	; select bank2/3
 12693  11DD  0087               	movwf fsr1h	
 12694                           	
 12695  11DE  1F81               	btfss	indf1,7
 12696  11DF  29E1               	goto	u7831
 12697  11E0  29E2               	goto	u7830
 12698  11E1                     u7831:
 12699  11E1  2A57               	goto	l14407
 12700  11E2                     u7830:
 12701                           	line	236
 12702                           	
 12703  11E2                     l24191:	
 12704                           ;Switch_B1.c: 235: {
 12705                           ;Switch_B1.c: 236: Sw->Flag=0;
 12706  11E2  086F               	movf	(_Sw),w
 12707  11E3  0086               	movwf	fsr1l
 12708  11E4  3001               	movlw 1	; select bank2/3
 12709  11E5  0087               	movwf fsr1h	
 12710                           	
 12711  11E6  1381               	bcf	indf1,7
 12712                           	line	237
 12713                           ;Switch_B1.c: 237: if(Sw->Status)
 12714  11E7  086F               	movf	(_Sw),w
 12715  11E8  0086               	movwf	fsr1l
 12716  11E9  3001               	movlw 1	; select bank2/3
 12717  11EA  0087               	movwf fsr1h	
 12718                           	
 12719  11EB  1F01               	btfss	indf1,6
 12720  11EC  29EE               	goto	u7841
 12721  11ED  29EF               	goto	u7840
 12722  11EE                     u7841:
 12723  11EE  2A2F               	goto	l24207
 12724  11EF                     u7840:
 12725                           	line	239
 12726                           	
 12727  11EF                     l24193:	
 12728                           ;Switch_B1.c: 238: {
 12729                           ;Switch_B1.c: 239: if(Sw->Adj)
 12730  11EF  086F               	movf	(_Sw),w
 12731  11F0  3E01               	addlw	01h
 12732  11F1  0086               	movwf	fsr1l
 12733  11F2  3001               	movlw 1	; select bank2/3
 12734  11F3  0087               	movwf fsr1h	
 12735                           	
 12736  11F4  1C01               	btfss	indf1,0
 12737  11F5  29F7               	goto	u7851
 12738  11F6  29F8               	goto	u7850
 12739  11F7                     u7851:
 12740  11F7  2A57               	goto	l14407
 12741  11F8                     u7850:
 12742                           	line	241
 12743                           	
 12744  11F8                     l24195:	
 12745                           ;Switch_B1.c: 240: {
 12746                           ;Switch_B1.c: 241: Sw->Adj=0;
 12747  11F8  086F               	movf	(_Sw),w
 12748  11F9  3E01               	addlw	01h
 12749  11FA  0086               	movwf	fsr1l
 12750  11FB  3001               	movlw 1	; select bank2/3
 12751  11FC  0087               	movwf fsr1h	
 12752                           	
 12753  11FD  1001               	bcf	indf1,0
 12754                           	line	242
 12755                           	
 12756  11FE                     l24197:	
 12757                           ;Switch_B1.c: 242: setDimmerLights_TriggerAdj(sw,1);
 12758  11FE  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 12759  11FF  1403               	bsf	status,0
 12760  1200  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 12761  1201  0829               	movf	(Sw_OffFunc@sw),w
 12762  1202  31A1  21A7  3191   	fcall	_setDimmerLights_TriggerAdj
 12763                           	line	243
 12764                           	
 12765  1205                     l24199:	
 12766                           ;Switch_B1.c: 243: setDimmerLights_AdjGo(sw,0);
 12767  1205  0020               	movlb 0	; select bank0
 12768  1206  01A2               	clrf	(?_setDimmerLights_AdjGo)
 12769  1207  0829               	movf	(Sw_OffFunc@sw),w
 12770  1208  31A1  2196  3191   	fcall	_setDimmerLights_AdjGo
 12771                           	line	245
 12772                           	
 12773  120B                     l24201:	
 12774                           ;Switch_B1.c: 245: Product->Data[17]=Product->Data[26+sw];
 12775  120B  0020               	movlb 0	; select bank0
 12776  120C  0829               	movf	(Sw_OffFunc@sw),w
 12777  120D  3E1A               	addlw	01Ah
 12778  120E  077D               	addwf	(_Product),w
 12779  120F  00A7               	movwf	(??_Sw_OffFunc+0)+0
 12780  1210  0827               	movf	0+(??_Sw_OffFunc+0)+0,w
 12781  1211  0086               	movwf	fsr1l
 12782  1212  3001               	movlw 1	; select bank2/3
 12783  1213  0087               	movwf fsr1h	
 12784                           	
 12785  1214  0801               	movf	indf1,w
 12786  1215  00A8               	movwf	(??_Sw_OffFunc+1)+0
 12787  1216  087D               	movf	(_Product),w
 12788  1217  3E11               	addlw	011h
 12789  1218  0086               	movwf	fsr1l
 12790  1219  3001               	movlw 1	; select bank2/3
 12791  121A  0087               	movwf fsr1h	
 12792                           	
 12793  121B  0828               	movf	(??_Sw_OffFunc+1)+0,w
 12794  121C  0081               	movwf	indf1
 12795                           	line	246
 12796                           	
 12797  121D                     l24203:	
 12798                           ;Switch_B1.c: 246: setRF_DimmerLights(sw,Sw->Status);
 12799  121D  086F               	movf	(_Sw),w
 12800  121E  0086               	movwf	fsr1l
 12801  121F  3001               	movlw 1	; select bank2/3
 12802  1220  0087               	movwf fsr1h	
 12803                           	
 12804  1221  3000               	movlw	0
 12805  1222  1B01               	btfsc	indf1,6
 12806  1223  3001               	movlw	1
 12807  1224  00A0               	movwf	(?_setRF_DimmerLights)
 12808  1225  0829               	movf	(Sw_OffFunc@sw),w
 12809  1226  319D  2523  3191   	fcall	_setRF_DimmerLights
 12810                           	line	247
 12811                           	
 12812  1229                     l24205:	
 12813                           ;Switch_B1.c: 247: setTxData(1);
 12814  1229  3001               	movlw	(01h)
 12815  122A  319A  2272  3191   	fcall	_setTxData
 12816  122D  2A57               	goto	l14407
 12817                           	line	248
 12818                           	
 12819  122E                     l14405:	
 12820                           	line	249
 12821                           ;Switch_B1.c: 248: }
 12822                           ;Switch_B1.c: 249: }
 12823  122E  2A57               	goto	l14407
 12824                           	line	250
 12825                           	
 12826  122F                     l14404:	
 12827                           	line	252
 12828                           	
 12829  122F                     l24207:	
 12830                           ;Switch_B1.c: 250: else
 12831                           ;Switch_B1.c: 251: {
 12832                           ;Switch_B1.c: 252: setDimmerLights_Trigger(sw,1);
 12833  122F  0020               	movlb 0	; select bank0
 12834  1230  01A2               	clrf	(?_setDimmerLights_Trigger)
 12835  1231  1403               	bsf	status,0
 12836  1232  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 12837  1233  0829               	movf	(Sw_OffFunc@sw),w
 12838  1234  31A1  2141  3191   	fcall	_setDimmerLights_Trigger
 12839                           	line	253
 12840                           ;Switch_B1.c: 253: setDimmerLights_Switch(sw,0);
 12841  1237  0020               	movlb 0	; select bank0
 12842  1238  01A2               	clrf	(?_setDimmerLights_Switch)
 12843  1239  0829               	movf	(Sw_OffFunc@sw),w
 12844  123A  31A1  2152  3191   	fcall	_setDimmerLights_Switch
 12845                           	line	255
 12846                           ;Switch_B1.c: 255: setRF_DimmerLights(sw,Sw->Status);
 12847  123D  0020               	movlb 0	; select bank0
 12848  123E  086F               	movf	(_Sw),w
 12849  123F  0086               	movwf	fsr1l
 12850  1240  3001               	movlw 1	; select bank2/3
 12851  1241  0087               	movwf fsr1h	
 12852                           	
 12853  1242  3000               	movlw	0
 12854  1243  1B01               	btfsc	indf1,6
 12855  1244  3001               	movlw	1
 12856  1245  00A0               	movwf	(?_setRF_DimmerLights)
 12857  1246  0829               	movf	(Sw_OffFunc@sw),w
 12858  1247  319D  2523  3191   	fcall	_setRF_DimmerLights
 12859                           	line	256
 12860                           ;Switch_B1.c: 256: setDelayOff_GO(sw,0,0);
 12861  124A  0020               	movlb 0	; select bank0
 12862  124B  01A3               	clrf	(?_setDelayOff_GO)
 12863  124C  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 12864  124D  0829               	movf	(Sw_OffFunc@sw),w
 12865  124E  3199  218D  3191   	fcall	_setDelayOff_GO
 12866                           	line	257
 12867                           ;Switch_B1.c: 257: setTxData(1);
 12868  1251  3001               	movlw	(01h)
 12869  1252  319A  2272  3191   	fcall	_setTxData
 12870  1255  2A57               	goto	l14407
 12871                           	line	258
 12872                           	
 12873  1256                     l14406:	
 12874  1256  2A57               	goto	l14407
 12875                           	line	259
 12876                           	
 12877  1257                     l14403:	
 12878                           	line	260
 12879                           	
 12880  1257                     l14407:	
 12881  1257  0008               	return
 12882                           	opt stack 0
 12883                           GLOBAL	__end_of_Sw_OffFunc
 12884  1258                     	__end_of_Sw_OffFunc:
 12885 ;; =============== function _Sw_OffFunc ends ============
 12886                           
 12887                           	signat	_Sw_OffFunc,4216
 12888                           	global	_Sw_AdjFunc
 12889                           psect	text3257,local,class=CODE,delta=2
 12890                           global __ptext3257
 12891  250C                     __ptext3257:
 12892                           
 12893 ;; *************** function _Sw_AdjFunc *****************
 12894 ;; Defined at:
 12895 ;;		line 263 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  sw              1    wreg     unsigned char 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;  sw              1    4[BANK0 ] unsigned char 
 12900 ;; Return value:  Size  Location     Type
 12901 ;;		None               void
 12902 ;; Registers used:
 12903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12904 ;; Tracked objects:
 12905 ;;		On entry : 0/0
 12906 ;;		On exit  : 0/0
 12907 ;;		Unchanged: 0/0
 12908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 12909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 12912 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 12913 ;;Total ram usage:        1 bytes
 12914 ;; Hardware stack levels used:    1
 12915 ;; Hardware stack levels required when called:    6
 12916 ;; This function calls:
 12917 ;;		_setRFSW_Status
 12918 ;;		_setDimmerLights_TriggerAdj
 12919 ;;		_setDimmerLights_AdjGo
 12920 ;; This function is called by:
 12921 ;;		_setSw_Main
 12922 ;; This function uses a non-reentrant model
 12923 ;;
 12924                           psect	text3257
 12925                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 12926                           	line	263
 12927                           	global	__size_of_Sw_AdjFunc
 12928  002E                     	__size_of_Sw_AdjFunc	equ	__end_of_Sw_AdjFunc-_Sw_AdjFunc
 12929                           	
 12930  250C                     _Sw_AdjFunc:	
 12931                           	opt	stack 7
 12932                           ; Regs used in _Sw_AdjFunc: [wreg+fsr1l-status,0+pclath+cstack]
 12933                           ;Sw_AdjFunc@sw stored from wreg
 12934  250C  0020               	movlb 0	; select bank0
 12935  250D  00A4               	movwf	(Sw_AdjFunc@sw)
 12936                           	line	264
 12937                           	
 12938  250E                     l24179:	
 12939                           ;Switch_B1.c: 264: if(Sw->Flag)
 12940  250E  086F               	movf	(_Sw),w
 12941  250F  0086               	movwf	fsr1l
 12942  2510  3001               	movlw 1	; select bank2/3
 12943  2511  0087               	movwf fsr1h	
 12944                           	
 12945  2512  1F81               	btfss	indf1,7
 12946  2513  2D15               	goto	u7821
 12947  2514  2D16               	goto	u7820
 12948  2515                     u7821:
 12949  2515  2D39               	goto	l14411
 12950  2516                     u7820:
 12951                           	line	266
 12952                           	
 12953  2516                     l24181:	
 12954                           ;Switch_B1.c: 265: {
 12955                           ;Switch_B1.c: 266: Sw->Adj=1;
 12956  2516  086F               	movf	(_Sw),w
 12957  2517  3E01               	addlw	01h
 12958  2518  0086               	movwf	fsr1l
 12959  2519  3001               	movlw 1	; select bank2/3
 12960  251A  0087               	movwf fsr1h	
 12961                           	
 12962  251B  1401               	bsf	indf1,0
 12963                           	line	267
 12964                           ;Switch_B1.c: 267: Sw->Status=1;
 12965  251C  086F               	movf	(_Sw),w
 12966  251D  0086               	movwf	fsr1l
 12967  251E  3001               	movlw 1	; select bank2/3
 12968  251F  0087               	movwf fsr1h	
 12969                           	
 12970  2520  1701               	bsf	indf1,6
 12971                           	line	268
 12972                           	
 12973  2521                     l24183:	
 12974                           ;Switch_B1.c: 268: setRFSW_Status(sw,1);
 12975  2521  01A2               	clrf	(?_setRFSW_Status)
 12976  2522  1403               	bsf	status,0
 12977  2523  0DA2               	rlf	(?_setRFSW_Status),f
 12978  2524  0824               	movf	(Sw_AdjFunc@sw),w
 12979  2525  31A0  2090  31A5   	fcall	_setRFSW_Status
 12980                           	line	270
 12981                           	
 12982  2528                     l24185:	
 12983                           ;Switch_B1.c: 270: setDimmerLights_TriggerAdj(sw,1);
 12984  2528  0020               	movlb 0	; select bank0
 12985  2529  01A2               	clrf	(?_setDimmerLights_TriggerAdj)
 12986  252A  1403               	bsf	status,0
 12987  252B  0DA2               	rlf	(?_setDimmerLights_TriggerAdj),f
 12988  252C  0824               	movf	(Sw_AdjFunc@sw),w
 12989  252D  31A1  21A7  31A5   	fcall	_setDimmerLights_TriggerAdj
 12990                           	line	271
 12991                           	
 12992  2530                     l24187:	
 12993                           ;Switch_B1.c: 271: setDimmerLights_AdjGo(sw,1);
 12994  2530  0020               	movlb 0	; select bank0
 12995  2531  01A2               	clrf	(?_setDimmerLights_AdjGo)
 12996  2532  1403               	bsf	status,0
 12997  2533  0DA2               	rlf	(?_setDimmerLights_AdjGo),f
 12998  2534  0824               	movf	(Sw_AdjFunc@sw),w
 12999  2535  31A1  2196  31A5   	fcall	_setDimmerLights_AdjGo
 13000  2538  2D39               	goto	l14411
 13001                           	line	272
 13002                           	
 13003  2539                     l14410:	
 13004                           	line	273
 13005                           	
 13006  2539                     l14411:	
 13007  2539  0008               	return
 13008                           	opt stack 0
 13009                           GLOBAL	__end_of_Sw_AdjFunc
 13010  253A                     	__end_of_Sw_AdjFunc:
 13011 ;; =============== function _Sw_AdjFunc ends ============
 13012                           
 13013                           	signat	_Sw_AdjFunc,4216
 13014                           	global	_Sw_OnFunc
 13015                           psect	text3258,local,class=CODE,delta=2
 13016                           global __ptext3258
 13017  1CC6                     __ptext3258:
 13018                           
 13019 ;; *************** function _Sw_OnFunc *****************
 13020 ;; Defined at:
 13021 ;;		line 211 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;  sw              1    wreg     unsigned char 
 13024 ;; Auto vars:     Size  Location     Type
 13025 ;;  sw              1   14[BANK0 ] unsigned char 
 13026 ;; Return value:  Size  Location     Type
 13027 ;;		None               void
 13028 ;; Registers used:
 13029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13038 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13039 ;;Total ram usage:        1 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:    6
 13042 ;; This function calls:
 13043 ;;		_setBuz
 13044 ;;		_setRFSW_Status
 13045 ;;		_setDimmerLights_Trigger
 13046 ;;		_setDimmerLights_Switch
 13047 ;;		_setRF_DimmerLights
 13048 ;;		_setTxData
 13049 ;; This function is called by:
 13050 ;;		_setSw_Main
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           psect	text3258
 13054                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13055                           	line	211
 13056                           	global	__size_of_Sw_OnFunc
 13057  005D                     	__size_of_Sw_OnFunc	equ	__end_of_Sw_OnFunc-_Sw_OnFunc
 13058                           	
 13059  1CC6                     _Sw_OnFunc:	
 13060                           	opt	stack 7
 13061                           ; Regs used in _Sw_OnFunc: [wreg+fsr1l-status,0+pclath+cstack]
 13062                           ;Sw_OnFunc@sw stored from wreg
 13063  1CC6  0020               	movlb 0	; select bank0
 13064  1CC7  00AE               	movwf	(Sw_OnFunc@sw)
 13065                           	line	212
 13066                           	
 13067  1CC8                     l24157:	
 13068                           ;Switch_B1.c: 212: Sw->Flag=1;
 13069  1CC8  086F               	movf	(_Sw),w
 13070  1CC9  0086               	movwf	fsr1l
 13071  1CCA  3001               	movlw 1	; select bank2/3
 13072  1CCB  0087               	movwf fsr1h	
 13073                           	
 13074  1CCC  1781               	bsf	indf1,7
 13075                           	line	213
 13076                           	
 13077  1CCD                     l24159:	
 13078                           ;Switch_B1.c: 213: setBuz(1,1,100);
 13079  1CCD  01A9               	clrf	(?_setBuz)
 13080  1CCE  1403               	bsf	status,0
 13081  1CCF  0DA9               	rlf	(?_setBuz),f
 13082  1CD0  3064               	movlw	low(064h)
 13083  1CD1  00AA               	movwf	0+(?_setBuz)+01h
 13084  1CD2  3000               	movlw	high(064h)
 13085  1CD3  00AB               	movwf	(0+(?_setBuz)+01h)+1
 13086  1CD4  3001               	movlw	(01h)
 13087  1CD5  3196  2617  319C   	fcall	_setBuz
 13088                           	line	214
 13089                           	
 13090  1CD8                     l24161:	
 13091                           ;Switch_B1.c: 214: if(!Sw->Status)
 13092  1CD8  0020               	movlb 0	; select bank0
 13093  1CD9  086F               	movf	(_Sw),w
 13094  1CDA  0086               	movwf	fsr1l
 13095  1CDB  3001               	movlw 1	; select bank2/3
 13096  1CDC  0087               	movwf fsr1h	
 13097                           	
 13098  1CDD  1B01               	btfsc	indf1,6
 13099  1CDE  2CE0               	goto	u7811
 13100  1CDF  2CE1               	goto	u7810
 13101  1CE0                     u7811:
 13102  1CE0  2D0F               	goto	l24175
 13103  1CE1                     u7810:
 13104                           	line	216
 13105                           	
 13106  1CE1                     l24163:	
 13107                           ;Switch_B1.c: 215: {
 13108                           ;Switch_B1.c: 216: Sw->Status=1;
 13109  1CE1  086F               	movf	(_Sw),w
 13110  1CE2  0086               	movwf	fsr1l
 13111  1CE3  3001               	movlw 1	; select bank2/3
 13112  1CE4  0087               	movwf fsr1h	
 13113                           	
 13114  1CE5  1701               	bsf	indf1,6
 13115                           	line	217
 13116                           	
 13117  1CE6                     l24165:	
 13118                           ;Switch_B1.c: 217: setRFSW_Status(sw,1);
 13119  1CE6  01A2               	clrf	(?_setRFSW_Status)
 13120  1CE7  1403               	bsf	status,0
 13121  1CE8  0DA2               	rlf	(?_setRFSW_Status),f
 13122  1CE9  082E               	movf	(Sw_OnFunc@sw),w
 13123  1CEA  31A0  2090  319C   	fcall	_setRFSW_Status
 13124                           	line	219
 13125                           	
 13126  1CED                     l24167:	
 13127                           ;Switch_B1.c: 219: setDimmerLights_Trigger(sw,1);
 13128  1CED  0020               	movlb 0	; select bank0
 13129  1CEE  01A2               	clrf	(?_setDimmerLights_Trigger)
 13130  1CEF  1403               	bsf	status,0
 13131  1CF0  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 13132  1CF1  082E               	movf	(Sw_OnFunc@sw),w
 13133  1CF2  31A1  2141  319C   	fcall	_setDimmerLights_Trigger
 13134                           	line	220
 13135                           	
 13136  1CF5                     l24169:	
 13137                           ;Switch_B1.c: 220: setDimmerLights_Switch(sw,1);
 13138  1CF5  0020               	movlb 0	; select bank0
 13139  1CF6  01A2               	clrf	(?_setDimmerLights_Switch)
 13140  1CF7  1403               	bsf	status,0
 13141  1CF8  0DA2               	rlf	(?_setDimmerLights_Switch),f
 13142  1CF9  082E               	movf	(Sw_OnFunc@sw),w
 13143  1CFA  31A1  2152  319C   	fcall	_setDimmerLights_Switch
 13144                           	line	222
 13145                           	
 13146  1CFD                     l24171:	
 13147                           ;Switch_B1.c: 222: setRF_DimmerLights(sw,Sw->Status);
 13148  1CFD  0020               	movlb 0	; select bank0
 13149  1CFE  086F               	movf	(_Sw),w
 13150  1CFF  0086               	movwf	fsr1l
 13151  1D00  3001               	movlw 1	; select bank2/3
 13152  1D01  0087               	movwf fsr1h	
 13153                           	
 13154  1D02  3000               	movlw	0
 13155  1D03  1B01               	btfsc	indf1,6
 13156  1D04  3001               	movlw	1
 13157  1D05  00A0               	movwf	(?_setRF_DimmerLights)
 13158  1D06  082E               	movf	(Sw_OnFunc@sw),w
 13159  1D07  319D  2523  319C   	fcall	_setRF_DimmerLights
 13160                           	line	223
 13161                           	
 13162  1D0A                     l24173:	
 13163                           ;Switch_B1.c: 223: setTxData(1);
 13164  1D0A  3001               	movlw	(01h)
 13165  1D0B  319A  2272  319C   	fcall	_setTxData
 13166                           	line	224
 13167                           ;Switch_B1.c: 224: }
 13168  1D0E  2D22               	goto	l14400
 13169                           	line	225
 13170                           	
 13171  1D0F                     l14398:	
 13172                           	line	227
 13173                           	
 13174  1D0F                     l24175:	
 13175                           ;Switch_B1.c: 225: else
 13176                           ;Switch_B1.c: 226: {
 13177                           ;Switch_B1.c: 227: Sw->Status=0;
 13178  1D0F  0020               	movlb 0	; select bank0
 13179  1D10  086F               	movf	(_Sw),w
 13180  1D11  0086               	movwf	fsr1l
 13181  1D12  3001               	movlw 1	; select bank2/3
 13182  1D13  0087               	movwf fsr1h	
 13183                           	
 13184  1D14  1301               	bcf	indf1,6
 13185                           	line	228
 13186                           	
 13187  1D15                     l24177:	
 13188                           ;Switch_B1.c: 228: setRFSW_Status(sw,Sw->Status);
 13189  1D15  086F               	movf	(_Sw),w
 13190  1D16  0086               	movwf	fsr1l
 13191  1D17  3001               	movlw 1	; select bank2/3
 13192  1D18  0087               	movwf fsr1h	
 13193                           	
 13194  1D19  3000               	movlw	0
 13195  1D1A  1B01               	btfsc	indf1,6
 13196  1D1B  3001               	movlw	1
 13197  1D1C  00A2               	movwf	(?_setRFSW_Status)
 13198  1D1D  082E               	movf	(Sw_OnFunc@sw),w
 13199  1D1E  31A0  2090  319C   	fcall	_setRFSW_Status
 13200  1D21  2D22               	goto	l14400
 13201                           	line	229
 13202                           	
 13203  1D22                     l14399:	
 13204                           	line	230
 13205                           	
 13206  1D22                     l14400:	
 13207  1D22  0008               	return
 13208                           	opt stack 0
 13209                           GLOBAL	__end_of_Sw_OnFunc
 13210  1D23                     	__end_of_Sw_OnFunc:
 13211 ;; =============== function _Sw_OnFunc ends ============
 13212                           
 13213                           	signat	_Sw_OnFunc,4216
 13214                           	global	_setSw_Initialization
 13215                           psect	text3259,local,class=CODE,delta=2
 13216                           global __ptext3259
 13217  2201                     __ptext3259:
 13218                           
 13219 ;; *************** function _setSw_Initialization *****************
 13220 ;; Defined at:
 13221 ;;		line 73 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  sw              1    wreg     unsigned char 
 13224 ;; Auto vars:     Size  Location     Type
 13225 ;;  sw              1    4[BANK0 ] unsigned char 
 13226 ;; Return value:  Size  Location     Type
 13227 ;;		None               void
 13228 ;; Registers used:
 13229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13239 ;;Total ram usage:        1 bytes
 13240 ;; Hardware stack levels used:    1
 13241 ;; Hardware stack levels required when called:    6
 13242 ;; This function calls:
 13243 ;;		_setLED
 13244 ;; This function is called by:
 13245 ;;		_Switch_Initialization
 13246 ;; This function uses a non-reentrant model
 13247 ;;
 13248                           psect	text3259
 13249                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 13250                           	line	73
 13251                           	global	__size_of_setSw_Initialization
 13252  0013                     	__size_of_setSw_Initialization	equ	__end_of_setSw_Initialization-_setSw_Initialization
 13253                           	
 13254  2201                     _setSw_Initialization:	
 13255                           	opt	stack 8
 13256                           ; Regs used in _setSw_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 13257                           ;setSw_Initialization@sw stored from wreg
 13258  2201  0020               	movlb 0	; select bank0
 13259  2202  00A4               	movwf	(setSw_Initialization@sw)
 13260                           	line	74
 13261                           	
 13262  2203                     l24155:	
 13263                           ;Switch_B1.c: 74: setLED(sw,1);
 13264  2203  01A2               	clrf	(?_setLED)
 13265  2204  1403               	bsf	status,0
 13266  2205  0DA2               	rlf	(?_setLED),f
 13267  2206  0824               	movf	(setSw_Initialization@sw),w
 13268  2207  3193  23DD  31A2   	fcall	_setLED
 13269                           	line	76
 13270                           ;Switch_B1.c: 76: setLED(sw+1,1);
 13271  220A  0020               	movlb 0	; select bank0
 13272  220B  01A2               	clrf	(?_setLED)
 13273  220C  1403               	bsf	status,0
 13274  220D  0DA2               	rlf	(?_setLED),f
 13275  220E  0824               	movf	(setSw_Initialization@sw),w
 13276  220F  3E01               	addlw	01h
 13277  2210  3193  23DD  31A2   	fcall	_setLED
 13278                           	line	78
 13279                           	
 13280  2213                     l14367:	
 13281  2213  0008               	return
 13282                           	opt stack 0
 13283                           GLOBAL	__end_of_setSw_Initialization
 13284  2214                     	__end_of_setSw_Initialization:
 13285 ;; =============== function _setSw_Initialization ends ============
 13286                           
 13287                           	signat	_setSw_Initialization,4216
 13288                           	global	_setRFSW_Control
 13289                           psect	text3260,local,class=CODE,delta=2
 13290                           global __ptext3260
 13291  0805                     __ptext3260:
 13292                           
 13293 ;; *************** function _setRFSW_Control *****************
 13294 ;; Defined at:
 13295 ;;		line 357 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  sw              1    wreg     unsigned char 
 13298 ;; Auto vars:     Size  Location     Type
 13299 ;;  sw              1   16[BANK0 ] unsigned char 
 13300 ;; Return value:  Size  Location     Type
 13301 ;;		None               void
 13302 ;; Registers used:
 13303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13304 ;; Tracked objects:
 13305 ;;		On entry : 0/0
 13306 ;;		On exit  : 0/0
 13307 ;;		Unchanged: 0/0
 13308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13311 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13312 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 13313 ;;Total ram usage:        3 bytes
 13314 ;; Hardware stack levels used:    1
 13315 ;; Hardware stack levels required when called:    6
 13316 ;; This function calls:
 13317 ;;		_RfSWPointSelect
 13318 ;;		_setDelayOff_GO
 13319 ;;		_setSw_Status
 13320 ;;		_setDimmerLights_Trigger
 13321 ;;		_setDimmerLights_Switch
 13322 ;;		_setRF_DimmerLights
 13323 ;;		_setBuz
 13324 ;;		_setTxData
 13325 ;; This function is called by:
 13326 ;;		_setControl_Lights_Table
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           psect	text3260
 13330                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 13331                           	line	357
 13332                           	global	__size_of_setRFSW_Control
 13333  00AC                     	__size_of_setRFSW_Control	equ	__end_of_setRFSW_Control-_setRFSW_Control
 13334                           	
 13335  0805                     _setRFSW_Control:	
 13336                           	opt	stack 5
 13337                           ; Regs used in _setRFSW_Control: [wreg+fsr1l-status,0+pclath+cstack]
 13338                           ;setRFSW_Control@sw stored from wreg
 13339  0805  0020               	movlb 0	; select bank0
 13340  0806  00B0               	movwf	(setRFSW_Control@sw)
 13341                           	line	358
 13342                           	
 13343  0807                     l24115:	
 13344                           ;RF_Control_B1.c: 358: RfSWPointSelect(sw);
 13345  0807  0830               	movf	(setRFSW_Control@sw),w
 13346  0808  31A0  2043  3188   	fcall	_RfSWPointSelect
 13347                           	line	359
 13348                           	
 13349  080B                     l24117:	
 13350                           ;RF_Control_B1.c: 359: if(RF_Data[16] == 0x80)
 13351  080B  0021               	movlb 1	; select bank1
 13352  080C  0830               	movf	0+(_RF_Data)^080h+010h,w
 13353  080D  3A80               	xorlw	080h&0ffh
 13354  080E  1D03               	skipz
 13355  080F  2811               	goto	u7781
 13356  0810  2812               	goto	u7780
 13357  0811                     u7781:
 13358  0811  282F               	goto	l24123
 13359  0812                     u7780:
 13360                           	line	361
 13361                           	
 13362  0812                     l24119:	
 13363                           ;RF_Control_B1.c: 360: {
 13364                           ;RF_Control_B1.c: 361: setDelayOff_GO(sw,1,RF_Data[17]);
 13365  0812  0020               	movlb 0	; select bank0
 13366  0813  01A3               	clrf	(?_setDelayOff_GO)
 13367  0814  1403               	bsf	status,0
 13368  0815  0DA3               	rlf	(?_setDelayOff_GO),f
 13369  0816  0021               	movlb 1	; select bank1
 13370  0817  0831               	movf	0+(_RF_Data)^080h+011h,w
 13371  0818  0020               	movlb 0	; select bank0
 13372  0819  00AE               	movwf	(??_setRFSW_Control+0)+0
 13373  081A  082E               	movf	(??_setRFSW_Control+0)+0,w
 13374  081B  00A4               	movwf	0+(?_setDelayOff_GO)+01h
 13375  081C  0830               	movf	(setRFSW_Control@sw),w
 13376  081D  3199  218D  3188   	fcall	_setDelayOff_GO
 13377                           	line	362
 13378                           	
 13379  0820                     l24121:	
 13380                           ;RF_Control_B1.c: 362: Product->Data[26+sw]=RF_Data[17];
 13381  0820  0021               	movlb 1	; select bank1
 13382  0821  0831               	movf	0+(_RF_Data)^080h+011h,w
 13383  0822  0020               	movlb 0	; select bank0
 13384  0823  00AE               	movwf	(??_setRFSW_Control+0)+0
 13385  0824  0830               	movf	(setRFSW_Control@sw),w
 13386  0825  3E1A               	addlw	01Ah
 13387  0826  077D               	addwf	(_Product),w
 13388  0827  00AF               	movwf	(??_setRFSW_Control+1)+0
 13389  0828  082F               	movf	0+(??_setRFSW_Control+1)+0,w
 13390  0829  0086               	movwf	fsr1l
 13391  082A  3001               	movlw 1	; select bank2/3
 13392  082B  0087               	movwf fsr1h	
 13393                           	
 13394  082C  082E               	movf	(??_setRFSW_Control+0)+0,w
 13395  082D  0081               	movwf	indf1
 13396  082E  282F               	goto	l24123
 13397                           	line	363
 13398                           	
 13399  082F                     l13192:	
 13400                           	line	364
 13401                           	
 13402  082F                     l24123:	
 13403                           ;RF_Control_B1.c: 363: }
 13404                           ;RF_Control_B1.c: 364: if(RFSW->Status == 0)
 13405  082F  0021               	movlb 1	; select bank1
 13406  0830  083F               	movf	(_RFSW)^080h,w
 13407  0831  0086               	movwf	fsr1l
 13408  0832  0187               	clrf fsr1h	
 13409                           	
 13410  0833  1801               	btfsc	indf1,0
 13411  0834  2836               	goto	u7791
 13412  0835  2837               	goto	u7790
 13413  0836                     u7791:
 13414  0836  2861               	goto	l24135
 13415  0837                     u7790:
 13416                           	line	366
 13417                           	
 13418  0837                     l24125:	
 13419                           ;RF_Control_B1.c: 365: {
 13420                           ;RF_Control_B1.c: 366: RFSW->Status=1;
 13421  0837  083F               	movf	(_RFSW)^080h,w
 13422  0838  0086               	movwf	fsr1l
 13423  0839  0187               	clrf fsr1h	
 13424                           	
 13425  083A  1401               	bsf	indf1,0
 13426                           	line	367
 13427                           	
 13428  083B                     l24127:	
 13429                           ;RF_Control_B1.c: 367: setSw_Status(sw,1);
 13430  083B  0020               	movlb 0	; select bank0
 13431  083C  01A2               	clrf	(?_setSw_Status)
 13432  083D  1403               	bsf	status,0
 13433  083E  0DA2               	rlf	(?_setSw_Status),f
 13434  083F  0830               	movf	(setRFSW_Control@sw),w
 13435  0840  31A0  2080  3188   	fcall	_setSw_Status
 13436                           	line	369
 13437                           	
 13438  0843                     l24129:	
 13439                           ;RF_Control_B1.c: 369: setDimmerLights_Trigger(sw,1);
 13440  0843  0020               	movlb 0	; select bank0
 13441  0844  01A2               	clrf	(?_setDimmerLights_Trigger)
 13442  0845  1403               	bsf	status,0
 13443  0846  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 13444  0847  0830               	movf	(setRFSW_Control@sw),w
 13445  0848  31A1  2141  3188   	fcall	_setDimmerLights_Trigger
 13446                           	line	370
 13447                           	
 13448  084B                     l24131:	
 13449                           ;RF_Control_B1.c: 370: setDimmerLights_Switch(sw,1);
 13450  084B  0020               	movlb 0	; select bank0
 13451  084C  01A2               	clrf	(?_setDimmerLights_Switch)
 13452  084D  1403               	bsf	status,0
 13453  084E  0DA2               	rlf	(?_setDimmerLights_Switch),f
 13454  084F  0830               	movf	(setRFSW_Control@sw),w
 13455  0850  31A1  2152  3188   	fcall	_setDimmerLights_Switch
 13456                           	line	371
 13457                           	
 13458  0853                     l24133:	
 13459                           ;RF_Control_B1.c: 371: setRF_DimmerLights(sw,RFSW->Status);
 13460  0853  0021               	movlb 1	; select bank1
 13461  0854  083F               	movf	(_RFSW)^080h,w
 13462  0855  0086               	movwf	fsr1l
 13463  0856  0187               	clrf fsr1h	
 13464                           	
 13465  0857  3000               	movlw	0
 13466  0858  1801               	btfsc	indf1,0
 13467  0859  3001               	movlw	1
 13468  085A  0020               	movlb 0	; select bank0
 13469  085B  00A0               	movwf	(?_setRF_DimmerLights)
 13470  085C  0830               	movf	(setRFSW_Control@sw),w
 13471  085D  319D  2523  3188   	fcall	_setRF_DimmerLights
 13472                           	line	372
 13473                           ;RF_Control_B1.c: 372: }
 13474  0860  28A0               	goto	l24151
 13475                           	line	373
 13476                           	
 13477  0861                     l13193:	
 13478                           	line	375
 13479                           	
 13480  0861                     l24135:	
 13481                           ;RF_Control_B1.c: 373: else
 13482                           ;RF_Control_B1.c: 374: {
 13483                           ;RF_Control_B1.c: 375: if(RF_Data[16] == 0x80)
 13484  0861  0021               	movlb 1	; select bank1
 13485  0862  0830               	movf	0+(_RF_Data)^080h+010h,w
 13486  0863  3A80               	xorlw	080h&0ffh
 13487  0864  1D03               	skipz
 13488  0865  2867               	goto	u7801
 13489  0866  2868               	goto	u7800
 13490  0867                     u7801:
 13491  0867  2871               	goto	l24139
 13492  0868                     u7800:
 13493                           	line	377
 13494                           	
 13495  0868                     l24137:	
 13496                           ;RF_Control_B1.c: 376: {
 13497                           ;RF_Control_B1.c: 377: setRF_DimmerLights(sw,1);
 13498  0868  0020               	movlb 0	; select bank0
 13499  0869  01A0               	clrf	(?_setRF_DimmerLights)
 13500  086A  1403               	bsf	status,0
 13501  086B  0DA0               	rlf	(?_setRF_DimmerLights),f
 13502  086C  0830               	movf	(setRFSW_Control@sw),w
 13503  086D  319D  2523  3188   	fcall	_setRF_DimmerLights
 13504                           	line	378
 13505                           ;RF_Control_B1.c: 378: }
 13506  0870  28A0               	goto	l24151
 13507                           	line	379
 13508                           	
 13509  0871                     l13195:	
 13510                           	line	381
 13511                           	
 13512  0871                     l24139:	
 13513                           ;RF_Control_B1.c: 379: else
 13514                           ;RF_Control_B1.c: 380: {
 13515                           ;RF_Control_B1.c: 381: RFSW->Status=0;
 13516  0871  0021               	movlb 1	; select bank1
 13517  0872  083F               	movf	(_RFSW)^080h,w
 13518  0873  0086               	movwf	fsr1l
 13519  0874  0187               	clrf fsr1h	
 13520                           	
 13521  0875  1001               	bcf	indf1,0
 13522                           	line	382
 13523                           	
 13524  0876                     l24141:	
 13525                           ;RF_Control_B1.c: 382: setSw_Status(sw,0);
 13526  0876  0020               	movlb 0	; select bank0
 13527  0877  01A2               	clrf	(?_setSw_Status)
 13528  0878  0830               	movf	(setRFSW_Control@sw),w
 13529  0879  31A0  2080  3188   	fcall	_setSw_Status
 13530                           	line	384
 13531                           	
 13532  087C                     l24143:	
 13533                           ;RF_Control_B1.c: 384: setDimmerLights_Trigger(sw,1);
 13534  087C  0020               	movlb 0	; select bank0
 13535  087D  01A2               	clrf	(?_setDimmerLights_Trigger)
 13536  087E  1403               	bsf	status,0
 13537  087F  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 13538  0880  0830               	movf	(setRFSW_Control@sw),w
 13539  0881  31A1  2141  3188   	fcall	_setDimmerLights_Trigger
 13540                           	line	385
 13541                           	
 13542  0884                     l24145:	
 13543                           ;RF_Control_B1.c: 385: setDimmerLights_Switch(sw,RFSW->Status);
 13544  0884  0021               	movlb 1	; select bank1
 13545  0885  083F               	movf	(_RFSW)^080h,w
 13546  0886  0086               	movwf	fsr1l
 13547  0887  0187               	clrf fsr1h	
 13548                           	
 13549  0888  3000               	movlw	0
 13550  0889  1801               	btfsc	indf1,0
 13551  088A  3001               	movlw	1
 13552  088B  0020               	movlb 0	; select bank0
 13553  088C  00A2               	movwf	(?_setDimmerLights_Switch)
 13554  088D  0830               	movf	(setRFSW_Control@sw),w
 13555  088E  31A1  2152  3188   	fcall	_setDimmerLights_Switch
 13556                           	line	387
 13557                           	
 13558  0891                     l24147:	
 13559                           ;RF_Control_B1.c: 387: setRF_DimmerLights(sw,0);
 13560  0891  0020               	movlb 0	; select bank0
 13561  0892  01A0               	clrf	(?_setRF_DimmerLights)
 13562  0893  0830               	movf	(setRFSW_Control@sw),w
 13563  0894  319D  2523  3188   	fcall	_setRF_DimmerLights
 13564                           	line	388
 13565                           	
 13566  0897                     l24149:	
 13567                           ;RF_Control_B1.c: 388: setDelayOff_GO(sw,0,0);
 13568  0897  0020               	movlb 0	; select bank0
 13569  0898  01A3               	clrf	(?_setDelayOff_GO)
 13570  0899  01A4               	clrf	0+(?_setDelayOff_GO)+01h
 13571  089A  0830               	movf	(setRFSW_Control@sw),w
 13572  089B  3199  218D  3188   	fcall	_setDelayOff_GO
 13573  089E  28A0               	goto	l24151
 13574                           	line	389
 13575                           	
 13576  089F                     l13196:	
 13577  089F  28A0               	goto	l24151
 13578                           	line	390
 13579                           	
 13580  08A0                     l13194:	
 13581                           	line	391
 13582                           	
 13583  08A0                     l24151:	
 13584                           ;RF_Control_B1.c: 389: }
 13585                           ;RF_Control_B1.c: 390: }
 13586                           ;RF_Control_B1.c: 391: setBuz(1,1,100);
 13587  08A0  0020               	movlb 0	; select bank0
 13588  08A1  01A9               	clrf	(?_setBuz)
 13589  08A2  1403               	bsf	status,0
 13590  08A3  0DA9               	rlf	(?_setBuz),f
 13591  08A4  3064               	movlw	low(064h)
 13592  08A5  00AA               	movwf	0+(?_setBuz)+01h
 13593  08A6  3000               	movlw	high(064h)
 13594  08A7  00AB               	movwf	(0+(?_setBuz)+01h)+1
 13595  08A8  3001               	movlw	(01h)
 13596  08A9  3196  2617  3188   	fcall	_setBuz
 13597                           	line	392
 13598                           	
 13599  08AC                     l24153:	
 13600                           ;RF_Control_B1.c: 392: setTxData(1);
 13601  08AC  3001               	movlw	(01h)
 13602  08AD  319A  2272  3188   	fcall	_setTxData
 13603                           	line	393
 13604                           	
 13605  08B0                     l13197:	
 13606  08B0  0008               	return
 13607                           	opt stack 0
 13608                           GLOBAL	__end_of_setRFSW_Control
 13609  08B1                     	__end_of_setRFSW_Control:
 13610 ;; =============== function _setRFSW_Control ends ============
 13611                           
 13612                           	signat	_setRFSW_Control,4216
 13613                           	global	_setLog_Code
 13614                           psect	text3261,local,class=CODE,delta=2
 13615                           global __ptext3261
 13616  19D6                     __ptext3261:
 13617                           
 13618 ;; *************** function _setLog_Code *****************
 13619 ;; Defined at:
 13620 ;;		line 247 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;  rf              1    wreg     unsigned char 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;  rf              1   15[BANK0 ] unsigned char 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;		None               void
 13627 ;; Registers used:
 13628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/0
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13637 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 13638 ;;Total ram usage:        2 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    6
 13641 ;; This function calls:
 13642 ;;		_RfPointSelect
 13643 ;;		_setBuz
 13644 ;; This function is called by:
 13645 ;;		_getRxData
 13646 ;; This function uses a non-reentrant model
 13647 ;;
 13648                           psect	text3261
 13649                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 13650                           	line	247
 13651                           	global	__size_of_setLog_Code
 13652  004D                     	__size_of_setLog_Code	equ	__end_of_setLog_Code-_setLog_Code
 13653                           	
 13654  19D6                     _setLog_Code:	
 13655                           	opt	stack 6
 13656                           ; Regs used in _setLog_Code: [wreg+fsr1l-status,0+pclath+cstack]
 13657                           ;setLog_Code@rf stored from wreg
 13658  19D6  0020               	movlb 0	; select bank0
 13659  19D7  00AF               	movwf	(setLog_Code@rf)
 13660                           	line	248
 13661                           	
 13662  19D8                     l24099:	
 13663                           ;RF_Control_B1.c: 248: RfPointSelect(rf);
 13664  19D8  082F               	movf	(setLog_Code@rf),w
 13665  19D9  31A0  2034  3199   	fcall	_RfPointSelect
 13666                           	line	249
 13667                           	
 13668  19DC                     l24101:	
 13669                           ;RF_Control_B1.c: 249: Product->Data[12]=RF_Data[12];
 13670  19DC  0021               	movlb 1	; select bank1
 13671  19DD  082C               	movf	0+(_RF_Data)^080h+0Ch,w
 13672  19DE  0020               	movlb 0	; select bank0
 13673  19DF  00AE               	movwf	(??_setLog_Code+0)+0
 13674  19E0  087D               	movf	(_Product),w
 13675  19E1  3E0C               	addlw	0Ch
 13676  19E2  0086               	movwf	fsr1l
 13677  19E3  3001               	movlw 1	; select bank2/3
 13678  19E4  0087               	movwf fsr1h	
 13679                           	
 13680  19E5  082E               	movf	(??_setLog_Code+0)+0,w
 13681  19E6  0081               	movwf	indf1
 13682                           	line	250
 13683                           	
 13684  19E7                     l24103:	
 13685                           ;RF_Control_B1.c: 250: Product->Data[13]=RF_Data[13];
 13686  19E7  0021               	movlb 1	; select bank1
 13687  19E8  082D               	movf	0+(_RF_Data)^080h+0Dh,w
 13688  19E9  0020               	movlb 0	; select bank0
 13689  19EA  00AE               	movwf	(??_setLog_Code+0)+0
 13690  19EB  087D               	movf	(_Product),w
 13691  19EC  3E0D               	addlw	0Dh
 13692  19ED  0086               	movwf	fsr1l
 13693  19EE  3001               	movlw 1	; select bank2/3
 13694  19EF  0087               	movwf fsr1h	
 13695                           	
 13696  19F0  082E               	movf	(??_setLog_Code+0)+0,w
 13697  19F1  0081               	movwf	indf1
 13698                           	line	251
 13699                           	
 13700  19F2                     l24105:	
 13701                           ;RF_Control_B1.c: 251: Product->Data[14]=RF_Data[14];
 13702  19F2  0021               	movlb 1	; select bank1
 13703  19F3  082E               	movf	0+(_RF_Data)^080h+0Eh,w
 13704  19F4  0020               	movlb 0	; select bank0
 13705  19F5  00AE               	movwf	(??_setLog_Code+0)+0
 13706  19F6  087D               	movf	(_Product),w
 13707  19F7  3E0E               	addlw	0Eh
 13708  19F8  0086               	movwf	fsr1l
 13709  19F9  3001               	movlw 1	; select bank2/3
 13710  19FA  0087               	movwf fsr1h	
 13711                           	
 13712  19FB  082E               	movf	(??_setLog_Code+0)+0,w
 13713  19FC  0081               	movwf	indf1
 13714                           	line	252
 13715                           	
 13716  19FD                     l24107:	
 13717                           ;RF_Control_B1.c: 252: setBuz(1,1,100);
 13718  19FD  01A9               	clrf	(?_setBuz)
 13719  19FE  1403               	bsf	status,0
 13720  19FF  0DA9               	rlf	(?_setBuz),f
 13721  1A00  3064               	movlw	low(064h)
 13722  1A01  00AA               	movwf	0+(?_setBuz)+01h
 13723  1A02  3000               	movlw	high(064h)
 13724  1A03  00AB               	movwf	(0+(?_setBuz)+01h)+1
 13725  1A04  3001               	movlw	(01h)
 13726  1A05  3196  2617  3199   	fcall	_setBuz
 13727                           	line	253
 13728                           	
 13729  1A08                     l24109:	
 13730                           ;RF_Control_B1.c: 253: RF->Learn=0;
 13731  1A08  0021               	movlb 1	; select bank1
 13732  1A09  083E               	movf	(_RF)^080h,w
 13733  1A0A  0086               	movwf	fsr1l
 13734  1A0B  0187               	clrf fsr1h	
 13735                           	
 13736  1A0C  1301               	bcf	indf1,6
 13737                           	line	254
 13738                           	
 13739  1A0D                     l24111:	
 13740                           ;RF_Control_B1.c: 254: if(TMain->First)
 13741  1A0D  086E               	movf	(_TMain)^080h,w
 13742  1A0E  3E03               	addlw	03h
 13743  1A0F  0086               	movwf	fsr1l
 13744  1A10  3001               	movlw 1	; select bank2/3
 13745  1A11  0087               	movwf fsr1h	
 13746                           	
 13747  1A12  1C81               	btfss	indf1,1
 13748  1A13  2A15               	goto	u7771
 13749  1A14  2A16               	goto	u7770
 13750  1A15                     u7771:
 13751  1A15  2A1C               	goto	l13174
 13752  1A16                     u7770:
 13753                           	line	256
 13754                           	
 13755  1A16                     l24113:	
 13756                           ;RF_Control_B1.c: 255: {
 13757                           ;RF_Control_B1.c: 256: Memory->LoopSave=1;
 13758  1A16  086D               	movf	(_Memory)^080h,w
 13759  1A17  3E22               	addlw	022h
 13760  1A18  0086               	movwf	fsr1l
 13761  1A19  3001               	movlw 1	; select bank2/3
 13762  1A1A  0087               	movwf fsr1h	
 13763                           	
 13764  1A1B  1501               	bsf	indf1,2
 13765                           	line	257
 13766                           	
 13767  1A1C                     l13174:	
 13768                           	line	258
 13769                           ;RF_Control_B1.c: 257: }
 13770                           ;RF_Control_B1.c: 258: Memory->Modify=1;
 13771  1A1C  086D               	movf	(_Memory)^080h,w
 13772  1A1D  3E22               	addlw	022h
 13773  1A1E  0086               	movwf	fsr1l
 13774  1A1F  3001               	movlw 1	; select bank2/3
 13775  1A20  0087               	movwf fsr1h	
 13776                           	
 13777  1A21  1401               	bsf	indf1,0
 13778                           	line	259
 13779                           	
 13780  1A22                     l13175:	
 13781  1A22  0008               	return
 13782                           	opt stack 0
 13783                           GLOBAL	__end_of_setLog_Code
 13784  1A23                     	__end_of_setLog_Code:
 13785 ;; =============== function _setLog_Code ends ============
 13786                           
 13787                           	signat	_setLog_Code,4216
 13788                           	global	_RF_RxDisable
 13789                           psect	text3262,local,class=CODE,delta=2
 13790                           global __ptext3262
 13791  25FE                     __ptext3262:
 13792                           
 13793 ;; *************** function _RF_RxDisable *****************
 13794 ;; Defined at:
 13795 ;;		line 190 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;  rf              1    wreg     unsigned char 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;  rf              1    4[BANK0 ] unsigned char 
 13800 ;; Return value:  Size  Location     Type
 13801 ;;		None               void
 13802 ;; Registers used:
 13803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13812 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 13813 ;;Total ram usage:        1 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:    6
 13816 ;; This function calls:
 13817 ;;		_RfPointSelect
 13818 ;;		_CC2500_WriteCommand
 13819 ;;		_setINT_GO
 13820 ;; This function is called by:
 13821 ;;		_setRF_Main
 13822 ;;		_setRF_Enable
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           psect	text3262
 13826                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 13827                           	line	190
 13828                           	global	__size_of_RF_RxDisable
 13829  0035                     	__size_of_RF_RxDisable	equ	__end_of_RF_RxDisable-_RF_RxDisable
 13830                           	
 13831  25FE                     _RF_RxDisable:	
 13832                           	opt	stack 7
 13833                           ; Regs used in _RF_RxDisable: [wreg+fsr1l-status,0+pclath+cstack]
 13834                           ;RF_RxDisable@rf stored from wreg
 13835  25FE  0020               	movlb 0	; select bank0
 13836  25FF  00A4               	movwf	(RF_RxDisable@rf)
 13837                           	line	191
 13838                           	
 13839  2600                     l24085:	
 13840                           ;RF_Control_B1.c: 191: RfPointSelect(rf);
 13841  2600  0824               	movf	(RF_RxDisable@rf),w
 13842  2601  31A0  2034  31A5   	fcall	_RfPointSelect
 13843                           	line	192
 13844                           	
 13845  2604                     l24087:	
 13846                           ;RF_Control_B1.c: 192: if(RF->RxStatus || RF->ReceiveGO)
 13847  2604  0021               	movlb 1	; select bank1
 13848  2605  083E               	movf	(_RF)^080h,w
 13849  2606  0086               	movwf	fsr1l
 13850  2607  0187               	clrf fsr1h	
 13851                           	
 13852  2608  1981               	btfsc	indf1,3
 13853  2609  2E0B               	goto	u7751
 13854  260A  2E0C               	goto	u7750
 13855  260B                     u7751:
 13856  260B  2E14               	goto	l24091
 13857  260C                     u7750:
 13858                           	
 13859  260C                     l24089:	
 13860  260C  083E               	movf	(_RF)^080h,w
 13861  260D  0086               	movwf	fsr1l
 13862  260E  0187               	clrf fsr1h	
 13863                           	
 13864  260F  1C81               	btfss	indf1,1
 13865  2610  2E12               	goto	u7761
 13866  2611  2E13               	goto	u7760
 13867  2612                     u7761:
 13868  2612  2E32               	goto	l13157
 13869  2613                     u7760:
 13870  2613  2E14               	goto	l24091
 13871                           	
 13872  2614                     l13156:	
 13873                           	line	194
 13874                           	
 13875  2614                     l24091:	
 13876                           ;RF_Control_B1.c: 193: {
 13877                           ;RF_Control_B1.c: 194: RF->RxStatus=0;
 13878  2614  083E               	movf	(_RF)^080h,w
 13879  2615  0086               	movwf	fsr1l
 13880  2616  0187               	clrf fsr1h	
 13881                           	
 13882  2617  1181               	bcf	indf1,3
 13883                           	line	195
 13884                           ;RF_Control_B1.c: 195: RF->ReceiveGO=0;
 13885  2618  083E               	movf	(_RF)^080h,w
 13886  2619  0086               	movwf	fsr1l
 13887  261A  0187               	clrf fsr1h	
 13888                           	
 13889  261B  1081               	bcf	indf1,1
 13890                           	line	196
 13891                           ;RF_Control_B1.c: 196: RF->DebounceTime=0;
 13892  261C  083E               	movf	(_RF)^080h,w
 13893  261D  3E01               	addlw	01h
 13894  261E  0086               	movwf	fsr1l
 13895  261F  0187               	clrf fsr1h	
 13896                           	
 13897  2620  0181               	clrf	indf1
 13898                           	line	197
 13899                           ;RF_Control_B1.c: 197: RF->Debounce=0;
 13900  2621  083E               	movf	(_RF)^080h,w
 13901  2622  0086               	movwf	fsr1l
 13902  2623  0187               	clrf fsr1h	
 13903                           	
 13904  2624  1281               	bcf	indf1,5
 13905                           	line	198
 13906                           	
 13907  2625                     l24093:	
 13908                           ;RF_Control_B1.c: 198: CC2500_WriteCommand(0x36);
 13909  2625  3036               	movlw	(036h)
 13910  2626  31A2  223D  31A5   	fcall	_CC2500_WriteCommand
 13911                           	line	199
 13912                           	
 13913  2629                     l24095:	
 13914                           ;RF_Control_B1.c: 199: CC2500_WriteCommand(0x3A);
 13915  2629  303A               	movlw	(03Ah)
 13916  262A  31A2  223D  31A5   	fcall	_CC2500_WriteCommand
 13917                           	line	200
 13918                           	
 13919  262D                     l24097:	
 13920                           ;RF_Control_B1.c: 200: setINT_GO(0);
 13921  262D  3000               	movlw	(0)
 13922  262E  31AF  270C  31A5   	fcall	_setINT_GO
 13923  2631  2E32               	goto	l13157
 13924                           	line	201
 13925                           	
 13926  2632                     l13154:	
 13927                           	line	202
 13928                           	
 13929  2632                     l13157:	
 13930  2632  0008               	return
 13931                           	opt stack 0
 13932                           GLOBAL	__end_of_RF_RxDisable
 13933  2633                     	__end_of_RF_RxDisable:
 13934 ;; =============== function _RF_RxDisable ends ============
 13935                           
 13936                           	signat	_RF_RxDisable,4216
 13937                           	global	_Flash_Memory_Erasing
 13938                           psect	text3263,local,class=CODE,delta=2
 13939                           global __ptext3263
 13940  2F68                     __ptext3263:
 13941                           
 13942 ;; *************** function _Flash_Memory_Erasing *****************
 13943 ;; Defined at:
 13944 ;;		line 471 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;		None
 13947 ;; Auto vars:     Size  Location     Type
 13948 ;;		None
 13949 ;; Return value:  Size  Location     Type
 13950 ;;		None               void
 13951 ;; Registers used:
 13952 ;;		wreg, status,2, status,0, pclath, cstack
 13953 ;; Tracked objects:
 13954 ;;		On entry : 0/0
 13955 ;;		On exit  : 0/0
 13956 ;;		Unchanged: 0/0
 13957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 13958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 13962 ;;Total ram usage:        0 bytes
 13963 ;; Hardware stack levels used:    1
 13964 ;; Hardware stack levels required when called:    5
 13965 ;; This function calls:
 13966 ;;		_Flash_Memory_Unlock
 13967 ;; This function is called by:
 13968 ;;		_Flash_Memory_Modify
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           psect	text3263
 13972                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 13973                           	line	471
 13974                           	global	__size_of_Flash_Memory_Erasing
 13975  000D                     	__size_of_Flash_Memory_Erasing	equ	__end_of_Flash_Memory_Erasing-_Flash_Memory_Erasing
 13976                           	
 13977  2F68                     _Flash_Memory_Erasing:	
 13978                           	opt	stack 8
 13979                           ; Regs used in _Flash_Memory_Erasing: [wreg+status,2+status,0+pclath+cstack]
 13980                           	line	472
 13981                           	
 13982  2F68                     l24071:	
 13983                           ;MCU_16f1518_B1.c: 472: CFGS=0;
 13984  2F68  0023               	movlb 3	; select bank3
 13985  2F69  1315               	bcf	(3246/8)^0180h,(3246)&7
 13986                           	line	473
 13987                           	
 13988  2F6A                     l24073:	
 13989                           ;MCU_16f1518_B1.c: 473: PMADRH=0x30;
 13990  2F6A  3030               	movlw	(030h)
 13991  2F6B  0092               	movwf	(402)^0180h	;volatile
 13992                           	line	474
 13993                           	
 13994  2F6C                     l24075:	
 13995                           ;MCU_16f1518_B1.c: 474: PMADRL=0x00;
 13996  2F6C  0191               	clrf	(401)^0180h	;volatile
 13997                           	line	475
 13998                           	
 13999  2F6D                     l24077:	
 14000                           ;MCU_16f1518_B1.c: 475: FREE=1;
 14001  2F6D  1615               	bsf	(3244/8)^0180h,(3244)&7
 14002                           	line	476
 14003                           	
 14004  2F6E                     l24079:	
 14005                           ;MCU_16f1518_B1.c: 476: WREN=1;
 14006  2F6E  1515               	bsf	(3242/8)^0180h,(3242)&7
 14007                           	line	477
 14008                           	
 14009  2F6F                     l24081:	
 14010                           ;MCU_16f1518_B1.c: 477: Flash_Memory_Unlock();
 14011  2F6F  31AE  26FA  31AF   	fcall	_Flash_Memory_Unlock
 14012                           	line	478
 14013                           	
 14014  2F72                     l24083:	
 14015                           ;MCU_16f1518_B1.c: 478: WREN=0;
 14016  2F72  0023               	movlb 3	; select bank3
 14017  2F73  1115               	bcf	(3242/8)^0180h,(3242)&7
 14018                           	line	479
 14019                           	
 14020  2F74                     l8391:	
 14021  2F74  0008               	return
 14022                           	opt stack 0
 14023                           GLOBAL	__end_of_Flash_Memory_Erasing
 14024  2F75                     	__end_of_Flash_Memory_Erasing:
 14025 ;; =============== function _Flash_Memory_Erasing ends ============
 14026                           
 14027                           	signat	_Flash_Memory_Erasing,88
 14028                           	global	_Flash_Memory_Write
 14029                           psect	text3264,local,class=CODE,delta=2
 14030                           global __ptext3264
 14031  2711                     __ptext3264:
 14032                           
 14033 ;; *************** function _Flash_Memory_Write *****************
 14034 ;; Defined at:
 14035 ;;		line 451 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14036 ;; Parameters:    Size  Location     Type
 14037 ;;		None
 14038 ;; Auto vars:     Size  Location     Type
 14039 ;;  i               1    1[BANK0 ] unsigned char 
 14040 ;; Return value:  Size  Location     Type
 14041 ;;		None               void
 14042 ;; Registers used:
 14043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14044 ;; Tracked objects:
 14045 ;;		On entry : 0/0
 14046 ;;		On exit  : 0/0
 14047 ;;		Unchanged: 0/0
 14048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14053 ;;Total ram usage:        2 bytes
 14054 ;; Hardware stack levels used:    1
 14055 ;; Hardware stack levels required when called:    5
 14056 ;; This function calls:
 14057 ;;		_Flash_Memory_Unlock
 14058 ;; This function is called by:
 14059 ;;		_Flash_Memory_Initialization
 14060 ;;		_Flash_Memory_Modify
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           psect	text3264
 14064                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 14065                           	line	451
 14066                           	global	__size_of_Flash_Memory_Write
 14067  0038                     	__size_of_Flash_Memory_Write	equ	__end_of_Flash_Memory_Write-_Flash_Memory_Write
 14068                           	
 14069  2711                     _Flash_Memory_Write:	
 14070                           	opt	stack 8
 14071                           ; Regs used in _Flash_Memory_Write: [wreg+fsr1l-status,0+pclath+cstack]
 14072                           	line	453
 14073                           	
 14074  2711                     l24039:	
 14075                           ;MCU_16f1518_B1.c: 452: char i;
 14076                           ;MCU_16f1518_B1.c: 453: CFGS=0;
 14077  2711  0023               	movlb 3	; select bank3
 14078  2712  1315               	bcf	(3246/8)^0180h,(3246)&7
 14079                           	line	454
 14080                           	
 14081  2713                     l24041:	
 14082                           ;MCU_16f1518_B1.c: 454: PMADRH=0x30;
 14083  2713  3030               	movlw	(030h)
 14084  2714  0092               	movwf	(402)^0180h	;volatile
 14085                           	line	455
 14086                           	
 14087  2715                     l24043:	
 14088                           ;MCU_16f1518_B1.c: 455: PMDATH=0;
 14089  2715  0194               	clrf	(404)^0180h	;volatile
 14090                           	line	456
 14091                           	
 14092  2716                     l24045:	
 14093                           ;MCU_16f1518_B1.c: 456: FREE=0;
 14094  2716  1215               	bcf	(3244/8)^0180h,(3244)&7
 14095                           	line	457
 14096                           	
 14097  2717                     l24047:	
 14098                           ;MCU_16f1518_B1.c: 457: LWLO=1;
 14099  2717  1695               	bsf	(3245/8)^0180h,(3245)&7
 14100                           	line	458
 14101                           	
 14102  2718                     l24049:	
 14103                           ;MCU_16f1518_B1.c: 458: WREN=1;
 14104  2718  1515               	bsf	(3242/8)^0180h,(3242)&7
 14105                           	line	459
 14106                           	
 14107  2719                     l24051:	
 14108                           ;MCU_16f1518_B1.c: 459: for(i=0 ; i<32 ; i++)
 14109  2719  0020               	movlb 0	; select bank0
 14110  271A  01A1               	clrf	(Flash_Memory_Write@i)
 14111                           	
 14112  271B                     l24053:	
 14113  271B  3020               	movlw	(020h)
 14114  271C  0221               	subwf	(Flash_Memory_Write@i),w
 14115  271D  1C03               	skipc
 14116  271E  2F20               	goto	u7731
 14117  271F  2F21               	goto	u7730
 14118  2720                     u7731:
 14119  2720  2F23               	goto	l24057
 14120  2721                     u7730:
 14121  2721  2F41               	goto	l8387
 14122                           	
 14123  2722                     l24055:	
 14124  2722  2F41               	goto	l8387
 14125                           	line	460
 14126                           	
 14127  2723                     l8386:	
 14128                           	line	461
 14129                           	
 14130  2723                     l24057:	
 14131                           ;MCU_16f1518_B1.c: 460: {
 14132                           ;MCU_16f1518_B1.c: 461: PMADRL=i;
 14133  2723  0821               	movf	(Flash_Memory_Write@i),w
 14134  2724  0023               	movlb 3	; select bank3
 14135  2725  0091               	movwf	(401)^0180h	;volatile
 14136                           	line	462
 14137                           	
 14138  2726                     l24059:	
 14139                           ;MCU_16f1518_B1.c: 462: PMDATL=Memory->Data[i];
 14140  2726  0020               	movlb 0	; select bank0
 14141  2727  0821               	movf	(Flash_Memory_Write@i),w
 14142  2728  0021               	movlb 1	; select bank1
 14143  2729  076D               	addwf	(_Memory)^080h,w
 14144  272A  0020               	movlb 0	; select bank0
 14145  272B  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 14146  272C  0820               	movf	0+(??_Flash_Memory_Write+0)+0,w
 14147  272D  0086               	movwf	fsr1l
 14148  272E  3001               	movlw 1	; select bank2/3
 14149  272F  0087               	movwf fsr1h	
 14150                           	
 14151  2730  0801               	movf	indf1,w
 14152  2731  0023               	movlb 3	; select bank3
 14153  2732  0093               	movwf	(403)^0180h	;volatile
 14154                           	line	463
 14155                           	
 14156  2733                     l24061:	
 14157                           ;MCU_16f1518_B1.c: 463: Flash_Memory_Unlock();
 14158  2733  31AE  26FA  31A7   	fcall	_Flash_Memory_Unlock
 14159                           	line	459
 14160                           	
 14161  2736                     l24063:	
 14162  2736  3001               	movlw	(01h)
 14163  2737  0020               	movlb 0	; select bank0
 14164  2738  00A0               	movwf	(??_Flash_Memory_Write+0)+0
 14165  2739  0820               	movf	(??_Flash_Memory_Write+0)+0,w
 14166  273A  07A1               	addwf	(Flash_Memory_Write@i),f
 14167                           	
 14168  273B                     l24065:	
 14169  273B  3020               	movlw	(020h)
 14170  273C  0221               	subwf	(Flash_Memory_Write@i),w
 14171  273D  1C03               	skipc
 14172  273E  2F40               	goto	u7741
 14173  273F  2F41               	goto	u7740
 14174  2740                     u7741:
 14175  2740  2F23               	goto	l24057
 14176  2741                     u7740:
 14177                           	
 14178  2741                     l8387:	
 14179                           	line	465
 14180                           ;MCU_16f1518_B1.c: 464: }
 14181                           ;MCU_16f1518_B1.c: 465: LWLO=0;
 14182  2741  0023               	movlb 3	; select bank3
 14183  2742  1295               	bcf	(3245/8)^0180h,(3245)&7
 14184                           	line	466
 14185                           	
 14186  2743                     l24067:	
 14187                           ;MCU_16f1518_B1.c: 466: Flash_Memory_Unlock();
 14188  2743  31AE  26FA  31A7   	fcall	_Flash_Memory_Unlock
 14189                           	line	467
 14190                           	
 14191  2746                     l24069:	
 14192                           ;MCU_16f1518_B1.c: 467: WREN=0;
 14193  2746  0023               	movlb 3	; select bank3
 14194  2747  1115               	bcf	(3242/8)^0180h,(3242)&7
 14195                           	line	468
 14196                           	
 14197  2748                     l8388:	
 14198  2748  0008               	return
 14199                           	opt stack 0
 14200                           GLOBAL	__end_of_Flash_Memory_Write
 14201  2749                     	__end_of_Flash_Memory_Write:
 14202 ;; =============== function _Flash_Memory_Write ends ============
 14203                           
 14204                           	signat	_Flash_Memory_Write,88
 14205                           	global	_PowerFault_Initialization
 14206                           psect	text3265,local,class=CODE,delta=2
 14207                           global __ptext3265
 14208  2E9D                     __ptext3265:
 14209                           
 14210 ;; *************** function _PowerFault_Initialization *****************
 14211 ;; Defined at:
 14212 ;;		line 16 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;		None
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;		None
 14217 ;; Return value:  Size  Location     Type
 14218 ;;		None               void
 14219 ;; Registers used:
 14220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14230 ;;Total ram usage:        0 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; Hardware stack levels required when called:    6
 14233 ;; This function calls:
 14234 ;;		_setPowerFault_Initialization
 14235 ;; This function is called by:
 14236 ;;		_main
 14237 ;; This function uses a non-reentrant model
 14238 ;;
 14239                           psect	text3265
 14240                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 14241                           	line	16
 14242                           	global	__size_of_PowerFault_Initialization
 14243  0005                     	__size_of_PowerFault_Initialization	equ	__end_of_PowerFault_Initialization-_PowerFault_
                                 Initialization
 14244                           	
 14245  2E9D                     _PowerFault_Initialization:	
 14246                           	opt	stack 9
 14247                           ; Regs used in _PowerFault_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14248                           	line	18
 14249                           	
 14250  2E9D                     l24037:	
 14251                           ;PowerFault_B1.c: 18: setPowerFault_Initialization(1);
 14252  2E9D  3001               	movlw	(01h)
 14253  2E9E  31A1  2110  31AE   	fcall	_setPowerFault_Initialization
 14254                           	line	20
 14255                           	
 14256  2EA1                     l11913:	
 14257  2EA1  0008               	return
 14258                           	opt stack 0
 14259                           GLOBAL	__end_of_PowerFault_Initialization
 14260  2EA2                     	__end_of_PowerFault_Initialization:
 14261 ;; =============== function _PowerFault_Initialization ends ============
 14262                           
 14263                           	signat	_PowerFault_Initialization,88
 14264                           	global	_Load_Initialization
 14265                           psect	text3266,local,class=CODE,delta=2
 14266                           global __ptext3266
 14267  2E98                     __ptext3266:
 14268                           
 14269 ;; *************** function _Load_Initialization *****************
 14270 ;; Defined at:
 14271 ;;		line 18 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;		None
 14276 ;; Return value:  Size  Location     Type
 14277 ;;		None               void
 14278 ;; Registers used:
 14279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14289 ;;Total ram usage:        0 bytes
 14290 ;; Hardware stack levels used:    1
 14291 ;; Hardware stack levels required when called:    6
 14292 ;; This function calls:
 14293 ;;		_setLoad_Initialization
 14294 ;; This function is called by:
 14295 ;;		_main
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           psect	text3266
 14299                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 14300                           	line	18
 14301                           	global	__size_of_Load_Initialization
 14302  0005                     	__size_of_Load_Initialization	equ	__end_of_Load_Initialization-_Load_Initialization
 14303                           	
 14304  2E98                     _Load_Initialization:	
 14305                           	opt	stack 9
 14306                           ; Regs used in _Load_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14307                           	line	20
 14308                           	
 14309  2E98                     l24035:	
 14310                           ;OverLoad_B1.c: 20: setLoad_Initialization(1);
 14311  2E98  3001               	movlw	(01h)
 14312  2E99  3198  2067  31AE   	fcall	_setLoad_Initialization
 14313                           	line	22
 14314                           	
 14315  2E9C                     l9526:	
 14316  2E9C  0008               	return
 14317                           	opt stack 0
 14318                           GLOBAL	__end_of_Load_Initialization
 14319  2E9D                     	__end_of_Load_Initialization:
 14320 ;; =============== function _Load_Initialization ends ============
 14321                           
 14322                           	signat	_Load_Initialization,88
 14323                           	global	_Temp_Initialization
 14324                           psect	text3267,local,class=CODE,delta=2
 14325                           global __ptext3267
 14326  2E93                     __ptext3267:
 14327                           
 14328 ;; *************** function _Temp_Initialization *****************
 14329 ;; Defined at:
 14330 ;;		line 23 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;		None
 14333 ;; Auto vars:     Size  Location     Type
 14334 ;;		None
 14335 ;; Return value:  Size  Location     Type
 14336 ;;		None               void
 14337 ;; Registers used:
 14338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14339 ;; Tracked objects:
 14340 ;;		On entry : 0/0
 14341 ;;		On exit  : 0/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14348 ;;Total ram usage:        0 bytes
 14349 ;; Hardware stack levels used:    1
 14350 ;; Hardware stack levels required when called:    6
 14351 ;; This function calls:
 14352 ;;		_setTemp_Initialization
 14353 ;; This function is called by:
 14354 ;;		_main
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           psect	text3267
 14358                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 14359                           	line	23
 14360                           	global	__size_of_Temp_Initialization
 14361  0005                     	__size_of_Temp_Initialization	equ	__end_of_Temp_Initialization-_Temp_Initialization
 14362                           	
 14363  2E93                     _Temp_Initialization:	
 14364                           	opt	stack 9
 14365                           ; Regs used in _Temp_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14366                           	line	25
 14367                           	
 14368  2E93                     l24033:	
 14369                           ;OverTemperature_B1.c: 25: setTemp_Initialization(1);
 14370  2E93  3001               	movlw	(01h)
 14371  2E94  31AF  2742  31AE   	fcall	_setTemp_Initialization
 14372                           	line	27
 14373                           	
 14374  2E97                     l10745:	
 14375  2E97  0008               	return
 14376                           	opt stack 0
 14377                           GLOBAL	__end_of_Temp_Initialization
 14378  2E98                     	__end_of_Temp_Initialization:
 14379 ;; =============== function _Temp_Initialization ends ============
 14380                           
 14381                           	signat	_Temp_Initialization,88
 14382                           	global	_LED_Main
 14383                           psect	text3268,local,class=CODE,delta=2
 14384                           global __ptext3268
 14385  2F5B                     __ptext3268:
 14386                           
 14387 ;; *************** function _LED_Main *****************
 14388 ;; Defined at:
 14389 ;;		line 52 in file "G:\Program\PIC\Source_File\LED_B1.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;		None
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;		None
 14394 ;; Return value:  Size  Location     Type
 14395 ;;		None               void
 14396 ;; Registers used:
 14397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14398 ;; Tracked objects:
 14399 ;;		On entry : 0/0
 14400 ;;		On exit  : 0/0
 14401 ;;		Unchanged: 0/0
 14402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14407 ;;Total ram usage:        0 bytes
 14408 ;; Hardware stack levels used:    1
 14409 ;; Hardware stack levels required when called:    6
 14410 ;; This function calls:
 14411 ;;		_setLED_Main
 14412 ;; This function is called by:
 14413 ;;		_main
 14414 ;; This function uses a non-reentrant model
 14415 ;;
 14416                           psect	text3268
 14417                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 14418                           	line	52
 14419                           	global	__size_of_LED_Main
 14420  000D                     	__size_of_LED_Main	equ	__end_of_LED_Main-_LED_Main
 14421                           	
 14422  2F5B                     _LED_Main:	
 14423                           	opt	stack 9
 14424                           ; Regs used in _LED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 14425                           	line	54
 14426                           	
 14427  2F5B                     l24031:	
 14428                           ;LED_B1.c: 54: setLED_Main(1);
 14429  2F5B  3001               	movlw	(01h)
 14430  2F5C  319B  2311  31AF   	fcall	_setLED_Main
 14431                           	line	57
 14432                           ;LED_B1.c: 57: setLED_Main(2);
 14433  2F5F  3002               	movlw	(02h)
 14434  2F60  319B  2311  31AF   	fcall	_setLED_Main
 14435                           	line	63
 14436                           ;LED_B1.c: 63: setLED_Main(99);
 14437  2F63  3063               	movlw	(063h)
 14438  2F64  319B  2311  31AF   	fcall	_setLED_Main
 14439                           	line	65
 14440                           	
 14441  2F67                     l5940:	
 14442  2F67  0008               	return
 14443                           	opt stack 0
 14444                           GLOBAL	__end_of_LED_Main
 14445  2F68                     	__end_of_LED_Main:
 14446 ;; =============== function _LED_Main ends ============
 14447                           
 14448                           	signat	_LED_Main,88
 14449                           	global	_setLED_Initialization
 14450                           psect	text3269,local,class=CODE,delta=2
 14451                           global __ptext3269
 14452  21DC                     __ptext3269:
 14453                           
 14454 ;; *************** function _setLED_Initialization *****************
 14455 ;; Defined at:
 14456 ;;		line 68 in file "G:\Program\PIC\Source_File\LED_B1.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;  led             1    wreg     unsigned char 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;  led             1    4[BANK0 ] unsigned char 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;		None               void
 14463 ;; Registers used:
 14464 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14474 ;;Total ram usage:        1 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:    6
 14477 ;; This function calls:
 14478 ;;		_LedPointSelect
 14479 ;;		_setLED
 14480 ;; This function is called by:
 14481 ;;		_LED_Initialization
 14482 ;; This function uses a non-reentrant model
 14483 ;;
 14484                           psect	text3269
 14485                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 14486                           	line	68
 14487                           	global	__size_of_setLED_Initialization
 14488  0012                     	__size_of_setLED_Initialization	equ	__end_of_setLED_Initialization-_setLED_Initializati
                                 on
 14489                           	
 14490  21DC                     _setLED_Initialization:	
 14491                           	opt	stack 8
 14492                           ; Regs used in _setLED_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 14493                           ;setLED_Initialization@led stored from wreg
 14494  21DC  0020               	movlb 0	; select bank0
 14495  21DD  00A4               	movwf	(setLED_Initialization@led)
 14496                           	line	69
 14497                           	
 14498  21DE                     l24025:	
 14499                           ;LED_B1.c: 69: LedPointSelect(led);
 14500  21DE  0824               	movf	(setLED_Initialization@led),w
 14501  21DF  31A4  24B4  31A1   	fcall	_LedPointSelect
 14502                           	line	70
 14503                           	
 14504  21E2                     l24027:	
 14505                           ;LED_B1.c: 70: LED->Enable=1;
 14506  21E2  0021               	movlb 1	; select bank1
 14507  21E3  083C               	movf	(_LED)^080h,w
 14508  21E4  0086               	movwf	fsr1l
 14509  21E5  0187               	clrf fsr1h	
 14510                           	
 14511  21E6  1401               	bsf	indf1,0
 14512                           	line	71
 14513                           	
 14514  21E7                     l24029:	
 14515                           ;LED_B1.c: 71: setLED(led,0);
 14516  21E7  0020               	movlb 0	; select bank0
 14517  21E8  01A2               	clrf	(?_setLED)
 14518  21E9  0824               	movf	(setLED_Initialization@led),w
 14519  21EA  3193  23DD  31A1   	fcall	_setLED
 14520                           	line	72
 14521                           	
 14522  21ED                     l5943:	
 14523  21ED  0008               	return
 14524                           	opt stack 0
 14525                           GLOBAL	__end_of_setLED_Initialization
 14526  21EE                     	__end_of_setLED_Initialization:
 14527 ;; =============== function _setLED_Initialization ends ============
 14528                           
 14529                           	signat	_setLED_Initialization,4216
 14530                           	global	_setPercentValue
 14531                           psect	text3270,local,class=CODE,delta=2
 14532                           global __ptext3270
 14533  1945                     __ptext3270:
 14534                           
 14535 ;; *************** function _setPercentValue *****************
 14536 ;; Defined at:
 14537 ;;		line 498 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;  value           1    wreg     unsigned char 
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;  value           1   44[BANK0 ] unsigned char 
 14542 ;;  i               3   45[BANK0 ] float 
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  1    wreg      unsigned char 
 14545 ;; Registers used:
 14546 ;;		wreg, status,2, status,0, pclath, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14553 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14555 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 14556 ;;Total ram usage:        4 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:    6
 14559 ;; This function calls:
 14560 ;;		___ftdiv
 14561 ;;		___awtoft
 14562 ;;		___fttol
 14563 ;; This function is called by:
 14564 ;;		_setDimmerLights_Adj
 14565 ;;		_Flash_Memory_Initialization
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           psect	text3270
 14569                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 14570                           	line	498
 14571                           	global	__size_of_setPercentValue
 14572  0048                     	__size_of_setPercentValue	equ	__end_of_setPercentValue-_setPercentValue
 14573                           	
 14574  1945                     _setPercentValue:	
 14575                           	opt	stack 6
 14576                           ; Regs used in _setPercentValue: [wreg+status,2+status,0+pclath+cstack]
 14577                           ;setPercentValue@value stored from wreg
 14578  1945  0020               	movlb 0	; select bank0
 14579  1946  00CC               	movwf	(setPercentValue@value)
 14580                           	line	499
 14581                           	
 14582  1947                     l24017:	
 14583                           ;Dimmer_B1.c: 499: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 14584  1947  3000               	movlw	0x0
 14585  1948  00CD               	movwf	(setPercentValue@i)
 14586  1949  3070               	movlw	0x70
 14587  194A  00CE               	movwf	(setPercentValue@i+1)
 14588  194B  3042               	movlw	0x42
 14589  194C  00CF               	movwf	(setPercentValue@i+2)
 14590                           	line	500
 14591                           	
 14592  194D                     l24019:	
 14593                           ;Dimmer_B1.c: 500: i/=100;
 14594  194D  3000               	movlw	0x0
 14595  194E  00BC               	movwf	(?___ftdiv)
 14596  194F  30C8               	movlw	0xc8
 14597  1950  00BD               	movwf	(?___ftdiv+1)
 14598  1951  3042               	movlw	0x42
 14599  1952  00BE               	movwf	(?___ftdiv+2)
 14600  1953  084D               	movf	(setPercentValue@i),w
 14601  1954  00BF               	movwf	0+(?___ftdiv)+03h
 14602  1955  084E               	movf	(setPercentValue@i+1),w
 14603  1956  00C0               	movwf	1+(?___ftdiv)+03h
 14604  1957  084F               	movf	(setPercentValue@i+2),w
 14605  1958  00C1               	movwf	2+(?___ftdiv)+03h
 14606  1959  3189  2166  3199   	fcall	___ftdiv
 14607  195C  0020               	movlb 0	; select bank0
 14608  195D  083C               	movf	(0+(?___ftdiv)),w
 14609  195E  00CD               	movwf	(setPercentValue@i)
 14610  195F  083D               	movf	(1+(?___ftdiv)),w
 14611  1960  00CE               	movwf	(setPercentValue@i+1)
 14612  1961  083E               	movf	(2+(?___ftdiv)),w
 14613  1962  00CF               	movwf	(setPercentValue@i+2)
 14614                           	line	501
 14615                           	
 14616  1963                     l24021:	
 14617                           ;Dimmer_B1.c: 501: return (100-(char)((value-((char)((100-60)*1.5)))/i));
 14618  1963  084C               	movf	(setPercentValue@value),w
 14619  1964  3EC4               	addlw	low(-60)
 14620  1965  00B6               	movwf	(?___awtoft)
 14621  1966  30FF               	movlw	high(-60)
 14622  1967  1803               	skipnc
 14623  1968  3000               	movlw	(high(-60)+1)&0ffh
 14624  1969  00B7               	movwf	((?___awtoft))+1
 14625  196A  31A4  2438  3199   	fcall	___awtoft
 14626  196D  0020               	movlb 0	; select bank0
 14627  196E  0836               	movf	(0+(?___awtoft)),w
 14628  196F  00BF               	movwf	0+(?___ftdiv)+03h
 14629  1970  0837               	movf	(1+(?___awtoft)),w
 14630  1971  00C0               	movwf	1+(?___ftdiv)+03h
 14631  1972  0838               	movf	(2+(?___awtoft)),w
 14632  1973  00C1               	movwf	2+(?___ftdiv)+03h
 14633  1974  084D               	movf	(setPercentValue@i),w
 14634  1975  00BC               	movwf	(?___ftdiv)
 14635  1976  084E               	movf	(setPercentValue@i+1),w
 14636  1977  00BD               	movwf	(?___ftdiv+1)
 14637  1978  084F               	movf	(setPercentValue@i+2),w
 14638  1979  00BE               	movwf	(?___ftdiv+2)
 14639  197A  3189  2166  3199   	fcall	___ftdiv
 14640  197D  0020               	movlb 0	; select bank0
 14641  197E  083C               	movf	(0+(?___ftdiv)),w
 14642  197F  00A8               	movwf	(?___fttol)
 14643  1980  083D               	movf	(1+(?___ftdiv)),w
 14644  1981  00A9               	movwf	(?___fttol+1)
 14645  1982  083E               	movf	(2+(?___ftdiv)),w
 14646  1983  00AA               	movwf	(?___fttol+2)
 14647  1984  3195  2578  3199   	fcall	___fttol
 14648  1987  0020               	movlb 0	; select bank0
 14649  1988  0328               	decf	0+(((0+(?___fttol)))),w
 14650  1989  3AFF               	xorlw	0ffh
 14651  198A  3E64               	addlw	064h
 14652  198B  298C               	goto	l4796
 14653                           	
 14654  198C                     l24023:	
 14655                           	line	502
 14656                           	
 14657  198C                     l4796:	
 14658  198C  0008               	return
 14659                           	opt stack 0
 14660                           GLOBAL	__end_of_setPercentValue
 14661  198D                     	__end_of_setPercentValue:
 14662 ;; =============== function _setPercentValue ends ============
 14663                           
 14664                           	signat	_setPercentValue,4217
 14665                           	global	_setDimmerLights_ERROR
 14666                           psect	text3271,local,class=CODE,delta=2
 14667                           global __ptext3271
 14668  1C0E                     __ptext3271:
 14669                           
 14670 ;; *************** function _setDimmerLights_ERROR *****************
 14671 ;; Defined at:
 14672 ;;		line 333 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 14673 ;; Parameters:    Size  Location     Type
 14674 ;;  lights          1    wreg     unsigned char 
 14675 ;; Auto vars:     Size  Location     Type
 14676 ;;  lights          1    6[BANK0 ] unsigned char 
 14677 ;; Return value:  Size  Location     Type
 14678 ;;		None               void
 14679 ;; Registers used:
 14680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14681 ;; Tracked objects:
 14682 ;;		On entry : 0/0
 14683 ;;		On exit  : 0/0
 14684 ;;		Unchanged: 0/0
 14685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 14687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14688 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 14690 ;;Total ram usage:        2 bytes
 14691 ;; Hardware stack levels used:    1
 14692 ;; Hardware stack levels required when called:    6
 14693 ;; This function calls:
 14694 ;;		_DimmerLightsPointSelect
 14695 ;;		_setLoad_StatusOff
 14696 ;;		_setLED
 14697 ;;		_setSw_Status
 14698 ;;		_setRFSW_Status
 14699 ;; This function is called by:
 14700 ;;		_DimmerLights_ERROR
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           psect	text3271
 14704                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 14705                           	line	333
 14706                           	global	__size_of_setDimmerLights_ERROR
 14707  005B                     	__size_of_setDimmerLights_ERROR	equ	__end_of_setDimmerLights_ERROR-_setDimmerLights_ERR
                                 OR
 14708                           	
 14709  1C0E                     _setDimmerLights_ERROR:	
 14710                           	opt	stack 5
 14711                           ; Regs used in _setDimmerLights_ERROR: [wreg+fsr1l-status,0+pclath+cstack]
 14712                           ;setDimmerLights_ERROR@lights stored from wreg
 14713  1C0E  0020               	movlb 0	; select bank0
 14714  1C0F  00A6               	movwf	(setDimmerLights_ERROR@lights)
 14715                           	line	334
 14716                           	
 14717  1C10                     l24003:	
 14718                           ;Dimmer_B1.c: 334: DimmerLightsPointSelect(lights);
 14719  1C10  0826               	movf	(setDimmerLights_ERROR@lights),w
 14720  1C11  31AF  27AC  319C   	fcall	_DimmerLightsPointSelect
 14721                           	line	335
 14722                           	
 14723  1C14                     l24005:	
 14724                           ;Dimmer_B1.c: 335: if(DimmerLights->Status)
 14725  1C14  0020               	movlb 0	; select bank0
 14726  1C15  086D               	movf	(_DimmerLights),w
 14727  1C16  0086               	movwf	fsr1l
 14728  1C17  3001               	movlw 1	; select bank2/3
 14729  1C18  0087               	movwf fsr1h	
 14730                           	
 14731  1C19  1E81               	btfss	indf1,5
 14732  1C1A  2C1C               	goto	u7721
 14733  1C1B  2C1D               	goto	u7720
 14734  1C1C                     u7721:
 14735  1C1C  2C68               	goto	l4742
 14736  1C1D                     u7720:
 14737                           	line	337
 14738                           	
 14739  1C1D                     l24007:	
 14740                           ;Dimmer_B1.c: 336: {
 14741                           ;Dimmer_B1.c: 337: DimmerLights->Signal=0;
 14742  1C1D  086D               	movf	(_DimmerLights),w
 14743  1C1E  0086               	movwf	fsr1l
 14744  1C1F  3001               	movlw 1	; select bank2/3
 14745  1C20  0087               	movwf fsr1h	
 14746                           	
 14747  1C21  1081               	bcf	indf1,1
 14748                           	line	338
 14749                           ;Dimmer_B1.c: 338: DimmerLights->AdjFlag=0;
 14750  1C22  086D               	movf	(_DimmerLights),w
 14751  1C23  0086               	movwf	fsr1l
 14752  1C24  3001               	movlw 1	; select bank2/3
 14753  1C25  0087               	movwf fsr1h	
 14754                           	
 14755  1C26  1181               	bcf	indf1,3
 14756                           	line	339
 14757                           ;Dimmer_B1.c: 339: DimmerLights->AdjStatus=0;
 14758  1C27  086D               	movf	(_DimmerLights),w
 14759  1C28  0086               	movwf	fsr1l
 14760  1C29  3001               	movlw 1	; select bank2/3
 14761  1C2A  0087               	movwf fsr1h	
 14762                           	
 14763  1C2B  1201               	bcf	indf1,4
 14764                           	line	340
 14765                           ;Dimmer_B1.c: 340: DimmerLights->StatusFlag=0;
 14766  1C2C  086D               	movf	(_DimmerLights),w
 14767  1C2D  0086               	movwf	fsr1l
 14768  1C2E  3001               	movlw 1	; select bank2/3
 14769  1C2F  0087               	movwf fsr1h	
 14770                           	
 14771  1C30  1301               	bcf	indf1,6
 14772                           	line	341
 14773                           ;Dimmer_B1.c: 341: DimmerLights->DimmingTimeValue=3;
 14774  1C31  3003               	movlw	(03h)
 14775  1C32  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 14776  1C33  086D               	movf	(_DimmerLights),w
 14777  1C34  3E02               	addlw	02h
 14778  1C35  0086               	movwf	fsr1l
 14779  1C36  3001               	movlw 1	; select bank2/3
 14780  1C37  0087               	movwf fsr1h	
 14781                           	
 14782  1C38  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 14783  1C39  0081               	movwf	indf1
 14784                           	line	342
 14785                           ;Dimmer_B1.c: 342: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 14786  1C3A  086D               	movf	(_DimmerLights),w
 14787  1C3B  3E06               	addlw	06h
 14788  1C3C  0086               	movwf	fsr1l
 14789  1C3D  3001               	movlw 1	; select bank2/3
 14790  1C3E  0087               	movwf fsr1h	
 14791                           	
 14792  1C3F  0801               	movf	indf1,w
 14793  1C40  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 14794  1C41  086D               	movf	(_DimmerLights),w
 14795  1C42  3E04               	addlw	04h
 14796  1C43  0086               	movwf	fsr1l
 14797  1C44  3001               	movlw 1	; select bank2/3
 14798  1C45  0087               	movwf fsr1h	
 14799                           	
 14800  1C46  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 14801  1C47  0081               	movwf	indf1
 14802                           	line	343
 14803                           	
 14804  1C48                     l24009:	
 14805                           ;Dimmer_B1.c: 343: setLoad_StatusOff(1,lights,1);
 14806  1C48  0826               	movf	(setDimmerLights_ERROR@lights),w
 14807  1C49  00A5               	movwf	(??_setDimmerLights_ERROR+0)+0
 14808  1C4A  0825               	movf	(??_setDimmerLights_ERROR+0)+0,w
 14809  1C4B  00A2               	movwf	(?_setLoad_StatusOff)
 14810  1C4C  01A3               	clrf	0+(?_setLoad_StatusOff)+01h
 14811  1C4D  1403               	bsf	status,0
 14812  1C4E  0DA3               	rlf	0+(?_setLoad_StatusOff)+01h,f
 14813  1C4F  3001               	movlw	(01h)
 14814  1C50  31A6  26A1  319C   	fcall	_setLoad_StatusOff
 14815                           	line	344
 14816                           	
 14817  1C53                     l24011:	
 14818                           ;Dimmer_B1.c: 344: setLED(lights,1);
 14819  1C53  0020               	movlb 0	; select bank0
 14820  1C54  01A2               	clrf	(?_setLED)
 14821  1C55  1403               	bsf	status,0
 14822  1C56  0DA2               	rlf	(?_setLED),f
 14823  1C57  0826               	movf	(setDimmerLights_ERROR@lights),w
 14824  1C58  3193  23DD  319C   	fcall	_setLED
 14825                           	line	345
 14826                           	
 14827  1C5B                     l24013:	
 14828                           ;Dimmer_B1.c: 345: setSw_Status(lights,0);
 14829  1C5B  0020               	movlb 0	; select bank0
 14830  1C5C  01A2               	clrf	(?_setSw_Status)
 14831  1C5D  0826               	movf	(setDimmerLights_ERROR@lights),w
 14832  1C5E  31A0  2080  319C   	fcall	_setSw_Status
 14833                           	line	346
 14834                           	
 14835  1C61                     l24015:	
 14836                           ;Dimmer_B1.c: 346: setRFSW_Status(lights,0);
 14837  1C61  0020               	movlb 0	; select bank0
 14838  1C62  01A2               	clrf	(?_setRFSW_Status)
 14839  1C63  0826               	movf	(setDimmerLights_ERROR@lights),w
 14840  1C64  31A0  2090  319C   	fcall	_setRFSW_Status
 14841  1C67  2C68               	goto	l4742
 14842                           	line	347
 14843                           	
 14844  1C68                     l4741:	
 14845                           	line	348
 14846                           	
 14847  1C68                     l4742:	
 14848  1C68  0008               	return
 14849                           	opt stack 0
 14850                           GLOBAL	__end_of_setDimmerLights_ERROR
 14851  1C69                     	__end_of_setDimmerLights_ERROR:
 14852 ;; =============== function _setDimmerLights_ERROR ends ============
 14853                           
 14854                           	signat	_setDimmerLights_ERROR,4216
 14855                           	global	_setDimmerLights
 14856                           psect	text3272,local,class=CODE,delta=2
 14857                           global __ptext3272
 14858  16B8                     __ptext3272:
 14859                           
 14860 ;; *************** function _setDimmerLights *****************
 14861 ;; Defined at:
 14862 ;;		line 361 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 14863 ;; Parameters:    Size  Location     Type
 14864 ;;  lights          1    wreg     unsigned char 
 14865 ;;  status          1    6[BANK0 ] unsigned char 
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;  lights          1    8[BANK0 ] unsigned char 
 14868 ;; Return value:  Size  Location     Type
 14869 ;;		None               void
 14870 ;; Registers used:
 14871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 14877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 14880 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 14881 ;;Total ram usage:        3 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    6
 14884 ;; This function calls:
 14885 ;;		_DimmerLightsPointSelect
 14886 ;;		_setLED
 14887 ;;		_setLoad_StatusOn
 14888 ;;		_setLoad_Count
 14889 ;;		_setDimmer_Detect
 14890 ;;		_setLoad_GO
 14891 ;;		_setLoad_LightsStatus
 14892 ;; This function is called by:
 14893 ;;		_setDimmerLights_Main
 14894 ;;		_setControl_Lights_Table
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           psect	text3272
 14898                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 14899                           	line	361
 14900                           	global	__size_of_setDimmerLights
 14901  00A3                     	__size_of_setDimmerLights	equ	__end_of_setDimmerLights-_setDimmerLights
 14902                           	
 14903  16B8                     _setDimmerLights:	
 14904                           	opt	stack 5
 14905                           ; Regs used in _setDimmerLights: [wreg+fsr1l-status,0+pclath+cstack]
 14906                           ;setDimmerLights@lights stored from wreg
 14907  16B8  0020               	movlb 0	; select bank0
 14908  16B9  00A8               	movwf	(setDimmerLights@lights)
 14909                           	line	362
 14910                           	
 14911  16BA                     l23969:	
 14912                           ;Dimmer_B1.c: 362: DimmerLightsPointSelect(lights);
 14913  16BA  0828               	movf	(setDimmerLights@lights),w
 14914  16BB  31AF  27AC  3196   	fcall	_DimmerLightsPointSelect
 14915                           	line	363
 14916                           	
 14917  16BE                     l23971:	
 14918                           ;Dimmer_B1.c: 363: Dimmer->Load=lights;
 14919  16BE  0020               	movlb 0	; select bank0
 14920  16BF  0828               	movf	(setDimmerLights@lights),w
 14921  16C0  00A7               	movwf	(??_setDimmerLights+0)+0
 14922  16C1  0021               	movlb 1	; select bank1
 14923  16C2  083A               	movf	(_Dimmer)^080h,w
 14924  16C3  3E01               	addlw	01h
 14925  16C4  0086               	movwf	fsr1l
 14926  16C5  0187               	clrf fsr1h	
 14927                           	
 14928  16C6  0020               	movlb 0	; select bank0
 14929  16C7  0827               	movf	(??_setDimmerLights+0)+0,w
 14930  16C8  0081               	movwf	indf1
 14931                           	line	364
 14932                           	
 14933  16C9                     l23973:	
 14934                           ;Dimmer_B1.c: 364: if(status)
 14935  16C9  0826               	movf	(setDimmerLights@status),w
 14936  16CA  1D03               	skipz
 14937  16CB  2ECD               	goto	u7700
 14938  16CC  2F2E               	goto	l24001
 14939  16CD                     u7700:
 14940                           	line	366
 14941                           	
 14942  16CD                     l23975:	
 14943                           ;Dimmer_B1.c: 365: {
 14944                           ;Dimmer_B1.c: 366: DimmerLights->Status=1;
 14945  16CD  086D               	movf	(_DimmerLights),w
 14946  16CE  0086               	movwf	fsr1l
 14947  16CF  3001               	movlw 1	; select bank2/3
 14948  16D0  0087               	movwf fsr1h	
 14949                           	
 14950  16D1  1681               	bsf	indf1,5
 14951                           	line	367
 14952                           	
 14953  16D2                     l23977:	
 14954                           ;Dimmer_B1.c: 367: setLED(lights,0);
 14955  16D2  01A2               	clrf	(?_setLED)
 14956  16D3  0828               	movf	(setDimmerLights@lights),w
 14957  16D4  3193  23DD  3196   	fcall	_setLED
 14958                           	line	368
 14959                           	
 14960  16D7                     l23979:	
 14961                           ;Dimmer_B1.c: 368: RA3=!0;
 14962  16D7  0020               	movlb 0	; select bank0
 14963  16D8  158C               	bsf	(99/8),(99)&7
 14964                           	line	369
 14965                           	
 14966  16D9                     l23981:	
 14967                           ;Dimmer_B1.c: 369: setLoad_StatusOn(1,1);
 14968  16D9  01A2               	clrf	(?_setLoad_StatusOn)
 14969  16DA  1403               	bsf	status,0
 14970  16DB  0DA2               	rlf	(?_setLoad_StatusOn),f
 14971  16DC  3001               	movlw	(01h)
 14972  16DD  31A1  2185  3196   	fcall	_setLoad_StatusOn
 14973                           	line	370
 14974                           	
 14975  16E0                     l23983:	
 14976                           ;Dimmer_B1.c: 370: setLoad_Count(1,0);
 14977  16E0  0020               	movlb 0	; select bank0
 14978  16E1  01A0               	clrf	(?_setLoad_Count)
 14979  16E2  3001               	movlw	(01h)
 14980  16E3  31A2  2214  3196   	fcall	_setLoad_Count
 14981                           	line	372
 14982                           	
 14983  16E6                     l23985:	
 14984                           ;Dimmer_B1.c: 372: DimmerLights->Signal=1;
 14985  16E6  0020               	movlb 0	; select bank0
 14986  16E7  086D               	movf	(_DimmerLights),w
 14987  16E8  0086               	movwf	fsr1l
 14988  16E9  3001               	movlw 1	; select bank2/3
 14989  16EA  0087               	movwf fsr1h	
 14990                           	
 14991  16EB  1481               	bsf	indf1,1
 14992                           	line	373
 14993                           	
 14994  16EC                     l23987:	
 14995                           ;Dimmer_B1.c: 373: DimmerLights->DimmingTimeValue=3;
 14996  16EC  3003               	movlw	(03h)
 14997  16ED  00A7               	movwf	(??_setDimmerLights+0)+0
 14998  16EE  086D               	movf	(_DimmerLights),w
 14999  16EF  3E02               	addlw	02h
 15000  16F0  0086               	movwf	fsr1l
 15001  16F1  3001               	movlw 1	; select bank2/3
 15002  16F2  0087               	movwf fsr1h	
 15003                           	
 15004  16F3  0827               	movf	(??_setDimmerLights+0)+0,w
 15005  16F4  0081               	movwf	indf1
 15006                           	line	375
 15007                           	
 15008  16F5                     l23989:	
 15009                           ;Dimmer_B1.c: 375: if(DimmerLights->StatusFlag == 0)
 15010  16F5  086D               	movf	(_DimmerLights),w
 15011  16F6  0086               	movwf	fsr1l
 15012  16F7  3001               	movlw 1	; select bank2/3
 15013  16F8  0087               	movwf fsr1h	
 15014                           	
 15015  16F9  1B01               	btfsc	indf1,6
 15016  16FA  2EFC               	goto	u7711
 15017  16FB  2EFD               	goto	u7710
 15018  16FC                     u7711:
 15019  16FC  2F5A               	goto	l4751
 15020  16FD                     u7710:
 15021                           	line	377
 15022                           	
 15023  16FD                     l23991:	
 15024                           ;Dimmer_B1.c: 376: {
 15025                           ;Dimmer_B1.c: 377: DimmerLights->StatusFlag=1;
 15026  16FD  086D               	movf	(_DimmerLights),w
 15027  16FE  0086               	movwf	fsr1l
 15028  16FF  3001               	movlw 1	; select bank2/3
 15029  1700  0087               	movwf fsr1h	
 15030                           	
 15031  1701  1701               	bsf	indf1,6
 15032                           	line	378
 15033                           	
 15034  1702                     l23993:	
 15035                           ;Dimmer_B1.c: 378: setDimmer_Detect(1,1);
 15036  1702  01A2               	clrf	(?_setDimmer_Detect)
 15037  1703  1403               	bsf	status,0
 15038  1704  0DA2               	rlf	(?_setDimmer_Detect),f
 15039  1705  3001               	movlw	(01h)
 15040  1706  31A0  20A0  3196   	fcall	_setDimmer_Detect
 15041                           	line	379
 15042                           	
 15043  1709                     l23995:	
 15044                           ;Dimmer_B1.c: 379: setLoad_GO(1,1);
 15045  1709  0020               	movlb 0	; select bank0
 15046  170A  01A2               	clrf	(?_setLoad_GO)
 15047  170B  1403               	bsf	status,0
 15048  170C  0DA2               	rlf	(?_setLoad_GO),f
 15049  170D  3001               	movlw	(01h)
 15050  170E  31A0  20B0  3196   	fcall	_setLoad_GO
 15051                           	line	380
 15052                           	
 15053  1711                     l23997:	
 15054                           ;Dimmer_B1.c: 380: setLoad_LightsStatus(1,lights,1);
 15055  1711  0020               	movlb 0	; select bank0
 15056  1712  0828               	movf	(setDimmerLights@lights),w
 15057  1713  00A7               	movwf	(??_setDimmerLights+0)+0
 15058  1714  0827               	movf	(??_setDimmerLights+0)+0,w
 15059  1715  00A2               	movwf	(?_setLoad_LightsStatus)
 15060  1716  01A3               	clrf	0+(?_setLoad_LightsStatus)+01h
 15061  1717  1403               	bsf	status,0
 15062  1718  0DA3               	rlf	0+(?_setLoad_LightsStatus)+01h,f
 15063  1719  3001               	movlw	(01h)
 15064  171A  31A6  26D9  3196   	fcall	_setLoad_LightsStatus
 15065                           	line	382
 15066                           	
 15067  171D                     l23999:	
 15068                           ;Dimmer_B1.c: 382: DimmerLights->DimmingValue=DimmerLights->MaxmumValue;
 15069  171D  0020               	movlb 0	; select bank0
 15070  171E  086D               	movf	(_DimmerLights),w
 15071  171F  3E05               	addlw	05h
 15072  1720  0086               	movwf	fsr1l
 15073  1721  3001               	movlw 1	; select bank2/3
 15074  1722  0087               	movwf fsr1h	
 15075                           	
 15076  1723  0801               	movf	indf1,w
 15077  1724  00A7               	movwf	(??_setDimmerLights+0)+0
 15078  1725  086D               	movf	(_DimmerLights),w
 15079  1726  3E04               	addlw	04h
 15080  1727  0086               	movwf	fsr1l
 15081  1728  3001               	movlw 1	; select bank2/3
 15082  1729  0087               	movwf fsr1h	
 15083                           	
 15084  172A  0827               	movf	(??_setDimmerLights+0)+0,w
 15085  172B  0081               	movwf	indf1
 15086  172C  2F5A               	goto	l4751
 15087                           	line	384
 15088                           	
 15089  172D                     l4749:	
 15090                           	line	385
 15091                           ;Dimmer_B1.c: 384: }
 15092                           ;Dimmer_B1.c: 385: }
 15093  172D  2F5A               	goto	l4751
 15094                           	line	386
 15095                           	
 15096  172E                     l4748:	
 15097                           	line	388
 15098                           	
 15099  172E                     l24001:	
 15100                           ;Dimmer_B1.c: 386: else
 15101                           ;Dimmer_B1.c: 387: {
 15102                           ;Dimmer_B1.c: 388: DimmerLights->Status=0;
 15103  172E  086D               	movf	(_DimmerLights),w
 15104  172F  0086               	movwf	fsr1l
 15105  1730  3001               	movlw 1	; select bank2/3
 15106  1731  0087               	movwf fsr1h	
 15107                           	
 15108  1732  1281               	bcf	indf1,5
 15109                           	line	390
 15110                           ;Dimmer_B1.c: 390: DimmerLights->DimmingValue=DimmerLights->MinimumValue;
 15111  1733  086D               	movf	(_DimmerLights),w
 15112  1734  3E06               	addlw	06h
 15113  1735  0086               	movwf	fsr1l
 15114  1736  3001               	movlw 1	; select bank2/3
 15115  1737  0087               	movwf fsr1h	
 15116                           	
 15117  1738  0801               	movf	indf1,w
 15118  1739  00A7               	movwf	(??_setDimmerLights+0)+0
 15119  173A  086D               	movf	(_DimmerLights),w
 15120  173B  3E04               	addlw	04h
 15121  173C  0086               	movwf	fsr1l
 15122  173D  3001               	movlw 1	; select bank2/3
 15123  173E  0087               	movwf fsr1h	
 15124                           	
 15125  173F  0827               	movf	(??_setDimmerLights+0)+0,w
 15126  1740  0081               	movwf	indf1
 15127                           	line	393
 15128                           ;Dimmer_B1.c: 393: DimmerLights->Signal=1;
 15129  1741  086D               	movf	(_DimmerLights),w
 15130  1742  0086               	movwf	fsr1l
 15131  1743  3001               	movlw 1	; select bank2/3
 15132  1744  0087               	movwf fsr1h	
 15133                           	
 15134  1745  1481               	bsf	indf1,1
 15135                           	line	394
 15136                           ;Dimmer_B1.c: 394: DimmerLights->AdjFlag=0;
 15137  1746  086D               	movf	(_DimmerLights),w
 15138  1747  0086               	movwf	fsr1l
 15139  1748  3001               	movlw 1	; select bank2/3
 15140  1749  0087               	movwf fsr1h	
 15141                           	
 15142  174A  1181               	bcf	indf1,3
 15143                           	line	395
 15144                           ;Dimmer_B1.c: 395: DimmerLights->AdjStatus=0;
 15145  174B  086D               	movf	(_DimmerLights),w
 15146  174C  0086               	movwf	fsr1l
 15147  174D  3001               	movlw 1	; select bank2/3
 15148  174E  0087               	movwf fsr1h	
 15149                           	
 15150  174F  1201               	bcf	indf1,4
 15151                           	line	396
 15152                           ;Dimmer_B1.c: 396: DimmerLights->DimmingTimeValue=3;
 15153  1750  3003               	movlw	(03h)
 15154  1751  00A7               	movwf	(??_setDimmerLights+0)+0
 15155  1752  086D               	movf	(_DimmerLights),w
 15156  1753  3E02               	addlw	02h
 15157  1754  0086               	movwf	fsr1l
 15158  1755  3001               	movlw 1	; select bank2/3
 15159  1756  0087               	movwf fsr1h	
 15160                           	
 15161  1757  0827               	movf	(??_setDimmerLights+0)+0,w
 15162  1758  0081               	movwf	indf1
 15163  1759  2F5A               	goto	l4751
 15164                           	line	404
 15165                           	
 15166  175A                     l4750:	
 15167                           	line	405
 15168                           	
 15169  175A                     l4751:	
 15170  175A  0008               	return
 15171                           	opt stack 0
 15172                           GLOBAL	__end_of_setDimmerLights
 15173  175B                     	__end_of_setDimmerLights:
 15174 ;; =============== function _setDimmerLights ends ============
 15175                           
 15176                           	signat	_setDimmerLights,8312
 15177                           	global	_DimmerLights_Close
 15178                           psect	text3273,local,class=CODE,delta=2
 15179                           global __ptext3273
 15180  23E9                     __ptext3273:
 15181                           
 15182 ;; *************** function _DimmerLights_Close *****************
 15183 ;; Defined at:
 15184 ;;		line 71 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;		None
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;		None
 15189 ;; Return value:  Size  Location     Type
 15190 ;;		None               void
 15191 ;; Registers used:
 15192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15202 ;;Total ram usage:        0 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; Hardware stack levels required when called:    6
 15205 ;; This function calls:
 15206 ;;		_getDimmer_Detect
 15207 ;;		_setDimmer_Detect
 15208 ;;		_getDimmerLights_StatusFlag
 15209 ;;		_setLoad_GO
 15210 ;; This function is called by:
 15211 ;;		_DimmerLights_Main
 15212 ;; This function uses a non-reentrant model
 15213 ;;
 15214                           psect	text3273
 15215                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15216                           	line	71
 15217                           	global	__size_of_DimmerLights_Close
 15218  0027                     	__size_of_DimmerLights_Close	equ	__end_of_DimmerLights_Close-_DimmerLights_Close
 15219                           	
 15220  23E9                     _DimmerLights_Close:	
 15221                           	opt	stack 8
 15222                           ; Regs used in _DimmerLights_Close: [wreg+fsr1l-status,0+pclath+cstack]
 15223                           	line	72
 15224                           	
 15225  23E9                     l23961:	
 15226                           ;Dimmer_B1.c: 72: if(getDimmer_Detect(1))
 15227  23E9  3001               	movlw	(01h)
 15228  23EA  31A1  21B8  31A3   	fcall	_getDimmer_Detect
 15229  23ED  3A00               	xorlw	0&0ffh
 15230  23EE  1903               	skipnz
 15231  23EF  2BF1               	goto	u7681
 15232  23F0  2BF2               	goto	u7680
 15233  23F1                     u7681:
 15234  23F1  2C0F               	goto	l4698
 15235  23F2                     u7680:
 15236                           	line	74
 15237                           	
 15238  23F2                     l23963:	
 15239                           ;Dimmer_B1.c: 73: {
 15240                           ;Dimmer_B1.c: 74: setDimmer_Detect(1,0);
 15241  23F2  0020               	movlb 0	; select bank0
 15242  23F3  01A2               	clrf	(?_setDimmer_Detect)
 15243  23F4  3001               	movlw	(01h)
 15244  23F5  31A0  20A0  31A3   	fcall	_setDimmer_Detect
 15245                           	line	75
 15246                           ;Dimmer_B1.c: 75: if(!getDimmerLights_StatusFlag())
 15247  23F8  31A3  239B  31A3   	fcall	_getDimmerLights_StatusFlag
 15248  23FB  3800               	iorlw	0
 15249  23FC  1D03               	skipz
 15250  23FD  2BFF               	goto	u7691
 15251  23FE  2C00               	goto	u7690
 15252  23FF                     u7691:
 15253  23FF  2C0F               	goto	l4698
 15254  2400                     u7690:
 15255                           	line	77
 15256                           	
 15257  2400                     l23965:	
 15258                           ;Dimmer_B1.c: 76: {
 15259                           ;Dimmer_B1.c: 77: setLoad_GO(1,0);
 15260  2400  0020               	movlb 0	; select bank0
 15261  2401  01A2               	clrf	(?_setLoad_GO)
 15262  2402  3001               	movlw	(01h)
 15263  2403  31A0  20B0  31A3   	fcall	_setLoad_GO
 15264                           	line	78
 15265                           	
 15266  2406                     l23967:	
 15267                           ;Dimmer_B1.c: 78: Memory->GO=1;
 15268  2406  0021               	movlb 1	; select bank1
 15269  2407  086D               	movf	(_Memory)^080h,w
 15270  2408  3E22               	addlw	022h
 15271  2409  0086               	movwf	fsr1l
 15272  240A  3001               	movlw 1	; select bank2/3
 15273  240B  0087               	movwf fsr1h	
 15274                           	
 15275  240C  1481               	bsf	indf1,1
 15276  240D  2C0F               	goto	l4698
 15277                           	line	79
 15278                           	
 15279  240E                     l4697:	
 15280  240E  2C0F               	goto	l4698
 15281                           	line	80
 15282                           	
 15283  240F                     l4696:	
 15284                           	line	81
 15285                           	
 15286  240F                     l4698:	
 15287  240F  0008               	return
 15288                           	opt stack 0
 15289                           GLOBAL	__end_of_DimmerLights_Close
 15290  2410                     	__end_of_DimmerLights_Close:
 15291 ;; =============== function _DimmerLights_Close ends ============
 15292                           
 15293                           	signat	_DimmerLights_Close,88
 15294                           	global	_getPercentValue
 15295                           psect	text3274,local,class=CODE,delta=2
 15296                           global __ptext3274
 15297  1C69                     __ptext3274:
 15298                           
 15299 ;; *************** function _getPercentValue *****************
 15300 ;; Defined at:
 15301 ;;		line 491 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 15302 ;; Parameters:    Size  Location     Type
 15303 ;;  value           1    wreg     unsigned char 
 15304 ;; Auto vars:     Size  Location     Type
 15305 ;;  value           1   59[BANK0 ] unsigned char 
 15306 ;;  i               3   60[BANK0 ] float 
 15307 ;; Return value:  Size  Location     Type
 15308 ;;                  1    wreg      unsigned char 
 15309 ;; Registers used:
 15310 ;;		wreg, status,2, status,0, pclath, cstack
 15311 ;; Tracked objects:
 15312 ;;		On entry : 0/0
 15313 ;;		On exit  : 0/0
 15314 ;;		Unchanged: 0/0
 15315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15317 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 15318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15319 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 15320 ;;Total ram usage:        6 bytes
 15321 ;; Hardware stack levels used:    1
 15322 ;; Hardware stack levels required when called:    6
 15323 ;; This function calls:
 15324 ;;		___ftdiv
 15325 ;;		___awtoft
 15326 ;;		___ftmul
 15327 ;;		___ftadd
 15328 ;;		___fttol
 15329 ;; This function is called by:
 15330 ;;		_setDimmerLights_Initialization
 15331 ;;		_setDimmerLights_AdjRF
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           psect	text3274
 15335                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 15336                           	line	491
 15337                           	global	__size_of_getPercentValue
 15338  005D                     	__size_of_getPercentValue	equ	__end_of_getPercentValue-_getPercentValue
 15339                           	
 15340  1C69                     _getPercentValue:	
 15341                           	opt	stack 2
 15342                           ; Regs used in _getPercentValue: [wreg+status,2+status,0+pclath+cstack]
 15343                           ;getPercentValue@value stored from wreg
 15344  1C69  0020               	movlb 0	; select bank0
 15345  1C6A  00DB               	movwf	(getPercentValue@value)
 15346                           	line	492
 15347                           	
 15348  1C6B                     l23953:	
 15349                           ;Dimmer_B1.c: 492: float i=((char)((100-20)*1.5))-((char)((100-60)*1.5));
 15350  1C6B  3000               	movlw	0x0
 15351  1C6C  00DC               	movwf	(getPercentValue@i)
 15352  1C6D  3070               	movlw	0x70
 15353  1C6E  00DD               	movwf	(getPercentValue@i+1)
 15354  1C6F  3042               	movlw	0x42
 15355  1C70  00DE               	movwf	(getPercentValue@i+2)
 15356                           	line	493
 15357                           	
 15358  1C71                     l23955:	
 15359                           ;Dimmer_B1.c: 493: i/=100;
 15360  1C71  3000               	movlw	0x0
 15361  1C72  00BC               	movwf	(?___ftdiv)
 15362  1C73  30C8               	movlw	0xc8
 15363  1C74  00BD               	movwf	(?___ftdiv+1)
 15364  1C75  3042               	movlw	0x42
 15365  1C76  00BE               	movwf	(?___ftdiv+2)
 15366  1C77  085C               	movf	(getPercentValue@i),w
 15367  1C78  00BF               	movwf	0+(?___ftdiv)+03h
 15368  1C79  085D               	movf	(getPercentValue@i+1),w
 15369  1C7A  00C0               	movwf	1+(?___ftdiv)+03h
 15370  1C7B  085E               	movf	(getPercentValue@i+2),w
 15371  1C7C  00C1               	movwf	2+(?___ftdiv)+03h
 15372  1C7D  3189  2166  319C   	fcall	___ftdiv
 15373  1C80  0020               	movlb 0	; select bank0
 15374  1C81  083C               	movf	(0+(?___ftdiv)),w
 15375  1C82  00DC               	movwf	(getPercentValue@i)
 15376  1C83  083D               	movf	(1+(?___ftdiv)),w
 15377  1C84  00DD               	movwf	(getPercentValue@i+1)
 15378  1C85  083E               	movf	(2+(?___ftdiv)),w
 15379  1C86  00DE               	movwf	(getPercentValue@i+2)
 15380                           	line	494
 15381                           	
 15382  1C87                     l23957:	
 15383                           ;Dimmer_B1.c: 494: return (char)(((100-value)*i)+((char)((100-60)*1.5)));
 15384  1C87  085B               	movf	(getPercentValue@value),w
 15385  1C88  00D9               	movwf	(??_getPercentValue+0)+0
 15386  1C89  01DA               	clrf	(??_getPercentValue+0)+0+1
 15387  1C8A  09D9               	comf	(??_getPercentValue+0)+0,f
 15388  1C8B  09DA               	comf	(??_getPercentValue+0)+1,f
 15389  1C8C  0AD9               	incf	(??_getPercentValue+0)+0,f
 15390  1C8D  1903               	skipnz
 15391  1C8E  0ADA               	incf	(??_getPercentValue+0)+1,f
 15392  1C8F  0859               	movf	0+(??_getPercentValue+0)+0,w
 15393  1C90  3E64               	addlw	low(064h)
 15394  1C91  00B6               	movwf	(?___awtoft)
 15395  1C92  3000               	movlw	high(064h)
 15396  1C93  3D5A               	addwfc	1+(??_getPercentValue+0)+0,w
 15397  1C94  00B7               	movwf	1+(?___awtoft)
 15398  1C95  31A4  2438  319C   	fcall	___awtoft
 15399  1C98  0020               	movlb 0	; select bank0
 15400  1C99  0836               	movf	(0+(?___awtoft)),w
 15401  1C9A  00BF               	movwf	0+(?___ftmul)+03h
 15402  1C9B  0837               	movf	(1+(?___awtoft)),w
 15403  1C9C  00C0               	movwf	1+(?___ftmul)+03h
 15404  1C9D  0838               	movf	(2+(?___awtoft)),w
 15405  1C9E  00C1               	movwf	2+(?___ftmul)+03h
 15406  1C9F  085C               	movf	(getPercentValue@i),w
 15407  1CA0  00BC               	movwf	(?___ftmul)
 15408  1CA1  085D               	movf	(getPercentValue@i+1),w
 15409  1CA2  00BD               	movwf	(?___ftmul+1)
 15410  1CA3  085E               	movf	(getPercentValue@i+2),w
 15411  1CA4  00BE               	movwf	(?___ftmul+2)
 15412  1CA5  318B  239A  319C   	fcall	___ftmul
 15413  1CA8  0020               	movlb 0	; select bank0
 15414  1CA9  083C               	movf	(0+(?___ftmul)),w
 15415  1CAA  00CF               	movwf	0+(?___ftadd)+03h
 15416  1CAB  083D               	movf	(1+(?___ftmul)),w
 15417  1CAC  00D0               	movwf	1+(?___ftadd)+03h
 15418  1CAD  083E               	movf	(2+(?___ftmul)),w
 15419  1CAE  00D1               	movwf	2+(?___ftadd)+03h
 15420  1CAF  3000               	movlw	0x0
 15421  1CB0  00CC               	movwf	(?___ftadd)
 15422  1CB1  3070               	movlw	0x70
 15423  1CB2  00CD               	movwf	(?___ftadd+1)
 15424  1CB3  3042               	movlw	0x42
 15425  1CB4  00CE               	movwf	(?___ftadd+2)
 15426  1CB5  318D  2569  319C   	fcall	___ftadd
 15427  1CB8  0020               	movlb 0	; select bank0
 15428  1CB9  084C               	movf	(0+(?___ftadd)),w
 15429  1CBA  00A8               	movwf	(?___fttol)
 15430  1CBB  084D               	movf	(1+(?___ftadd)),w
 15431  1CBC  00A9               	movwf	(?___fttol+1)
 15432  1CBD  084E               	movf	(2+(?___ftadd)),w
 15433  1CBE  00AA               	movwf	(?___fttol+2)
 15434  1CBF  3195  2578  319C   	fcall	___fttol
 15435  1CC2  0020               	movlb 0	; select bank0
 15436  1CC3  0828               	movf	0+(((0+(?___fttol)))),w
 15437  1CC4  2CC5               	goto	l4793
 15438                           	
 15439  1CC5                     l23959:	
 15440                           	line	495
 15441                           	
 15442  1CC5                     l4793:	
 15443  1CC5  0008               	return
 15444                           	opt stack 0
 15445                           GLOBAL	__end_of_getPercentValue
 15446  1CC6                     	__end_of_getPercentValue:
 15447 ;; =============== function _getPercentValue ends ============
 15448                           
 15449                           	signat	_getPercentValue,4217
 15450                           	global	_DlyOff_Main
 15451                           psect	text3275,local,class=CODE,delta=2
 15452                           global __ptext3275
 15453  1464                     __ptext3275:
 15454                           
 15455 ;; *************** function _DlyOff_Main *****************
 15456 ;; Defined at:
 15457 ;;		line 63 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 15458 ;; Parameters:    Size  Location     Type
 15459 ;;  sw              1    wreg     unsigned char 
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;  sw              1   16[BANK0 ] unsigned char 
 15462 ;; Return value:  Size  Location     Type
 15463 ;;		None               void
 15464 ;; Registers used:
 15465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 15473 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 15474 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 15475 ;;Total ram usage:        3 bytes
 15476 ;; Hardware stack levels used:    1
 15477 ;; Hardware stack levels required when called:    6
 15478 ;; This function calls:
 15479 ;;		_DelayOffPointSelect
 15480 ;;		_setSw_Status
 15481 ;;		_setRFSW_Status
 15482 ;;		_setRF_DimmerLights
 15483 ;;		_setDimmerLights_Trigger
 15484 ;;		_setDimmerLights_Switch
 15485 ;;		_setTxData
 15486 ;;		_setBuz
 15487 ;; This function is called by:
 15488 ;;		_DelayOff_Main
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           psect	text3275
 15492                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 15493                           	line	63
 15494                           	global	__size_of_DlyOff_Main
 15495  0089                     	__size_of_DlyOff_Main	equ	__end_of_DlyOff_Main-_DlyOff_Main
 15496                           	
 15497  1464                     _DlyOff_Main:	
 15498                           	opt	stack 8
 15499                           ; Regs used in _DlyOff_Main: [wreg-status,0+pclath+cstack]
 15500                           ;DlyOff_Main@sw stored from wreg
 15501  1464  0020               	movlb 0	; select bank0
 15502  1465  00B0               	movwf	(DlyOff_Main@sw)
 15503                           	line	64
 15504                           	
 15505  1466                     l23923:	
 15506                           ;DelayOff_B1.c: 64: DelayOffPointSelect(sw);
 15507  1466  0830               	movf	(DlyOff_Main@sw),w
 15508  1467  31A0  2016  3194   	fcall	_DelayOffPointSelect
 15509                           	line	65
 15510                           	
 15511  146A                     l23925:	
 15512                           ;DelayOff_B1.c: 65: if(DelayOff->GO)
 15513  146A  0021               	movlb 1	; select bank1
 15514  146B  0839               	movf	(_DelayOff)^080h,w
 15515  146C  0086               	movwf	fsr1l
 15516  146D  0187               	clrf fsr1h	
 15517                           	
 15518  146E  1C81               	btfss	indf1,1
 15519  146F  2C71               	goto	u7651
 15520  1470  2C72               	goto	u7650
 15521  1471                     u7651:
 15522  1471  2CEC               	goto	l3510
 15523  1472                     u7650:
 15524                           	line	67
 15525                           	
 15526  1472                     l23927:	
 15527                           ;DelayOff_B1.c: 66: {
 15528                           ;DelayOff_B1.c: 67: DelayOff->SecondTime++;
 15529  1472  0839               	movf	(_DelayOff)^080h,w
 15530  1473  3E02               	addlw	02h
 15531  1474  0086               	movwf	fsr1l
 15532  1475  0187               	clrf fsr1h	
 15533                           	
 15534  1476  3001               	movlw	01h
 15535  1477  0781               	addwf	indf1,f
 15536  1478  3141               	addfsr	fsr1,1
 15537  1479  1803               	skipnc
 15538  147A  0A81               	incf	indf1,f
 15539                           	line	68
 15540                           	
 15541  147B                     l23929:	
 15542                           ;DelayOff_B1.c: 68: if(DelayOff->SecondTime >= 5600)
 15543  147B  0839               	movf	(_DelayOff)^080h,w
 15544  147C  3E02               	addlw	02h
 15545  147D  0086               	movwf	fsr1l
 15546  147E  0187               	clrf fsr1h	
 15547                           	
 15548  147F  3F40               	moviw	[0]fsr1
 15549  1480  0020               	movlb 0	; select bank0
 15550  1481  00AE               	movwf	(??_DlyOff_Main+0)+0
 15551  1482  3F41               	moviw	[1]fsr1
 15552  1483  00AF               	movwf	(??_DlyOff_Main+0)+0+1
 15553  1484  3015               	movlw	high(015E0h)
 15554  1485  022F               	subwf	1+(??_DlyOff_Main+0)+0,w
 15555  1486  30E0               	movlw	low(015E0h)
 15556  1487  1903               	skipnz
 15557  1488  022E               	subwf	0+(??_DlyOff_Main+0)+0,w
 15558  1489  1C03               	skipc
 15559  148A  2C8C               	goto	u7661
 15560  148B  2C8D               	goto	u7660
 15561  148C                     u7661:
 15562  148C  2CEC               	goto	l3510
 15563  148D                     u7660:
 15564                           	line	70
 15565                           	
 15566  148D                     l23931:	
 15567                           ;DelayOff_B1.c: 69: {
 15568                           ;DelayOff_B1.c: 70: DelayOff->SecondTime=0;
 15569  148D  0021               	movlb 1	; select bank1
 15570  148E  0839               	movf	(_DelayOff)^080h,w
 15571  148F  3E02               	addlw	02h
 15572  1490  0086               	movwf	fsr1l
 15573  1491  0187               	clrf fsr1h	
 15574                           	
 15575  1492  3000               	movlw	low(0)
 15576  1493  3FC0               	movwi	[0]fsr1
 15577  1494  3000               	movlw	high(0)
 15578  1495  3FC1               	movwi	[1]fsr1
 15579                           	line	71
 15580                           	
 15581  1496                     l23933:	
 15582                           ;DelayOff_B1.c: 71: DelayOff->MinuteTime++;
 15583  1496  3001               	movlw	(01h)
 15584  1497  0020               	movlb 0	; select bank0
 15585  1498  00AE               	movwf	(??_DlyOff_Main+0)+0
 15586  1499  0021               	movlb 1	; select bank1
 15587  149A  0839               	movf	(_DelayOff)^080h,w
 15588  149B  3E04               	addlw	04h
 15589  149C  0086               	movwf	fsr1l
 15590  149D  0187               	clrf fsr1h	
 15591                           	
 15592  149E  0020               	movlb 0	; select bank0
 15593  149F  082E               	movf	(??_DlyOff_Main+0)+0,w
 15594  14A0  0781               	addwf	indf1,f
 15595                           	line	72
 15596                           	
 15597  14A1                     l23935:	
 15598                           ;DelayOff_B1.c: 72: if(DelayOff->MinuteTime >= DelayOff->Value)
 15599  14A1  0021               	movlb 1	; select bank1
 15600  14A2  0839               	movf	(_DelayOff)^080h,w
 15601  14A3  3E04               	addlw	04h
 15602  14A4  0086               	movwf	fsr1l
 15603  14A5  0187               	clrf fsr1h	
 15604                           	
 15605  14A6  0839               	movf	(_DelayOff)^080h,w
 15606  14A7  3E01               	addlw	01h
 15607  14A8  0084               	movwf	fsr0l
 15608  14A9  0185               	clrf fsr0h	
 15609                           	
 15610  14AA  0800               	movf	indf0,w
 15611  14AB  0201               	subwf	indf1,w
 15612  14AC  1C03               	skipc
 15613  14AD  2CAF               	goto	u7671
 15614  14AE  2CB0               	goto	u7670
 15615  14AF                     u7671:
 15616  14AF  2CEC               	goto	l3510
 15617  14B0                     u7670:
 15618                           	line	74
 15619                           	
 15620  14B0                     l23937:	
 15621                           ;DelayOff_B1.c: 73: {
 15622                           ;DelayOff_B1.c: 74: DelayOff->MinuteTime=0;
 15623  14B0  0839               	movf	(_DelayOff)^080h,w
 15624  14B1  3E04               	addlw	04h
 15625  14B2  0086               	movwf	fsr1l
 15626  14B3  0187               	clrf fsr1h	
 15627                           	
 15628  14B4  0181               	clrf	indf1
 15629                           	line	75
 15630                           ;DelayOff_B1.c: 75: DelayOff->GO=0;
 15631  14B5  0839               	movf	(_DelayOff)^080h,w
 15632  14B6  0086               	movwf	fsr1l
 15633  14B7  0187               	clrf fsr1h	
 15634                           	
 15635  14B8  1081               	bcf	indf1,1
 15636                           	line	76
 15637                           	
 15638  14B9                     l23939:	
 15639                           ;DelayOff_B1.c: 76: setSw_Status(sw,0);
 15640  14B9  0020               	movlb 0	; select bank0
 15641  14BA  01A2               	clrf	(?_setSw_Status)
 15642  14BB  0830               	movf	(DlyOff_Main@sw),w
 15643  14BC  31A0  2080  3194   	fcall	_setSw_Status
 15644                           	line	77
 15645                           	
 15646  14BF                     l23941:	
 15647                           ;DelayOff_B1.c: 77: setRFSW_Status(sw,0);
 15648  14BF  0020               	movlb 0	; select bank0
 15649  14C0  01A2               	clrf	(?_setRFSW_Status)
 15650  14C1  0830               	movf	(DlyOff_Main@sw),w
 15651  14C2  31A0  2090  3194   	fcall	_setRFSW_Status
 15652                           	line	78
 15653                           	
 15654  14C5                     l23943:	
 15655                           ;DelayOff_B1.c: 78: setRF_DimmerLights(sw,0);
 15656  14C5  0020               	movlb 0	; select bank0
 15657  14C6  01A0               	clrf	(?_setRF_DimmerLights)
 15658  14C7  0830               	movf	(DlyOff_Main@sw),w
 15659  14C8  319D  2523  3194   	fcall	_setRF_DimmerLights
 15660                           	line	79
 15661                           	
 15662  14CB                     l23945:	
 15663                           ;DelayOff_B1.c: 79: setDimmerLights_Trigger(sw,1);
 15664  14CB  0020               	movlb 0	; select bank0
 15665  14CC  01A2               	clrf	(?_setDimmerLights_Trigger)
 15666  14CD  1403               	bsf	status,0
 15667  14CE  0DA2               	rlf	(?_setDimmerLights_Trigger),f
 15668  14CF  0830               	movf	(DlyOff_Main@sw),w
 15669  14D0  31A1  2141  3194   	fcall	_setDimmerLights_Trigger
 15670                           	line	80
 15671                           	
 15672  14D3                     l23947:	
 15673                           ;DelayOff_B1.c: 80: setDimmerLights_Switch(sw,0);
 15674  14D3  0020               	movlb 0	; select bank0
 15675  14D4  01A2               	clrf	(?_setDimmerLights_Switch)
 15676  14D5  0830               	movf	(DlyOff_Main@sw),w
 15677  14D6  31A1  2152  3194   	fcall	_setDimmerLights_Switch
 15678                           	line	81
 15679                           	
 15680  14D9                     l23949:	
 15681                           ;DelayOff_B1.c: 81: setTxData(1);
 15682  14D9  3001               	movlw	(01h)
 15683  14DA  319A  2272  3194   	fcall	_setTxData
 15684                           	line	82
 15685                           	
 15686  14DD                     l23951:	
 15687                           ;DelayOff_B1.c: 82: setBuz(1,1,100);
 15688  14DD  0020               	movlb 0	; select bank0
 15689  14DE  01A9               	clrf	(?_setBuz)
 15690  14DF  1403               	bsf	status,0
 15691  14E0  0DA9               	rlf	(?_setBuz),f
 15692  14E1  3064               	movlw	low(064h)
 15693  14E2  00AA               	movwf	0+(?_setBuz)+01h
 15694  14E3  3000               	movlw	high(064h)
 15695  14E4  00AB               	movwf	(0+(?_setBuz)+01h)+1
 15696  14E5  3001               	movlw	(01h)
 15697  14E6  3196  2617  3194   	fcall	_setBuz
 15698  14E9  2CEC               	goto	l3510
 15699                           	line	83
 15700                           	
 15701  14EA                     l3509:	
 15702  14EA  2CEC               	goto	l3510
 15703                           	line	84
 15704                           	
 15705  14EB                     l3508:	
 15706  14EB  2CEC               	goto	l3510
 15707                           	line	85
 15708                           	
 15709  14EC                     l3507:	
 15710                           	line	86
 15711                           	
 15712  14EC                     l3510:	
 15713  14EC  0008               	return
 15714                           	opt stack 0
 15715                           GLOBAL	__end_of_DlyOff_Main
 15716  14ED                     	__end_of_DlyOff_Main:
 15717 ;; =============== function _DlyOff_Main ends ============
 15718                           
 15719                           	signat	_DlyOff_Main,4216
 15720                           	global	_DelayOff_Initialization
 15721                           psect	text3276,local,class=CODE,delta=2
 15722                           global __ptext3276
 15723  2E8E                     __ptext3276:
 15724                           
 15725 ;; *************** function _DelayOff_Initialization *****************
 15726 ;; Defined at:
 15727 ;;		line 31 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;		None
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;		None
 15732 ;; Return value:  Size  Location     Type
 15733 ;;		None               void
 15734 ;; Registers used:
 15735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15745 ;;Total ram usage:        0 bytes
 15746 ;; Hardware stack levels used:    1
 15747 ;; Hardware stack levels required when called:    6
 15748 ;; This function calls:
 15749 ;;		_DlyOff_Initialization
 15750 ;; This function is called by:
 15751 ;;		_main
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           psect	text3276
 15755                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 15756                           	line	31
 15757                           	global	__size_of_DelayOff_Initialization
 15758  0005                     	__size_of_DelayOff_Initialization	equ	__end_of_DelayOff_Initialization-_DelayOff_Initia
                                 lization
 15759                           	
 15760  2E8E                     _DelayOff_Initialization:	
 15761                           	opt	stack 9
 15762                           ; Regs used in _DelayOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 15763                           	line	33
 15764                           	
 15765  2E8E                     l23921:	
 15766                           ;DelayOff_B1.c: 33: DlyOff_Initialization(1);
 15767  2E8E  3001               	movlw	(01h)
 15768  2E8F  31AF  2736  31AE   	fcall	_DlyOff_Initialization
 15769                           	line	41
 15770                           	
 15771  2E92                     l3498:	
 15772  2E92  0008               	return
 15773                           	opt stack 0
 15774                           GLOBAL	__end_of_DelayOff_Initialization
 15775  2E93                     	__end_of_DelayOff_Initialization:
 15776 ;; =============== function _DelayOff_Initialization ends ============
 15777                           
 15778                           	signat	_DelayOff_Initialization,88
 15779                           	global	_CC2500_SIDLEMode
 15780                           psect	text3277,local,class=CODE,delta=2
 15781                           global __ptext3277
 15782  2E89                     __ptext3277:
 15783                           
 15784 ;; *************** function _CC2500_SIDLEMode *****************
 15785 ;; Defined at:
 15786 ;;		line 184 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;		None
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;		None
 15791 ;; Return value:  Size  Location     Type
 15792 ;;		None               void
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, status,0, pclath, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15804 ;;Total ram usage:        0 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    6
 15807 ;; This function calls:
 15808 ;;		_CC2500_WriteCommand
 15809 ;; This function is called by:
 15810 ;;		_CC2500_PowerOnInitial
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           psect	text3277
 15814                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 15815                           	line	184
 15816                           	global	__size_of_CC2500_SIDLEMode
 15817  0005                     	__size_of_CC2500_SIDLEMode	equ	__end_of_CC2500_SIDLEMode-_CC2500_SIDLEMode
 15818                           	
 15819  2E89                     _CC2500_SIDLEMode:	
 15820                           	opt	stack 8
 15821                           ; Regs used in _CC2500_SIDLEMode: [wreg+status,2+status,0+pclath+cstack]
 15822                           	line	185
 15823                           	
 15824  2E89                     l23919:	
 15825                           ;CC2500_B1.c: 185: CC2500_WriteCommand(0x36);
 15826  2E89  3036               	movlw	(036h)
 15827  2E8A  31A2  223D  31AE   	fcall	_CC2500_WriteCommand
 15828                           	line	186
 15829                           	
 15830  2E8D                     l2329:	
 15831  2E8D  0008               	return
 15832                           	opt stack 0
 15833                           GLOBAL	__end_of_CC2500_SIDLEMode
 15834  2E8E                     	__end_of_CC2500_SIDLEMode:
 15835 ;; =============== function _CC2500_SIDLEMode ends ============
 15836                           
 15837                           	signat	_CC2500_SIDLEMode,88
 15838                           	global	_CC2500_FrequencyCabr
 15839                           psect	text3278,local,class=CODE,delta=2
 15840                           global __ptext3278
 15841  2F4E                     __ptext3278:
 15842                           
 15843 ;; *************** function _CC2500_FrequencyCabr *****************
 15844 ;; Defined at:
 15845 ;;		line 176 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 15846 ;; Parameters:    Size  Location     Type
 15847 ;;		None
 15848 ;; Auto vars:     Size  Location     Type
 15849 ;;		None
 15850 ;; Return value:  Size  Location     Type
 15851 ;;		None               void
 15852 ;; Registers used:
 15853 ;;		wreg, status,2, status,0, pclath, cstack
 15854 ;; Tracked objects:
 15855 ;;		On entry : 0/0
 15856 ;;		On exit  : 0/0
 15857 ;;		Unchanged: 0/0
 15858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15863 ;;Total ram usage:        0 bytes
 15864 ;; Hardware stack levels used:    1
 15865 ;; Hardware stack levels required when called:    6
 15866 ;; This function calls:
 15867 ;;		_CC2500_WriteCommand
 15868 ;;		_DelayTime_1us
 15869 ;; This function is called by:
 15870 ;;		_CC2500_PowerOnInitial
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           psect	text3278
 15874                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 15875                           	line	176
 15876                           	global	__size_of_CC2500_FrequencyCabr
 15877  000D                     	__size_of_CC2500_FrequencyCabr	equ	__end_of_CC2500_FrequencyCabr-_CC2500_FrequencyCabr
 15878                           	
 15879  2F4E                     _CC2500_FrequencyCabr:	
 15880                           	opt	stack 8
 15881                           ; Regs used in _CC2500_FrequencyCabr: [wreg+status,2+status,0+pclath+cstack]
 15882                           	line	177
 15883                           	
 15884  2F4E                     l23917:	
 15885                           ;CC2500_B1.c: 177: CC2500_WriteCommand(0x33);
 15886  2F4E  3033               	movlw	(033h)
 15887  2F4F  31A2  223D  31AF   	fcall	_CC2500_WriteCommand
 15888                           	line	178
 15889                           ;CC2500_B1.c: 178: DelayTime_1us(1000);
 15890  2F52  30E8               	movlw	low(03E8h)
 15891  2F53  0020               	movlb 0	; select bank0
 15892  2F54  00A0               	movwf	(?_DelayTime_1us)
 15893  2F55  3003               	movlw	high(03E8h)
 15894  2F56  00A1               	movwf	((?_DelayTime_1us))+1
 15895  2F57  31A5  2599  31AF   	fcall	_DelayTime_1us
 15896                           	line	179
 15897                           	
 15898  2F5A                     l2326:	
 15899  2F5A  0008               	return
 15900                           	opt stack 0
 15901                           GLOBAL	__end_of_CC2500_FrequencyCabr
 15902  2F5B                     	__end_of_CC2500_FrequencyCabr:
 15903 ;; =============== function _CC2500_FrequencyCabr ends ============
 15904                           
 15905                           	signat	_CC2500_FrequencyCabr,88
 15906                           	global	_CC2500_ClearRXFIFO
 15907                           psect	text3279,local,class=CODE,delta=2
 15908                           global __ptext3279
 15909  2E84                     __ptext3279:
 15910                           
 15911 ;; *************** function _CC2500_ClearRXFIFO *****************
 15912 ;; Defined at:
 15913 ;;		line 169 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;		None
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;		None               void
 15920 ;; Registers used:
 15921 ;;		wreg, status,2, status,0, pclath, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15931 ;;Total ram usage:        0 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; Hardware stack levels required when called:    6
 15934 ;; This function calls:
 15935 ;;		_CC2500_WriteCommand
 15936 ;; This function is called by:
 15937 ;;		_CC2500_PowerOnInitial
 15938 ;; This function uses a non-reentrant model
 15939 ;;
 15940                           psect	text3279
 15941                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 15942                           	line	169
 15943                           	global	__size_of_CC2500_ClearRXFIFO
 15944  0005                     	__size_of_CC2500_ClearRXFIFO	equ	__end_of_CC2500_ClearRXFIFO-_CC2500_ClearRXFIFO
 15945                           	
 15946  2E84                     _CC2500_ClearRXFIFO:	
 15947                           	opt	stack 8
 15948                           ; Regs used in _CC2500_ClearRXFIFO: [wreg+status,2+status,0+pclath+cstack]
 15949                           	line	170
 15950                           	
 15951  2E84                     l23915:	
 15952                           ;CC2500_B1.c: 170: CC2500_WriteCommand(0x3A);
 15953  2E84  303A               	movlw	(03Ah)
 15954  2E85  31A2  223D  31AE   	fcall	_CC2500_WriteCommand
 15955                           	line	171
 15956                           	
 15957  2E88                     l2323:	
 15958  2E88  0008               	return
 15959                           	opt stack 0
 15960                           GLOBAL	__end_of_CC2500_ClearRXFIFO
 15961  2E89                     	__end_of_CC2500_ClearRXFIFO:
 15962 ;; =============== function _CC2500_ClearRXFIFO ends ============
 15963                           
 15964                           	signat	_CC2500_ClearRXFIFO,88
 15965                           	global	_CC2500_ClearTXFIFO
 15966                           psect	text3280,local,class=CODE,delta=2
 15967                           global __ptext3280
 15968  2E7F                     __ptext3280:
 15969                           
 15970 ;; *************** function _CC2500_ClearTXFIFO *****************
 15971 ;; Defined at:
 15972 ;;		line 162 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;		None
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;		None
 15977 ;; Return value:  Size  Location     Type
 15978 ;;		None               void
 15979 ;; Registers used:
 15980 ;;		wreg, status,2, status,0, pclath, cstack
 15981 ;; Tracked objects:
 15982 ;;		On entry : 0/0
 15983 ;;		On exit  : 0/0
 15984 ;;		Unchanged: 0/0
 15985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 15986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 15990 ;;Total ram usage:        0 bytes
 15991 ;; Hardware stack levels used:    1
 15992 ;; Hardware stack levels required when called:    6
 15993 ;; This function calls:
 15994 ;;		_CC2500_WriteCommand
 15995 ;; This function is called by:
 15996 ;;		_CC2500_PowerOnInitial
 15997 ;; This function uses a non-reentrant model
 15998 ;;
 15999                           psect	text3280
 16000                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16001                           	line	162
 16002                           	global	__size_of_CC2500_ClearTXFIFO
 16003  0005                     	__size_of_CC2500_ClearTXFIFO	equ	__end_of_CC2500_ClearTXFIFO-_CC2500_ClearTXFIFO
 16004                           	
 16005  2E7F                     _CC2500_ClearTXFIFO:	
 16006                           	opt	stack 8
 16007                           ; Regs used in _CC2500_ClearTXFIFO: [wreg+status,2+status,0+pclath+cstack]
 16008                           	line	163
 16009                           	
 16010  2E7F                     l23913:	
 16011                           ;CC2500_B1.c: 163: CC2500_WriteCommand(0x3B);
 16012  2E7F  303B               	movlw	(03Bh)
 16013  2E80  31A2  223D  31AE   	fcall	_CC2500_WriteCommand
 16014                           	line	164
 16015                           	
 16016  2E83                     l2320:	
 16017  2E83  0008               	return
 16018                           	opt stack 0
 16019                           GLOBAL	__end_of_CC2500_ClearTXFIFO
 16020  2E84                     	__end_of_CC2500_ClearTXFIFO:
 16021 ;; =============== function _CC2500_ClearTXFIFO ends ============
 16022                           
 16023                           	signat	_CC2500_ClearTXFIFO,88
 16024                           	global	_CC2500_InitPATable
 16025                           psect	text3281,local,class=CODE,delta=2
 16026                           global __ptext3281
 16027  23C2                     __ptext3281:
 16028                           
 16029 ;; *************** function _CC2500_InitPATable *****************
 16030 ;; Defined at:
 16031 ;;		line 148 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;		None
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;  loop_d          1    7[BANK0 ] unsigned char 
 16036 ;;  temp            1    6[BANK0 ] unsigned char 
 16037 ;; Return value:  Size  Location     Type
 16038 ;;		None               void
 16039 ;; Registers used:
 16040 ;;		wreg, status,2, status,0, pclath, cstack
 16041 ;; Tracked objects:
 16042 ;;		On entry : 0/0
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16047 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16049 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16050 ;;Total ram usage:        3 bytes
 16051 ;; Hardware stack levels used:    1
 16052 ;; Hardware stack levels required when called:    6
 16053 ;; This function calls:
 16054 ;;		_CC2500_WriteREG
 16055 ;; This function is called by:
 16056 ;;		_CC2500_PowerOnInitial
 16057 ;; This function uses a non-reentrant model
 16058 ;;
 16059                           psect	text3281
 16060                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16061                           	line	148
 16062                           	global	__size_of_CC2500_InitPATable
 16063  0027                     	__size_of_CC2500_InitPATable	equ	__end_of_CC2500_InitPATable-_CC2500_InitPATable
 16064                           	
 16065  23C2                     _CC2500_InitPATable:	
 16066                           	opt	stack 8
 16067                           ; Regs used in _CC2500_InitPATable: [wreg+status,2+status,0+pclath+cstack]
 16068                           	line	152
 16069                           	
 16070  23C2                     l23899:	
 16071                           ;CC2500_B1.c: 149: unsigned char loop_d;
 16072                           ;CC2500_B1.c: 150: unsigned char temp;
 16073                           ;CC2500_B1.c: 152: for(loop_d=0;loop_d<8;loop_d++)
 16074  23C2  0020               	movlb 0	; select bank0
 16075  23C3  01A7               	clrf	(CC2500_InitPATable@loop_d)
 16076                           	
 16077  23C4                     l23901:	
 16078  23C4  3008               	movlw	(08h)
 16079  23C5  0227               	subwf	(CC2500_InitPATable@loop_d),w
 16080  23C6  1C03               	skipc
 16081  23C7  2BC9               	goto	u7631
 16082  23C8  2BCA               	goto	u7630
 16083  23C9                     u7631:
 16084  23C9  2BCC               	goto	l23905
 16085  23CA                     u7630:
 16086  23CA  2BE8               	goto	l2317
 16087                           	
 16088  23CB                     l23903:	
 16089  23CB  2BE8               	goto	l2317
 16090                           	line	153
 16091                           	
 16092  23CC                     l2315:	
 16093                           	line	154
 16094                           	
 16095  23CC                     l23905:	
 16096                           ;CC2500_B1.c: 153: {
 16097                           ;CC2500_B1.c: 154: temp=CC2500_patable_vaule[loop_d];
 16098  23CC  0827               	movf	(CC2500_InitPATable@loop_d),w
 16099  23CD  3E5F               	addlw	low(_CC2500_patable_vaule|8000h)
 16100  23CE  3198               	movlp	high __stringtab
 16101  23CF  000A               	callw
 16102  23D0  31A3               	pagesel	$
 16103  23D1  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16104  23D2  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16105  23D3  00A6               	movwf	(CC2500_InitPATable@temp)
 16106                           	line	155
 16107                           	
 16108  23D4                     l23907:	
 16109                           ;CC2500_B1.c: 155: CC2500_WriteREG(0x3E,temp);
 16110  23D4  0826               	movf	(CC2500_InitPATable@temp),w
 16111  23D5  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16112  23D6  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16113  23D7  00A2               	movwf	(?_CC2500_WriteREG)
 16114  23D8  303E               	movlw	(03Eh)
 16115  23D9  31A2  22CA  31A3   	fcall	_CC2500_WriteREG
 16116                           	line	152
 16117                           	
 16118  23DC                     l23909:	
 16119  23DC  3001               	movlw	(01h)
 16120  23DD  0020               	movlb 0	; select bank0
 16121  23DE  00A5               	movwf	(??_CC2500_InitPATable+0)+0
 16122  23DF  0825               	movf	(??_CC2500_InitPATable+0)+0,w
 16123  23E0  07A7               	addwf	(CC2500_InitPATable@loop_d),f
 16124                           	
 16125  23E1                     l23911:	
 16126  23E1  3008               	movlw	(08h)
 16127  23E2  0227               	subwf	(CC2500_InitPATable@loop_d),w
 16128  23E3  1C03               	skipc
 16129  23E4  2BE6               	goto	u7641
 16130  23E5  2BE7               	goto	u7640
 16131  23E6                     u7641:
 16132  23E6  2BCC               	goto	l23905
 16133  23E7                     u7640:
 16134  23E7  2BE8               	goto	l2317
 16135                           	
 16136  23E8                     l2316:	
 16137                           	line	157
 16138                           	
 16139  23E8                     l2317:	
 16140  23E8  0008               	return
 16141                           	opt stack 0
 16142                           GLOBAL	__end_of_CC2500_InitPATable
 16143  23E9                     	__end_of_CC2500_InitPATable:
 16144 ;; =============== function _CC2500_InitPATable ends ============
 16145                           
 16146                           	signat	_CC2500_InitPATable,88
 16147                           	global	_CC2500_InitSetREG
 16148                           psect	text3282,local,class=CODE,delta=2
 16149                           global __ptext3282
 16150  253A                     __ptext3282:
 16151                           
 16152 ;; *************** function _CC2500_InitSetREG *****************
 16153 ;; Defined at:
 16154 ;;		line 132 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;		None
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;  loop_c          1    8[BANK0 ] unsigned char 
 16159 ;;  temp2           1    7[BANK0 ] unsigned char 
 16160 ;;  temp1           1    6[BANK0 ] unsigned char 
 16161 ;; Return value:  Size  Location     Type
 16162 ;;		None               void
 16163 ;; Registers used:
 16164 ;;		wreg, status,2, status,0, pclath, cstack
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16171 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 16174 ;;Total ram usage:        4 bytes
 16175 ;; Hardware stack levels used:    1
 16176 ;; Hardware stack levels required when called:    6
 16177 ;; This function calls:
 16178 ;;		_CC2500_WriteREG
 16179 ;; This function is called by:
 16180 ;;		_CC2500_PowerOnInitial
 16181 ;; This function uses a non-reentrant model
 16182 ;;
 16183                           psect	text3282
 16184                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16185                           	line	132
 16186                           	global	__size_of_CC2500_InitSetREG
 16187  002F                     	__size_of_CC2500_InitSetREG	equ	__end_of_CC2500_InitSetREG-_CC2500_InitSetREG
 16188                           	
 16189  253A                     _CC2500_InitSetREG:	
 16190                           	opt	stack 8
 16191                           ; Regs used in _CC2500_InitSetREG: [wreg+status,2+status,0+pclath+cstack]
 16192                           	line	136
 16193                           	
 16194  253A                     l23885:	
 16195                           ;CC2500_B1.c: 133: unsigned char loop_c;
 16196                           ;CC2500_B1.c: 134: unsigned char temp1,temp2;
 16197                           ;CC2500_B1.c: 136: for(loop_c=0;loop_c<47;loop_c++)
 16198  253A  0020               	movlb 0	; select bank0
 16199  253B  01A8               	clrf	(CC2500_InitSetREG@loop_c)
 16200                           	
 16201  253C                     l23887:	
 16202  253C  302F               	movlw	(02Fh)
 16203  253D  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 16204  253E  1C03               	skipc
 16205  253F  2D41               	goto	u7611
 16206  2540  2D42               	goto	u7610
 16207  2541                     u7611:
 16208  2541  2D44               	goto	l23891
 16209  2542                     u7610:
 16210  2542  2D68               	goto	l2312
 16211                           	
 16212  2543                     l23889:	
 16213  2543  2D68               	goto	l2312
 16214                           	line	137
 16215                           	
 16216  2544                     l2310:	
 16217                           	line	138
 16218                           	
 16219  2544                     l23891:	
 16220                           ;CC2500_B1.c: 137: {
 16221                           ;CC2500_B1.c: 138: temp1 = CC2500_registers_address[loop_c];
 16222  2544  0828               	movf	(CC2500_InitSetREG@loop_c),w
 16223  2545  3E01               	addlw	low(_CC2500_registers_address|8000h)
 16224  2546  3198               	movlp	high __stringtab
 16225  2547  000A               	callw
 16226  2548  31A5               	pagesel	$
 16227  2549  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16228  254A  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16229  254B  00A6               	movwf	(CC2500_InitSetREG@temp1)
 16230                           	line	139
 16231                           ;CC2500_B1.c: 139: temp2 = CC2500_rfSettings[loop_c];
 16232  254C  0828               	movf	(CC2500_InitSetREG@loop_c),w
 16233  254D  3E30               	addlw	low(_CC2500_rfSettings|8000h)
 16234  254E  3198               	movlp	high __stringtab
 16235  254F  000A               	callw
 16236  2550  31A5               	pagesel	$
 16237  2551  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16238  2552  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16239  2553  00A7               	movwf	(CC2500_InitSetREG@temp2)
 16240                           	line	141
 16241                           	
 16242  2554                     l23893:	
 16243                           ;CC2500_B1.c: 141: CC2500_WriteREG(temp1,temp2);
 16244  2554  0827               	movf	(CC2500_InitSetREG@temp2),w
 16245  2555  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16246  2556  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16247  2557  00A2               	movwf	(?_CC2500_WriteREG)
 16248  2558  0826               	movf	(CC2500_InitSetREG@temp1),w
 16249  2559  31A2  22CA  31A5   	fcall	_CC2500_WriteREG
 16250                           	line	136
 16251                           	
 16252  255C                     l23895:	
 16253  255C  3001               	movlw	(01h)
 16254  255D  0020               	movlb 0	; select bank0
 16255  255E  00A5               	movwf	(??_CC2500_InitSetREG+0)+0
 16256  255F  0825               	movf	(??_CC2500_InitSetREG+0)+0,w
 16257  2560  07A8               	addwf	(CC2500_InitSetREG@loop_c),f
 16258                           	
 16259  2561                     l23897:	
 16260  2561  302F               	movlw	(02Fh)
 16261  2562  0228               	subwf	(CC2500_InitSetREG@loop_c),w
 16262  2563  1C03               	skipc
 16263  2564  2D66               	goto	u7621
 16264  2565  2D67               	goto	u7620
 16265  2566                     u7621:
 16266  2566  2D44               	goto	l23891
 16267  2567                     u7620:
 16268  2567  2D68               	goto	l2312
 16269                           	
 16270  2568                     l2311:	
 16271                           	line	143
 16272                           	
 16273  2568                     l2312:	
 16274  2568  0008               	return
 16275                           	opt stack 0
 16276                           GLOBAL	__end_of_CC2500_InitSetREG
 16277  2569                     	__end_of_CC2500_InitSetREG:
 16278 ;; =============== function _CC2500_InitSetREG ends ============
 16279                           
 16280                           	signat	_CC2500_InitSetREG,88
 16281                           	global	_CC2500_RxData
 16282                           psect	text3283,local,class=CODE,delta=2
 16283                           global __ptext3283
 16284  10DD                     __ptext3283:
 16285                           
 16286 ;; *************** function _CC2500_RxData *****************
 16287 ;; Defined at:
 16288 ;;		line 57 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;		None
 16291 ;; Auto vars:     Size  Location     Type
 16292 ;;  loop_f          1    5[BANK0 ] unsigned char 
 16293 ;; Return value:  Size  Location     Type
 16294 ;;		None               void
 16295 ;; Registers used:
 16296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16305 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16306 ;;Total ram usage:        2 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; Hardware stack levels required when called:    6
 16309 ;; This function calls:
 16310 ;;		_CC2500_ReadStatus
 16311 ;;		_CC2500_WriteByte
 16312 ;;		_CC2500_ReadByte
 16313 ;;		_CC2500_WriteCommand
 16314 ;;		_setRF_RxStatus
 16315 ;; This function is called by:
 16316 ;;		_setRF_Main
 16317 ;; This function uses a non-reentrant model
 16318 ;;
 16319                           psect	text3283
 16320                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16321                           	line	57
 16322                           	global	__size_of_CC2500_RxData
 16323  007C                     	__size_of_CC2500_RxData	equ	__end_of_CC2500_RxData-_CC2500_RxData
 16324                           	
 16325  10DD                     _CC2500_RxData:	
 16326                           	opt	stack 7
 16327                           ; Regs used in _CC2500_RxData: [wreg+fsr1l-status,0+pclath+cstack]
 16328                           	line	62
 16329                           	
 16330  10DD                     l23843:	
 16331                           ;CC2500_B1.c: 58: unsigned char loop_f;
 16332                           ;CC2500_B1.c: 62: if(RB0 == 1)
 16333  10DD  0020               	movlb 0	; select bank0
 16334  10DE  1C0D               	btfss	(104/8),(104)&7
 16335  10DF  28E1               	goto	u7551
 16336  10E0  28E2               	goto	u7550
 16337  10E1                     u7551:
 16338  10E1  28EA               	goto	l23847
 16339  10E2                     u7550:
 16340  10E2  28E4               	goto	l2284
 16341                           	line	64
 16342                           	
 16343  10E3                     l23845:	
 16344                           ;CC2500_B1.c: 63: {
 16345                           ;CC2500_B1.c: 64: while(RB0 == 1);
 16346  10E3  28E4               	goto	l2284
 16347                           	
 16348  10E4                     l2285:	
 16349                           	
 16350  10E4                     l2284:	
 16351  10E4  180D               	btfsc	(104/8),(104)&7
 16352  10E5  28E7               	goto	u7561
 16353  10E6  28E8               	goto	u7560
 16354  10E7                     u7561:
 16355  10E7  28E4               	goto	l2284
 16356  10E8                     u7560:
 16357  10E8  28EA               	goto	l23847
 16358                           	
 16359  10E9                     l2286:	
 16360  10E9  28EA               	goto	l23847
 16361                           	line	65
 16362                           	
 16363  10EA                     l2283:	
 16364                           	line	66
 16365                           	
 16366  10EA                     l23847:	
 16367                           ;CC2500_B1.c: 65: }
 16368                           ;CC2500_B1.c: 66: CC2500_ReadStatus(0x3B);
 16369  10EA  303B               	movlw	(03Bh)
 16370  10EB  31A2  22E8  3190   	fcall	_CC2500_ReadStatus
 16371                           	line	67
 16372                           	
 16373  10EE                     l23849:	
 16374                           ;CC2500_B1.c: 67: if(s_data != 0)
 16375  10EE  0021               	movlb 1	; select bank1
 16376  10EF  0846               	movf	(_s_data)^080h,w
 16377  10F0  1D03               	skipz
 16378  10F1  28F3               	goto	u7570
 16379  10F2  294A               	goto	l23881
 16380  10F3                     u7570:
 16381                           	line	70
 16382                           	
 16383  10F3                     l23851:	
 16384                           ;CC2500_B1.c: 69: {
 16385                           ;CC2500_B1.c: 70: RC4=0;
 16386  10F3  0020               	movlb 0	; select bank0
 16387  10F4  120E               	bcf	(116/8),(116)&7
 16388                           	line	71
 16389                           	
 16390  10F5                     l23853:	
 16391                           ;CC2500_B1.c: 71: SPI0Buffer=0x3F+0xC0;
 16392  10F5  30FF               	movlw	(0FFh)
 16393  10F6  00A4               	movwf	(??_CC2500_RxData+0)+0
 16394  10F7  0824               	movf	(??_CC2500_RxData+0)+0,w
 16395  10F8  0021               	movlb 1	; select bank1
 16396  10F9  00C2               	movwf	(_SPI0Buffer)^080h
 16397                           	line	72
 16398                           ;CC2500_B1.c: 72: while(RC2==1);
 16399  10FA  28FB               	goto	l2288
 16400                           	
 16401  10FB                     l2289:	
 16402                           	
 16403  10FB                     l2288:	
 16404  10FB  0020               	movlb 0	; select bank0
 16405  10FC  190E               	btfsc	(114/8),(114)&7
 16406  10FD  28FF               	goto	u7581
 16407  10FE  2900               	goto	u7580
 16408  10FF                     u7581:
 16409  10FF  28FB               	goto	l2288
 16410  1100                     u7580:
 16411  1100  2901               	goto	l23855
 16412                           	
 16413  1101                     l2290:	
 16414                           	line	73
 16415                           	
 16416  1101                     l23855:	
 16417                           ;CC2500_B1.c: 73: CC2500_WriteByte();
 16418  1101  31A3  2375  3190   	fcall	_CC2500_WriteByte
 16419                           	line	75
 16420                           ;CC2500_B1.c: 75: CC2500_ReadByte();
 16421  1104  31A4  2489  3190   	fcall	_CC2500_ReadByte
 16422                           	line	76
 16423                           	
 16424  1107                     l23857:	
 16425                           ;CC2500_B1.c: 76: Rx_Length=SPI0Buffer;
 16426  1107  0021               	movlb 1	; select bank1
 16427  1108  0842               	movf	(_SPI0Buffer)^080h,w
 16428  1109  0020               	movlb 0	; select bank0
 16429  110A  00A4               	movwf	(??_CC2500_RxData+0)+0
 16430  110B  0824               	movf	(??_CC2500_RxData+0)+0,w
 16431  110C  0021               	movlb 1	; select bank1
 16432  110D  00C1               	movwf	(_Rx_Length)^080h
 16433                           	line	77
 16434                           	
 16435  110E                     l23859:	
 16436                           ;CC2500_B1.c: 77: for(loop_f=0;loop_f<Rx_Length;loop_f++)
 16437  110E  0020               	movlb 0	; select bank0
 16438  110F  01A5               	clrf	(CC2500_RxData@loop_f)
 16439  1110  2923               	goto	l23867
 16440                           	line	78
 16441                           	
 16442  1111                     l2292:	
 16443                           	line	79
 16444                           	
 16445  1111                     l23861:	
 16446                           ;CC2500_B1.c: 78: {
 16447                           ;CC2500_B1.c: 79: CC2500_ReadByte();
 16448  1111  31A4  2489  3190   	fcall	_CC2500_ReadByte
 16449                           	line	80
 16450                           	
 16451  1114                     l23863:	
 16452                           ;CC2500_B1.c: 80: RF_Data[loop_f]=SPI0Buffer;
 16453  1114  0021               	movlb 1	; select bank1
 16454  1115  0842               	movf	(_SPI0Buffer)^080h,w
 16455  1116  0020               	movlb 0	; select bank0
 16456  1117  00A4               	movwf	(??_CC2500_RxData+0)+0
 16457  1118  0825               	movf	(CC2500_RxData@loop_f),w
 16458  1119  3EA0               	addlw	_RF_Data&0ffh
 16459  111A  0086               	movwf	fsr1l
 16460  111B  0187               	clrf fsr1h	
 16461                           	
 16462  111C  0824               	movf	(??_CC2500_RxData+0)+0,w
 16463  111D  0081               	movwf	indf1
 16464                           	line	77
 16465                           	
 16466  111E                     l23865:	
 16467  111E  3001               	movlw	(01h)
 16468  111F  00A4               	movwf	(??_CC2500_RxData+0)+0
 16469  1120  0824               	movf	(??_CC2500_RxData+0)+0,w
 16470  1121  07A5               	addwf	(CC2500_RxData@loop_f),f
 16471  1122  2923               	goto	l23867
 16472                           	
 16473  1123                     l2291:	
 16474                           	
 16475  1123                     l23867:	
 16476  1123  0021               	movlb 1	; select bank1
 16477  1124  0841               	movf	(_Rx_Length)^080h,w
 16478  1125  0020               	movlb 0	; select bank0
 16479  1126  0225               	subwf	(CC2500_RxData@loop_f),w
 16480  1127  1C03               	skipc
 16481  1128  292A               	goto	u7591
 16482  1129  292B               	goto	u7590
 16483  112A                     u7591:
 16484  112A  2911               	goto	l23861
 16485  112B                     u7590:
 16486  112B  292C               	goto	l23869
 16487                           	
 16488  112C                     l2293:	
 16489                           	line	82
 16490                           	
 16491  112C                     l23869:	
 16492                           ;CC2500_B1.c: 81: }
 16493                           ;CC2500_B1.c: 82: CC2500_ReadByte();
 16494  112C  31A4  2489  3190   	fcall	_CC2500_ReadByte
 16495                           	line	83
 16496                           	
 16497  112F                     l23871:	
 16498                           ;CC2500_B1.c: 83: RSSI=SPI0Buffer;
 16499  112F  0021               	movlb 1	; select bank1
 16500  1130  0842               	movf	(_SPI0Buffer)^080h,w
 16501  1131  0020               	movlb 0	; select bank0
 16502  1132  00A4               	movwf	(??_CC2500_RxData+0)+0
 16503  1133  0824               	movf	(??_CC2500_RxData+0)+0,w
 16504  1134  0021               	movlb 1	; select bank1
 16505  1135  00C0               	movwf	(_RSSI)^080h
 16506                           	line	84
 16507                           	
 16508  1136                     l23873:	
 16509                           ;CC2500_B1.c: 84: CC2500_ReadByte();
 16510  1136  31A4  2489  3190   	fcall	_CC2500_ReadByte
 16511                           	line	85
 16512                           ;CC2500_B1.c: 85: CRC=SPI0Buffer;
 16513  1139  0021               	movlb 1	; select bank1
 16514  113A  0842               	movf	(_SPI0Buffer)^080h,w
 16515  113B  0020               	movlb 0	; select bank0
 16516  113C  00A4               	movwf	(??_CC2500_RxData+0)+0
 16517  113D  0824               	movf	(??_CC2500_RxData+0)+0,w
 16518  113E  0021               	movlb 1	; select bank1
 16519  113F  00B8               	movwf	(_CRC)^080h
 16520                           	line	86
 16521                           	
 16522  1140                     l23875:	
 16523                           ;CC2500_B1.c: 86: RC4=1;
 16524  1140  0020               	movlb 0	; select bank0
 16525  1141  160E               	bsf	(116/8),(116)&7
 16526                           	line	87
 16527                           	
 16528  1142                     l23877:	
 16529                           ;CC2500_B1.c: 87: if(CRC & 0x80)
 16530  1142  0021               	movlb 1	; select bank1
 16531  1143  1FB8               	btfss	(_CRC)^080h,(7)&7
 16532  1144  2946               	goto	u7601
 16533  1145  2947               	goto	u7600
 16534  1146                     u7601:
 16535  1146  294A               	goto	l23881
 16536  1147                     u7600:
 16537                           	line	88
 16538                           	
 16539  1147                     l23879:	
 16540                           ;CC2500_B1.c: 88: Receive_OK=1;
 16541  1147  157A               	bsf	(_Receive_OK/8),(_Receive_OK)&7
 16542  1148  294A               	goto	l23881
 16543                           	
 16544  1149                     l2294:	
 16545  1149  294A               	goto	l23881
 16546                           	line	89
 16547                           	
 16548  114A                     l2287:	
 16549                           	line	90
 16550                           	
 16551  114A                     l23881:	
 16552                           ;CC2500_B1.c: 89: }
 16553                           ;CC2500_B1.c: 90: CC2500_WriteCommand(0x36);
 16554  114A  3036               	movlw	(036h)
 16555  114B  31A2  223D  3190   	fcall	_CC2500_WriteCommand
 16556                           	line	91
 16557                           ;CC2500_B1.c: 91: CC2500_WriteCommand(0x3A);
 16558  114E  303A               	movlw	(03Ah)
 16559  114F  31A2  223D  3190   	fcall	_CC2500_WriteCommand
 16560                           	line	92
 16561                           	
 16562  1152                     l23883:	
 16563                           ;CC2500_B1.c: 92: setRF_RxStatus(1,0);
 16564  1152  0020               	movlb 0	; select bank0
 16565  1153  01A2               	clrf	(?_setRF_RxStatus)
 16566  1154  3001               	movlw	(01h)
 16567  1155  31A0  2070  3190   	fcall	_setRF_RxStatus
 16568                           	line	93
 16569                           	
 16570  1158                     l2295:	
 16571  1158  0008               	return
 16572                           	opt stack 0
 16573                           GLOBAL	__end_of_CC2500_RxData
 16574  1159                     	__end_of_CC2500_RxData:
 16575 ;; =============== function _CC2500_RxData ends ============
 16576                           
 16577                           	signat	_CC2500_RxData,88
 16578                           	global	_CC2500_TxData
 16579                           psect	text3284,local,class=CODE,delta=2
 16580                           global __ptext3284
 16581  1B64                     __ptext3284:
 16582                           
 16583 ;; *************** function _CC2500_TxData *****************
 16584 ;; Defined at:
 16585 ;;		line 31 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 16586 ;; Parameters:    Size  Location     Type
 16587 ;;		None
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;  loop_e          1    5[BANK0 ] unsigned char 
 16590 ;; Return value:  Size  Location     Type
 16591 ;;		None               void
 16592 ;; Registers used:
 16593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16594 ;; Tracked objects:
 16595 ;;		On entry : 0/0
 16596 ;;		On exit  : 0/0
 16597 ;;		Unchanged: 0/0
 16598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16602 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16603 ;;Total ram usage:        2 bytes
 16604 ;; Hardware stack levels used:    1
 16605 ;; Hardware stack levels required when called:    6
 16606 ;; This function calls:
 16607 ;;		_CC2500_WriteByte
 16608 ;;		_CC2500_WriteCommand
 16609 ;; This function is called by:
 16610 ;;		_setRF_Main
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           psect	text3284
 16614                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 16615                           	line	31
 16616                           	global	__size_of_CC2500_TxData
 16617  0054                     	__size_of_CC2500_TxData	equ	__end_of_CC2500_TxData-_CC2500_TxData
 16618                           	
 16619  1B64                     _CC2500_TxData:	
 16620                           	opt	stack 7
 16621                           ; Regs used in _CC2500_TxData: [wreg+fsr1l-status,0+pclath+cstack]
 16622                           	line	34
 16623                           	
 16624  1B64                     l23817:	
 16625                           ;CC2500_B1.c: 32: unsigned char loop_e;
 16626                           ;CC2500_B1.c: 34: RC4=0;
 16627  1B64  0020               	movlb 0	; select bank0
 16628  1B65  120E               	bcf	(116/8),(116)&7
 16629                           	line	35
 16630                           	
 16631  1B66                     l23819:	
 16632                           ;CC2500_B1.c: 35: SPI0Buffer=0x3F+0x40;
 16633  1B66  307F               	movlw	(07Fh)
 16634  1B67  00A4               	movwf	(??_CC2500_TxData+0)+0
 16635  1B68  0824               	movf	(??_CC2500_TxData+0)+0,w
 16636  1B69  0021               	movlb 1	; select bank1
 16637  1B6A  00C2               	movwf	(_SPI0Buffer)^080h
 16638                           	line	36
 16639                           ;CC2500_B1.c: 36: while(RC2==1);
 16640  1B6B  2B6C               	goto	l2268
 16641                           	
 16642  1B6C                     l2269:	
 16643                           	
 16644  1B6C                     l2268:	
 16645  1B6C  0020               	movlb 0	; select bank0
 16646  1B6D  190E               	btfsc	(114/8),(114)&7
 16647  1B6E  2B70               	goto	u7511
 16648  1B6F  2B71               	goto	u7510
 16649  1B70                     u7511:
 16650  1B70  2B6C               	goto	l2268
 16651  1B71                     u7510:
 16652  1B71  2B72               	goto	l23821
 16653                           	
 16654  1B72                     l2270:	
 16655                           	line	37
 16656                           	
 16657  1B72                     l23821:	
 16658                           ;CC2500_B1.c: 37: CC2500_WriteByte();
 16659  1B72  31A3  2375  319B   	fcall	_CC2500_WriteByte
 16660                           	line	38
 16661                           	
 16662  1B75                     l23823:	
 16663                           ;CC2500_B1.c: 38: SPI0Buffer=Tx_Length;
 16664  1B75  0021               	movlb 1	; select bank1
 16665  1B76  0843               	movf	(_Tx_Length)^080h,w
 16666  1B77  0020               	movlb 0	; select bank0
 16667  1B78  00A4               	movwf	(??_CC2500_TxData+0)+0
 16668  1B79  0824               	movf	(??_CC2500_TxData+0)+0,w
 16669  1B7A  0021               	movlb 1	; select bank1
 16670  1B7B  00C2               	movwf	(_SPI0Buffer)^080h
 16671                           	line	39
 16672                           	
 16673  1B7C                     l23825:	
 16674                           ;CC2500_B1.c: 39: CC2500_WriteByte();
 16675  1B7C  31A3  2375  319B   	fcall	_CC2500_WriteByte
 16676                           	line	40
 16677                           	
 16678  1B7F                     l23827:	
 16679                           ;CC2500_B1.c: 40: for(loop_e=0;loop_e<Tx_Length;loop_e++)
 16680  1B7F  0020               	movlb 0	; select bank0
 16681  1B80  01A5               	clrf	(CC2500_TxData@loop_e)
 16682  1B81  2B94               	goto	l23835
 16683                           	line	41
 16684                           	
 16685  1B82                     l2272:	
 16686                           	line	42
 16687                           	
 16688  1B82                     l23829:	
 16689                           ;CC2500_B1.c: 41: {
 16690                           ;CC2500_B1.c: 42: SPI0Buffer=RF_Data[loop_e];
 16691  1B82  0825               	movf	(CC2500_TxData@loop_e),w
 16692  1B83  3EA0               	addlw	_RF_Data&0ffh
 16693  1B84  0086               	movwf	fsr1l
 16694  1B85  0187               	clrf fsr1h	
 16695                           	
 16696  1B86  0801               	movf	indf1,w
 16697  1B87  00A4               	movwf	(??_CC2500_TxData+0)+0
 16698  1B88  0824               	movf	(??_CC2500_TxData+0)+0,w
 16699  1B89  0021               	movlb 1	; select bank1
 16700  1B8A  00C2               	movwf	(_SPI0Buffer)^080h
 16701                           	line	43
 16702                           	
 16703  1B8B                     l23831:	
 16704                           ;CC2500_B1.c: 43: CC2500_WriteByte();
 16705  1B8B  31A3  2375  319B   	fcall	_CC2500_WriteByte
 16706                           	line	40
 16707                           	
 16708  1B8E                     l23833:	
 16709  1B8E  3001               	movlw	(01h)
 16710  1B8F  0020               	movlb 0	; select bank0
 16711  1B90  00A4               	movwf	(??_CC2500_TxData+0)+0
 16712  1B91  0824               	movf	(??_CC2500_TxData+0)+0,w
 16713  1B92  07A5               	addwf	(CC2500_TxData@loop_e),f
 16714  1B93  2B94               	goto	l23835
 16715                           	
 16716  1B94                     l2271:	
 16717                           	
 16718  1B94                     l23835:	
 16719  1B94  0021               	movlb 1	; select bank1
 16720  1B95  0843               	movf	(_Tx_Length)^080h,w
 16721  1B96  0020               	movlb 0	; select bank0
 16722  1B97  0225               	subwf	(CC2500_TxData@loop_e),w
 16723  1B98  1C03               	skipc
 16724  1B99  2B9B               	goto	u7521
 16725  1B9A  2B9C               	goto	u7520
 16726  1B9B                     u7521:
 16727  1B9B  2B82               	goto	l23829
 16728  1B9C                     u7520:
 16729                           	
 16730  1B9C                     l2273:	
 16731                           	line	45
 16732                           ;CC2500_B1.c: 44: }
 16733                           ;CC2500_B1.c: 45: RC4=1;
 16734  1B9C  160E               	bsf	(116/8),(116)&7
 16735                           	line	46
 16736                           	
 16737  1B9D                     l23837:	
 16738                           ;CC2500_B1.c: 46: CC2500_WriteCommand(0x35);
 16739  1B9D  3035               	movlw	(035h)
 16740  1B9E  31A2  223D  319B   	fcall	_CC2500_WriteCommand
 16741                           	line	47
 16742                           ;CC2500_B1.c: 47: while(RB0==0);
 16743  1BA1  2BA2               	goto	l2274
 16744                           	
 16745  1BA2                     l2275:	
 16746                           	
 16747  1BA2                     l2274:	
 16748  1BA2  0020               	movlb 0	; select bank0
 16749  1BA3  1C0D               	btfss	(104/8),(104)&7
 16750  1BA4  2BA6               	goto	u7531
 16751  1BA5  2BA7               	goto	u7530
 16752  1BA6                     u7531:
 16753  1BA6  2BA2               	goto	l2274
 16754  1BA7                     u7530:
 16755  1BA7  2BA9               	goto	l2277
 16756                           	
 16757  1BA8                     l2276:	
 16758                           	line	48
 16759                           ;CC2500_B1.c: 48: while(RB0==1);
 16760  1BA8  2BA9               	goto	l2277
 16761                           	
 16762  1BA9                     l2278:	
 16763                           	
 16764  1BA9                     l2277:	
 16765  1BA9  180D               	btfsc	(104/8),(104)&7
 16766  1BAA  2BAC               	goto	u7541
 16767  1BAB  2BAD               	goto	u7540
 16768  1BAC                     u7541:
 16769  1BAC  2BA9               	goto	l2277
 16770  1BAD                     u7540:
 16771  1BAD  2BAE               	goto	l23839
 16772                           	
 16773  1BAE                     l2279:	
 16774                           	line	49
 16775                           	
 16776  1BAE                     l23839:	
 16777                           ;CC2500_B1.c: 49: CC2500_WriteCommand(0x36);
 16778  1BAE  3036               	movlw	(036h)
 16779  1BAF  31A2  223D  319B   	fcall	_CC2500_WriteCommand
 16780                           	line	50
 16781                           ;CC2500_B1.c: 50: CC2500_WriteCommand(0x3B);
 16782  1BB2  303B               	movlw	(03Bh)
 16783  1BB3  31A2  223D  319B   	fcall	_CC2500_WriteCommand
 16784                           	line	51
 16785                           	
 16786  1BB6                     l23841:	
 16787                           ;CC2500_B1.c: 51: Transceive_OK=1;
 16788  1BB6  16FA               	bsf	(_Transceive_OK/8),(_Transceive_OK)&7
 16789                           	line	52
 16790                           	
 16791  1BB7                     l2280:	
 16792  1BB7  0008               	return
 16793                           	opt stack 0
 16794                           GLOBAL	__end_of_CC2500_TxData
 16795  1BB8                     	__end_of_CC2500_TxData:
 16796 ;; =============== function _CC2500_TxData ends ============
 16797                           
 16798                           	signat	_CC2500_TxData,88
 16799                           	global	_Buzzer_Main
 16800                           psect	text3285,local,class=CODE,delta=2
 16801                           global __ptext3285
 16802  2E7A                     __ptext3285:
 16803                           
 16804 ;; *************** function _Buzzer_Main *****************
 16805 ;; Defined at:
 16806 ;;		line 27 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 16807 ;; Parameters:    Size  Location     Type
 16808 ;;		None
 16809 ;; Auto vars:     Size  Location     Type
 16810 ;;		None
 16811 ;; Return value:  Size  Location     Type
 16812 ;;		None               void
 16813 ;; Registers used:
 16814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16815 ;; Tracked objects:
 16816 ;;		On entry : 0/0
 16817 ;;		On exit  : 0/0
 16818 ;;		Unchanged: 0/0
 16819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16824 ;;Total ram usage:        0 bytes
 16825 ;; Hardware stack levels used:    1
 16826 ;; Hardware stack levels required when called:    6
 16827 ;; This function calls:
 16828 ;;		_setBuz_Main
 16829 ;; This function is called by:
 16830 ;;		_main
 16831 ;; This function uses a non-reentrant model
 16832 ;;
 16833                           psect	text3285
 16834                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 16835                           	line	27
 16836                           	global	__size_of_Buzzer_Main
 16837  0005                     	__size_of_Buzzer_Main	equ	__end_of_Buzzer_Main-_Buzzer_Main
 16838                           	
 16839  2E7A                     _Buzzer_Main:	
 16840                           	opt	stack 9
 16841                           ; Regs used in _Buzzer_Main: [wreg+fsr1l-status,0+pclath+cstack]
 16842                           	line	29
 16843                           	
 16844  2E7A                     l23815:	
 16845                           ;Buzzer_B1.c: 29: setBuz_Main(1);
 16846  2E7A  3001               	movlw	(01h)
 16847  2E7B  318C  2464  31AE   	fcall	_setBuz_Main
 16848                           	line	31
 16849                           	
 16850  2E7E                     l1110:	
 16851  2E7E  0008               	return
 16852                           	opt stack 0
 16853                           GLOBAL	__end_of_Buzzer_Main
 16854  2E7F                     	__end_of_Buzzer_Main:
 16855 ;; =============== function _Buzzer_Main ends ============
 16856                           
 16857                           	signat	_Buzzer_Main,88
 16858                           	global	_setBuz_Initialization
 16859                           psect	text3286,local,class=CODE,delta=2
 16860                           global __ptext3286
 16861  2F03                     __ptext3286:
 16862                           
 16863 ;; *************** function _setBuz_Initialization *****************
 16864 ;; Defined at:
 16865 ;;		line 40 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;  buz             1    wreg     unsigned char 
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  buz             1    0[COMMON] unsigned char 
 16870 ;; Return value:  Size  Location     Type
 16871 ;;		None               void
 16872 ;; Registers used:
 16873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16874 ;; Tracked objects:
 16875 ;;		On entry : 0/0
 16876 ;;		On exit  : 0/0
 16877 ;;		Unchanged: 0/0
 16878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 16883 ;;Total ram usage:        0 bytes
 16884 ;; Hardware stack levels used:    1
 16885 ;; Hardware stack levels required when called:    6
 16886 ;; This function calls:
 16887 ;;		_setBuz_Enable
 16888 ;; This function is called by:
 16889 ;;		_Buzzer_Initialization
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           psect	text3286
 16893                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 16894                           	line	40
 16895                           	global	__size_of_setBuz_Initialization
 16896  0009                     	__size_of_setBuz_Initialization	equ	__end_of_setBuz_Initialization-_setBuz_Initializati
                                 on
 16897                           	
 16898  2F03                     _setBuz_Initialization:	
 16899                           	opt	stack 8
 16900                           ; Regs used in _setBuz_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 16901                           	line	41
 16902                           	
 16903  2F03                     l23813:	
 16904                           ;Buzzer_B1.c: 41: setBuz_Enable(1,1);
 16905  2F03  0020               	movlb 0	; select bank0
 16906  2F04  01A2               	clrf	(?_setBuz_Enable)
 16907  2F05  1403               	bsf	status,0
 16908  2F06  0DA2               	rlf	(?_setBuz_Enable),f
 16909  2F07  3001               	movlw	(01h)
 16910  2F08  31A1  2130  31AF   	fcall	_setBuz_Enable
 16911                           	line	42
 16912                           	
 16913  2F0B                     l1116:	
 16914  2F0B  0008               	return
 16915                           	opt stack 0
 16916                           GLOBAL	__end_of_setBuz_Initialization
 16917  2F0C                     	__end_of_setBuz_Initialization:
 16918 ;; =============== function _setBuz_Initialization ends ============
 16919                           
 16920                           	signat	_setBuz_Initialization,4216
 16921                           	global	___awtoft
 16922                           psect	text3287,local,class=CODE,delta=2
 16923                           global __ptext3287
 16924  2438                     __ptext3287:
 16925                           
 16926 ;; *************** function ___awtoft *****************
 16927 ;; Defined at:
 16928 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 16929 ;; Parameters:    Size  Location     Type
 16930 ;;  c               2   22[BANK0 ] int 
 16931 ;; Auto vars:     Size  Location     Type
 16932 ;;  sign            1   27[BANK0 ] unsigned char 
 16933 ;; Return value:  Size  Location     Type
 16934 ;;                  3   22[BANK0 ] float 
 16935 ;; Registers used:
 16936 ;;		wreg, status,2, status,0, pclath, cstack
 16937 ;; Tracked objects:
 16938 ;;		On entry : 0/0
 16939 ;;		On exit  : 0/0
 16940 ;;		Unchanged: 0/0
 16941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 16942 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 16943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 16944 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 16945 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 16946 ;;Total ram usage:        6 bytes
 16947 ;; Hardware stack levels used:    1
 16948 ;; Hardware stack levels required when called:    5
 16949 ;; This function calls:
 16950 ;;		___ftpack
 16951 ;; This function is called by:
 16952 ;;		_getPercentValue
 16953 ;;		_setPercentValue
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           psect	text3287
 16957                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
 16958                           	line	33
 16959                           	global	__size_of___awtoft
 16960  0028                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
 16961                           	
 16962  2438                     ___awtoft:	
 16963                           	opt	stack 2
 16964                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 16965                           	line	36
 16966                           	
 16967  2438                     l23805:	
 16968  2438  0020               	movlb 0	; select bank0
 16969  2439  01BB               	clrf	(___awtoft@sign)
 16970                           	line	37
 16971  243A  1FB7               	btfss	(___awtoft@c+1),7
 16972  243B  2C3D               	goto	u7501
 16973  243C  2C3E               	goto	u7500
 16974  243D                     u7501:
 16975  243D  2C47               	goto	l23809
 16976  243E                     u7500:
 16977                           	line	38
 16978                           	
 16979  243E                     l23807:	
 16980  243E  09B6               	comf	(___awtoft@c),f
 16981  243F  09B7               	comf	(___awtoft@c+1),f
 16982  2440  0AB6               	incf	(___awtoft@c),f
 16983  2441  1903               	skipnz
 16984  2442  0AB7               	incf	(___awtoft@c+1),f
 16985                           	line	39
 16986  2443  01BB               	clrf	(___awtoft@sign)
 16987  2444  1403               	bsf	status,0
 16988  2445  0DBB               	rlf	(___awtoft@sign),f
 16989  2446  2C47               	goto	l23809
 16990                           	line	40
 16991                           	
 16992  2447                     l18945:	
 16993                           	line	41
 16994                           	
 16995  2447                     l23809:	
 16996  2447  0836               	movf	(___awtoft@c),w
 16997  2448  00A0               	movwf	(?___ftpack)
 16998  2449  0837               	movf	(___awtoft@c+1),w
 16999  244A  00A1               	movwf	(?___ftpack+1)
 17000  244B  01A2               	clrf	(?___ftpack+2)
 17001  244C  308E               	movlw	(08Eh)
 17002  244D  00B9               	movwf	(??___awtoft+0)+0
 17003  244E  0839               	movf	(??___awtoft+0)+0,w
 17004  244F  00A3               	movwf	0+(?___ftpack)+03h
 17005  2450  083B               	movf	(___awtoft@sign),w
 17006  2451  00BA               	movwf	(??___awtoft+1)+0
 17007  2452  083A               	movf	(??___awtoft+1)+0,w
 17008  2453  00A4               	movwf	0+(?___ftpack)+04h
 17009  2454  319F  278C  31A4   	fcall	___ftpack
 17010  2457  0020               	movlb 0	; select bank0
 17011  2458  0820               	movf	(0+(?___ftpack)),w
 17012  2459  00B6               	movwf	(?___awtoft)
 17013  245A  0821               	movf	(1+(?___ftpack)),w
 17014  245B  00B7               	movwf	(?___awtoft+1)
 17015  245C  0822               	movf	(2+(?___ftpack)),w
 17016  245D  00B8               	movwf	(?___awtoft+2)
 17017  245E  2C5F               	goto	l18946
 17018                           	
 17019  245F                     l23811:	
 17020                           	line	42
 17021                           	
 17022  245F                     l18946:	
 17023  245F  0008               	return
 17024                           	opt stack 0
 17025                           GLOBAL	__end_of___awtoft
 17026  2460                     	__end_of___awtoft:
 17027 ;; =============== function ___awtoft ends ============
 17028                           
 17029                           	signat	___awtoft,4219
 17030                           	global	___ftmul
 17031                           psect	text3288,local,class=CODE,delta=2
 17032                           global __ptext3288
 17033  0B9A                     __ptext3288:
 17034                           
 17035 ;; *************** function ___ftmul *****************
 17036 ;; Defined at:
 17037 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 17038 ;; Parameters:    Size  Location     Type
 17039 ;;  f1              3   28[BANK0 ] float 
 17040 ;;  f2              3   31[BANK0 ] float 
 17041 ;; Auto vars:     Size  Location     Type
 17042 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
 17043 ;;  sign            1   43[BANK0 ] unsigned char 
 17044 ;;  cntr            1   42[BANK0 ] unsigned char 
 17045 ;;  exp             1   38[BANK0 ] unsigned char 
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  3   28[BANK0 ] float 
 17048 ;; Registers used:
 17049 ;;		wreg, status,2, status,0, pclath, cstack
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17056 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17057 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17058 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 17059 ;;Total ram usage:       16 bytes
 17060 ;; Hardware stack levels used:    1
 17061 ;; Hardware stack levels required when called:    5
 17062 ;; This function calls:
 17063 ;;		___ftpack
 17064 ;; This function is called by:
 17065 ;;		_getPercentValue
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           psect	text3288
 17069                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
 17070                           	line	52
 17071                           	global	__size_of___ftmul
 17072  00CA                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
 17073                           	
 17074  0B9A                     ___ftmul:	
 17075                           	opt	stack 2
 17076                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 17077                           	line	56
 17078                           	
 17079  0B9A                     l23755:	
 17080  0B9A  0020               	movlb 0	; select bank0
 17081  0B9B  083C               	movf	(___ftmul@f1),w
 17082  0B9C  00C2               	movwf	((??___ftmul+0)+0)
 17083  0B9D  083D               	movf	(___ftmul@f1+1),w
 17084  0B9E  00C3               	movwf	((??___ftmul+0)+0+1)
 17085  0B9F  083E               	movf	(___ftmul@f1+2),w
 17086  0BA0  00C4               	movwf	((??___ftmul+0)+0+2)
 17087  0BA1  1003               	clrc
 17088  0BA2  0D43               	rlf	(??___ftmul+0)+1,w
 17089  0BA3  0D44               	rlf	(??___ftmul+0)+2,w
 17090  0BA4  00C5               	movwf	(??___ftmul+3)+0
 17091  0BA5  0845               	movf	(??___ftmul+3)+0,w
 17092  0BA6  00C6               	movwf	(___ftmul@exp)
 17093  0BA7  08C6               	movf	((___ftmul@exp)),f
 17094  0BA8  1D03               	skipz
 17095  0BA9  2BAB               	goto	u7381
 17096  0BAA  2BAC               	goto	u7380
 17097  0BAB                     u7381:
 17098  0BAB  2BB4               	goto	l23761
 17099  0BAC                     u7380:
 17100                           	line	57
 17101                           	
 17102  0BAC                     l23757:	
 17103  0BAC  3000               	movlw	0x0
 17104  0BAD  00BC               	movwf	(?___ftmul)
 17105  0BAE  3000               	movlw	0x0
 17106  0BAF  00BD               	movwf	(?___ftmul+1)
 17107  0BB0  3000               	movlw	0x0
 17108  0BB1  00BE               	movwf	(?___ftmul+2)
 17109  0BB2  2C63               	goto	l18908
 17110                           	
 17111  0BB3                     l23759:	
 17112  0BB3  2C63               	goto	l18908
 17113                           	
 17114  0BB4                     l18907:	
 17115                           	line	58
 17116                           	
 17117  0BB4                     l23761:	
 17118  0BB4  083F               	movf	(___ftmul@f2),w
 17119  0BB5  00C2               	movwf	((??___ftmul+0)+0)
 17120  0BB6  0840               	movf	(___ftmul@f2+1),w
 17121  0BB7  00C3               	movwf	((??___ftmul+0)+0+1)
 17122  0BB8  0841               	movf	(___ftmul@f2+2),w
 17123  0BB9  00C4               	movwf	((??___ftmul+0)+0+2)
 17124  0BBA  1003               	clrc
 17125  0BBB  0D43               	rlf	(??___ftmul+0)+1,w
 17126  0BBC  0D44               	rlf	(??___ftmul+0)+2,w
 17127  0BBD  00C5               	movwf	(??___ftmul+3)+0
 17128  0BBE  0845               	movf	(??___ftmul+3)+0,w
 17129  0BBF  00CB               	movwf	(___ftmul@sign)
 17130  0BC0  08CB               	movf	((___ftmul@sign)),f
 17131  0BC1  1D03               	skipz
 17132  0BC2  2BC4               	goto	u7391
 17133  0BC3  2BC5               	goto	u7390
 17134  0BC4                     u7391:
 17135  0BC4  2BCD               	goto	l23767
 17136  0BC5                     u7390:
 17137                           	line	59
 17138                           	
 17139  0BC5                     l23763:	
 17140  0BC5  3000               	movlw	0x0
 17141  0BC6  00BC               	movwf	(?___ftmul)
 17142  0BC7  3000               	movlw	0x0
 17143  0BC8  00BD               	movwf	(?___ftmul+1)
 17144  0BC9  3000               	movlw	0x0
 17145  0BCA  00BE               	movwf	(?___ftmul+2)
 17146  0BCB  2C63               	goto	l18908
 17147                           	
 17148  0BCC                     l23765:	
 17149  0BCC  2C63               	goto	l18908
 17150                           	
 17151  0BCD                     l18909:	
 17152                           	line	60
 17153                           	
 17154  0BCD                     l23767:	
 17155  0BCD  084B               	movf	(___ftmul@sign),w
 17156  0BCE  3E7B               	addlw	07Bh
 17157  0BCF  00C2               	movwf	(??___ftmul+0)+0
 17158  0BD0  0842               	movf	(??___ftmul+0)+0,w
 17159  0BD1  07C6               	addwf	(___ftmul@exp),f
 17160                           	line	61
 17161  0BD2  083C               	movf	(___ftmul@f1),w
 17162  0BD3  00C2               	movwf	((??___ftmul+0)+0)
 17163  0BD4  083D               	movf	(___ftmul@f1+1),w
 17164  0BD5  00C3               	movwf	((??___ftmul+0)+0+1)
 17165  0BD6  083E               	movf	(___ftmul@f1+2),w
 17166  0BD7  00C4               	movwf	((??___ftmul+0)+0+2)
 17167  0BD8  3010               	movlw	010h
 17168  0BD9                     u7405:
 17169  0BD9  36C4               	lsrf	(??___ftmul+0)+2,f
 17170  0BDA  0CC3               	rrf	(??___ftmul+0)+1,f
 17171  0BDB  0CC2               	rrf	(??___ftmul+0)+0,f
 17172  0BDC                     u7400:
 17173  0BDC  0B89               	decfsz	wreg,f
 17174  0BDD  2BD9               	goto	u7405
 17175  0BDE  0842               	movf	0+(??___ftmul+0)+0,w
 17176  0BDF  00C5               	movwf	(??___ftmul+3)+0
 17177  0BE0  0845               	movf	(??___ftmul+3)+0,w
 17178  0BE1  00CB               	movwf	(___ftmul@sign)
 17179                           	line	62
 17180  0BE2  083F               	movf	(___ftmul@f2),w
 17181  0BE3  00C2               	movwf	((??___ftmul+0)+0)
 17182  0BE4  0840               	movf	(___ftmul@f2+1),w
 17183  0BE5  00C3               	movwf	((??___ftmul+0)+0+1)
 17184  0BE6  0841               	movf	(___ftmul@f2+2),w
 17185  0BE7  00C4               	movwf	((??___ftmul+0)+0+2)
 17186  0BE8  3010               	movlw	010h
 17187  0BE9                     u7415:
 17188  0BE9  36C4               	lsrf	(??___ftmul+0)+2,f
 17189  0BEA  0CC3               	rrf	(??___ftmul+0)+1,f
 17190  0BEB  0CC2               	rrf	(??___ftmul+0)+0,f
 17191  0BEC                     u7410:
 17192  0BEC  0B89               	decfsz	wreg,f
 17193  0BED  2BE9               	goto	u7415
 17194  0BEE  0842               	movf	0+(??___ftmul+0)+0,w
 17195  0BEF  00C5               	movwf	(??___ftmul+3)+0
 17196  0BF0  0845               	movf	(??___ftmul+3)+0,w
 17197  0BF1  06CB               	xorwf	(___ftmul@sign),f
 17198                           	line	63
 17199  0BF2  3080               	movlw	(080h)
 17200  0BF3  00C2               	movwf	(??___ftmul+0)+0
 17201  0BF4  0842               	movf	(??___ftmul+0)+0,w
 17202  0BF5  05CB               	andwf	(___ftmul@sign),f
 17203                           	line	64
 17204                           	
 17205  0BF6                     l23769:	
 17206  0BF6  17BD               	bsf	(___ftmul@f1)+(15/8),(15)&7
 17207                           	line	66
 17208                           	
 17209  0BF7                     l23771:	
 17210  0BF7  17C0               	bsf	(___ftmul@f2)+(15/8),(15)&7
 17211                           	line	67
 17212                           	
 17213  0BF8                     l23773:	
 17214  0BF8  30FF               	movlw	0FFh
 17215  0BF9  05BF               	andwf	(___ftmul@f2),f
 17216  0BFA  30FF               	movlw	0FFh
 17217  0BFB  05C0               	andwf	(___ftmul@f2+1),f
 17218  0BFC  3000               	movlw	0
 17219  0BFD  05C1               	andwf	(___ftmul@f2+2),f
 17220                           	line	68
 17221                           	
 17222  0BFE                     l23775:	
 17223  0BFE  3000               	movlw	0
 17224  0BFF  00C7               	movwf	(___ftmul@f3_as_product)
 17225  0C00  3000               	movlw	0
 17226  0C01  00C8               	movwf	(___ftmul@f3_as_product+1)
 17227  0C02  3000               	movlw	0
 17228  0C03  00C9               	movwf	(___ftmul@f3_as_product+2)
 17229                           	line	69
 17230                           	
 17231  0C04                     l23777:	
 17232  0C04  3007               	movlw	(07h)
 17233  0C05  00C2               	movwf	(??___ftmul+0)+0
 17234  0C06  0842               	movf	(??___ftmul+0)+0,w
 17235  0C07  00CA               	movwf	(___ftmul@cntr)
 17236  0C08  2C09               	goto	l23779
 17237                           	line	70
 17238                           	
 17239  0C09                     l18910:	
 17240                           	line	71
 17241                           	
 17242  0C09                     l23779:	
 17243  0C09  1C3C               	btfss	(___ftmul@f1),(0)&7
 17244  0C0A  2C0C               	goto	u7421
 17245  0C0B  2C0D               	goto	u7420
 17246  0C0C                     u7421:
 17247  0C0C  2C14               	goto	l23783
 17248  0C0D                     u7420:
 17249                           	line	72
 17250                           	
 17251  0C0D                     l23781:	
 17252  0C0D  083F               	movf	(___ftmul@f2),w
 17253  0C0E  07C7               	addwf	(___ftmul@f3_as_product),f
 17254  0C0F  0840               	movf	(___ftmul@f2+1),w
 17255  0C10  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 17256  0C11  0841               	movf	(___ftmul@f2+2),w
 17257  0C12  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 17258  0C13  2C14               	goto	l23783
 17259                           	
 17260  0C14                     l18911:	
 17261                           	line	73
 17262                           	
 17263  0C14                     l23783:	
 17264  0C14  3001               	movlw	01h
 17265  0C15                     u7435:
 17266  0C15  36BE               	lsrf	(___ftmul@f1+2),f
 17267  0C16  0CBD               	rrf	(___ftmul@f1+1),f
 17268  0C17  0CBC               	rrf	(___ftmul@f1),f
 17269  0C18  0B89               	decfsz	wreg,f
 17270  0C19  2C15               	goto	u7435
 17271                           
 17272                           	line	74
 17273                           	
 17274  0C1A                     l23785:	
 17275  0C1A  3001               	movlw	01h
 17276  0C1B                     u7445:
 17277  0C1B  35BF               	lslf	(___ftmul@f2),f
 17278  0C1C  0DC0               	rlf	(___ftmul@f2+1),f
 17279  0C1D  0DC1               	rlf	(___ftmul@f2+2),f
 17280  0C1E  0B89               	decfsz	wreg,f
 17281  0C1F  2C1B               	goto	u7445
 17282                           	line	75
 17283                           	
 17284  0C20                     l23787:	
 17285  0C20  3001               	movlw	low(01h)
 17286  0C21  02CA               	subwf	(___ftmul@cntr),f
 17287  0C22  1D03               	btfss	status,2
 17288  0C23  2C25               	goto	u7451
 17289  0C24  2C26               	goto	u7450
 17290  0C25                     u7451:
 17291  0C25  2C09               	goto	l23779
 17292  0C26                     u7450:
 17293  0C26  2C27               	goto	l23789
 17294                           	
 17295  0C27                     l18912:	
 17296                           	line	76
 17297                           	
 17298  0C27                     l23789:	
 17299  0C27  3009               	movlw	(09h)
 17300  0C28  00C2               	movwf	(??___ftmul+0)+0
 17301  0C29  0842               	movf	(??___ftmul+0)+0,w
 17302  0C2A  00CA               	movwf	(___ftmul@cntr)
 17303  0C2B  2C2C               	goto	l23791
 17304                           	line	77
 17305                           	
 17306  0C2C                     l18913:	
 17307                           	line	78
 17308                           	
 17309  0C2C                     l23791:	
 17310  0C2C  1C3C               	btfss	(___ftmul@f1),(0)&7
 17311  0C2D  2C2F               	goto	u7461
 17312  0C2E  2C30               	goto	u7460
 17313  0C2F                     u7461:
 17314  0C2F  2C37               	goto	l23795
 17315  0C30                     u7460:
 17316                           	line	79
 17317                           	
 17318  0C30                     l23793:	
 17319  0C30  083F               	movf	(___ftmul@f2),w
 17320  0C31  07C7               	addwf	(___ftmul@f3_as_product),f
 17321  0C32  0840               	movf	(___ftmul@f2+1),w
 17322  0C33  3DC8               	addwfc	(___ftmul@f3_as_product+1),f
 17323  0C34  0841               	movf	(___ftmul@f2+2),w
 17324  0C35  3DC9               	addwfc	(___ftmul@f3_as_product+2),f
 17325  0C36  2C37               	goto	l23795
 17326                           	
 17327  0C37                     l18914:	
 17328                           	line	80
 17329                           	
 17330  0C37                     l23795:	
 17331  0C37  3001               	movlw	01h
 17332  0C38                     u7475:
 17333  0C38  36BE               	lsrf	(___ftmul@f1+2),f
 17334  0C39  0CBD               	rrf	(___ftmul@f1+1),f
 17335  0C3A  0CBC               	rrf	(___ftmul@f1),f
 17336  0C3B  0B89               	decfsz	wreg,f
 17337  0C3C  2C38               	goto	u7475
 17338                           
 17339                           	line	81
 17340                           	
 17341  0C3D                     l23797:	
 17342  0C3D  3001               	movlw	01h
 17343  0C3E                     u7485:
 17344  0C3E  36C9               	lsrf	(___ftmul@f3_as_product+2),f
 17345  0C3F  0CC8               	rrf	(___ftmul@f3_as_product+1),f
 17346  0C40  0CC7               	rrf	(___ftmul@f3_as_product),f
 17347  0C41  0B89               	decfsz	wreg,f
 17348  0C42  2C3E               	goto	u7485
 17349                           
 17350                           	line	82
 17351                           	
 17352  0C43                     l23799:	
 17353  0C43  3001               	movlw	low(01h)
 17354  0C44  02CA               	subwf	(___ftmul@cntr),f
 17355  0C45  1D03               	btfss	status,2
 17356  0C46  2C48               	goto	u7491
 17357  0C47  2C49               	goto	u7490
 17358  0C48                     u7491:
 17359  0C48  2C2C               	goto	l23791
 17360  0C49                     u7490:
 17361  0C49  2C4A               	goto	l23801
 17362                           	
 17363  0C4A                     l18915:	
 17364                           	line	83
 17365                           	
 17366  0C4A                     l23801:	
 17367  0C4A  0847               	movf	(___ftmul@f3_as_product),w
 17368  0C4B  00A0               	movwf	(?___ftpack)
 17369  0C4C  0848               	movf	(___ftmul@f3_as_product+1),w
 17370  0C4D  00A1               	movwf	(?___ftpack+1)
 17371  0C4E  0849               	movf	(___ftmul@f3_as_product+2),w
 17372  0C4F  00A2               	movwf	(?___ftpack+2)
 17373  0C50  0846               	movf	(___ftmul@exp),w
 17374  0C51  00C2               	movwf	(??___ftmul+0)+0
 17375  0C52  0842               	movf	(??___ftmul+0)+0,w
 17376  0C53  00A3               	movwf	0+(?___ftpack)+03h
 17377  0C54  084B               	movf	(___ftmul@sign),w
 17378  0C55  00C3               	movwf	(??___ftmul+1)+0
 17379  0C56  0843               	movf	(??___ftmul+1)+0,w
 17380  0C57  00A4               	movwf	0+(?___ftpack)+04h
 17381  0C58  319F  278C  318B   	fcall	___ftpack
 17382  0C5B  0020               	movlb 0	; select bank0
 17383  0C5C  0820               	movf	(0+(?___ftpack)),w
 17384  0C5D  00BC               	movwf	(?___ftmul)
 17385  0C5E  0821               	movf	(1+(?___ftpack)),w
 17386  0C5F  00BD               	movwf	(?___ftmul+1)
 17387  0C60  0822               	movf	(2+(?___ftpack)),w
 17388  0C61  00BE               	movwf	(?___ftmul+2)
 17389  0C62  2C63               	goto	l18908
 17390                           	
 17391  0C63                     l23803:	
 17392                           	line	84
 17393                           	
 17394  0C63                     l18908:	
 17395  0C63  0008               	return
 17396                           	opt stack 0
 17397                           GLOBAL	__end_of___ftmul
 17398  0C64                     	__end_of___ftmul:
 17399 ;; =============== function ___ftmul ends ============
 17400                           
 17401                           	signat	___ftmul,8315
 17402                           	global	___ftdiv
 17403                           psect	text3289,local,class=CODE,delta=2
 17404                           global __ptext3289
 17405  0966                     __ptext3289:
 17406                           
 17407 ;; *************** function ___ftdiv *****************
 17408 ;; Defined at:
 17409 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 17410 ;; Parameters:    Size  Location     Type
 17411 ;;  f2              3   28[BANK0 ] float 
 17412 ;;  f1              3   31[BANK0 ] float 
 17413 ;; Auto vars:     Size  Location     Type
 17414 ;;  f3              3   39[BANK0 ] float 
 17415 ;;  sign            1   43[BANK0 ] unsigned char 
 17416 ;;  exp             1   42[BANK0 ] unsigned char 
 17417 ;;  cntr            1   38[BANK0 ] unsigned char 
 17418 ;; Return value:  Size  Location     Type
 17419 ;;                  3   28[BANK0 ] float 
 17420 ;; Registers used:
 17421 ;;		wreg, status,2, status,0, pclath, cstack
 17422 ;; Tracked objects:
 17423 ;;		On entry : 0/0
 17424 ;;		On exit  : 0/0
 17425 ;;		Unchanged: 0/0
 17426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17428 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17430 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
       0       0
 17431 ;;Total ram usage:       16 bytes
 17432 ;; Hardware stack levels used:    1
 17433 ;; Hardware stack levels required when called:    5
 17434 ;; This function calls:
 17435 ;;		___ftpack
 17436 ;; This function is called by:
 17437 ;;		_getPercentValue
 17438 ;;		_setPercentValue
 17439 ;; This function uses a non-reentrant model
 17440 ;;
 17441                           psect	text3289
 17442                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
 17443                           	line	50
 17444                           	global	__size_of___ftdiv
 17445  00B8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
 17446                           	
 17447  0966                     ___ftdiv:	
 17448                           	opt	stack 2
 17449                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 17450                           	line	55
 17451                           	
 17452  0966                     l23713:	
 17453  0966  0020               	movlb 0	; select bank0
 17454  0967  083F               	movf	(___ftdiv@f1),w
 17455  0968  00C2               	movwf	((??___ftdiv+0)+0)
 17456  0969  0840               	movf	(___ftdiv@f1+1),w
 17457  096A  00C3               	movwf	((??___ftdiv+0)+0+1)
 17458  096B  0841               	movf	(___ftdiv@f1+2),w
 17459  096C  00C4               	movwf	((??___ftdiv+0)+0+2)
 17460  096D  1003               	clrc
 17461  096E  0D43               	rlf	(??___ftdiv+0)+1,w
 17462  096F  0D44               	rlf	(??___ftdiv+0)+2,w
 17463  0970  00C5               	movwf	(??___ftdiv+3)+0
 17464  0971  0845               	movf	(??___ftdiv+3)+0,w
 17465  0972  00CA               	movwf	(___ftdiv@exp)
 17466  0973  08CA               	movf	((___ftdiv@exp)),f
 17467  0974  1D03               	skipz
 17468  0975  2977               	goto	u7301
 17469  0976  2978               	goto	u7300
 17470  0977                     u7301:
 17471  0977  2980               	goto	l23719
 17472  0978                     u7300:
 17473                           	line	56
 17474                           	
 17475  0978                     l23715:	
 17476  0978  3000               	movlw	0x0
 17477  0979  00BC               	movwf	(?___ftdiv)
 17478  097A  3000               	movlw	0x0
 17479  097B  00BD               	movwf	(?___ftdiv+1)
 17480  097C  3000               	movlw	0x0
 17481  097D  00BE               	movwf	(?___ftdiv+2)
 17482  097E  2A1D               	goto	l18898
 17483                           	
 17484  097F                     l23717:	
 17485  097F  2A1D               	goto	l18898
 17486                           	
 17487  0980                     l18897:	
 17488                           	line	57
 17489                           	
 17490  0980                     l23719:	
 17491  0980  083C               	movf	(___ftdiv@f2),w
 17492  0981  00C2               	movwf	((??___ftdiv+0)+0)
 17493  0982  083D               	movf	(___ftdiv@f2+1),w
 17494  0983  00C3               	movwf	((??___ftdiv+0)+0+1)
 17495  0984  083E               	movf	(___ftdiv@f2+2),w
 17496  0985  00C4               	movwf	((??___ftdiv+0)+0+2)
 17497  0986  1003               	clrc
 17498  0987  0D43               	rlf	(??___ftdiv+0)+1,w
 17499  0988  0D44               	rlf	(??___ftdiv+0)+2,w
 17500  0989  00C5               	movwf	(??___ftdiv+3)+0
 17501  098A  0845               	movf	(??___ftdiv+3)+0,w
 17502  098B  00CB               	movwf	(___ftdiv@sign)
 17503  098C  08CB               	movf	((___ftdiv@sign)),f
 17504  098D  1D03               	skipz
 17505  098E  2990               	goto	u7311
 17506  098F  2991               	goto	u7310
 17507  0990                     u7311:
 17508  0990  2999               	goto	l23725
 17509  0991                     u7310:
 17510                           	line	58
 17511                           	
 17512  0991                     l23721:	
 17513  0991  3000               	movlw	0x0
 17514  0992  00BC               	movwf	(?___ftdiv)
 17515  0993  3000               	movlw	0x0
 17516  0994  00BD               	movwf	(?___ftdiv+1)
 17517  0995  3000               	movlw	0x0
 17518  0996  00BE               	movwf	(?___ftdiv+2)
 17519  0997  2A1D               	goto	l18898
 17520                           	
 17521  0998                     l23723:	
 17522  0998  2A1D               	goto	l18898
 17523                           	
 17524  0999                     l18899:	
 17525                           	line	59
 17526                           	
 17527  0999                     l23725:	
 17528  0999  3000               	movlw	0
 17529  099A  00C7               	movwf	(___ftdiv@f3)
 17530  099B  3000               	movlw	0
 17531  099C  00C8               	movwf	(___ftdiv@f3+1)
 17532  099D  3000               	movlw	0
 17533  099E  00C9               	movwf	(___ftdiv@f3+2)
 17534                           	line	60
 17535                           	
 17536  099F                     l23727:	
 17537  099F  3089               	movlw	(089h)
 17538  09A0  074B               	addwf	(___ftdiv@sign),w
 17539  09A1  00C2               	movwf	(??___ftdiv+0)+0
 17540  09A2  0842               	movf	0+(??___ftdiv+0)+0,w
 17541  09A3  02CA               	subwf	(___ftdiv@exp),f
 17542                           	line	61
 17543                           	
 17544  09A4                     l23729:	
 17545  09A4  083F               	movf	(___ftdiv@f1),w
 17546  09A5  00C2               	movwf	((??___ftdiv+0)+0)
 17547  09A6  0840               	movf	(___ftdiv@f1+1),w
 17548  09A7  00C3               	movwf	((??___ftdiv+0)+0+1)
 17549  09A8  0841               	movf	(___ftdiv@f1+2),w
 17550  09A9  00C4               	movwf	((??___ftdiv+0)+0+2)
 17551  09AA  3010               	movlw	010h
 17552  09AB                     u7325:
 17553  09AB  36C4               	lsrf	(??___ftdiv+0)+2,f
 17554  09AC  0CC3               	rrf	(??___ftdiv+0)+1,f
 17555  09AD  0CC2               	rrf	(??___ftdiv+0)+0,f
 17556  09AE                     u7320:
 17557  09AE  0B89               	decfsz	wreg,f
 17558  09AF  29AB               	goto	u7325
 17559  09B0  0842               	movf	0+(??___ftdiv+0)+0,w
 17560  09B1  00C5               	movwf	(??___ftdiv+3)+0
 17561  09B2  0845               	movf	(??___ftdiv+3)+0,w
 17562  09B3  00CB               	movwf	(___ftdiv@sign)
 17563                           	line	62
 17564                           	
 17565  09B4                     l23731:	
 17566  09B4  083C               	movf	(___ftdiv@f2),w
 17567  09B5  00C2               	movwf	((??___ftdiv+0)+0)
 17568  09B6  083D               	movf	(___ftdiv@f2+1),w
 17569  09B7  00C3               	movwf	((??___ftdiv+0)+0+1)
 17570  09B8  083E               	movf	(___ftdiv@f2+2),w
 17571  09B9  00C4               	movwf	((??___ftdiv+0)+0+2)
 17572  09BA  3010               	movlw	010h
 17573  09BB                     u7335:
 17574  09BB  36C4               	lsrf	(??___ftdiv+0)+2,f
 17575  09BC  0CC3               	rrf	(??___ftdiv+0)+1,f
 17576  09BD  0CC2               	rrf	(??___ftdiv+0)+0,f
 17577  09BE                     u7330:
 17578  09BE  0B89               	decfsz	wreg,f
 17579  09BF  29BB               	goto	u7335
 17580  09C0  0842               	movf	0+(??___ftdiv+0)+0,w
 17581  09C1  00C5               	movwf	(??___ftdiv+3)+0
 17582  09C2  0845               	movf	(??___ftdiv+3)+0,w
 17583  09C3  06CB               	xorwf	(___ftdiv@sign),f
 17584                           	line	63
 17585                           	
 17586  09C4                     l23733:	
 17587  09C4  3080               	movlw	(080h)
 17588  09C5  00C2               	movwf	(??___ftdiv+0)+0
 17589  09C6  0842               	movf	(??___ftdiv+0)+0,w
 17590  09C7  05CB               	andwf	(___ftdiv@sign),f
 17591                           	line	64
 17592                           	
 17593  09C8                     l23735:	
 17594  09C8  17C0               	bsf	(___ftdiv@f1)+(15/8),(15)&7
 17595                           	line	65
 17596  09C9  30FF               	movlw	0FFh
 17597  09CA  05BF               	andwf	(___ftdiv@f1),f
 17598  09CB  30FF               	movlw	0FFh
 17599  09CC  05C0               	andwf	(___ftdiv@f1+1),f
 17600  09CD  3000               	movlw	0
 17601  09CE  05C1               	andwf	(___ftdiv@f1+2),f
 17602                           	line	66
 17603                           	
 17604  09CF                     l23737:	
 17605  09CF  17BD               	bsf	(___ftdiv@f2)+(15/8),(15)&7
 17606                           	line	67
 17607  09D0  30FF               	movlw	0FFh
 17608  09D1  05BC               	andwf	(___ftdiv@f2),f
 17609  09D2  30FF               	movlw	0FFh
 17610  09D3  05BD               	andwf	(___ftdiv@f2+1),f
 17611  09D4  3000               	movlw	0
 17612  09D5  05BE               	andwf	(___ftdiv@f2+2),f
 17613                           	line	68
 17614  09D6  3018               	movlw	(018h)
 17615  09D7  00C2               	movwf	(??___ftdiv+0)+0
 17616  09D8  0842               	movf	(??___ftdiv+0)+0,w
 17617  09D9  00C6               	movwf	(___ftdiv@cntr)
 17618  09DA  29DB               	goto	l23739
 17619                           	line	69
 17620                           	
 17621  09DB                     l18900:	
 17622                           	line	70
 17623                           	
 17624  09DB                     l23739:	
 17625  09DB  3001               	movlw	01h
 17626  09DC                     u7345:
 17627  09DC  35C7               	lslf	(___ftdiv@f3),f
 17628  09DD  0DC8               	rlf	(___ftdiv@f3+1),f
 17629  09DE  0DC9               	rlf	(___ftdiv@f3+2),f
 17630  09DF  0B89               	decfsz	wreg,f
 17631  09E0  29DC               	goto	u7345
 17632                           	line	71
 17633                           	
 17634  09E1                     l23741:	
 17635  09E1  083E               	movf	(___ftdiv@f2+2),w
 17636  09E2  0241               	subwf	(___ftdiv@f1+2),w
 17637  09E3  1D03               	skipz
 17638  09E4  29EB               	goto	u7355
 17639  09E5  083D               	movf	(___ftdiv@f2+1),w
 17640  09E6  0240               	subwf	(___ftdiv@f1+1),w
 17641  09E7  1D03               	skipz
 17642  09E8  29EB               	goto	u7355
 17643  09E9  083C               	movf	(___ftdiv@f2),w
 17644  09EA  023F               	subwf	(___ftdiv@f1),w
 17645  09EB                     u7355:
 17646  09EB  1C03               	skipc
 17647  09EC  29EE               	goto	u7351
 17648  09ED  29EF               	goto	u7350
 17649  09EE                     u7351:
 17650  09EE  29F7               	goto	l23747
 17651  09EF                     u7350:
 17652                           	line	72
 17653                           	
 17654  09EF                     l23743:	
 17655  09EF  083C               	movf	(___ftdiv@f2),w
 17656  09F0  02BF               	subwf	(___ftdiv@f1),f
 17657  09F1  083D               	movf	(___ftdiv@f2+1),w
 17658  09F2  3BC0               	subwfb	(___ftdiv@f1+1),f
 17659  09F3  083E               	movf	(___ftdiv@f2+2),w
 17660  09F4  3BC1               	subwfb	(___ftdiv@f1+2),f
 17661                           	line	73
 17662                           	
 17663  09F5                     l23745:	
 17664  09F5  1447               	bsf	(___ftdiv@f3)+(0/8),(0)&7
 17665  09F6  29F7               	goto	l23747
 17666                           	line	74
 17667                           	
 17668  09F7                     l18901:	
 17669                           	line	75
 17670                           	
 17671  09F7                     l23747:	
 17672  09F7  3001               	movlw	01h
 17673  09F8                     u7365:
 17674  09F8  35BF               	lslf	(___ftdiv@f1),f
 17675  09F9  0DC0               	rlf	(___ftdiv@f1+1),f
 17676  09FA  0DC1               	rlf	(___ftdiv@f1+2),f
 17677  09FB  0B89               	decfsz	wreg,f
 17678  09FC  29F8               	goto	u7365
 17679                           	line	76
 17680                           	
 17681  09FD                     l23749:	
 17682  09FD  3001               	movlw	low(01h)
 17683  09FE  02C6               	subwf	(___ftdiv@cntr),f
 17684  09FF  1D03               	btfss	status,2
 17685  0A00  2A02               	goto	u7371
 17686  0A01  2A03               	goto	u7370
 17687  0A02                     u7371:
 17688  0A02  29DB               	goto	l23739
 17689  0A03                     u7370:
 17690  0A03  2A04               	goto	l23751
 17691                           	
 17692  0A04                     l18902:	
 17693                           	line	77
 17694                           	
 17695  0A04                     l23751:	
 17696  0A04  0847               	movf	(___ftdiv@f3),w
 17697  0A05  00A0               	movwf	(?___ftpack)
 17698  0A06  0848               	movf	(___ftdiv@f3+1),w
 17699  0A07  00A1               	movwf	(?___ftpack+1)
 17700  0A08  0849               	movf	(___ftdiv@f3+2),w
 17701  0A09  00A2               	movwf	(?___ftpack+2)
 17702  0A0A  084A               	movf	(___ftdiv@exp),w
 17703  0A0B  00C2               	movwf	(??___ftdiv+0)+0
 17704  0A0C  0842               	movf	(??___ftdiv+0)+0,w
 17705  0A0D  00A3               	movwf	0+(?___ftpack)+03h
 17706  0A0E  084B               	movf	(___ftdiv@sign),w
 17707  0A0F  00C3               	movwf	(??___ftdiv+1)+0
 17708  0A10  0843               	movf	(??___ftdiv+1)+0,w
 17709  0A11  00A4               	movwf	0+(?___ftpack)+04h
 17710  0A12  319F  278C  3189   	fcall	___ftpack
 17711  0A15  0020               	movlb 0	; select bank0
 17712  0A16  0820               	movf	(0+(?___ftpack)),w
 17713  0A17  00BC               	movwf	(?___ftdiv)
 17714  0A18  0821               	movf	(1+(?___ftpack)),w
 17715  0A19  00BD               	movwf	(?___ftdiv+1)
 17716  0A1A  0822               	movf	(2+(?___ftpack)),w
 17717  0A1B  00BE               	movwf	(?___ftdiv+2)
 17718  0A1C  2A1D               	goto	l18898
 17719                           	
 17720  0A1D                     l23753:	
 17721                           	line	78
 17722                           	
 17723  0A1D                     l18898:	
 17724  0A1D  0008               	return
 17725                           	opt stack 0
 17726                           GLOBAL	__end_of___ftdiv
 17727  0A1E                     	__end_of___ftdiv:
 17728 ;; =============== function ___ftdiv ends ============
 17729                           
 17730                           	signat	___ftdiv,8315
 17731                           	global	___ftadd
 17732                           psect	text3290,local,class=CODE,delta=2
 17733                           global __ptext3290
 17734  0D69                     __ptext3290:
 17735                           
 17736 ;; *************** function ___ftadd *****************
 17737 ;; Defined at:
 17738 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  f1              3   44[BANK0 ] float 
 17741 ;;  f2              3   47[BANK0 ] float 
 17742 ;; Auto vars:     Size  Location     Type
 17743 ;;  exp1            1   56[BANK0 ] unsigned char 
 17744 ;;  exp2            1   55[BANK0 ] unsigned char 
 17745 ;;  sign            1   54[BANK0 ] unsigned char 
 17746 ;; Return value:  Size  Location     Type
 17747 ;;                  3   44[BANK0 ] float 
 17748 ;; Registers used:
 17749 ;;		wreg, status,2, status,0, pclath, cstack
 17750 ;; Tracked objects:
 17751 ;;		On entry : 0/0
 17752 ;;		On exit  : 0/0
 17753 ;;		Unchanged: 0/0
 17754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 17755 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 17756 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 17757 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 17758 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0
 17759 ;;Total ram usage:       13 bytes
 17760 ;; Hardware stack levels used:    1
 17761 ;; Hardware stack levels required when called:    5
 17762 ;; This function calls:
 17763 ;;		___ftpack
 17764 ;; This function is called by:
 17765 ;;		_getPercentValue
 17766 ;;		___ftsub
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           psect	text3290
 17770                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
 17771                           	line	87
 17772                           	global	__size_of___ftadd
 17773  0130                     	__size_of___ftadd	equ	__end_of___ftadd-___ftadd
 17774                           	
 17775  0D69                     ___ftadd:	
 17776                           	opt	stack 2
 17777                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 17778                           	line	90
 17779                           	
 17780  0D69                     l23643:	
 17781  0D69  0020               	movlb 0	; select bank0
 17782  0D6A  084C               	movf	(___ftadd@f1),w
 17783  0D6B  00D2               	movwf	((??___ftadd+0)+0)
 17784  0D6C  084D               	movf	(___ftadd@f1+1),w
 17785  0D6D  00D3               	movwf	((??___ftadd+0)+0+1)
 17786  0D6E  084E               	movf	(___ftadd@f1+2),w
 17787  0D6F  00D4               	movwf	((??___ftadd+0)+0+2)
 17788  0D70  1003               	clrc
 17789  0D71  0D53               	rlf	(??___ftadd+0)+1,w
 17790  0D72  0D54               	rlf	(??___ftadd+0)+2,w
 17791  0D73  00D5               	movwf	(??___ftadd+3)+0
 17792  0D74  0855               	movf	(??___ftadd+3)+0,w
 17793  0D75  00D8               	movwf	(___ftadd@exp1)
 17794                           	line	91
 17795  0D76  084F               	movf	(___ftadd@f2),w
 17796  0D77  00D2               	movwf	((??___ftadd+0)+0)
 17797  0D78  0850               	movf	(___ftadd@f2+1),w
 17798  0D79  00D3               	movwf	((??___ftadd+0)+0+1)
 17799  0D7A  0851               	movf	(___ftadd@f2+2),w
 17800  0D7B  00D4               	movwf	((??___ftadd+0)+0+2)
 17801  0D7C  1003               	clrc
 17802  0D7D  0D53               	rlf	(??___ftadd+0)+1,w
 17803  0D7E  0D54               	rlf	(??___ftadd+0)+2,w
 17804  0D7F  00D5               	movwf	(??___ftadd+3)+0
 17805  0D80  0855               	movf	(??___ftadd+3)+0,w
 17806  0D81  00D7               	movwf	(___ftadd@exp2)
 17807                           	line	92
 17808                           	
 17809  0D82                     l23645:	
 17810  0D82  0858               	movf	(___ftadd@exp1),w
 17811  0D83  1D03               	skipz
 17812  0D84  2D86               	goto	u7070
 17813  0D85  2D97               	goto	l23651
 17814  0D86                     u7070:
 17815                           	
 17816  0D86                     l23647:	
 17817  0D86  0857               	movf	(___ftadd@exp2),w
 17818  0D87  0258               	subwf	(___ftadd@exp1),w
 17819  0D88  1803               	skipnc
 17820  0D89  2D8B               	goto	u7081
 17821  0D8A  2D8C               	goto	u7080
 17822  0D8B                     u7081:
 17823  0D8B  2D9F               	goto	l23655
 17824  0D8C                     u7080:
 17825                           	
 17826  0D8C                     l23649:	
 17827  0D8C  0358               	decf	(___ftadd@exp1),w
 17828  0D8D  3AFF               	xorlw	0ffh
 17829  0D8E  0757               	addwf	(___ftadd@exp2),w
 17830  0D8F  00D2               	movwf	(??___ftadd+0)+0
 17831  0D90  3019               	movlw	(019h)
 17832  0D91  0252               	subwf	0+(??___ftadd+0)+0,w
 17833  0D92  1C03               	skipc
 17834  0D93  2D95               	goto	u7091
 17835  0D94  2D96               	goto	u7090
 17836  0D95                     u7091:
 17837  0D95  2D9F               	goto	l23655
 17838  0D96                     u7090:
 17839  0D96  2D97               	goto	l23651
 17840                           	
 17841  0D97                     l18855:	
 17842                           	line	93
 17843                           	
 17844  0D97                     l23651:	
 17845  0D97  084F               	movf	(___ftadd@f2),w
 17846  0D98  00CC               	movwf	(?___ftadd)
 17847  0D99  0850               	movf	(___ftadd@f2+1),w
 17848  0D9A  00CD               	movwf	(?___ftadd+1)
 17849  0D9B  0851               	movf	(___ftadd@f2+2),w
 17850  0D9C  00CE               	movwf	(?___ftadd+2)
 17851  0D9D  2E98               	goto	l18856
 17852                           	
 17853  0D9E                     l23653:	
 17854  0D9E  2E98               	goto	l18856
 17855                           	
 17856  0D9F                     l18853:	
 17857                           	line	94
 17858                           	
 17859  0D9F                     l23655:	
 17860  0D9F  0857               	movf	(___ftadd@exp2),w
 17861  0DA0  1D03               	skipz
 17862  0DA1  2DA3               	goto	u7100
 17863  0DA2  2DB3               	goto	l18859
 17864  0DA3                     u7100:
 17865                           	
 17866  0DA3                     l23657:	
 17867  0DA3  0858               	movf	(___ftadd@exp1),w
 17868  0DA4  0257               	subwf	(___ftadd@exp2),w
 17869  0DA5  1803               	skipnc
 17870  0DA6  2DA8               	goto	u7111
 17871  0DA7  2DA9               	goto	u7110
 17872  0DA8                     u7111:
 17873  0DA8  2DB4               	goto	l23661
 17874  0DA9                     u7110:
 17875                           	
 17876  0DA9                     l23659:	
 17877  0DA9  0357               	decf	(___ftadd@exp2),w
 17878  0DAA  3AFF               	xorlw	0ffh
 17879  0DAB  0758               	addwf	(___ftadd@exp1),w
 17880  0DAC  00D2               	movwf	(??___ftadd+0)+0
 17881  0DAD  3019               	movlw	(019h)
 17882  0DAE  0252               	subwf	0+(??___ftadd+0)+0,w
 17883  0DAF  1C03               	skipc
 17884  0DB0  2DB2               	goto	u7121
 17885  0DB1  2DB3               	goto	u7120
 17886  0DB2                     u7121:
 17887  0DB2  2DB4               	goto	l23661
 17888  0DB3                     u7120:
 17889                           	
 17890  0DB3                     l18859:	
 17891                           	line	95
 17892  0DB3  2E98               	goto	l18856
 17893                           	
 17894  0DB4                     l18857:	
 17895                           	line	96
 17896                           	
 17897  0DB4                     l23661:	
 17898  0DB4  3006               	movlw	(06h)
 17899  0DB5  00D2               	movwf	(??___ftadd+0)+0
 17900  0DB6  0852               	movf	(??___ftadd+0)+0,w
 17901  0DB7  00D6               	movwf	(___ftadd@sign)
 17902                           	line	97
 17903                           	
 17904  0DB8                     l23663:	
 17905  0DB8  1FCE               	btfss	(___ftadd@f1+2),(23)&7
 17906  0DB9  2DBB               	goto	u7131
 17907  0DBA  2DBC               	goto	u7130
 17908  0DBB                     u7131:
 17909  0DBB  2DBD               	goto	l18860
 17910  0DBC                     u7130:
 17911                           	line	98
 17912                           	
 17913  0DBC                     l23665:	
 17914  0DBC  17D6               	bsf	(___ftadd@sign)+(7/8),(7)&7
 17915                           	
 17916  0DBD                     l18860:	
 17917                           	line	99
 17918  0DBD  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 17919  0DBE  2DC0               	goto	u7141
 17920  0DBF  2DC1               	goto	u7140
 17921  0DC0                     u7141:
 17922  0DC0  2DC2               	goto	l18861
 17923  0DC1                     u7140:
 17924                           	line	100
 17925                           	
 17926  0DC1                     l23667:	
 17927  0DC1  1756               	bsf	(___ftadd@sign)+(6/8),(6)&7
 17928                           	
 17929  0DC2                     l18861:	
 17930                           	line	101
 17931  0DC2  17CD               	bsf	(___ftadd@f1)+(15/8),(15)&7
 17932                           	line	102
 17933                           	
 17934  0DC3                     l23669:	
 17935  0DC3  30FF               	movlw	0FFh
 17936  0DC4  05CC               	andwf	(___ftadd@f1),f
 17937  0DC5  30FF               	movlw	0FFh
 17938  0DC6  05CD               	andwf	(___ftadd@f1+1),f
 17939  0DC7  3000               	movlw	0
 17940  0DC8  05CE               	andwf	(___ftadd@f1+2),f
 17941                           	line	103
 17942                           	
 17943  0DC9                     l23671:	
 17944  0DC9  17D0               	bsf	(___ftadd@f2)+(15/8),(15)&7
 17945                           	line	104
 17946  0DCA  30FF               	movlw	0FFh
 17947  0DCB  05CF               	andwf	(___ftadd@f2),f
 17948  0DCC  30FF               	movlw	0FFh
 17949  0DCD  05D0               	andwf	(___ftadd@f2+1),f
 17950  0DCE  3000               	movlw	0
 17951  0DCF  05D1               	andwf	(___ftadd@f2+2),f
 17952                           	line	106
 17953  0DD0  0857               	movf	(___ftadd@exp2),w
 17954  0DD1  0258               	subwf	(___ftadd@exp1),w
 17955  0DD2  1803               	skipnc
 17956  0DD3  2DD5               	goto	u7151
 17957  0DD4  2DD6               	goto	u7150
 17958  0DD5                     u7151:
 17959  0DD5  2E03               	goto	l23683
 17960  0DD6                     u7150:
 17961  0DD6  2DD7               	goto	l23673
 17962                           	line	109
 17963                           	
 17964  0DD7                     l18863:	
 17965                           	line	110
 17966                           	
 17967  0DD7                     l23673:	
 17968  0DD7  3001               	movlw	01h
 17969  0DD8                     u7165:
 17970  0DD8  35CF               	lslf	(___ftadd@f2),f
 17971  0DD9  0DD0               	rlf	(___ftadd@f2+1),f
 17972  0DDA  0DD1               	rlf	(___ftadd@f2+2),f
 17973  0DDB  0B89               	decfsz	wreg,f
 17974  0DDC  2DD8               	goto	u7165
 17975                           	line	111
 17976  0DDD  3001               	movlw	low(01h)
 17977  0DDE  02D7               	subwf	(___ftadd@exp2),f
 17978                           	line	112
 17979                           	
 17980  0DDF                     l23675:	
 17981  0DDF  0857               	movf	(___ftadd@exp2),w
 17982  0DE0  0658               	xorwf	(___ftadd@exp1),w
 17983  0DE1  1903               	skipnz
 17984  0DE2  2DE4               	goto	u7171
 17985  0DE3  2DE5               	goto	u7170
 17986  0DE4                     u7171:
 17987  0DE4  2DFB               	goto	l23681
 17988  0DE5                     u7170:
 17989                           	
 17990  0DE5                     l23677:	
 17991  0DE5  3001               	movlw	low(01h)
 17992  0DE6  02D6               	subwf	(___ftadd@sign),f
 17993  0DE7  0856               	movf	((___ftadd@sign)),w
 17994  0DE8  3907               	andlw	07h
 17995  0DE9  1D03               	btfss	status,2
 17996  0DEA  2DEC               	goto	u7181
 17997  0DEB  2DED               	goto	u7180
 17998  0DEC                     u7181:
 17999  0DEC  2DD7               	goto	l23673
 18000  0DED                     u7180:
 18001  0DED  2DFB               	goto	l23681
 18002                           	
 18003  0DEE                     l18865:	
 18004  0DEE  2DFB               	goto	l23681
 18005                           	
 18006  0DEF                     l18866:	
 18007                           	line	113
 18008  0DEF  2DFB               	goto	l23681
 18009                           	
 18010  0DF0                     l18868:	
 18011                           	line	114
 18012                           	
 18013  0DF0                     l23679:	
 18014  0DF0  3001               	movlw	01h
 18015  0DF1                     u7195:
 18016  0DF1  36CE               	lsrf	(___ftadd@f1+2),f
 18017  0DF2  0CCD               	rrf	(___ftadd@f1+1),f
 18018  0DF3  0CCC               	rrf	(___ftadd@f1),f
 18019  0DF4  0B89               	decfsz	wreg,f
 18020  0DF5  2DF1               	goto	u7195
 18021                           
 18022                           	line	115
 18023  0DF6  3001               	movlw	(01h)
 18024  0DF7  00D2               	movwf	(??___ftadd+0)+0
 18025  0DF8  0852               	movf	(??___ftadd+0)+0,w
 18026  0DF9  07D8               	addwf	(___ftadd@exp1),f
 18027  0DFA  2DFB               	goto	l23681
 18028                           	line	116
 18029                           	
 18030  0DFB                     l18867:	
 18031                           	line	113
 18032                           	
 18033  0DFB                     l23681:	
 18034  0DFB  0858               	movf	(___ftadd@exp1),w
 18035  0DFC  0657               	xorwf	(___ftadd@exp2),w
 18036  0DFD  1D03               	skipz
 18037  0DFE  2E00               	goto	u7201
 18038  0DFF  2E01               	goto	u7200
 18039  0E00                     u7201:
 18040  0E00  2DF0               	goto	l23679
 18041  0E01                     u7200:
 18042  0E01  2E36               	goto	l18870
 18043                           	
 18044  0E02                     l18869:	
 18045                           	line	117
 18046  0E02  2E36               	goto	l18870
 18047                           	
 18048  0E03                     l18862:	
 18049                           	
 18050  0E03                     l23683:	
 18051  0E03  0858               	movf	(___ftadd@exp1),w
 18052  0E04  0257               	subwf	(___ftadd@exp2),w
 18053  0E05  1803               	skipnc
 18054  0E06  2E08               	goto	u7211
 18055  0E07  2E09               	goto	u7210
 18056  0E08                     u7211:
 18057  0E08  2E36               	goto	l18870
 18058  0E09                     u7210:
 18059  0E09  2E0A               	goto	l23685
 18060                           	line	120
 18061                           	
 18062  0E0A                     l18872:	
 18063                           	line	121
 18064                           	
 18065  0E0A                     l23685:	
 18066  0E0A  3001               	movlw	01h
 18067  0E0B                     u7225:
 18068  0E0B  35CC               	lslf	(___ftadd@f1),f
 18069  0E0C  0DCD               	rlf	(___ftadd@f1+1),f
 18070  0E0D  0DCE               	rlf	(___ftadd@f1+2),f
 18071  0E0E  0B89               	decfsz	wreg,f
 18072  0E0F  2E0B               	goto	u7225
 18073                           	line	122
 18074  0E10  3001               	movlw	low(01h)
 18075  0E11  02D8               	subwf	(___ftadd@exp1),f
 18076                           	line	123
 18077                           	
 18078  0E12                     l23687:	
 18079  0E12  0857               	movf	(___ftadd@exp2),w
 18080  0E13  0658               	xorwf	(___ftadd@exp1),w
 18081  0E14  1903               	skipnz
 18082  0E15  2E17               	goto	u7231
 18083  0E16  2E18               	goto	u7230
 18084  0E17                     u7231:
 18085  0E17  2E2E               	goto	l23693
 18086  0E18                     u7230:
 18087                           	
 18088  0E18                     l23689:	
 18089  0E18  3001               	movlw	low(01h)
 18090  0E19  02D6               	subwf	(___ftadd@sign),f
 18091  0E1A  0856               	movf	((___ftadd@sign)),w
 18092  0E1B  3907               	andlw	07h
 18093  0E1C  1D03               	btfss	status,2
 18094  0E1D  2E1F               	goto	u7241
 18095  0E1E  2E20               	goto	u7240
 18096  0E1F                     u7241:
 18097  0E1F  2E0A               	goto	l23685
 18098  0E20                     u7240:
 18099  0E20  2E2E               	goto	l23693
 18100                           	
 18101  0E21                     l18874:	
 18102  0E21  2E2E               	goto	l23693
 18103                           	
 18104  0E22                     l18875:	
 18105                           	line	124
 18106  0E22  2E2E               	goto	l23693
 18107                           	
 18108  0E23                     l18877:	
 18109                           	line	125
 18110                           	
 18111  0E23                     l23691:	
 18112  0E23  3001               	movlw	01h
 18113  0E24                     u7255:
 18114  0E24  36D1               	lsrf	(___ftadd@f2+2),f
 18115  0E25  0CD0               	rrf	(___ftadd@f2+1),f
 18116  0E26  0CCF               	rrf	(___ftadd@f2),f
 18117  0E27  0B89               	decfsz	wreg,f
 18118  0E28  2E24               	goto	u7255
 18119                           
 18120                           	line	126
 18121  0E29  3001               	movlw	(01h)
 18122  0E2A  00D2               	movwf	(??___ftadd+0)+0
 18123  0E2B  0852               	movf	(??___ftadd+0)+0,w
 18124  0E2C  07D7               	addwf	(___ftadd@exp2),f
 18125  0E2D  2E2E               	goto	l23693
 18126                           	line	127
 18127                           	
 18128  0E2E                     l18876:	
 18129                           	line	124
 18130                           	
 18131  0E2E                     l23693:	
 18132  0E2E  0858               	movf	(___ftadd@exp1),w
 18133  0E2F  0657               	xorwf	(___ftadd@exp2),w
 18134  0E30  1D03               	skipz
 18135  0E31  2E33               	goto	u7261
 18136  0E32  2E34               	goto	u7260
 18137  0E33                     u7261:
 18138  0E33  2E23               	goto	l23691
 18139  0E34                     u7260:
 18140  0E34  2E36               	goto	l18870
 18141                           	
 18142  0E35                     l18878:	
 18143  0E35  2E36               	goto	l18870
 18144                           	line	128
 18145                           	
 18146  0E36                     l18871:	
 18147                           	line	129
 18148                           	
 18149  0E36                     l18870:	
 18150  0E36  1FD6               	btfss	(___ftadd@sign),(7)&7
 18151  0E37  2E39               	goto	u7271
 18152  0E38  2E3A               	goto	u7270
 18153  0E39                     u7271:
 18154  0E39  2E4B               	goto	l23697
 18155  0E3A                     u7270:
 18156                           	line	131
 18157                           	
 18158  0E3A                     l23695:	
 18159  0E3A  30FF               	movlw	0FFh
 18160  0E3B  06CC               	xorwf	(___ftadd@f1),f
 18161  0E3C  30FF               	movlw	0FFh
 18162  0E3D  06CD               	xorwf	(___ftadd@f1+1),f
 18163  0E3E  30FF               	movlw	0FFh
 18164  0E3F  06CE               	xorwf	(___ftadd@f1+2),f
 18165                           	line	132
 18166  0E40  3001               	movlw	01h
 18167  0E41  07CC               	addwf	(___ftadd@f1),f
 18168  0E42  3000               	movlw	0
 18169  0E43  1803               	skipnc
 18170  0E44  3001               movlw 1
 18171  0E45  07CD               	addwf	(___ftadd@f1+1),f
 18172  0E46  3000               	movlw	0
 18173  0E47  1803               	skipnc
 18174  0E48  3001               movlw 1
 18175  0E49  07CE               	addwf	(___ftadd@f1+2),f
 18176  0E4A  2E4B               	goto	l23697
 18177                           	line	133
 18178                           	
 18179  0E4B                     l18879:	
 18180                           	line	134
 18181                           	
 18182  0E4B                     l23697:	
 18183  0E4B  1F56               	btfss	(___ftadd@sign),(6)&7
 18184  0E4C  2E4E               	goto	u7281
 18185  0E4D  2E4F               	goto	u7280
 18186  0E4E                     u7281:
 18187  0E4E  2E60               	goto	l23701
 18188  0E4F                     u7280:
 18189                           	line	136
 18190                           	
 18191  0E4F                     l23699:	
 18192  0E4F  30FF               	movlw	0FFh
 18193  0E50  06CF               	xorwf	(___ftadd@f2),f
 18194  0E51  30FF               	movlw	0FFh
 18195  0E52  06D0               	xorwf	(___ftadd@f2+1),f
 18196  0E53  30FF               	movlw	0FFh
 18197  0E54  06D1               	xorwf	(___ftadd@f2+2),f
 18198                           	line	137
 18199  0E55  3001               	movlw	01h
 18200  0E56  07CF               	addwf	(___ftadd@f2),f
 18201  0E57  3000               	movlw	0
 18202  0E58  1803               	skipnc
 18203  0E59  3001               movlw 1
 18204  0E5A  07D0               	addwf	(___ftadd@f2+1),f
 18205  0E5B  3000               	movlw	0
 18206  0E5C  1803               	skipnc
 18207  0E5D  3001               movlw 1
 18208  0E5E  07D1               	addwf	(___ftadd@f2+2),f
 18209  0E5F  2E60               	goto	l23701
 18210                           	line	138
 18211                           	
 18212  0E60                     l18880:	
 18213                           	line	139
 18214                           	
 18215  0E60                     l23701:	
 18216  0E60  01D6               	clrf	(___ftadd@sign)
 18217                           	line	140
 18218  0E61  084C               	movf	(___ftadd@f1),w
 18219  0E62  07CF               	addwf	(___ftadd@f2),f
 18220  0E63  084D               	movf	(___ftadd@f1+1),w
 18221  0E64  3DD0               	addwfc	(___ftadd@f2+1),f
 18222  0E65  084E               	movf	(___ftadd@f1+2),w
 18223  0E66  3DD1               	addwfc	(___ftadd@f2+2),f
 18224                           	line	141
 18225                           	
 18226  0E67                     l23703:	
 18227  0E67  1FD1               	btfss	(___ftadd@f2+2),(23)&7
 18228  0E68  2E6A               	goto	u7291
 18229  0E69  2E6B               	goto	u7290
 18230  0E6A                     u7291:
 18231  0E6A  2E7F               	goto	l23709
 18232  0E6B                     u7290:
 18233                           	line	142
 18234                           	
 18235  0E6B                     l23705:	
 18236  0E6B  30FF               	movlw	0FFh
 18237  0E6C  06CF               	xorwf	(___ftadd@f2),f
 18238  0E6D  30FF               	movlw	0FFh
 18239  0E6E  06D0               	xorwf	(___ftadd@f2+1),f
 18240  0E6F  30FF               	movlw	0FFh
 18241  0E70  06D1               	xorwf	(___ftadd@f2+2),f
 18242                           	line	143
 18243  0E71  3001               	movlw	01h
 18244  0E72  07CF               	addwf	(___ftadd@f2),f
 18245  0E73  3000               	movlw	0
 18246  0E74  1803               	skipnc
 18247  0E75  3001               movlw 1
 18248  0E76  07D0               	addwf	(___ftadd@f2+1),f
 18249  0E77  3000               	movlw	0
 18250  0E78  1803               	skipnc
 18251  0E79  3001               movlw 1
 18252  0E7A  07D1               	addwf	(___ftadd@f2+2),f
 18253                           	line	144
 18254                           	
 18255  0E7B                     l23707:	
 18256  0E7B  01D6               	clrf	(___ftadd@sign)
 18257  0E7C  1403               	bsf	status,0
 18258  0E7D  0DD6               	rlf	(___ftadd@sign),f
 18259  0E7E  2E7F               	goto	l23709
 18260                           	line	145
 18261                           	
 18262  0E7F                     l18881:	
 18263                           	line	146
 18264                           	
 18265  0E7F                     l23709:	
 18266  0E7F  084F               	movf	(___ftadd@f2),w
 18267  0E80  00A0               	movwf	(?___ftpack)
 18268  0E81  0850               	movf	(___ftadd@f2+1),w
 18269  0E82  00A1               	movwf	(?___ftpack+1)
 18270  0E83  0851               	movf	(___ftadd@f2+2),w
 18271  0E84  00A2               	movwf	(?___ftpack+2)
 18272  0E85  0858               	movf	(___ftadd@exp1),w
 18273  0E86  00D2               	movwf	(??___ftadd+0)+0
 18274  0E87  0852               	movf	(??___ftadd+0)+0,w
 18275  0E88  00A3               	movwf	0+(?___ftpack)+03h
 18276  0E89  0856               	movf	(___ftadd@sign),w
 18277  0E8A  00D3               	movwf	(??___ftadd+1)+0
 18278  0E8B  0853               	movf	(??___ftadd+1)+0,w
 18279  0E8C  00A4               	movwf	0+(?___ftpack)+04h
 18280  0E8D  319F  278C  318D   	fcall	___ftpack
 18281  0E90  0020               	movlb 0	; select bank0
 18282  0E91  0820               	movf	(0+(?___ftpack)),w
 18283  0E92  00CC               	movwf	(?___ftadd)
 18284  0E93  0821               	movf	(1+(?___ftpack)),w
 18285  0E94  00CD               	movwf	(?___ftadd+1)
 18286  0E95  0822               	movf	(2+(?___ftpack)),w
 18287  0E96  00CE               	movwf	(?___ftadd+2)
 18288  0E97  2E98               	goto	l18856
 18289                           	
 18290  0E98                     l23711:	
 18291                           	line	148
 18292                           	
 18293  0E98                     l18856:	
 18294  0E98  0008               	return
 18295                           	opt stack 0
 18296                           GLOBAL	__end_of___ftadd
 18297  0E99                     	__end_of___ftadd:
 18298 ;; =============== function ___ftadd ends ============
 18299                           
 18300                           	signat	___ftadd,8315
 18301                           	global	_setRF_Learn
 18302                           psect	text3291,local,class=CODE,delta=2
 18303                           global __ptext3291
 18304  2120                     __ptext3291:
 18305                           
 18306 ;; *************** function _setRF_Learn *****************
 18307 ;; Defined at:
 18308 ;;		line 32 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 18309 ;; Parameters:    Size  Location     Type
 18310 ;;  rf              1    wreg     unsigned char 
 18311 ;;  command         1    2[BANK0 ] unsigned char 
 18312 ;; Auto vars:     Size  Location     Type
 18313 ;;  rf              1    3[BANK0 ] unsigned char 
 18314 ;; Return value:  Size  Location     Type
 18315 ;;		None               void
 18316 ;; Registers used:
 18317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18318 ;; Tracked objects:
 18319 ;;		On entry : 0/0
 18320 ;;		On exit  : 0/0
 18321 ;;		Unchanged: 0/0
 18322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18323 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18327 ;;Total ram usage:        2 bytes
 18328 ;; Hardware stack levels used:    1
 18329 ;; Hardware stack levels required when called:    5
 18330 ;; This function calls:
 18331 ;;		_RfPointSelect
 18332 ;; This function is called by:
 18333 ;;		_setSw_Main
 18334 ;; This function uses a non-reentrant model
 18335 ;;
 18336                           psect	text3291
 18337                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 18338                           	line	32
 18339                           	global	__size_of_setRF_Learn
 18340  0010                     	__size_of_setRF_Learn	equ	__end_of_setRF_Learn-_setRF_Learn
 18341                           	
 18342  2120                     _setRF_Learn:	
 18343                           	opt	stack 8
 18344                           ; Regs used in _setRF_Learn: [wreg+fsr1l-status,0+pclath+cstack]
 18345                           ;setRF_Learn@rf stored from wreg
 18346  2120  0020               	movlb 0	; select bank0
 18347  2121  00A3               	movwf	(setRF_Learn@rf)
 18348                           	line	33
 18349                           	
 18350  2122                     l23639:	
 18351                           ;RF_Control_B1.c: 33: RfPointSelect(rf);
 18352  2122  0823               	movf	(setRF_Learn@rf),w
 18353  2123  31A0  2034  31A1   	fcall	_RfPointSelect
 18354                           	line	34
 18355                           	
 18356  2126                     l23641:	
 18357                           ;RF_Control_B1.c: 34: RF->Learn=command;
 18358  2126  0021               	movlb 1	; select bank1
 18359  2127  083E               	movf	(_RF)^080h,w
 18360  2128  0086               	movwf	fsr1l
 18361  2129  0187               	clrf fsr1h	
 18362                           	
 18363  212A  0020               	movlb 0	; select bank0
 18364  212B  0822               	movf	(setRF_Learn@command),w
 18365  212C  1301               	bcf	indf1,6
 18366  212D  1D03               	skipz
 18367  212E  1701               	bsf	indf1,6
 18368                           	line	35
 18369                           	
 18370  212F                     l13114:	
 18371  212F  0008               	return
 18372                           	opt stack 0
 18373                           GLOBAL	__end_of_setRF_Learn
 18374  2130                     	__end_of_setRF_Learn:
 18375 ;; =============== function _setRF_Learn ends ============
 18376                           
 18377                           	signat	_setRF_Learn,8312
 18378                           	global	_setPowerFault_Initialization
 18379                           psect	text3292,local,class=CODE,delta=2
 18380                           global __ptext3292
 18381  2110                     __ptext3292:
 18382                           
 18383 ;; *************** function _setPowerFault_Initialization *****************
 18384 ;; Defined at:
 18385 ;;		line 30 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  pf              1    wreg     unsigned char 
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;  pf              1    1[BANK0 ] unsigned char 
 18390 ;; Return value:  Size  Location     Type
 18391 ;;		None               void
 18392 ;; Registers used:
 18393 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : 0/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18402 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18403 ;;Total ram usage:        1 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:    5
 18406 ;; This function calls:
 18407 ;;		_PowerFaultPointSelect
 18408 ;; This function is called by:
 18409 ;;		_PowerFault_Initialization
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           psect	text3292
 18413                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 18414                           	line	30
 18415                           	global	__size_of_setPowerFault_Initialization
 18416  0010                     	__size_of_setPowerFault_Initialization	equ	__end_of_setPowerFault_Initialization-_setPo
                                 werFault_Initialization
 18417                           	
 18418  2110                     _setPowerFault_Initialization:	
 18419                           	opt	stack 9
 18420                           ; Regs used in _setPowerFault_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18421                           ;setPowerFault_Initialization@pf stored from wreg
 18422  2110  0020               	movlb 0	; select bank0
 18423  2111  00A1               	movwf	(setPowerFault_Initialization@pf)
 18424                           	line	31
 18425                           	
 18426  2112                     l23633:	
 18427                           ;PowerFault_B1.c: 31: PowerFaultPointSelect(pf);
 18428  2112  0821               	movf	(setPowerFault_Initialization@pf),w
 18429  2113  31AE  26D9  31A1   	fcall	_PowerFaultPointSelect
 18430                           	line	32
 18431                           	
 18432  2116                     l23635:	
 18433                           ;PowerFault_B1.c: 32: PF->Enable=1;
 18434  2116  0021               	movlb 1	; select bank1
 18435  2117  083D               	movf	(_PF)^080h,w
 18436  2118  0086               	movwf	fsr1l
 18437  2119  0187               	clrf fsr1h	
 18438                           	
 18439  211A  1401               	bsf	indf1,0
 18440                           	line	33
 18441                           	
 18442  211B                     l23637:	
 18443                           ;PowerFault_B1.c: 33: PF->Safe=1;
 18444  211B  083D               	movf	(_PF)^080h,w
 18445  211C  0086               	movwf	fsr1l
 18446  211D  0187               	clrf fsr1h	
 18447                           	
 18448  211E  1501               	bsf	indf1,2
 18449                           	line	34
 18450                           	
 18451  211F                     l11919:	
 18452  211F  0008               	return
 18453                           	opt stack 0
 18454                           GLOBAL	__end_of_setPowerFault_Initialization
 18455  2120                     	__end_of_setPowerFault_Initialization:
 18456 ;; =============== function _setPowerFault_Initialization ends ============
 18457                           
 18458                           	signat	_setPowerFault_Initialization,4216
 18459                           	global	_setTemp_Initialization
 18460                           psect	text3293,local,class=CODE,delta=2
 18461                           global __ptext3293
 18462  2F42                     __ptext3293:
 18463                           
 18464 ;; *************** function _setTemp_Initialization *****************
 18465 ;; Defined at:
 18466 ;;		line 63 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;  temp            1    wreg     unsigned char 
 18469 ;; Auto vars:     Size  Location     Type
 18470 ;;  temp            1    1[BANK0 ] unsigned char 
 18471 ;; Return value:  Size  Location     Type
 18472 ;;		None               void
 18473 ;; Registers used:
 18474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18475 ;; Tracked objects:
 18476 ;;		On entry : 0/0
 18477 ;;		On exit  : 0/0
 18478 ;;		Unchanged: 0/0
 18479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18484 ;;Total ram usage:        1 bytes
 18485 ;; Hardware stack levels used:    1
 18486 ;; Hardware stack levels required when called:    5
 18487 ;; This function calls:
 18488 ;;		_TempPointSelect
 18489 ;; This function is called by:
 18490 ;;		_Temp_Initialization
 18491 ;; This function uses a non-reentrant model
 18492 ;;
 18493                           psect	text3293
 18494                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18495                           	line	63
 18496                           	global	__size_of_setTemp_Initialization
 18497  000C                     	__size_of_setTemp_Initialization	equ	__end_of_setTemp_Initialization-_setTemp_Initializ
                                 ation
 18498                           	
 18499  2F42                     _setTemp_Initialization:	
 18500                           	opt	stack 9
 18501                           ; Regs used in _setTemp_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18502                           ;setTemp_Initialization@temp stored from wreg
 18503  2F42  0020               	movlb 0	; select bank0
 18504  2F43  00A1               	movwf	(setTemp_Initialization@temp)
 18505                           	line	64
 18506                           	
 18507  2F44                     l23629:	
 18508                           ;OverTemperature_B1.c: 64: TempPointSelect(temp);
 18509  2F44  0821               	movf	(setTemp_Initialization@temp),w
 18510  2F45  31AE  26C0  31AF   	fcall	_TempPointSelect
 18511                           	line	65
 18512                           	
 18513  2F48                     l23631:	
 18514                           ;OverTemperature_B1.c: 65: Temp->Safe=1;
 18515  2F48  087C               	movf	(_Temp),w
 18516  2F49  0086               	movwf	fsr1l
 18517  2F4A  3001               	movlw 1	; select bank2/3
 18518  2F4B  0087               	movwf fsr1h	
 18519                           	
 18520  2F4C  1601               	bsf	indf1,4
 18521                           	line	66
 18522                           	
 18523  2F4D                     l10764:	
 18524  2F4D  0008               	return
 18525                           	opt stack 0
 18526                           GLOBAL	__end_of_setTemp_Initialization
 18527  2F4E                     	__end_of_setTemp_Initialization:
 18528 ;; =============== function _setTemp_Initialization ends ============
 18529                           
 18530                           	signat	_setTemp_Initialization,4216
 18531                           	global	_getLoad_Safe
 18532                           psect	text3294,local,class=CODE,delta=2
 18533                           global __ptext3294
 18534  21CA                     __ptext3294:
 18535                           
 18536 ;; *************** function _getLoad_Safe *****************
 18537 ;; Defined at:
 18538 ;;		line 365 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 18539 ;; Parameters:    Size  Location     Type
 18540 ;;  load            1    wreg     unsigned char 
 18541 ;; Auto vars:     Size  Location     Type
 18542 ;;  load            1    3[BANK0 ] unsigned char 
 18543 ;; Return value:  Size  Location     Type
 18544 ;;                  1    wreg      unsigned char 
 18545 ;; Registers used:
 18546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18547 ;; Tracked objects:
 18548 ;;		On entry : 0/0
 18549 ;;		On exit  : 0/0
 18550 ;;		Unchanged: 0/0
 18551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18556 ;;Total ram usage:        2 bytes
 18557 ;; Hardware stack levels used:    1
 18558 ;; Hardware stack levels required when called:    5
 18559 ;; This function calls:
 18560 ;;		_LoadPointSelect
 18561 ;; This function is called by:
 18562 ;;		_setTemp_Main
 18563 ;;		_setPowerFault_Main
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           psect	text3294
 18567                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 18568                           	line	365
 18569                           	global	__size_of_getLoad_Safe
 18570  0012                     	__size_of_getLoad_Safe	equ	__end_of_getLoad_Safe-_getLoad_Safe
 18571                           	
 18572  21CA                     _getLoad_Safe:	
 18573                           	opt	stack 8
 18574                           ; Regs used in _getLoad_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 18575                           ;getLoad_Safe@load stored from wreg
 18576  21CA  0020               	movlb 0	; select bank0
 18577  21CB  00A3               	movwf	(getLoad_Safe@load)
 18578                           	line	366
 18579                           	
 18580  21CC                     l23623:	
 18581                           ;OverLoad_B1.c: 366: LoadPointSelect(load);
 18582  21CC  0823               	movf	(getLoad_Safe@load),w
 18583  21CD  31AF  27BA  31A1   	fcall	_LoadPointSelect
 18584                           	line	367
 18585                           	
 18586  21D0                     l23625:	
 18587                           ;OverLoad_B1.c: 367: return Load->Safe;
 18588  21D0  0020               	movlb 0	; select bank0
 18589  21D1  086E               	movf	(_Load),w
 18590  21D2  0086               	movwf	fsr1l
 18591  21D3  3002               	movlw 2	; select bank4/5
 18592  21D4  0087               	movwf fsr1h	
 18593                           	
 18594  21D5  0C01               	rrf	indf1,w
 18595  21D6  00A2               	movwf	(??_getLoad_Safe+0)+0
 18596  21D7  0CA2               	rrf	(??_getLoad_Safe+0)+0,f
 18597  21D8  0C22               	rrf	(??_getLoad_Safe+0)+0,w
 18598  21D9  3901               	andlw	(1<<1)-1
 18599  21DA  29DB               	goto	l9610
 18600                           	
 18601  21DB                     l23627:	
 18602                           	line	368
 18603                           	
 18604  21DB                     l9610:	
 18605  21DB  0008               	return
 18606                           	opt stack 0
 18607                           GLOBAL	__end_of_getLoad_Safe
 18608  21DC                     	__end_of_getLoad_Safe:
 18609 ;; =============== function _getLoad_Safe ends ============
 18610                           
 18611                           	signat	_getLoad_Safe,4217
 18612                           	global	_getPF_Safe
 18613                           psect	text3295,local,class=CODE,delta=2
 18614                           global __ptext3295
 18615  2061                     __ptext3295:
 18616                           
 18617 ;; *************** function _getPF_Safe *****************
 18618 ;; Defined at:
 18619 ;;		line 42 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  pf              1    wreg     unsigned char 
 18622 ;; Auto vars:     Size  Location     Type
 18623 ;;  pf              1    1[BANK0 ] unsigned char 
 18624 ;; Return value:  Size  Location     Type
 18625 ;;                  1    wreg      unsigned char 
 18626 ;; Registers used:
 18627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18628 ;; Tracked objects:
 18629 ;;		On entry : 0/0
 18630 ;;		On exit  : 0/0
 18631 ;;		Unchanged: 0/0
 18632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18636 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18637 ;;Total ram usage:        1 bytes
 18638 ;; Hardware stack levels used:    1
 18639 ;; Hardware stack levels required when called:    5
 18640 ;; This function calls:
 18641 ;;		_PowerFaultPointSelect
 18642 ;; This function is called by:
 18643 ;;		_setLoad_Main
 18644 ;;		_setTemp_Main
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           psect	text3295
 18648                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 18649                           	line	42
 18650                           	global	__size_of_getPF_Safe
 18651  000F                     	__size_of_getPF_Safe	equ	__end_of_getPF_Safe-_getPF_Safe
 18652                           	
 18653  2061                     _getPF_Safe:	
 18654                           	opt	stack 8
 18655                           ; Regs used in _getPF_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 18656                           ;getPF_Safe@pf stored from wreg
 18657  2061  0020               	movlb 0	; select bank0
 18658  2062  00A1               	movwf	(getPF_Safe@pf)
 18659                           	line	43
 18660                           	
 18661  2063                     l23617:	
 18662                           ;PowerFault_B1.c: 43: PowerFaultPointSelect(pf);
 18663  2063  0821               	movf	(getPF_Safe@pf),w
 18664  2064  31AE  26D9  31A0   	fcall	_PowerFaultPointSelect
 18665                           	line	44
 18666                           	
 18667  2067                     l23619:	
 18668                           ;PowerFault_B1.c: 44: return PF->Safe;
 18669  2067  0021               	movlb 1	; select bank1
 18670  2068  083D               	movf	(_PF)^080h,w
 18671  2069  0086               	movwf	fsr1l
 18672  206A  0187               	clrf fsr1h	
 18673                           	
 18674  206B  0C01               	rrf	indf1,w
 18675  206C  0C89               	rrf	wreg,f
 18676  206D  3901               	andlw	(1<<1)-1
 18677  206E  286F               	goto	l11925
 18678                           	
 18679  206F                     l23621:	
 18680                           	line	45
 18681                           	
 18682  206F                     l11925:	
 18683  206F  0008               	return
 18684                           	opt stack 0
 18685                           GLOBAL	__end_of_getPF_Safe
 18686  2070                     	__end_of_getPF_Safe:
 18687 ;; =============== function _getPF_Safe ends ============
 18688                           
 18689                           	signat	_getPF_Safe,4217
 18690                           	global	_getTemp_Safe
 18691                           psect	text3296,local,class=CODE,delta=2
 18692                           global __ptext3296
 18693  2FF2                     __ptext3296:
 18694                           
 18695 ;; *************** function _getTemp_Safe *****************
 18696 ;; Defined at:
 18697 ;;		line 35 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18698 ;; Parameters:    Size  Location     Type
 18699 ;;  temp            1    wreg     unsigned char 
 18700 ;; Auto vars:     Size  Location     Type
 18701 ;;  temp            1    1[BANK0 ] unsigned char 
 18702 ;; Return value:  Size  Location     Type
 18703 ;;                  1    wreg      unsigned char 
 18704 ;; Registers used:
 18705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18706 ;; Tracked objects:
 18707 ;;		On entry : 0/0
 18708 ;;		On exit  : 0/0
 18709 ;;		Unchanged: 0/0
 18710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18712 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18715 ;;Total ram usage:        1 bytes
 18716 ;; Hardware stack levels used:    1
 18717 ;; Hardware stack levels required when called:    5
 18718 ;; This function calls:
 18719 ;;		_TempPointSelect
 18720 ;; This function is called by:
 18721 ;;		_setLoad_Main
 18722 ;;		_setPowerFault_Main
 18723 ;; This function uses a non-reentrant model
 18724 ;;
 18725                           psect	text3296
 18726                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 18727                           	line	35
 18728                           	global	__size_of_getTemp_Safe
 18729  000E                     	__size_of_getTemp_Safe	equ	__end_of_getTemp_Safe-_getTemp_Safe
 18730                           	
 18731  2FF2                     _getTemp_Safe:	
 18732                           	opt	stack 8
 18733                           ; Regs used in _getTemp_Safe: [wreg+fsr1l-status,0+pclath+cstack]
 18734                           ;getTemp_Safe@temp stored from wreg
 18735  2FF2  0020               	movlb 0	; select bank0
 18736  2FF3  00A1               	movwf	(getTemp_Safe@temp)
 18737                           	line	36
 18738                           	
 18739  2FF4                     l23611:	
 18740                           ;OverTemperature_B1.c: 36: TempPointSelect(temp);
 18741  2FF4  0821               	movf	(getTemp_Safe@temp),w
 18742  2FF5  31AE  26C0  31AF   	fcall	_TempPointSelect
 18743                           	line	37
 18744                           	
 18745  2FF8                     l23613:	
 18746                           ;OverTemperature_B1.c: 37: return Temp->Safe;
 18747  2FF8  087C               	movf	(_Temp),w
 18748  2FF9  0086               	movwf	fsr1l
 18749  2FFA  3001               	movlw 1	; select bank2/3
 18750  2FFB  0087               	movwf fsr1h	
 18751                           	
 18752  2FFC  0E01               	swapf	indf1,w
 18753  2FFD  3901               	andlw	(1<<1)-1
 18754  2FFE  2FFF               	goto	l10751
 18755                           	
 18756  2FFF                     l23615:	
 18757                           	line	38
 18758                           	
 18759  2FFF                     l10751:	
 18760  2FFF  0008               	return
 18761                           	opt stack 0
 18762                           GLOBAL	__end_of_getTemp_Safe
 18763  3000                     	__end_of_getTemp_Safe:
 18764 ;; =============== function _getTemp_Safe ends ============
 18765                           
 18766                           	signat	_getTemp_Safe,4217
 18767                           	global	_setLoad_Initialization
 18768                           psect	text3297,local,class=CODE,delta=2
 18769                           global __ptext3297
 18770  1867                     __ptext3297:
 18771                           
 18772 ;; *************** function _setLoad_Initialization *****************
 18773 ;; Defined at:
 18774 ;;		line 32 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 18775 ;; Parameters:    Size  Location     Type
 18776 ;;  load            1    wreg     unsigned char 
 18777 ;; Auto vars:     Size  Location     Type
 18778 ;;  load            1    2[BANK0 ] unsigned char 
 18779 ;; Return value:  Size  Location     Type
 18780 ;;		None               void
 18781 ;; Registers used:
 18782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18783 ;; Tracked objects:
 18784 ;;		On entry : 0/0
 18785 ;;		On exit  : 0/0
 18786 ;;		Unchanged: 0/0
 18787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18789 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18791 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18792 ;;Total ram usage:        1 bytes
 18793 ;; Hardware stack levels used:    1
 18794 ;; Hardware stack levels required when called:    5
 18795 ;; This function calls:
 18796 ;;		_LoadPointSelect
 18797 ;;		_setLoad_AH_AL_Restore
 18798 ;; This function is called by:
 18799 ;;		_Load_Initialization
 18800 ;; This function uses a non-reentrant model
 18801 ;;
 18802                           psect	text3297
 18803                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 18804                           	line	32
 18805                           	global	__size_of_setLoad_Initialization
 18806  0011                     	__size_of_setLoad_Initialization	equ	__end_of_setLoad_Initialization-_setLoad_Initializ
                                 ation
 18807                           	
 18808  1867                     _setLoad_Initialization:	
 18809                           	opt	stack 9
 18810                           ; Regs used in _setLoad_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 18811                           ;setLoad_Initialization@load stored from wreg
 18812  1867  0020               	movlb 0	; select bank0
 18813  1868  00A2               	movwf	(setLoad_Initialization@load)
 18814                           	line	33
 18815                           	
 18816  1869                     l23605:	
 18817                           ;OverLoad_B1.c: 33: LoadPointSelect(load);
 18818  1869  0822               	movf	(setLoad_Initialization@load),w
 18819  186A  31AF  27BA  3198   	fcall	_LoadPointSelect
 18820                           	line	34
 18821                           	
 18822  186D                     l23607:	
 18823                           ;OverLoad_B1.c: 34: Load->Safe=1;
 18824  186D  0020               	movlb 0	; select bank0
 18825  186E  086E               	movf	(_Load),w
 18826  186F  0086               	movwf	fsr1l
 18827  1870  3002               	movlw 2	; select bank4/5
 18828  1871  0087               	movwf fsr1h	
 18829                           	
 18830  1872  1581               	bsf	indf1,3
 18831                           	line	35
 18832                           	
 18833  1873                     l23609:	
 18834                           ;OverLoad_B1.c: 35: setLoad_AH_AL_Restore(load);
 18835  1873  0822               	movf	(setLoad_Initialization@load),w
 18836  1874  31A5  2569  3198   	fcall	_setLoad_AH_AL_Restore
 18837                           	line	36
 18838                           	
 18839  1877                     l9532:	
 18840  1877  0008               	return
 18841                           	opt stack 0
 18842                           GLOBAL	__end_of_setLoad_Initialization
 18843  1878                     	__end_of_setLoad_Initialization:
 18844 ;; =============== function _setLoad_Initialization ends ============
 18845                           
 18846                           	signat	_setLoad_Initialization,4216
 18847                           	global	_Flash_Memory_Unlock
 18848                           psect	text3298,local,class=CODE,delta=2
 18849                           global __ptext3298
 18850  2EFA                     __ptext3298:
 18851                           
 18852 ;; *************** function _Flash_Memory_Unlock *****************
 18853 ;; Defined at:
 18854 ;;		line 430 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 18855 ;; Parameters:    Size  Location     Type
 18856 ;;		None
 18857 ;; Auto vars:     Size  Location     Type
 18858 ;;		None
 18859 ;; Return value:  Size  Location     Type
 18860 ;;		None               void
 18861 ;; Registers used:
 18862 ;;		wreg
 18863 ;; Tracked objects:
 18864 ;;		On entry : 0/0
 18865 ;;		On exit  : 0/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18872 ;;Total ram usage:        0 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:    4
 18875 ;; This function calls:
 18876 ;;		Nothing
 18877 ;; This function is called by:
 18878 ;;		_Flash_Memory_Write
 18879 ;;		_Flash_Memory_Erasing
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           psect	text3298
 18883                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 18884                           	line	430
 18885                           	global	__size_of_Flash_Memory_Unlock
 18886  0009                     	__size_of_Flash_Memory_Unlock	equ	__end_of_Flash_Memory_Unlock-_Flash_Memory_Unlock
 18887                           	
 18888  2EFA                     _Flash_Memory_Unlock:	
 18889                           	opt	stack 8
 18890                           ; Regs used in _Flash_Memory_Unlock: [wreg]
 18891                           	line	431
 18892                           	
 18893  2EFA                     l23597:	
 18894                           ;MCU_16f1518_B1.c: 431: PMCON2=0x55;
 18895  2EFA  3055               	movlw	(055h)
 18896  2EFB  0023               	movlb 3	; select bank3
 18897  2EFC  0096               	movwf	(406)^0180h	;volatile
 18898                           	line	432
 18899                           ;MCU_16f1518_B1.c: 432: PMCON2=0xaa;
 18900  2EFD  30AA               	movlw	(0AAh)
 18901  2EFE  0096               	movwf	(406)^0180h	;volatile
 18902                           	line	433
 18903                           	
 18904  2EFF                     l23599:	
 18905                           ;MCU_16f1518_B1.c: 433: WR=1;
 18906  2EFF  1495               	bsf	(3241/8)^0180h,(3241)&7
 18907                           	line	434
 18908                           	
 18909  2F00                     l23601:	
 18910                           ;MCU_16f1518_B1.c: 434: _nop();
 18911  2F00  0000               	nop
 18912                           	line	435
 18913                           	
 18914  2F01                     l23603:	
 18915                           ;MCU_16f1518_B1.c: 435: _nop();
 18916  2F01  0000               	nop
 18917                           	line	436
 18918                           	
 18919  2F02                     l8380:	
 18920  2F02  0008               	return
 18921                           	opt stack 0
 18922                           GLOBAL	__end_of_Flash_Memory_Unlock
 18923  2F03                     	__end_of_Flash_Memory_Unlock:
 18924 ;; =============== function _Flash_Memory_Unlock ends ============
 18925                           
 18926                           	signat	_Flash_Memory_Unlock,88
 18927                           	global	_setSw_Enable
 18928                           psect	text3299,local,class=CODE,delta=2
 18929                           global __ptext3299
 18930  2100                     __ptext3299:
 18931                           
 18932 ;; *************** function _setSw_Enable *****************
 18933 ;; Defined at:
 18934 ;;		line 81 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;  sw              1    wreg     unsigned char 
 18937 ;;  command         1    2[BANK0 ] unsigned char 
 18938 ;; Auto vars:     Size  Location     Type
 18939 ;;  sw              1    3[BANK0 ] unsigned char 
 18940 ;; Return value:  Size  Location     Type
 18941 ;;		None               void
 18942 ;; Registers used:
 18943 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18944 ;; Tracked objects:
 18945 ;;		On entry : 0/0
 18946 ;;		On exit  : 0/0
 18947 ;;		Unchanged: 0/0
 18948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 18949 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 18951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 18952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 18953 ;;Total ram usage:        2 bytes
 18954 ;; Hardware stack levels used:    1
 18955 ;; Hardware stack levels required when called:    5
 18956 ;; This function calls:
 18957 ;;		_SwPointSelect
 18958 ;; This function is called by:
 18959 ;;		_MainT
 18960 ;;		_setLoad_ERROR
 18961 ;;		_setOverTemp_ERROR
 18962 ;;		_setPowerFault_ERROR
 18963 ;; This function uses a non-reentrant model
 18964 ;;
 18965                           psect	text3299
 18966                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 18967                           	line	81
 18968                           	global	__size_of_setSw_Enable
 18969  0010                     	__size_of_setSw_Enable	equ	__end_of_setSw_Enable-_setSw_Enable
 18970                           	
 18971  2100                     _setSw_Enable:	
 18972                           	opt	stack 7
 18973                           ; Regs used in _setSw_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 18974                           ;setSw_Enable@sw stored from wreg
 18975  2100  0020               	movlb 0	; select bank0
 18976  2101  00A3               	movwf	(setSw_Enable@sw)
 18977                           	line	82
 18978                           	
 18979  2102                     l23593:	
 18980                           ;Switch_B1.c: 82: SwPointSelect(sw);
 18981  2102  0823               	movf	(setSw_Enable@sw),w
 18982  2103  31AF  27C8  31A1   	fcall	_SwPointSelect
 18983                           	line	83
 18984                           	
 18985  2106                     l23595:	
 18986                           ;Switch_B1.c: 83: Sw->Enable=command;
 18987  2106  0020               	movlb 0	; select bank0
 18988  2107  086F               	movf	(_Sw),w
 18989  2108  0086               	movwf	fsr1l
 18990  2109  3001               	movlw 1	; select bank2/3
 18991  210A  0087               	movwf fsr1h	
 18992                           	
 18993  210B  0822               	movf	(setSw_Enable@command),w
 18994  210C  1001               	bcf	indf1,0
 18995  210D  1D03               	skipz
 18996  210E  1401               	bsf	indf1,0
 18997                           	line	84
 18998                           	
 18999  210F                     l14370:	
 19000  210F  0008               	return
 19001                           	opt stack 0
 19002                           GLOBAL	__end_of_setSw_Enable
 19003  2110                     	__end_of_setSw_Enable:
 19004 ;; =============== function _setSw_Enable ends ============
 19005                           
 19006                           	signat	_setSw_Enable,8312
 19007                           	global	_setLoad_Enable
 19008                           psect	text3300,local,class=CODE,delta=2
 19009                           global __ptext3300
 19010  07EB                     __ptext3300:
 19011                           
 19012 ;; *************** function _setLoad_Enable *****************
 19013 ;; Defined at:
 19014 ;;		line 331 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19015 ;; Parameters:    Size  Location     Type
 19016 ;;  load            1    wreg     unsigned char 
 19017 ;;  command         1    2[BANK0 ] unsigned char 
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;  load            1    3[BANK0 ] unsigned char 
 19020 ;; Return value:  Size  Location     Type
 19021 ;;		None               void
 19022 ;; Registers used:
 19023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19033 ;;Total ram usage:        2 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:    5
 19036 ;; This function calls:
 19037 ;;		_LoadPointSelect
 19038 ;; This function is called by:
 19039 ;;		_MainT
 19040 ;; This function uses a non-reentrant model
 19041 ;;
 19042                           psect	text3300
 19043                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19044                           	line	331
 19045                           	global	__size_of_setLoad_Enable
 19046  0015                     	__size_of_setLoad_Enable	equ	__end_of_setLoad_Enable-_setLoad_Enable
 19047                           	
 19048  07EB                     _setLoad_Enable:	
 19049                           	opt	stack 9
 19050                           ; Regs used in _setLoad_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 19051                           ;setLoad_Enable@load stored from wreg
 19052  07EB  0020               	movlb 0	; select bank0
 19053  07EC  00A3               	movwf	(setLoad_Enable@load)
 19054                           	line	332
 19055                           	
 19056  07ED                     l23587:	
 19057                           ;OverLoad_B1.c: 332: LoadPointSelect(load);
 19058  07ED  0823               	movf	(setLoad_Enable@load),w
 19059  07EE  31AF  27BA  3187   	fcall	_LoadPointSelect
 19060                           	line	333
 19061                           	
 19062  07F1                     l23589:	
 19063                           ;OverLoad_B1.c: 333: Load->Enable=command;
 19064  07F1  0020               	movlb 0	; select bank0
 19065  07F2  086E               	movf	(_Load),w
 19066  07F3  0086               	movwf	fsr1l
 19067  07F4  3002               	movlw 2	; select bank4/5
 19068  07F5  0087               	movwf fsr1h	
 19069                           	
 19070  07F6  0822               	movf	(setLoad_Enable@command),w
 19071  07F7  1001               	bcf	indf1,0
 19072  07F8  1D03               	skipz
 19073  07F9  1401               	bsf	indf1,0
 19074                           	line	334
 19075                           	
 19076  07FA                     l23591:	
 19077                           ;OverLoad_B1.c: 334: Load->GO=0;
 19078  07FA  086E               	movf	(_Load),w
 19079  07FB  0086               	movwf	fsr1l
 19080  07FC  3002               	movlw 2	; select bank4/5
 19081  07FD  0087               	movwf fsr1h	
 19082                           	
 19083  07FE  1081               	bcf	indf1,1
 19084                           	line	335
 19085                           	
 19086  07FF                     l9595:	
 19087  07FF  0008               	return
 19088                           	opt stack 0
 19089                           GLOBAL	__end_of_setLoad_Enable
 19090  0800                     	__end_of_setLoad_Enable:
 19091 ;; =============== function _setLoad_Enable ends ============
 19092                           
 19093                           	signat	_setLoad_Enable,8312
 19094                           	global	_setTemp_Enable
 19095                           psect	text3301,local,class=CODE,delta=2
 19096                           global __ptext3301
 19097  20F0                     __ptext3301:
 19098                           
 19099 ;; *************** function _setTemp_Enable *****************
 19100 ;; Defined at:
 19101 ;;		line 30 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19102 ;; Parameters:    Size  Location     Type
 19103 ;;  temp            1    wreg     unsigned char 
 19104 ;;  command         1    1[BANK0 ] unsigned char 
 19105 ;; Auto vars:     Size  Location     Type
 19106 ;;  temp            1    2[BANK0 ] unsigned char 
 19107 ;; Return value:  Size  Location     Type
 19108 ;;		None               void
 19109 ;; Registers used:
 19110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19111 ;; Tracked objects:
 19112 ;;		On entry : 0/0
 19113 ;;		On exit  : 0/0
 19114 ;;		Unchanged: 0/0
 19115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19116 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19119 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 19120 ;;Total ram usage:        2 bytes
 19121 ;; Hardware stack levels used:    1
 19122 ;; Hardware stack levels required when called:    5
 19123 ;; This function calls:
 19124 ;;		_TempPointSelect
 19125 ;; This function is called by:
 19126 ;;		_MainT
 19127 ;; This function uses a non-reentrant model
 19128 ;;
 19129                           psect	text3301
 19130                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19131                           	line	30
 19132                           	global	__size_of_setTemp_Enable
 19133  0010                     	__size_of_setTemp_Enable	equ	__end_of_setTemp_Enable-_setTemp_Enable
 19134                           	
 19135  20F0                     _setTemp_Enable:	
 19136                           	opt	stack 9
 19137                           ; Regs used in _setTemp_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 19138                           ;setTemp_Enable@temp stored from wreg
 19139  20F0  0020               	movlb 0	; select bank0
 19140  20F1  00A2               	movwf	(setTemp_Enable@temp)
 19141                           	line	31
 19142                           	
 19143  20F2                     l23583:	
 19144                           ;OverTemperature_B1.c: 31: TempPointSelect(temp);
 19145  20F2  0822               	movf	(setTemp_Enable@temp),w
 19146  20F3  31AE  26C0  31A0   	fcall	_TempPointSelect
 19147                           	line	32
 19148                           	
 19149  20F6                     l23585:	
 19150                           ;OverTemperature_B1.c: 32: Temp->Enable=command;
 19151  20F6  087C               	movf	(_Temp),w
 19152  20F7  0086               	movwf	fsr1l
 19153  20F8  3001               	movlw 1	; select bank2/3
 19154  20F9  0087               	movwf fsr1h	
 19155                           	
 19156  20FA  0020               	movlb 0	; select bank0
 19157  20FB  0821               	movf	(setTemp_Enable@command),w
 19158  20FC  1001               	bcf	indf1,0
 19159  20FD  1D03               	skipz
 19160  20FE  1401               	bsf	indf1,0
 19161                           	line	33
 19162                           	
 19163  20FF                     l10748:	
 19164  20FF  0008               	return
 19165                           	opt stack 0
 19166                           GLOBAL	__end_of_setTemp_Enable
 19167  2100                     	__end_of_setTemp_Enable:
 19168 ;; =============== function _setTemp_Enable ends ============
 19169                           
 19170                           	signat	_setTemp_Enable,8312
 19171                           	global	_getPowerFault_AD
 19172                           psect	text3302,local,class=CODE,delta=2
 19173                           global __ptext3302
 19174  1BB8                     __ptext3302:
 19175                           
 19176 ;; *************** function _getPowerFault_AD *****************
 19177 ;; Defined at:
 19178 ;;		line 53 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;  pf              1    wreg     unsigned char 
 19181 ;;  channel         1    7[BANK0 ] unsigned char 
 19182 ;; Auto vars:     Size  Location     Type
 19183 ;;  pf              1   12[BANK0 ] unsigned char 
 19184 ;; Return value:  Size  Location     Type
 19185 ;;		None               void
 19186 ;; Registers used:
 19187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 19188 ;; Tracked objects:
 19189 ;;		On entry : 0/0
 19190 ;;		On exit  : 0/0
 19191 ;;		Unchanged: 0/0
 19192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19193 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19194 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 19196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19197 ;;Total ram usage:        6 bytes
 19198 ;; Hardware stack levels used:    1
 19199 ;; Hardware stack levels required when called:    5
 19200 ;; This function calls:
 19201 ;;		_PowerFaultPointSelect
 19202 ;;		_getAD
 19203 ;; This function is called by:
 19204 ;;		_main
 19205 ;; This function uses a non-reentrant model
 19206 ;;
 19207                           psect	text3302
 19208                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 19209                           	line	53
 19210                           	global	__size_of_getPowerFault_AD
 19211  0056                     	__size_of_getPowerFault_AD	equ	__end_of_getPowerFault_AD-_getPowerFault_AD
 19212                           	
 19213  1BB8                     _getPowerFault_AD:	
 19214                           	opt	stack 10
 19215                           ; Regs used in _getPowerFault_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 19216                           ;getPowerFault_AD@pf stored from wreg
 19217  1BB8  0020               	movlb 0	; select bank0
 19218  1BB9  00AC               	movwf	(getPowerFault_AD@pf)
 19219                           	line	54
 19220                           	
 19221  1BBA                     l23573:	
 19222                           ;PowerFault_B1.c: 54: PowerFaultPointSelect(pf);
 19223  1BBA  082C               	movf	(getPowerFault_AD@pf),w
 19224  1BBB  31AE  26D9  319B   	fcall	_PowerFaultPointSelect
 19225                           	line	55
 19226                           	
 19227  1BBE                     l23575:	
 19228                           ;PowerFault_B1.c: 55: if(PF->ADtoGO)
 19229  1BBE  0021               	movlb 1	; select bank1
 19230  1BBF  083D               	movf	(_PF)^080h,w
 19231  1BC0  0086               	movwf	fsr1l
 19232  1BC1  0187               	clrf fsr1h	
 19233                           	
 19234  1BC2  1D81               	btfss	indf1,3
 19235  1BC3  2BC5               	goto	u7051
 19236  1BC4  2BC6               	goto	u7050
 19237  1BC5                     u7051:
 19238  1BC5  2C0D               	goto	l11933
 19239  1BC6                     u7050:
 19240                           	line	57
 19241                           	
 19242  1BC6                     l23577:	
 19243                           ;PowerFault_B1.c: 56: {
 19244                           ;PowerFault_B1.c: 57: PF->ADRES=getAD(channel,0xf0);
 19245  1BC6  30F0               	movlw	(0F0h)
 19246  1BC7  0020               	movlb 0	; select bank0
 19247  1BC8  00A8               	movwf	(??_getPowerFault_AD+0)+0
 19248  1BC9  0828               	movf	(??_getPowerFault_AD+0)+0,w
 19249  1BCA  00A0               	movwf	(?_getAD)
 19250  1BCB  0827               	movf	(getPowerFault_AD@channel),w
 19251  1BCC  31A3  2308  319B   	fcall	_getAD
 19252  1BCF  0021               	movlb 1	; select bank1
 19253  1BD0  083D               	movf	(_PF)^080h,w
 19254  1BD1  3E03               	addlw	03h
 19255  1BD2  0086               	movwf	fsr1l
 19256  1BD3  0187               	clrf fsr1h	
 19257                           	
 19258  1BD4  0020               	movlb 0	; select bank0
 19259  1BD5  0820               	movf	(0+(?_getAD)),w
 19260  1BD6  3FC0               	movwi	[0]fsr1
 19261  1BD7  0821               	movf	(1+(?_getAD)),w
 19262  1BD8  3FC1               	movwi	[1]fsr1
 19263                           	line	58
 19264                           	
 19265  1BD9                     l23579:	
 19266                           ;PowerFault_B1.c: 58: if(PF->AD < PF->ADRES)
 19267  1BD9  0021               	movlb 1	; select bank1
 19268  1BDA  083D               	movf	(_PF)^080h,w
 19269  1BDB  3E03               	addlw	03h
 19270  1BDC  0086               	movwf	fsr1l
 19271  1BDD  0187               	clrf fsr1h	
 19272                           	
 19273  1BDE  3F40               	moviw	[0]fsr1
 19274  1BDF  0020               	movlb 0	; select bank0
 19275  1BE0  00A8               	movwf	(??_getPowerFault_AD+0)+0
 19276  1BE1  3F41               	moviw	[1]fsr1
 19277  1BE2  00A9               	movwf	(??_getPowerFault_AD+0)+0+1
 19278  1BE3  0021               	movlb 1	; select bank1
 19279  1BE4  083D               	movf	(_PF)^080h,w
 19280  1BE5  3E01               	addlw	01h
 19281  1BE6  0086               	movwf	fsr1l
 19282  1BE7  0187               	clrf fsr1h	
 19283                           	
 19284  1BE8  3F40               	moviw	[0]fsr1
 19285  1BE9  0020               	movlb 0	; select bank0
 19286  1BEA  00AA               	movwf	(??_getPowerFault_AD+2)+0
 19287  1BEB  3F41               	moviw	[1]fsr1
 19288  1BEC  00AB               	movwf	(??_getPowerFault_AD+2)+0+1
 19289  1BED  0829               	movf	1+(??_getPowerFault_AD+0)+0,w
 19290  1BEE  022B               	subwf	1+(??_getPowerFault_AD+2)+0,w
 19291  1BEF  1D03               	skipz
 19292  1BF0  2BF3               	goto	u7065
 19293  1BF1  0828               	movf	0+(??_getPowerFault_AD+0)+0,w
 19294  1BF2  022A               	subwf	0+(??_getPowerFault_AD+2)+0,w
 19295  1BF3                     u7065:
 19296  1BF3  1803               	skipnc
 19297  1BF4  2BF6               	goto	u7061
 19298  1BF5  2BF7               	goto	u7060
 19299  1BF6                     u7061:
 19300  1BF6  2C0D               	goto	l11933
 19301  1BF7                     u7060:
 19302                           	line	60
 19303                           	
 19304  1BF7                     l23581:	
 19305                           ;PowerFault_B1.c: 59: {
 19306                           ;PowerFault_B1.c: 60: PF->AD=PF->ADRES;
 19307  1BF7  0021               	movlb 1	; select bank1
 19308  1BF8  083D               	movf	(_PF)^080h,w
 19309  1BF9  3E03               	addlw	03h
 19310  1BFA  0086               	movwf	fsr1l
 19311  1BFB  0187               	clrf fsr1h	
 19312                           	
 19313  1BFC  3F40               	moviw	[0]fsr1
 19314  1BFD  0020               	movlb 0	; select bank0
 19315  1BFE  00A8               	movwf	(??_getPowerFault_AD+0)+0
 19316  1BFF  3F41               	moviw	[1]fsr1
 19317  1C00  00A9               	movwf	(??_getPowerFault_AD+0)+0+1
 19318  1C01  0021               	movlb 1	; select bank1
 19319  1C02  083D               	movf	(_PF)^080h,w
 19320  1C03  3E01               	addlw	01h
 19321  1C04  0086               	movwf	fsr1l
 19322  1C05  0187               	clrf fsr1h	
 19323                           	
 19324  1C06  0020               	movlb 0	; select bank0
 19325  1C07  0828               	movf	0+(??_getPowerFault_AD+0)+0,w
 19326  1C08  3FC0               	movwi	[0]fsr1
 19327  1C09  0829               	movf	1+(??_getPowerFault_AD+0)+0,w
 19328  1C0A  3FC1               	movwi	[1]fsr1
 19329  1C0B  2C0D               	goto	l11933
 19330                           	line	61
 19331                           	
 19332  1C0C                     l11932:	
 19333  1C0C  2C0D               	goto	l11933
 19334                           	line	62
 19335                           	
 19336  1C0D                     l11931:	
 19337                           	line	63
 19338                           	
 19339  1C0D                     l11933:	
 19340  1C0D  0008               	return
 19341                           	opt stack 0
 19342                           GLOBAL	__end_of_getPowerFault_AD
 19343  1C0E                     	__end_of_getPowerFault_AD:
 19344 ;; =============== function _getPowerFault_AD ends ============
 19345                           
 19346                           	signat	_getPowerFault_AD,8312
 19347                           	global	_getTemp_AD
 19348                           psect	text3303,local,class=CODE,delta=2
 19349                           global __ptext3303
 19350  12D9                     __ptext3303:
 19351                           
 19352 ;; *************** function _getTemp_AD *****************
 19353 ;; Defined at:
 19354 ;;		line 46 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19355 ;; Parameters:    Size  Location     Type
 19356 ;;  temp            1    wreg     unsigned char 
 19357 ;;  channel         1    7[BANK0 ] unsigned char 
 19358 ;; Auto vars:     Size  Location     Type
 19359 ;;  temp            1   12[BANK0 ] unsigned char 
 19360 ;; Return value:  Size  Location     Type
 19361 ;;		None               void
 19362 ;; Registers used:
 19363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 19364 ;; Tracked objects:
 19365 ;;		On entry : 0/0
 19366 ;;		On exit  : 0/0
 19367 ;;		Unchanged: 0/0
 19368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19369 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 19372 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 19373 ;;Total ram usage:        6 bytes
 19374 ;; Hardware stack levels used:    1
 19375 ;; Hardware stack levels required when called:    5
 19376 ;; This function calls:
 19377 ;;		_TempPointSelect
 19378 ;;		_getAD
 19379 ;; This function is called by:
 19380 ;;		_main
 19381 ;; This function uses a non-reentrant model
 19382 ;;
 19383                           psect	text3303
 19384                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 19385                           	line	46
 19386                           	global	__size_of_getTemp_AD
 19387  0082                     	__size_of_getTemp_AD	equ	__end_of_getTemp_AD-_getTemp_AD
 19388                           	
 19389  12D9                     _getTemp_AD:	
 19390                           	opt	stack 10
 19391                           ; Regs used in _getTemp_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 19392                           ;getTemp_AD@temp stored from wreg
 19393  12D9  0020               	movlb 0	; select bank0
 19394  12DA  00AC               	movwf	(getTemp_AD@temp)
 19395                           	line	47
 19396                           	
 19397  12DB                     l23559:	
 19398                           ;OverTemperature_B1.c: 47: TempPointSelect(temp);
 19399  12DB  082C               	movf	(getTemp_AD@temp),w
 19400  12DC  31AE  26C0  3192   	fcall	_TempPointSelect
 19401                           	line	48
 19402                           	
 19403  12DF                     l23561:	
 19404                           ;OverTemperature_B1.c: 48: if(Temp->ADtoGO)
 19405  12DF  087C               	movf	(_Temp),w
 19406  12E0  0086               	movwf	fsr1l
 19407  12E1  3001               	movlw 1	; select bank2/3
 19408  12E2  0087               	movwf fsr1h	
 19409                           	
 19410  12E3  1D01               	btfss	indf1,2
 19411  12E4  2AE6               	goto	u7021
 19412  12E5  2AE7               	goto	u7020
 19413  12E6                     u7021:
 19414  12E6  2B5A               	goto	l10761
 19415  12E7                     u7020:
 19416                           	line	50
 19417                           	
 19418  12E7                     l23563:	
 19419                           ;OverTemperature_B1.c: 49: {
 19420                           ;OverTemperature_B1.c: 50: Temp->ADRES=getAD(channel,0xf0);
 19421  12E7  30F0               	movlw	(0F0h)
 19422  12E8  0020               	movlb 0	; select bank0
 19423  12E9  00A8               	movwf	(??_getTemp_AD+0)+0
 19424  12EA  0828               	movf	(??_getTemp_AD+0)+0,w
 19425  12EB  00A0               	movwf	(?_getAD)
 19426  12EC  0827               	movf	(getTemp_AD@channel),w
 19427  12ED  31A3  2308  3192   	fcall	_getAD
 19428  12F0  087C               	movf	(_Temp),w
 19429  12F1  3E0A               	addlw	0Ah
 19430  12F2  0086               	movwf	fsr1l
 19431  12F3  3001               	movlw 1	; select bank2/3
 19432  12F4  0087               	movwf fsr1h	
 19433                           	
 19434  12F5  0020               	movlb 0	; select bank0
 19435  12F6  0820               	movf	(0+(?_getAD)),w
 19436  12F7  3FC0               	movwi	[0]fsr1
 19437  12F8  0821               	movf	(1+(?_getAD)),w
 19438  12F9  3FC1               	movwi	[1]fsr1
 19439                           	line	51
 19440                           	
 19441  12FA                     l23565:	
 19442                           ;OverTemperature_B1.c: 51: if(Temp->ADH[0] < Temp->ADRES)
 19443  12FA  087C               	movf	(_Temp),w
 19444  12FB  3E0A               	addlw	0Ah
 19445  12FC  0086               	movwf	fsr1l
 19446  12FD  3001               	movlw 1	; select bank2/3
 19447  12FE  0087               	movwf fsr1h	
 19448                           	
 19449  12FF  3F40               	moviw	[0]fsr1
 19450  1300  00A8               	movwf	(??_getTemp_AD+0)+0
 19451  1301  3F41               	moviw	[1]fsr1
 19452  1302  00A9               	movwf	(??_getTemp_AD+0)+0+1
 19453  1303  087C               	movf	(_Temp),w
 19454  1304  3E06               	addlw	06h
 19455  1305  0086               	movwf	fsr1l
 19456  1306  3001               	movlw 1	; select bank2/3
 19457  1307  0087               	movwf fsr1h	
 19458                           	
 19459  1308  3F40               	moviw	[0]fsr1
 19460  1309  00AA               	movwf	(??_getTemp_AD+2)+0
 19461  130A  3F41               	moviw	[1]fsr1
 19462  130B  00AB               	movwf	(??_getTemp_AD+2)+0+1
 19463  130C  0829               	movf	1+(??_getTemp_AD+0)+0,w
 19464  130D  022B               	subwf	1+(??_getTemp_AD+2)+0,w
 19465  130E  1D03               	skipz
 19466  130F  2B12               	goto	u7035
 19467  1310  0828               	movf	0+(??_getTemp_AD+0)+0,w
 19468  1311  022A               	subwf	0+(??_getTemp_AD+2)+0,w
 19469  1312                     u7035:
 19470  1312  1803               	skipnc
 19471  1313  2B15               	goto	u7031
 19472  1314  2B16               	goto	u7030
 19473  1315                     u7031:
 19474  1315  2B29               	goto	l23569
 19475  1316                     u7030:
 19476                           	line	53
 19477                           	
 19478  1316                     l23567:	
 19479                           ;OverTemperature_B1.c: 52: {
 19480                           ;OverTemperature_B1.c: 53: Temp->ADH[0]=Temp->ADRES;
 19481  1316  087C               	movf	(_Temp),w
 19482  1317  3E0A               	addlw	0Ah
 19483  1318  0086               	movwf	fsr1l
 19484  1319  3001               	movlw 1	; select bank2/3
 19485  131A  0087               	movwf fsr1h	
 19486                           	
 19487  131B  3F40               	moviw	[0]fsr1
 19488  131C  00A8               	movwf	(??_getTemp_AD+0)+0
 19489  131D  3F41               	moviw	[1]fsr1
 19490  131E  00A9               	movwf	(??_getTemp_AD+0)+0+1
 19491  131F  087C               	movf	(_Temp),w
 19492  1320  3E06               	addlw	06h
 19493  1321  0086               	movwf	fsr1l
 19494  1322  3001               	movlw 1	; select bank2/3
 19495  1323  0087               	movwf fsr1h	
 19496                           	
 19497  1324  0828               	movf	0+(??_getTemp_AD+0)+0,w
 19498  1325  3FC0               	movwi	[0]fsr1
 19499  1326  0829               	movf	1+(??_getTemp_AD+0)+0,w
 19500  1327  3FC1               	movwi	[1]fsr1
 19501                           	line	54
 19502                           ;OverTemperature_B1.c: 54: }
 19503  1328  2B5A               	goto	l10761
 19504                           	line	55
 19505                           	
 19506  1329                     l10758:	
 19507                           	
 19508  1329                     l23569:	
 19509                           ;OverTemperature_B1.c: 55: else if(Temp->ADH[1] < Temp->ADRES)
 19510  1329  087C               	movf	(_Temp),w
 19511  132A  3E0A               	addlw	0Ah
 19512  132B  0086               	movwf	fsr1l
 19513  132C  3001               	movlw 1	; select bank2/3
 19514  132D  0087               	movwf fsr1h	
 19515                           	
 19516  132E  3F40               	moviw	[0]fsr1
 19517  132F  00A8               	movwf	(??_getTemp_AD+0)+0
 19518  1330  3F41               	moviw	[1]fsr1
 19519  1331  00A9               	movwf	(??_getTemp_AD+0)+0+1
 19520  1332  087C               	movf	(_Temp),w
 19521  1333  3E08               	addlw	08h
 19522  1334  0086               	movwf	fsr1l
 19523  1335  3001               	movlw 1	; select bank2/3
 19524  1336  0087               	movwf fsr1h	
 19525                           	
 19526  1337  3F40               	moviw	[0]fsr1
 19527  1338  00AA               	movwf	(??_getTemp_AD+2)+0
 19528  1339  3F41               	moviw	[1]fsr1
 19529  133A  00AB               	movwf	(??_getTemp_AD+2)+0+1
 19530  133B  0829               	movf	1+(??_getTemp_AD+0)+0,w
 19531  133C  022B               	subwf	1+(??_getTemp_AD+2)+0,w
 19532  133D  1D03               	skipz
 19533  133E  2B41               	goto	u7045
 19534  133F  0828               	movf	0+(??_getTemp_AD+0)+0,w
 19535  1340  022A               	subwf	0+(??_getTemp_AD+2)+0,w
 19536  1341                     u7045:
 19537  1341  1803               	skipnc
 19538  1342  2B44               	goto	u7041
 19539  1343  2B45               	goto	u7040
 19540  1344                     u7041:
 19541  1344  2B5A               	goto	l10761
 19542  1345                     u7040:
 19543                           	line	57
 19544                           	
 19545  1345                     l23571:	
 19546                           ;OverTemperature_B1.c: 56: {
 19547                           ;OverTemperature_B1.c: 57: Temp->ADH[1]=Temp->ADRES;
 19548  1345  087C               	movf	(_Temp),w
 19549  1346  3E0A               	addlw	0Ah
 19550  1347  0086               	movwf	fsr1l
 19551  1348  3001               	movlw 1	; select bank2/3
 19552  1349  0087               	movwf fsr1h	
 19553                           	
 19554  134A  3F40               	moviw	[0]fsr1
 19555  134B  00A8               	movwf	(??_getTemp_AD+0)+0
 19556  134C  3F41               	moviw	[1]fsr1
 19557  134D  00A9               	movwf	(??_getTemp_AD+0)+0+1
 19558  134E  087C               	movf	(_Temp),w
 19559  134F  3E08               	addlw	08h
 19560  1350  0086               	movwf	fsr1l
 19561  1351  3001               	movlw 1	; select bank2/3
 19562  1352  0087               	movwf fsr1h	
 19563                           	
 19564  1353  0828               	movf	0+(??_getTemp_AD+0)+0,w
 19565  1354  3FC0               	movwi	[0]fsr1
 19566  1355  0829               	movf	1+(??_getTemp_AD+0)+0,w
 19567  1356  3FC1               	movwi	[1]fsr1
 19568  1357  2B5A               	goto	l10761
 19569                           	line	58
 19570                           	
 19571  1358                     l10760:	
 19572  1358  2B5A               	goto	l10761
 19573                           	line	59
 19574                           	
 19575  1359                     l10759:	
 19576  1359  2B5A               	goto	l10761
 19577                           	
 19578  135A                     l10757:	
 19579                           	line	60
 19580                           	
 19581  135A                     l10761:	
 19582  135A  0008               	return
 19583                           	opt stack 0
 19584                           GLOBAL	__end_of_getTemp_AD
 19585  135B                     	__end_of_getTemp_AD:
 19586 ;; =============== function _getTemp_AD ends ============
 19587                           
 19588                           	signat	_getTemp_AD,8312
 19589                           	global	_getLoad_AD
 19590                           psect	text3304,local,class=CODE,delta=2
 19591                           global __ptext3304
 19592  0AD6                     __ptext3304:
 19593                           
 19594 ;; *************** function _getLoad_AD *****************
 19595 ;; Defined at:
 19596 ;;		line 39 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 19597 ;; Parameters:    Size  Location     Type
 19598 ;;  load            1    wreg     unsigned char 
 19599 ;;  channel         1    7[BANK0 ] unsigned char 
 19600 ;; Auto vars:     Size  Location     Type
 19601 ;;  load            1   13[BANK0 ] unsigned char 
 19602 ;;  i               1   15[BANK0 ] unsigned char 
 19603 ;;  j               1   14[BANK0 ] unsigned char 
 19604 ;; Return value:  Size  Location     Type
 19605 ;;		None               void
 19606 ;; Registers used:
 19607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19613 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 19614 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 19615 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 19616 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
 19617 ;;Total ram usage:        9 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:    5
 19620 ;; This function calls:
 19621 ;;		_LoadPointSelect
 19622 ;;		_getAD
 19623 ;; This function is called by:
 19624 ;;		_main
 19625 ;; This function uses a non-reentrant model
 19626 ;;
 19627                           psect	text3304
 19628                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 19629                           	line	39
 19630                           	global	__size_of_getLoad_AD
 19631  00C4                     	__size_of_getLoad_AD	equ	__end_of_getLoad_AD-_getLoad_AD
 19632                           	
 19633  0AD6                     _getLoad_AD:	
 19634                           	opt	stack 10
 19635                           ; Regs used in _getLoad_AD: [wreg+fsr1l-status,0+btemp+1+pclath+cstack]
 19636                           ;getLoad_AD@load stored from wreg
 19637  0AD6  0020               	movlb 0	; select bank0
 19638  0AD7  00AD               	movwf	(getLoad_AD@load)
 19639                           	line	40
 19640                           	
 19641  0AD8                     l23519:	
 19642                           ;OverLoad_B1.c: 40: char i=0,j=0;
 19643  0AD8  01AF               	clrf	(getLoad_AD@i)
 19644  0AD9  01AE               	clrf	(getLoad_AD@j)
 19645                           	line	41
 19646                           	
 19647  0ADA                     l23521:	
 19648                           ;OverLoad_B1.c: 41: LoadPointSelect(load);
 19649  0ADA  082D               	movf	(getLoad_AD@load),w
 19650  0ADB  31AF  27BA  318A   	fcall	_LoadPointSelect
 19651                           	line	42
 19652                           	
 19653  0ADE                     l23523:	
 19654                           ;OverLoad_B1.c: 42: if(Load->ADtoGO)
 19655  0ADE  0020               	movlb 0	; select bank0
 19656  0ADF  086E               	movf	(_Load),w
 19657  0AE0  0086               	movwf	fsr1l
 19658  0AE1  3002               	movlw 2	; select bank4/5
 19659  0AE2  0087               	movwf fsr1h	
 19660                           	
 19661  0AE3  1E01               	btfss	indf1,4
 19662  0AE4  2AE6               	goto	u6941
 19663  0AE5  2AE7               	goto	u6940
 19664  0AE6                     u6941:
 19665  0AE6  2B99               	goto	l9543
 19666  0AE7                     u6940:
 19667                           	line	44
 19668                           	
 19669  0AE7                     l23525:	
 19670                           ;OverLoad_B1.c: 43: {
 19671                           ;OverLoad_B1.c: 44: Load->ADRES=getAD(channel,0xc0);
 19672  0AE7  30C0               	movlw	(0C0h)
 19673  0AE8  00A8               	movwf	(??_getLoad_AD+0)+0
 19674  0AE9  0828               	movf	(??_getLoad_AD+0)+0,w
 19675  0AEA  00A0               	movwf	(?_getAD)
 19676  0AEB  0827               	movf	(getLoad_AD@channel),w
 19677  0AEC  31A3  2308  318A   	fcall	_getAD
 19678  0AEF  0020               	movlb 0	; select bank0
 19679  0AF0  086E               	movf	(_Load),w
 19680  0AF1  3E32               	addlw	032h
 19681  0AF2  0086               	movwf	fsr1l
 19682  0AF3  3002               	movlw 2	; select bank4/5
 19683  0AF4  0087               	movwf fsr1h	
 19684                           	
 19685  0AF5  0820               	movf	(0+(?_getAD)),w
 19686  0AF6  3FC0               	movwi	[0]fsr1
 19687  0AF7  0821               	movf	(1+(?_getAD)),w
 19688  0AF8  3FC1               	movwi	[1]fsr1
 19689                           	line	45
 19690                           	
 19691  0AF9                     l23527:	
 19692                           ;OverLoad_B1.c: 45: for(i=0 ; i<5 ;i++)
 19693  0AF9  01AF               	clrf	(getLoad_AD@i)
 19694                           	
 19695  0AFA                     l23529:	
 19696  0AFA  3005               	movlw	(05h)
 19697  0AFB  022F               	subwf	(getLoad_AD@i),w
 19698  0AFC  1C03               	skipc
 19699  0AFD  2AFF               	goto	u6951
 19700  0AFE  2B00               	goto	u6950
 19701  0AFF                     u6951:
 19702  0AFF  2B02               	goto	l23533
 19703  0B00                     u6950:
 19704  0B00  2B47               	goto	l23543
 19705                           	
 19706  0B01                     l23531:	
 19707  0B01  2B47               	goto	l23543
 19708                           	line	46
 19709                           	
 19710  0B02                     l9536:	
 19711                           	line	47
 19712                           	
 19713  0B02                     l23533:	
 19714                           ;OverLoad_B1.c: 46: {
 19715                           ;OverLoad_B1.c: 47: if(Load->AH[i] < Load->ADRES)
 19716  0B02  086E               	movf	(_Load),w
 19717  0B03  3E32               	addlw	032h
 19718  0B04  0086               	movwf	fsr1l
 19719  0B05  3002               	movlw 2	; select bank4/5
 19720  0B06  0087               	movwf fsr1h	
 19721                           	
 19722  0B07  3F40               	moviw	[0]fsr1
 19723  0B08  00A8               	movwf	(??_getLoad_AD+0)+0
 19724  0B09  3F41               	moviw	[1]fsr1
 19725  0B0A  00A9               	movwf	(??_getLoad_AD+0)+0+1
 19726  0B0B  082F               	movf	(getLoad_AD@i),w
 19727  0B0C  0709               	addwf	wreg,w
 19728  0B0D  3E08               	addlw	08h
 19729  0B0E  076E               	addwf	(_Load),w
 19730  0B0F  00AA               	movwf	(??_getLoad_AD+2)+0
 19731  0B10  082A               	movf	0+(??_getLoad_AD+2)+0,w
 19732  0B11  0086               	movwf	fsr1l
 19733  0B12  3002               	movlw 2	; select bank4/5
 19734  0B13  0087               	movwf fsr1h	
 19735                           	
 19736  0B14  3F40               	moviw	[0]fsr1
 19737  0B15  00AB               	movwf	(??_getLoad_AD+3)+0
 19738  0B16  3F41               	moviw	[1]fsr1
 19739  0B17  00AC               	movwf	(??_getLoad_AD+3)+0+1
 19740  0B18  0829               	movf	1+(??_getLoad_AD+0)+0,w
 19741  0B19  022C               	subwf	1+(??_getLoad_AD+3)+0,w
 19742  0B1A  1D03               	skipz
 19743  0B1B  2B1E               	goto	u6965
 19744  0B1C  0828               	movf	0+(??_getLoad_AD+0)+0,w
 19745  0B1D  022B               	subwf	0+(??_getLoad_AD+3)+0,w
 19746  0B1E                     u6965:
 19747  0B1E  1803               	skipnc
 19748  0B1F  2B21               	goto	u6961
 19749  0B20  2B22               	goto	u6960
 19750  0B21                     u6961:
 19751  0B21  2B3C               	goto	l23539
 19752  0B22                     u6960:
 19753                           	line	49
 19754                           	
 19755  0B22                     l23535:	
 19756                           ;OverLoad_B1.c: 48: {
 19757                           ;OverLoad_B1.c: 49: Load->AH[i]=Load->ADRES;
 19758  0B22  086E               	movf	(_Load),w
 19759  0B23  3E32               	addlw	032h
 19760  0B24  0086               	movwf	fsr1l
 19761  0B25  3002               	movlw 2	; select bank4/5
 19762  0B26  0087               	movwf fsr1h	
 19763                           	
 19764  0B27  3F40               	moviw	[0]fsr1
 19765  0B28  00A8               	movwf	(??_getLoad_AD+0)+0
 19766  0B29  3F41               	moviw	[1]fsr1
 19767  0B2A  00A9               	movwf	(??_getLoad_AD+0)+0+1
 19768  0B2B  082F               	movf	(getLoad_AD@i),w
 19769  0B2C  0709               	addwf	wreg,w
 19770  0B2D  3E08               	addlw	08h
 19771  0B2E  076E               	addwf	(_Load),w
 19772  0B2F  00AA               	movwf	(??_getLoad_AD+2)+0
 19773  0B30  082A               	movf	0+(??_getLoad_AD+2)+0,w
 19774  0B31  0086               	movwf	fsr1l
 19775  0B32  3002               	movlw 2	; select bank4/5
 19776  0B33  0087               	movwf fsr1h	
 19777                           	
 19778  0B34  0828               	movf	0+(??_getLoad_AD+0)+0,w
 19779  0B35  3FC0               	movwi	[0]fsr1
 19780  0B36  0829               	movf	1+(??_getLoad_AD+0)+0,w
 19781  0B37  3FC1               	movwi	[1]fsr1
 19782                           	line	50
 19783                           	
 19784  0B38                     l23537:	
 19785                           ;OverLoad_B1.c: 50: j=1;
 19786  0B38  01AE               	clrf	(getLoad_AD@j)
 19787  0B39  1403               	bsf	status,0
 19788  0B3A  0DAE               	rlf	(getLoad_AD@j),f
 19789                           	line	51
 19790                           ;OverLoad_B1.c: 51: break;
 19791  0B3B  2B47               	goto	l23543
 19792                           	line	52
 19793                           	
 19794  0B3C                     l9538:	
 19795                           	line	45
 19796                           	
 19797  0B3C                     l23539:	
 19798  0B3C  3001               	movlw	(01h)
 19799  0B3D  00A8               	movwf	(??_getLoad_AD+0)+0
 19800  0B3E  0828               	movf	(??_getLoad_AD+0)+0,w
 19801  0B3F  07AF               	addwf	(getLoad_AD@i),f
 19802                           	
 19803  0B40                     l23541:	
 19804  0B40  3005               	movlw	(05h)
 19805  0B41  022F               	subwf	(getLoad_AD@i),w
 19806  0B42  1C03               	skipc
 19807  0B43  2B45               	goto	u6971
 19808  0B44  2B46               	goto	u6970
 19809  0B45                     u6971:
 19810  0B45  2B02               	goto	l23533
 19811  0B46                     u6970:
 19812  0B46  2B47               	goto	l23543
 19813                           	
 19814  0B47                     l9537:	
 19815                           	line	54
 19816                           	
 19817  0B47                     l23543:	
 19818                           ;OverLoad_B1.c: 52: }
 19819                           ;OverLoad_B1.c: 53: }
 19820                           ;OverLoad_B1.c: 54: if(j == 0)
 19821  0B47  08AE               	movf	(getLoad_AD@j),f
 19822  0B48  1D03               	skipz
 19823  0B49  2B4B               	goto	u6981
 19824  0B4A  2B4C               	goto	u6980
 19825  0B4B                     u6981:
 19826  0B4B  2B99               	goto	l9543
 19827  0B4C                     u6980:
 19828                           	line	56
 19829                           	
 19830  0B4C                     l23545:	
 19831                           ;OverLoad_B1.c: 55: {
 19832                           ;OverLoad_B1.c: 56: for(i=0 ; i<5 ;i++)
 19833  0B4C  01AF               	clrf	(getLoad_AD@i)
 19834                           	
 19835  0B4D                     l23547:	
 19836  0B4D  3005               	movlw	(05h)
 19837  0B4E  022F               	subwf	(getLoad_AD@i),w
 19838  0B4F  1C03               	skipc
 19839  0B50  2B52               	goto	u6991
 19840  0B51  2B53               	goto	u6990
 19841  0B52                     u6991:
 19842  0B52  2B55               	goto	l23551
 19843  0B53                     u6990:
 19844  0B53  2B99               	goto	l9543
 19845                           	
 19846  0B54                     l23549:	
 19847  0B54  2B99               	goto	l9543
 19848                           	line	57
 19849                           	
 19850  0B55                     l9540:	
 19851                           	line	58
 19852                           	
 19853  0B55                     l23551:	
 19854                           ;OverLoad_B1.c: 57: {
 19855                           ;OverLoad_B1.c: 58: if(Load->AL[i] > Load->ADRES)
 19856  0B55  082F               	movf	(getLoad_AD@i),w
 19857  0B56  0709               	addwf	wreg,w
 19858  0B57  3E1A               	addlw	01Ah
 19859  0B58  076E               	addwf	(_Load),w
 19860  0B59  00A8               	movwf	(??_getLoad_AD+0)+0
 19861  0B5A  0828               	movf	0+(??_getLoad_AD+0)+0,w
 19862  0B5B  0086               	movwf	fsr1l
 19863  0B5C  3002               	movlw 2	; select bank4/5
 19864  0B5D  0087               	movwf fsr1h	
 19865                           	
 19866  0B5E  3F40               	moviw	[0]fsr1
 19867  0B5F  00A9               	movwf	(??_getLoad_AD+1)+0
 19868  0B60  3F41               	moviw	[1]fsr1
 19869  0B61  00AA               	movwf	(??_getLoad_AD+1)+0+1
 19870  0B62  086E               	movf	(_Load),w
 19871  0B63  3E32               	addlw	032h
 19872  0B64  0086               	movwf	fsr1l
 19873  0B65  3002               	movlw 2	; select bank4/5
 19874  0B66  0087               	movwf fsr1h	
 19875                           	
 19876  0B67  3F40               	moviw	[0]fsr1
 19877  0B68  00AB               	movwf	(??_getLoad_AD+3)+0
 19878  0B69  3F41               	moviw	[1]fsr1
 19879  0B6A  00AC               	movwf	(??_getLoad_AD+3)+0+1
 19880  0B6B  082A               	movf	1+(??_getLoad_AD+1)+0,w
 19881  0B6C  022C               	subwf	1+(??_getLoad_AD+3)+0,w
 19882  0B6D  1D03               	skipz
 19883  0B6E  2B71               	goto	u7005
 19884  0B6F  0829               	movf	0+(??_getLoad_AD+1)+0,w
 19885  0B70  022B               	subwf	0+(??_getLoad_AD+3)+0,w
 19886  0B71                     u7005:
 19887  0B71  1803               	skipnc
 19888  0B72  2B74               	goto	u7001
 19889  0B73  2B75               	goto	u7000
 19890  0B74                     u7001:
 19891  0B74  2B8C               	goto	l23555
 19892  0B75                     u7000:
 19893                           	line	60
 19894                           	
 19895  0B75                     l23553:	
 19896                           ;OverLoad_B1.c: 59: {
 19897                           ;OverLoad_B1.c: 60: Load->AL[i]=Load->ADRES;
 19898  0B75  086E               	movf	(_Load),w
 19899  0B76  3E32               	addlw	032h
 19900  0B77  0086               	movwf	fsr1l
 19901  0B78  3002               	movlw 2	; select bank4/5
 19902  0B79  0087               	movwf fsr1h	
 19903                           	
 19904  0B7A  3F40               	moviw	[0]fsr1
 19905  0B7B  00A8               	movwf	(??_getLoad_AD+0)+0
 19906  0B7C  3F41               	moviw	[1]fsr1
 19907  0B7D  00A9               	movwf	(??_getLoad_AD+0)+0+1
 19908  0B7E  082F               	movf	(getLoad_AD@i),w
 19909  0B7F  0709               	addwf	wreg,w
 19910  0B80  3E1A               	addlw	01Ah
 19911  0B81  076E               	addwf	(_Load),w
 19912  0B82  00AA               	movwf	(??_getLoad_AD+2)+0
 19913  0B83  082A               	movf	0+(??_getLoad_AD+2)+0,w
 19914  0B84  0086               	movwf	fsr1l
 19915  0B85  3002               	movlw 2	; select bank4/5
 19916  0B86  0087               	movwf fsr1h	
 19917                           	
 19918  0B87  0828               	movf	0+(??_getLoad_AD+0)+0,w
 19919  0B88  3FC0               	movwi	[0]fsr1
 19920  0B89  0829               	movf	1+(??_getLoad_AD+0)+0,w
 19921  0B8A  3FC1               	movwi	[1]fsr1
 19922                           	line	61
 19923                           ;OverLoad_B1.c: 61: break;
 19924  0B8B  2B99               	goto	l9543
 19925                           	line	62
 19926                           	
 19927  0B8C                     l9542:	
 19928                           	line	56
 19929                           	
 19930  0B8C                     l23555:	
 19931  0B8C  3001               	movlw	(01h)
 19932  0B8D  00A8               	movwf	(??_getLoad_AD+0)+0
 19933  0B8E  0828               	movf	(??_getLoad_AD+0)+0,w
 19934  0B8F  07AF               	addwf	(getLoad_AD@i),f
 19935                           	
 19936  0B90                     l23557:	
 19937  0B90  3005               	movlw	(05h)
 19938  0B91  022F               	subwf	(getLoad_AD@i),w
 19939  0B92  1C03               	skipc
 19940  0B93  2B95               	goto	u7011
 19941  0B94  2B96               	goto	u7010
 19942  0B95                     u7011:
 19943  0B95  2B55               	goto	l23551
 19944  0B96                     u7010:
 19945  0B96  2B99               	goto	l9543
 19946                           	
 19947  0B97                     l9541:	
 19948  0B97  2B99               	goto	l9543
 19949                           	line	64
 19950                           	
 19951  0B98                     l9539:	
 19952  0B98  2B99               	goto	l9543
 19953                           	line	65
 19954                           	
 19955  0B99                     l9535:	
 19956                           	line	66
 19957                           	
 19958  0B99                     l9543:	
 19959  0B99  0008               	return
 19960                           	opt stack 0
 19961                           GLOBAL	__end_of_getLoad_AD
 19962  0B9A                     	__end_of_getLoad_AD:
 19963 ;; =============== function _getLoad_AD ends ============
 19964                           
 19965                           	signat	_getLoad_AD,8312
 19966                           	global	_RF_Initialization
 19967                           psect	text3305,local,class=CODE,delta=2
 19968                           global __ptext3305
 19969  2E75                     __ptext3305:
 19970                           
 19971 ;; *************** function _RF_Initialization *****************
 19972 ;; Defined at:
 19973 ;;		line 18 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 19974 ;; Parameters:    Size  Location     Type
 19975 ;;		None
 19976 ;; Auto vars:     Size  Location     Type
 19977 ;;		None
 19978 ;; Return value:  Size  Location     Type
 19979 ;;		None               void
 19980 ;; Registers used:
 19981 ;;		wreg, status,2, status,0, pclath, cstack
 19982 ;; Tracked objects:
 19983 ;;		On entry : 0/0
 19984 ;;		On exit  : 0/0
 19985 ;;		Unchanged: 0/0
 19986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 19987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 19991 ;;Total ram usage:        0 bytes
 19992 ;; Hardware stack levels used:    1
 19993 ;; Hardware stack levels required when called:    5
 19994 ;; This function calls:
 19995 ;;		_setRF_Initialization
 19996 ;; This function is called by:
 19997 ;;		_main
 19998 ;; This function uses a non-reentrant model
 19999 ;;
 20000                           psect	text3305
 20001                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 20002                           	line	18
 20003                           	global	__size_of_RF_Initialization
 20004  0005                     	__size_of_RF_Initialization	equ	__end_of_RF_Initialization-_RF_Initialization
 20005                           	
 20006  2E75                     _RF_Initialization:	
 20007                           	opt	stack 10
 20008                           ; Regs used in _RF_Initialization: [wreg+status,2+status,0+pclath+cstack]
 20009                           	line	20
 20010                           	
 20011  2E75                     l23517:	
 20012                           ;RF_Control_B1.c: 20: setRF_Initialization(1);
 20013  2E75  3001               	movlw	(01h)
 20014  2E76  31A0  2000  31AE   	fcall	_setRF_Initialization
 20015                           	line	22
 20016                           	
 20017  2E79                     l13108:	
 20018  2E79  0008               	return
 20019                           	opt stack 0
 20020                           GLOBAL	__end_of_RF_Initialization
 20021  2E7A                     	__end_of_RF_Initialization:
 20022 ;; =============== function _RF_Initialization ends ============
 20023                           
 20024                           	signat	_RF_Initialization,88
 20025                           	global	_Mcu_Initialization
 20026                           psect	text3306,local,class=CODE,delta=2
 20027                           global __ptext3306
 20028  2297                     __ptext3306:
 20029                           
 20030 ;; *************** function _Mcu_Initialization *****************
 20031 ;; Defined at:
 20032 ;;		line 12 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 20033 ;; Parameters:    Size  Location     Type
 20034 ;;		None
 20035 ;; Auto vars:     Size  Location     Type
 20036 ;;		None
 20037 ;; Return value:  Size  Location     Type
 20038 ;;		None               void
 20039 ;; Registers used:
 20040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20041 ;; Tracked objects:
 20042 ;;		On entry : 0/0
 20043 ;;		On exit  : 0/0
 20044 ;;		Unchanged: 0/0
 20045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20049 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20050 ;;Total ram usage:        1 bytes
 20051 ;; Hardware stack levels used:    1
 20052 ;; Hardware stack levels required when called:    5
 20053 ;; This function calls:
 20054 ;;		_IO_Set
 20055 ;;		_TMR0_Set
 20056 ;;		_ADC_Set
 20057 ;;		_INT_Set
 20058 ;;		_IOC_Set
 20059 ;; This function is called by:
 20060 ;;		_main
 20061 ;; This function uses a non-reentrant model
 20062 ;;
 20063                           psect	text3306
 20064                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 20065                           	line	12
 20066                           	global	__size_of_Mcu_Initialization
 20067  0019                     	__size_of_Mcu_Initialization	equ	__end_of_Mcu_Initialization-_Mcu_Initialization
 20068                           	
 20069  2297                     _Mcu_Initialization:	
 20070                           	opt	stack 10
 20071                           ; Regs used in _Mcu_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 20072                           	line	14
 20073                           	
 20074  2297                     l23503:	
 20075                           ;MCU_16f1518_B1.c: 14: OSCCON=0x78; ;;
 20076  2297  3078               	movlw	(078h)
 20077  2298  0021               	movlb 1	; select bank1
 20078  2299  0099               	movwf	(153)^080h	;volatile
 20079                           	line	16
 20080                           	
 20081  229A                     l23505:	
 20082                           ;MCU_16f1518_B1.c: 16: IO_Set();
 20083  229A  31A2  227E  31A2   	fcall	_IO_Set
 20084                           	line	18
 20085                           	
 20086  229D                     l23507:	
 20087                           ;MCU_16f1518_B1.c: 18: TMR0_Set();
 20088  229D  31A2  2228  31A2   	fcall	_TMR0_Set
 20089                           	line	22
 20090                           	
 20091  22A0                     l23509:	
 20092                           ;MCU_16f1518_B1.c: 20: ;;
 20093                           ;MCU_16f1518_B1.c: 22: ADC_Set();
 20094  22A0  31AE  26D2  31A2   	fcall	_ADC_Set
 20095                           	line	26
 20096                           	
 20097  22A3                     l23511:	
 20098                           ;MCU_16f1518_B1.c: 26: INT_Set();
 20099  22A3  31AE  2670  31A2   	fcall	_INT_Set
 20100                           	line	28
 20101                           	
 20102  22A6                     l23513:	
 20103                           ;MCU_16f1518_B1.c: 28: IOC_Set();
 20104  22A6  31AF  272A  31A2   	fcall	_IOC_Set
 20105                           	line	34
 20106                           	
 20107  22A9                     l23515:	
 20108                           ;MCU_16f1518_B1.c: 30: ;;
 20109                           ;MCU_16f1518_B1.c: 32: ;;
 20110                           ;MCU_16f1518_B1.c: 34: Memory=&VarMemory;
 20111  22A9  30A0               	movlw	(_VarMemory)&0ffh
 20112  22AA  0020               	movlb 0	; select bank0
 20113  22AB  00A1               	movwf	(??_Mcu_Initialization+0)+0
 20114  22AC  0821               	movf	(??_Mcu_Initialization+0)+0,w
 20115  22AD  0021               	movlb 1	; select bank1
 20116  22AE  00ED               	movwf	(_Memory)^080h
 20117                           	line	35
 20118                           	
 20119  22AF                     l8285:	
 20120  22AF  0008               	return
 20121                           	opt stack 0
 20122                           GLOBAL	__end_of_Mcu_Initialization
 20123  22B0                     	__end_of_Mcu_Initialization:
 20124 ;; =============== function _Mcu_Initialization ends ============
 20125                           
 20126                           	signat	_Mcu_Initialization,88
 20127                           	global	_setLED_Main
 20128                           psect	text3307,local,class=CODE,delta=2
 20129                           global __ptext3307
 20130  1B11                     __ptext3307:
 20131                           
 20132 ;; *************** function _setLED_Main *****************
 20133 ;; Defined at:
 20134 ;;		line 215 in file "G:\Program\PIC\Source_File\LED_B1.c"
 20135 ;; Parameters:    Size  Location     Type
 20136 ;;  led             1    wreg     unsigned char 
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;  led             1    4[BANK0 ] unsigned char 
 20139 ;; Return value:  Size  Location     Type
 20140 ;;		None               void
 20141 ;; Registers used:
 20142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20150 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20151 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 20152 ;;Total ram usage:        3 bytes
 20153 ;; Hardware stack levels used:    1
 20154 ;; Hardware stack levels required when called:    5
 20155 ;; This function calls:
 20156 ;;		_LedPointSelect
 20157 ;; This function is called by:
 20158 ;;		_LED_Main
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           psect	text3307
 20162                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 20163                           	line	215
 20164                           	global	__size_of_setLED_Main
 20165  0053                     	__size_of_setLED_Main	equ	__end_of_setLED_Main-_setLED_Main
 20166                           	
 20167  1B11                     _setLED_Main:	
 20168                           	opt	stack 9
 20169                           ; Regs used in _setLED_Main: [wreg+fsr1l-status,0+pclath+cstack]
 20170                           ;setLED_Main@led stored from wreg
 20171  1B11  0020               	movlb 0	; select bank0
 20172  1B12  00A4               	movwf	(setLED_Main@led)
 20173                           	line	216
 20174                           	
 20175  1B13                     l23481:	
 20176                           ;LED_B1.c: 216: LedPointSelect(led);
 20177  1B13  0824               	movf	(setLED_Main@led),w
 20178  1B14  31A4  24B4  319B   	fcall	_LedPointSelect
 20179                           	line	217
 20180                           	
 20181  1B17                     l23483:	
 20182                           ;LED_B1.c: 217: if(LED->GO)
 20183  1B17  0021               	movlb 1	; select bank1
 20184  1B18  083C               	movf	(_LED)^080h,w
 20185  1B19  0086               	movwf	fsr1l
 20186  1B1A  0187               	clrf fsr1h	
 20187                           	
 20188  1B1B  1C81               	btfss	indf1,1
 20189  1B1C  2B1E               	goto	u6891
 20190  1B1D  2B1F               	goto	u6890
 20191  1B1E                     u6891:
 20192  1B1E  2B63               	goto	l5978
 20193  1B1F                     u6890:
 20194                           	line	219
 20195                           	
 20196  1B1F                     l23485:	
 20197                           ;LED_B1.c: 218: {
 20198                           ;LED_B1.c: 219: LED->Time++;
 20199  1B1F  083C               	movf	(_LED)^080h,w
 20200  1B20  3E01               	addlw	01h
 20201  1B21  0086               	movwf	fsr1l
 20202  1B22  0187               	clrf fsr1h	
 20203                           	
 20204  1B23  3001               	movlw	01h
 20205  1B24  0781               	addwf	indf1,f
 20206  1B25  3141               	addfsr	fsr1,1
 20207  1B26  1803               	skipnc
 20208  1B27  0A81               	incf	indf1,f
 20209                           	line	220
 20210                           	
 20211  1B28                     l23487:	
 20212                           ;LED_B1.c: 220: if(LED->Time >= 500)
 20213  1B28  083C               	movf	(_LED)^080h,w
 20214  1B29  3E01               	addlw	01h
 20215  1B2A  0086               	movwf	fsr1l
 20216  1B2B  0187               	clrf fsr1h	
 20217                           	
 20218  1B2C  3F40               	moviw	[0]fsr1
 20219  1B2D  0020               	movlb 0	; select bank0
 20220  1B2E  00A2               	movwf	(??_setLED_Main+0)+0
 20221  1B2F  3F41               	moviw	[1]fsr1
 20222  1B30  00A3               	movwf	(??_setLED_Main+0)+0+1
 20223  1B31  3001               	movlw	high(01F4h)
 20224  1B32  0223               	subwf	1+(??_setLED_Main+0)+0,w
 20225  1B33  30F4               	movlw	low(01F4h)
 20226  1B34  1903               	skipnz
 20227  1B35  0222               	subwf	0+(??_setLED_Main+0)+0,w
 20228  1B36  1C03               	skipc
 20229  1B37  2B39               	goto	u6901
 20230  1B38  2B3A               	goto	u6900
 20231  1B39                     u6901:
 20232  1B39  2B63               	goto	l5978
 20233  1B3A                     u6900:
 20234                           	line	222
 20235                           	
 20236  1B3A                     l23489:	
 20237                           ;LED_B1.c: 221: {
 20238                           ;LED_B1.c: 222: LED->Time=0;
 20239  1B3A  0021               	movlb 1	; select bank1
 20240  1B3B  083C               	movf	(_LED)^080h,w
 20241  1B3C  3E01               	addlw	01h
 20242  1B3D  0086               	movwf	fsr1l
 20243  1B3E  0187               	clrf fsr1h	
 20244                           	
 20245  1B3F  3000               	movlw	low(0)
 20246  1B40  3FC0               	movwi	[0]fsr1
 20247  1B41  3000               	movlw	high(0)
 20248  1B42  3FC1               	movwi	[1]fsr1
 20249                           	line	224
 20250                           	
 20251  1B43                     l23491:	
 20252                           ;LED_B1.c: 224: if(led == 1)
 20253  1B43  0020               	movlb 0	; select bank0
 20254  1B44  0824               	movf	(setLED_Main@led),w
 20255  1B45  3A01               	xorlw	01h&0ffh
 20256  1B46  1D03               	skipz
 20257  1B47  2B49               	goto	u6911
 20258  1B48  2B4A               	goto	u6910
 20259  1B49                     u6911:
 20260  1B49  2B4D               	goto	l23495
 20261  1B4A                     u6910:
 20262                           	line	226
 20263                           	
 20264  1B4A                     l23493:	
 20265                           ;LED_B1.c: 225: {
 20266                           ;LED_B1.c: 226: RC7=~RC7;
 20267  1B4A  3080               	movlw	1<<((119)&7)
 20268  1B4B  068E               	xorwf	((119)/8),f
 20269                           	line	227
 20270                           ;LED_B1.c: 227: }
 20271  1B4C  2B63               	goto	l5978
 20272                           	line	230
 20273                           	
 20274  1B4D                     l5973:	
 20275                           	
 20276  1B4D                     l23495:	
 20277                           ;LED_B1.c: 230: else if(led == 2)
 20278  1B4D  0824               	movf	(setLED_Main@led),w
 20279  1B4E  3A02               	xorlw	02h&0ffh
 20280  1B4F  1D03               	skipz
 20281  1B50  2B52               	goto	u6921
 20282  1B51  2B53               	goto	u6920
 20283  1B52                     u6921:
 20284  1B52  2B56               	goto	l23499
 20285  1B53                     u6920:
 20286                           	line	232
 20287                           	
 20288  1B53                     l23497:	
 20289                           ;LED_B1.c: 231: {
 20290                           ;LED_B1.c: 232: RA3=~RA3;
 20291  1B53  3008               	movlw	1<<((99)&7)
 20292  1B54  068C               	xorwf	((99)/8),f
 20293                           	line	233
 20294                           ;LED_B1.c: 233: }
 20295  1B55  2B63               	goto	l5978
 20296                           	line	242
 20297                           	
 20298  1B56                     l5975:	
 20299                           	
 20300  1B56                     l23499:	
 20301                           ;LED_B1.c: 242: else if(led == 99)
 20302  1B56  0824               	movf	(setLED_Main@led),w
 20303  1B57  3A63               	xorlw	063h&0ffh
 20304  1B58  1D03               	skipz
 20305  1B59  2B5B               	goto	u6931
 20306  1B5A  2B5C               	goto	u6930
 20307  1B5B                     u6931:
 20308  1B5B  2B63               	goto	l5978
 20309  1B5C                     u6930:
 20310                           	line	244
 20311                           	
 20312  1B5C                     l23501:	
 20313                           ;LED_B1.c: 243: {
 20314                           ;LED_B1.c: 244: RB5=~RB5;
 20315  1B5C  3020               	movlw	1<<((109)&7)
 20316  1B5D  068D               	xorwf	((109)/8),f
 20317  1B5E  2B63               	goto	l5978
 20318                           	line	245
 20319                           	
 20320  1B5F                     l5977:	
 20321  1B5F  2B63               	goto	l5978
 20322                           	line	247
 20323                           	
 20324  1B60                     l5976:	
 20325  1B60  2B63               	goto	l5978
 20326                           	
 20327  1B61                     l5974:	
 20328  1B61  2B63               	goto	l5978
 20329                           	
 20330  1B62                     l5972:	
 20331  1B62  2B63               	goto	l5978
 20332                           	line	248
 20333                           	
 20334  1B63                     l5971:	
 20335                           	line	249
 20336                           	
 20337  1B63                     l5978:	
 20338  1B63  0008               	return
 20339                           	opt stack 0
 20340                           GLOBAL	__end_of_setLED_Main
 20341  1B64                     	__end_of_setLED_Main:
 20342 ;; =============== function _setLED_Main ends ============
 20343                           
 20344                           	signat	_setLED_Main,4216
 20345                           	global	_setDimmer_PFERROR
 20346                           psect	text3308,local,class=CODE,delta=2
 20347                           global __ptext3308
 20348  20E0                     __ptext3308:
 20349                           
 20350 ;; *************** function _setDimmer_PFERROR *****************
 20351 ;; Defined at:
 20352 ;;		line 525 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 20353 ;; Parameters:    Size  Location     Type
 20354 ;;  dimmer          1    wreg     unsigned char 
 20355 ;;  command         1    2[BANK0 ] unsigned char 
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;  dimmer          1    3[BANK0 ] unsigned char 
 20358 ;; Return value:  Size  Location     Type
 20359 ;;		None               void
 20360 ;; Registers used:
 20361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20367 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20371 ;;Total ram usage:        2 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:    5
 20374 ;; This function calls:
 20375 ;;		_DimmerPointSelect
 20376 ;; This function is called by:
 20377 ;;		_setPowerFault_ERROR
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           psect	text3308
 20381                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 20382                           	line	525
 20383                           	global	__size_of_setDimmer_PFERROR
 20384  0010                     	__size_of_setDimmer_PFERROR	equ	__end_of_setDimmer_PFERROR-_setDimmer_PFERROR
 20385                           	
 20386  20E0                     _setDimmer_PFERROR:	
 20387                           	opt	stack 7
 20388                           ; Regs used in _setDimmer_PFERROR: [wreg+fsr1l-status,0+pclath+cstack]
 20389                           ;setDimmer_PFERROR@dimmer stored from wreg
 20390  20E0  0020               	movlb 0	; select bank0
 20391  20E1  00A3               	movwf	(setDimmer_PFERROR@dimmer)
 20392                           	line	526
 20393                           	
 20394  20E2                     l23477:	
 20395                           ;Dimmer_B1.c: 526: DimmerPointSelect(dimmer);
 20396  20E2  0823               	movf	(setDimmer_PFERROR@dimmer),w
 20397  20E3  31A0  2025  31A0   	fcall	_DimmerPointSelect
 20398                           	line	527
 20399                           	
 20400  20E6                     l23479:	
 20401                           ;Dimmer_B1.c: 527: Dimmer->PFERROR=command;
 20402  20E6  0021               	movlb 1	; select bank1
 20403  20E7  083A               	movf	(_Dimmer)^080h,w
 20404  20E8  0086               	movwf	fsr1l
 20405  20E9  0187               	clrf fsr1h	
 20406                           	
 20407  20EA  0020               	movlb 0	; select bank0
 20408  20EB  0822               	movf	(setDimmer_PFERROR@command),w
 20409  20EC  1101               	bcf	indf1,2
 20410  20ED  1D03               	skipz
 20411  20EE  1501               	bsf	indf1,2
 20412                           	line	528
 20413                           	
 20414  20EF                     l4809:	
 20415  20EF  0008               	return
 20416                           	opt stack 0
 20417                           GLOBAL	__end_of_setDimmer_PFERROR
 20418  20F0                     	__end_of_setDimmer_PFERROR:
 20419 ;; =============== function _setDimmer_PFERROR ends ============
 20420                           
 20421                           	signat	_setDimmer_PFERROR,8312
 20422                           	global	_setDimmer_LoadERROR
 20423                           psect	text3309,local,class=CODE,delta=2
 20424                           global __ptext3309
 20425  20D0                     __ptext3309:
 20426                           
 20427 ;; *************** function _setDimmer_LoadERROR *****************
 20428 ;; Defined at:
 20429 ;;		line 520 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 20430 ;; Parameters:    Size  Location     Type
 20431 ;;  dimmer          1    wreg     unsigned char 
 20432 ;;  command         1    2[BANK0 ] unsigned char 
 20433 ;; Auto vars:     Size  Location     Type
 20434 ;;  dimmer          1    3[BANK0 ] unsigned char 
 20435 ;; Return value:  Size  Location     Type
 20436 ;;		None               void
 20437 ;; Registers used:
 20438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20439 ;; Tracked objects:
 20440 ;;		On entry : 0/0
 20441 ;;		On exit  : 0/0
 20442 ;;		Unchanged: 0/0
 20443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20444 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20448 ;;Total ram usage:        2 bytes
 20449 ;; Hardware stack levels used:    1
 20450 ;; Hardware stack levels required when called:    5
 20451 ;; This function calls:
 20452 ;;		_DimmerPointSelect
 20453 ;; This function is called by:
 20454 ;;		_setLoad_ERROR
 20455 ;; This function uses a non-reentrant model
 20456 ;;
 20457                           psect	text3309
 20458                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 20459                           	line	520
 20460                           	global	__size_of_setDimmer_LoadERROR
 20461  0010                     	__size_of_setDimmer_LoadERROR	equ	__end_of_setDimmer_LoadERROR-_setDimmer_LoadERROR
 20462                           	
 20463  20D0                     _setDimmer_LoadERROR:	
 20464                           	opt	stack 7
 20465                           ; Regs used in _setDimmer_LoadERROR: [wreg+fsr1l-status,0+pclath+cstack]
 20466                           ;setDimmer_LoadERROR@dimmer stored from wreg
 20467  20D0  0020               	movlb 0	; select bank0
 20468  20D1  00A3               	movwf	(setDimmer_LoadERROR@dimmer)
 20469                           	line	521
 20470                           	
 20471  20D2                     l23473:	
 20472                           ;Dimmer_B1.c: 521: DimmerPointSelect(dimmer);
 20473  20D2  0823               	movf	(setDimmer_LoadERROR@dimmer),w
 20474  20D3  31A0  2025  31A0   	fcall	_DimmerPointSelect
 20475                           	line	522
 20476                           	
 20477  20D6                     l23475:	
 20478                           ;Dimmer_B1.c: 522: Dimmer->LoadERROR=command;
 20479  20D6  0021               	movlb 1	; select bank1
 20480  20D7  083A               	movf	(_Dimmer)^080h,w
 20481  20D8  0086               	movwf	fsr1l
 20482  20D9  0187               	clrf fsr1h	
 20483                           	
 20484  20DA  0020               	movlb 0	; select bank0
 20485  20DB  0822               	movf	(setDimmer_LoadERROR@command),w
 20486  20DC  1001               	bcf	indf1,0
 20487  20DD  1D03               	skipz
 20488  20DE  1401               	bsf	indf1,0
 20489                           	line	523
 20490                           	
 20491  20DF                     l4806:	
 20492  20DF  0008               	return
 20493                           	opt stack 0
 20494                           GLOBAL	__end_of_setDimmer_LoadERROR
 20495  20E0                     	__end_of_setDimmer_LoadERROR:
 20496 ;; =============== function _setDimmer_LoadERROR ends ============
 20497                           
 20498                           	signat	_setDimmer_LoadERROR,8312
 20499                           	global	_setDimmer_TempERROR
 20500                           psect	text3310,local,class=CODE,delta=2
 20501                           global __ptext3310
 20502  20C0                     __ptext3310:
 20503                           
 20504 ;; *************** function _setDimmer_TempERROR *****************
 20505 ;; Defined at:
 20506 ;;		line 515 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 20507 ;; Parameters:    Size  Location     Type
 20508 ;;  dimmer          1    wreg     unsigned char 
 20509 ;;  command         1    2[BANK0 ] unsigned char 
 20510 ;; Auto vars:     Size  Location     Type
 20511 ;;  dimmer          1    3[BANK0 ] unsigned char 
 20512 ;; Return value:  Size  Location     Type
 20513 ;;		None               void
 20514 ;; Registers used:
 20515 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20521 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20525 ;;Total ram usage:        2 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:    5
 20528 ;; This function calls:
 20529 ;;		_DimmerPointSelect
 20530 ;; This function is called by:
 20531 ;;		_setOverTemp_ERROR
 20532 ;; This function uses a non-reentrant model
 20533 ;;
 20534                           psect	text3310
 20535                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 20536                           	line	515
 20537                           	global	__size_of_setDimmer_TempERROR
 20538  0010                     	__size_of_setDimmer_TempERROR	equ	__end_of_setDimmer_TempERROR-_setDimmer_TempERROR
 20539                           	
 20540  20C0                     _setDimmer_TempERROR:	
 20541                           	opt	stack 7
 20542                           ; Regs used in _setDimmer_TempERROR: [wreg+fsr1l-status,0+pclath+cstack]
 20543                           ;setDimmer_TempERROR@dimmer stored from wreg
 20544  20C0  0020               	movlb 0	; select bank0
 20545  20C1  00A3               	movwf	(setDimmer_TempERROR@dimmer)
 20546                           	line	516
 20547                           	
 20548  20C2                     l23469:	
 20549                           ;Dimmer_B1.c: 516: DimmerPointSelect(dimmer);
 20550  20C2  0823               	movf	(setDimmer_TempERROR@dimmer),w
 20551  20C3  31A0  2025  31A0   	fcall	_DimmerPointSelect
 20552                           	line	517
 20553                           	
 20554  20C6                     l23471:	
 20555                           ;Dimmer_B1.c: 517: Dimmer->TempERROR=command;
 20556  20C6  0021               	movlb 1	; select bank1
 20557  20C7  083A               	movf	(_Dimmer)^080h,w
 20558  20C8  0086               	movwf	fsr1l
 20559  20C9  0187               	clrf fsr1h	
 20560                           	
 20561  20CA  0020               	movlb 0	; select bank0
 20562  20CB  0822               	movf	(setDimmer_TempERROR@command),w
 20563  20CC  1081               	bcf	indf1,1
 20564  20CD  1D03               	skipz
 20565  20CE  1481               	bsf	indf1,1
 20566                           	line	518
 20567                           	
 20568  20CF                     l4803:	
 20569  20CF  0008               	return
 20570                           	opt stack 0
 20571                           GLOBAL	__end_of_setDimmer_TempERROR
 20572  20D0                     	__end_of_setDimmer_TempERROR:
 20573 ;; =============== function _setDimmer_TempERROR ends ============
 20574                           
 20575                           	signat	_setDimmer_TempERROR,8312
 20576                           	global	_setDimmerLights_TriggerAdj
 20577                           psect	text3311,local,class=CODE,delta=2
 20578                           global __ptext3311
 20579  21A7                     __ptext3311:
 20580                           
 20581 ;; *************** function _setDimmerLights_TriggerAdj *****************
 20582 ;; Defined at:
 20583 ;;		line 465 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 20584 ;; Parameters:    Size  Location     Type
 20585 ;;  lights          1    wreg     unsigned char 
 20586 ;;  command         1    2[BANK0 ] unsigned char 
 20587 ;; Auto vars:     Size  Location     Type
 20588 ;;  lights          1    3[BANK0 ] unsigned char 
 20589 ;; Return value:  Size  Location     Type
 20590 ;;		None               void
 20591 ;; Registers used:
 20592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20593 ;; Tracked objects:
 20594 ;;		On entry : 0/0
 20595 ;;		On exit  : 0/0
 20596 ;;		Unchanged: 0/0
 20597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20598 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20599 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20602 ;;Total ram usage:        2 bytes
 20603 ;; Hardware stack levels used:    1
 20604 ;; Hardware stack levels required when called:    5
 20605 ;; This function calls:
 20606 ;;		_DimmerLightsPointSelect
 20607 ;; This function is called by:
 20608 ;;		_Sw_OffFunc
 20609 ;;		_Sw_AdjFunc
 20610 ;; This function uses a non-reentrant model
 20611 ;;
 20612                           psect	text3311
 20613                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 20614                           	line	465
 20615                           	global	__size_of_setDimmerLights_TriggerAdj
 20616  0011                     	__size_of_setDimmerLights_TriggerAdj	equ	__end_of_setDimmerLights_TriggerAdj-_setDimmer
                                 Lights_TriggerAdj
 20617                           	
 20618  21A7                     _setDimmerLights_TriggerAdj:	
 20619                           	opt	stack 7
 20620                           ; Regs used in _setDimmerLights_TriggerAdj: [wreg+fsr1l-status,0+pclath+cstack]
 20621                           ;setDimmerLights_TriggerAdj@lights stored from wreg
 20622  21A7  0020               	movlb 0	; select bank0
 20623  21A8  00A3               	movwf	(setDimmerLights_TriggerAdj@lights)
 20624                           	line	466
 20625                           	
 20626  21A9                     l23465:	
 20627                           ;Dimmer_B1.c: 466: DimmerLightsPointSelect(lights);
 20628  21A9  0823               	movf	(setDimmerLights_TriggerAdj@lights),w
 20629  21AA  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 20630                           	line	467
 20631                           	
 20632  21AD                     l23467:	
 20633                           ;Dimmer_B1.c: 467: DimmerLights->TriggerAdj=command;
 20634  21AD  0020               	movlb 0	; select bank0
 20635  21AE  086D               	movf	(_DimmerLights),w
 20636  21AF  3E09               	addlw	09h
 20637  21B0  0086               	movwf	fsr1l
 20638  21B1  3001               	movlw 1	; select bank2/3
 20639  21B2  0087               	movwf fsr1h	
 20640                           	
 20641  21B3  0822               	movf	(setDimmerLights_TriggerAdj@command),w
 20642  21B4  1181               	bcf	indf1,3
 20643  21B5  1D03               	skipz
 20644  21B6  1581               	bsf	indf1,3
 20645                           	line	468
 20646                           	
 20647  21B7                     l4778:	
 20648  21B7  0008               	return
 20649                           	opt stack 0
 20650                           GLOBAL	__end_of_setDimmerLights_TriggerAdj
 20651  21B8                     	__end_of_setDimmerLights_TriggerAdj:
 20652 ;; =============== function _setDimmerLights_TriggerAdj ends ============
 20653                           
 20654                           	signat	_setDimmerLights_TriggerAdj,8312
 20655                           	global	_setDimmerLights_AdjGo
 20656                           psect	text3312,local,class=CODE,delta=2
 20657                           global __ptext3312
 20658  2196                     __ptext3312:
 20659                           
 20660 ;; *************** function _setDimmerLights_AdjGo *****************
 20661 ;; Defined at:
 20662 ;;		line 455 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 20663 ;; Parameters:    Size  Location     Type
 20664 ;;  lights          1    wreg     unsigned char 
 20665 ;;  command         1    2[BANK0 ] unsigned char 
 20666 ;; Auto vars:     Size  Location     Type
 20667 ;;  lights          1    3[BANK0 ] unsigned char 
 20668 ;; Return value:  Size  Location     Type
 20669 ;;		None               void
 20670 ;; Registers used:
 20671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20672 ;; Tracked objects:
 20673 ;;		On entry : 0/0
 20674 ;;		On exit  : 0/0
 20675 ;;		Unchanged: 0/0
 20676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20677 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20681 ;;Total ram usage:        2 bytes
 20682 ;; Hardware stack levels used:    1
 20683 ;; Hardware stack levels required when called:    5
 20684 ;; This function calls:
 20685 ;;		_DimmerLightsPointSelect
 20686 ;; This function is called by:
 20687 ;;		_Sw_OffFunc
 20688 ;;		_Sw_AdjFunc
 20689 ;; This function uses a non-reentrant model
 20690 ;;
 20691                           psect	text3312
 20692                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 20693                           	line	455
 20694                           	global	__size_of_setDimmerLights_AdjGo
 20695  0011                     	__size_of_setDimmerLights_AdjGo	equ	__end_of_setDimmerLights_AdjGo-_setDimmerLights_Adj
                                 Go
 20696                           	
 20697  2196                     _setDimmerLights_AdjGo:	
 20698                           	opt	stack 7
 20699                           ; Regs used in _setDimmerLights_AdjGo: [wreg+fsr1l-status,0+pclath+cstack]
 20700                           ;setDimmerLights_AdjGo@lights stored from wreg
 20701  2196  0020               	movlb 0	; select bank0
 20702  2197  00A3               	movwf	(setDimmerLights_AdjGo@lights)
 20703                           	line	456
 20704                           	
 20705  2198                     l23461:	
 20706                           ;Dimmer_B1.c: 456: DimmerLightsPointSelect(lights);
 20707  2198  0823               	movf	(setDimmerLights_AdjGo@lights),w
 20708  2199  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 20709                           	line	457
 20710                           	
 20711  219C                     l23463:	
 20712                           ;Dimmer_B1.c: 457: DimmerLights->AdjGo=command;
 20713  219C  0020               	movlb 0	; select bank0
 20714  219D  086D               	movf	(_DimmerLights),w
 20715  219E  3E09               	addlw	09h
 20716  219F  0086               	movwf	fsr1l
 20717  21A0  3001               	movlw 1	; select bank2/3
 20718  21A1  0087               	movwf fsr1h	
 20719                           	
 20720  21A2  0822               	movf	(setDimmerLights_AdjGo@command),w
 20721  21A3  1101               	bcf	indf1,2
 20722  21A4  1D03               	skipz
 20723  21A5  1501               	bsf	indf1,2
 20724                           	line	458
 20725                           	
 20726  21A6                     l4772:	
 20727  21A6  0008               	return
 20728                           	opt stack 0
 20729                           GLOBAL	__end_of_setDimmerLights_AdjGo
 20730  21A7                     	__end_of_setDimmerLights_AdjGo:
 20731 ;; =============== function _setDimmerLights_AdjGo ends ============
 20732                           
 20733                           	signat	_setDimmerLights_AdjGo,8312
 20734                           	global	_setLoad_LightsStatus
 20735                           psect	text3313,local,class=CODE,delta=2
 20736                           global __ptext3313
 20737  26D9                     __ptext3313:
 20738                           
 20739 ;; *************** function _setLoad_LightsStatus *****************
 20740 ;; Defined at:
 20741 ;;		line 309 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 20742 ;; Parameters:    Size  Location     Type
 20743 ;;  load            1    wreg     unsigned char 
 20744 ;;  lights          1    2[BANK0 ] unsigned char 
 20745 ;;  command         1    3[BANK0 ] unsigned char 
 20746 ;; Auto vars:     Size  Location     Type
 20747 ;;  load            1    5[BANK0 ] unsigned char 
 20748 ;; Return value:  Size  Location     Type
 20749 ;;		None               void
 20750 ;; Registers used:
 20751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20752 ;; Tracked objects:
 20753 ;;		On entry : 0/0
 20754 ;;		On exit  : 0/0
 20755 ;;		Unchanged: 0/0
 20756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 20761 ;;Total ram usage:        4 bytes
 20762 ;; Hardware stack levels used:    1
 20763 ;; Hardware stack levels required when called:    5
 20764 ;; This function calls:
 20765 ;;		_LoadPointSelect
 20766 ;; This function is called by:
 20767 ;;		_setDimmerLights
 20768 ;; This function uses a non-reentrant model
 20769 ;;
 20770                           psect	text3313
 20771                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 20772                           	line	309
 20773                           	global	__size_of_setLoad_LightsStatus
 20774  0038                     	__size_of_setLoad_LightsStatus	equ	__end_of_setLoad_LightsStatus-_setLoad_LightsStatus
 20775                           	
 20776  26D9                     _setLoad_LightsStatus:	
 20777                           	opt	stack 5
 20778                           ; Regs used in _setLoad_LightsStatus: [wreg+fsr1l-status,0+pclath+cstack]
 20779                           ;setLoad_LightsStatus@load stored from wreg
 20780  26D9  0020               	movlb 0	; select bank0
 20781  26DA  00A5               	movwf	(setLoad_LightsStatus@load)
 20782                           	line	310
 20783                           	
 20784  26DB                     l23447:	
 20785                           ;OverLoad_B1.c: 310: LoadPointSelect(load);
 20786  26DB  0825               	movf	(setLoad_LightsStatus@load),w
 20787  26DC  31AF  27BA  31A6   	fcall	_LoadPointSelect
 20788                           	line	311
 20789                           	
 20790  26DF                     l23449:	
 20791                           ;OverLoad_B1.c: 311: if(lights == 1)
 20792  26DF  0020               	movlb 0	; select bank0
 20793  26E0  0822               	movf	(setLoad_LightsStatus@lights),w
 20794  26E1  3A01               	xorlw	01h&0ffh
 20795  26E2  1D03               	skipz
 20796  26E3  2EE5               	goto	u6861
 20797  26E4  2EE6               	goto	u6860
 20798  26E5                     u6861:
 20799  26E5  2EF0               	goto	l23453
 20800  26E6                     u6860:
 20801                           	line	313
 20802                           	
 20803  26E6                     l23451:	
 20804                           ;OverLoad_B1.c: 312: {
 20805                           ;OverLoad_B1.c: 313: Load->Lights1Status=command;
 20806  26E6  0823               	movf	(setLoad_LightsStatus@command),w
 20807  26E7  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 20808  26E8  086E               	movf	(_Load),w
 20809  26E9  3E43               	addlw	043h
 20810  26EA  0086               	movwf	fsr1l
 20811  26EB  3002               	movlw 2	; select bank4/5
 20812  26EC  0087               	movwf fsr1h	
 20813                           	
 20814  26ED  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 20815  26EE  0081               	movwf	indf1
 20816  26EF  2EF0               	goto	l23453
 20817                           	line	314
 20818                           	
 20819  26F0                     l9586:	
 20820                           	line	315
 20821                           	
 20822  26F0                     l23453:	
 20823                           ;OverLoad_B1.c: 314: }
 20824                           ;OverLoad_B1.c: 315: if(lights == 2)
 20825  26F0  0822               	movf	(setLoad_LightsStatus@lights),w
 20826  26F1  3A02               	xorlw	02h&0ffh
 20827  26F2  1D03               	skipz
 20828  26F3  2EF5               	goto	u6871
 20829  26F4  2EF6               	goto	u6870
 20830  26F5                     u6871:
 20831  26F5  2F00               	goto	l23457
 20832  26F6                     u6870:
 20833                           	line	317
 20834                           	
 20835  26F6                     l23455:	
 20836                           ;OverLoad_B1.c: 316: {
 20837                           ;OverLoad_B1.c: 317: Load->Lights2Status=command;
 20838  26F6  0823               	movf	(setLoad_LightsStatus@command),w
 20839  26F7  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 20840  26F8  086E               	movf	(_Load),w
 20841  26F9  3E44               	addlw	044h
 20842  26FA  0086               	movwf	fsr1l
 20843  26FB  3002               	movlw 2	; select bank4/5
 20844  26FC  0087               	movwf fsr1h	
 20845                           	
 20846  26FD  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 20847  26FE  0081               	movwf	indf1
 20848  26FF  2F00               	goto	l23457
 20849                           	line	318
 20850                           	
 20851  2700                     l9587:	
 20852                           	line	319
 20853                           	
 20854  2700                     l23457:	
 20855                           ;OverLoad_B1.c: 318: }
 20856                           ;OverLoad_B1.c: 319: if(lights == 3)
 20857  2700  0822               	movf	(setLoad_LightsStatus@lights),w
 20858  2701  3A03               	xorlw	03h&0ffh
 20859  2702  1D03               	skipz
 20860  2703  2F05               	goto	u6881
 20861  2704  2F06               	goto	u6880
 20862  2705                     u6881:
 20863  2705  2F10               	goto	l9589
 20864  2706                     u6880:
 20865                           	line	321
 20866                           	
 20867  2706                     l23459:	
 20868                           ;OverLoad_B1.c: 320: {
 20869                           ;OverLoad_B1.c: 321: Load->Lights3Status=command;
 20870  2706  0823               	movf	(setLoad_LightsStatus@command),w
 20871  2707  00A4               	movwf	(??_setLoad_LightsStatus+0)+0
 20872  2708  086E               	movf	(_Load),w
 20873  2709  3E45               	addlw	045h
 20874  270A  0086               	movwf	fsr1l
 20875  270B  3002               	movlw 2	; select bank4/5
 20876  270C  0087               	movwf fsr1h	
 20877                           	
 20878  270D  0824               	movf	(??_setLoad_LightsStatus+0)+0,w
 20879  270E  0081               	movwf	indf1
 20880  270F  2F10               	goto	l9589
 20881                           	line	322
 20882                           	
 20883  2710                     l9588:	
 20884                           	line	323
 20885                           	
 20886  2710                     l9589:	
 20887  2710  0008               	return
 20888                           	opt stack 0
 20889                           GLOBAL	__end_of_setLoad_LightsStatus
 20890  2711                     	__end_of_setLoad_LightsStatus:
 20891 ;; =============== function _setLoad_LightsStatus ends ============
 20892                           
 20893                           	signat	_setLoad_LightsStatus,12408
 20894                           	global	_setLoad_StatusOn
 20895                           psect	text3314,local,class=CODE,delta=2
 20896                           global __ptext3314
 20897  2185                     __ptext3314:
 20898                           
 20899 ;; *************** function _setLoad_StatusOn *****************
 20900 ;; Defined at:
 20901 ;;		line 342 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 20902 ;; Parameters:    Size  Location     Type
 20903 ;;  load            1    wreg     unsigned char 
 20904 ;;  command         1    2[BANK0 ] unsigned char 
 20905 ;; Auto vars:     Size  Location     Type
 20906 ;;  load            1    3[BANK0 ] unsigned char 
 20907 ;; Return value:  Size  Location     Type
 20908 ;;		None               void
 20909 ;; Registers used:
 20910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20911 ;; Tracked objects:
 20912 ;;		On entry : 0/0
 20913 ;;		On exit  : 0/0
 20914 ;;		Unchanged: 0/0
 20915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20916 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20920 ;;Total ram usage:        2 bytes
 20921 ;; Hardware stack levels used:    1
 20922 ;; Hardware stack levels required when called:    5
 20923 ;; This function calls:
 20924 ;;		_LoadPointSelect
 20925 ;; This function is called by:
 20926 ;;		_setDimmerLights
 20927 ;; This function uses a non-reentrant model
 20928 ;;
 20929                           psect	text3314
 20930                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 20931                           	line	342
 20932                           	global	__size_of_setLoad_StatusOn
 20933  0011                     	__size_of_setLoad_StatusOn	equ	__end_of_setLoad_StatusOn-_setLoad_StatusOn
 20934                           	
 20935  2185                     _setLoad_StatusOn:	
 20936                           	opt	stack 5
 20937                           ; Regs used in _setLoad_StatusOn: [wreg+fsr1l-status,0+pclath+cstack]
 20938                           ;setLoad_StatusOn@load stored from wreg
 20939  2185  0020               	movlb 0	; select bank0
 20940  2186  00A3               	movwf	(setLoad_StatusOn@load)
 20941                           	line	343
 20942                           	
 20943  2187                     l23443:	
 20944                           ;OverLoad_B1.c: 343: LoadPointSelect(load);
 20945  2187  0823               	movf	(setLoad_StatusOn@load),w
 20946  2188  31AF  27BA  31A1   	fcall	_LoadPointSelect
 20947                           	line	344
 20948                           	
 20949  218B                     l23445:	
 20950                           ;OverLoad_B1.c: 344: Load->StatusOn=command;
 20951  218B  0020               	movlb 0	; select bank0
 20952  218C  086E               	movf	(_Load),w
 20953  218D  3E46               	addlw	046h
 20954  218E  0086               	movwf	fsr1l
 20955  218F  3002               	movlw 2	; select bank4/5
 20956  2190  0087               	movwf fsr1h	
 20957                           	
 20958  2191  0822               	movf	(setLoad_StatusOn@command),w
 20959  2192  1001               	bcf	indf1,0
 20960  2193  1D03               	skipz
 20961  2194  1401               	bsf	indf1,0
 20962                           	line	345
 20963                           	
 20964  2195                     l9601:	
 20965  2195  0008               	return
 20966                           	opt stack 0
 20967                           GLOBAL	__end_of_setLoad_StatusOn
 20968  2196                     	__end_of_setLoad_StatusOn:
 20969 ;; =============== function _setLoad_StatusOn ends ============
 20970                           
 20971                           	signat	_setLoad_StatusOn,8312
 20972                           	global	_setLED
 20973                           psect	text3315,local,class=CODE,delta=2
 20974                           global __ptext3315
 20975  13DD                     __ptext3315:
 20976                           
 20977 ;; *************** function _setLED *****************
 20978 ;; Defined at:
 20979 ;;		line 75 in file "G:\Program\PIC\Source_File\LED_B1.c"
 20980 ;; Parameters:    Size  Location     Type
 20981 ;;  led             1    wreg     unsigned char 
 20982 ;;  command         1    2[BANK0 ] unsigned char 
 20983 ;; Auto vars:     Size  Location     Type
 20984 ;;  led             1    3[BANK0 ] unsigned char 
 20985 ;; Return value:  Size  Location     Type
 20986 ;;		None               void
 20987 ;; Registers used:
 20988 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20989 ;; Tracked objects:
 20990 ;;		On entry : 0/0
 20991 ;;		On exit  : 0/0
 20992 ;;		Unchanged: 0/0
 20993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 20994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 20996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 20997 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 20998 ;;Total ram usage:        2 bytes
 20999 ;; Hardware stack levels used:    1
 21000 ;; Hardware stack levels required when called:    5
 21001 ;; This function calls:
 21002 ;;		_LedPointSelect
 21003 ;; This function is called by:
 21004 ;;		_setDimmerLights_ERROR
 21005 ;;		_setDimmerLights
 21006 ;;		_setLED_Initialization
 21007 ;;		_setLoad_ERROR
 21008 ;;		_setOverTemp_ERROR
 21009 ;;		_setPowerFault_ERROR
 21010 ;;		_setSw_Initialization
 21011 ;; This function uses a non-reentrant model
 21012 ;;
 21013                           psect	text3315
 21014                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 21015                           	line	75
 21016                           	global	__size_of_setLED
 21017  0087                     	__size_of_setLED	equ	__end_of_setLED-_setLED
 21018                           	
 21019  13DD                     _setLED:	
 21020                           	opt	stack 5
 21021                           ; Regs used in _setLED: [wreg+fsr1l-status,0+pclath+cstack]
 21022                           ;setLED@led stored from wreg
 21023  13DD  0020               	movlb 0	; select bank0
 21024  13DE  00A3               	movwf	(setLED@led)
 21025                           	line	76
 21026                           	
 21027  13DF                     l23393:	
 21028                           ;LED_B1.c: 76: LedPointSelect(led);
 21029  13DF  0823               	movf	(setLED@led),w
 21030  13E0  31A4  24B4  3193   	fcall	_LedPointSelect
 21031                           	line	77
 21032                           	
 21033  13E3                     l23395:	
 21034                           ;LED_B1.c: 77: if(command == 0)
 21035  13E3  0020               	movlb 0	; select bank0
 21036  13E4  08A2               	movf	(setLED@command),f
 21037  13E5  1D03               	skipz
 21038  13E6  2BE8               	goto	u6731
 21039  13E7  2BE9               	goto	u6730
 21040  13E8                     u6731:
 21041  13E8  2C04               	goto	l23409
 21042  13E9                     u6730:
 21043                           	line	80
 21044                           	
 21045  13E9                     l23397:	
 21046                           ;LED_B1.c: 78: {
 21047                           ;LED_B1.c: 80: if(led == 1)
 21048  13E9  0823               	movf	(setLED@led),w
 21049  13EA  3A01               	xorlw	01h&0ffh
 21050  13EB  1D03               	skipz
 21051  13EC  2BEE               	goto	u6741
 21052  13ED  2BEF               	goto	u6740
 21053  13EE                     u6741:
 21054  13EE  2BF1               	goto	l23401
 21055  13EF                     u6740:
 21056                           	line	85
 21057                           	
 21058  13EF                     l23399:	
 21059                           ;LED_B1.c: 81: {
 21060                           ;LED_B1.c: 85: RC7=1;
 21061  13EF  178E               	bsf	(119/8),(119)&7
 21062                           	line	87
 21063                           ;LED_B1.c: 87: }
 21064  13F0  2C63               	goto	l5968
 21065                           	line	90
 21066                           	
 21067  13F1                     l5947:	
 21068                           	
 21069  13F1                     l23401:	
 21070                           ;LED_B1.c: 90: else if(led == 2)
 21071  13F1  0823               	movf	(setLED@led),w
 21072  13F2  3A02               	xorlw	02h&0ffh
 21073  13F3  1D03               	skipz
 21074  13F4  2BF6               	goto	u6751
 21075  13F5  2BF7               	goto	u6750
 21076  13F6                     u6751:
 21077  13F6  2BF9               	goto	l23405
 21078  13F7                     u6750:
 21079                           	line	95
 21080                           	
 21081  13F7                     l23403:	
 21082                           ;LED_B1.c: 91: {
 21083                           ;LED_B1.c: 95: RA3=1;
 21084  13F7  158C               	bsf	(99/8),(99)&7
 21085                           	line	97
 21086                           ;LED_B1.c: 97: }
 21087  13F8  2C63               	goto	l5968
 21088                           	line	110
 21089                           	
 21090  13F9                     l5949:	
 21091                           	
 21092  13F9                     l23405:	
 21093                           ;LED_B1.c: 110: else if(led == 99)
 21094  13F9  0823               	movf	(setLED@led),w
 21095  13FA  3A63               	xorlw	063h&0ffh
 21096  13FB  1D03               	skipz
 21097  13FC  2BFE               	goto	u6761
 21098  13FD  2BFF               	goto	u6760
 21099  13FE                     u6761:
 21100  13FE  2C63               	goto	l5968
 21101  13FF                     u6760:
 21102                           	line	115
 21103                           	
 21104  13FF                     l23407:	
 21105                           ;LED_B1.c: 111: {
 21106                           ;LED_B1.c: 115: RB5=1;
 21107  13FF  168D               	bsf	(109/8),(109)&7
 21108  1400  2C63               	goto	l5968
 21109                           	line	117
 21110                           	
 21111  1401                     l5951:	
 21112  1401  2C63               	goto	l5968
 21113                           	line	119
 21114                           	
 21115  1402                     l5950:	
 21116  1402  2C63               	goto	l5968
 21117                           	
 21118  1403                     l5948:	
 21119                           ;LED_B1.c: 117: }
 21120                           ;LED_B1.c: 119: }
 21121  1403  2C63               	goto	l5968
 21122                           	line	120
 21123                           	
 21124  1404                     l5946:	
 21125                           	
 21126  1404                     l23409:	
 21127                           ;LED_B1.c: 120: else if(command == 1)
 21128  1404  0822               	movf	(setLED@command),w
 21129  1405  3A01               	xorlw	01h&0ffh
 21130  1406  1D03               	skipz
 21131  1407  2C09               	goto	u6771
 21132  1408  2C0A               	goto	u6770
 21133  1409                     u6771:
 21134  1409  2C25               	goto	l23423
 21135  140A                     u6770:
 21136                           	line	123
 21137                           	
 21138  140A                     l23411:	
 21139                           ;LED_B1.c: 121: {
 21140                           ;LED_B1.c: 123: if(led == 1)
 21141  140A  0823               	movf	(setLED@led),w
 21142  140B  3A01               	xorlw	01h&0ffh
 21143  140C  1D03               	skipz
 21144  140D  2C0F               	goto	u6781
 21145  140E  2C10               	goto	u6780
 21146  140F                     u6781:
 21147  140F  2C12               	goto	l23415
 21148  1410                     u6780:
 21149                           	line	128
 21150                           	
 21151  1410                     l23413:	
 21152                           ;LED_B1.c: 124: {
 21153                           ;LED_B1.c: 128: RC7=0;
 21154  1410  138E               	bcf	(119/8),(119)&7
 21155                           	line	130
 21156                           ;LED_B1.c: 130: }
 21157  1411  2C63               	goto	l5968
 21158                           	line	133
 21159                           	
 21160  1412                     l5954:	
 21161                           	
 21162  1412                     l23415:	
 21163                           ;LED_B1.c: 133: else if(led == 2)
 21164  1412  0823               	movf	(setLED@led),w
 21165  1413  3A02               	xorlw	02h&0ffh
 21166  1414  1D03               	skipz
 21167  1415  2C17               	goto	u6791
 21168  1416  2C18               	goto	u6790
 21169  1417                     u6791:
 21170  1417  2C1A               	goto	l23419
 21171  1418                     u6790:
 21172                           	line	138
 21173                           	
 21174  1418                     l23417:	
 21175                           ;LED_B1.c: 134: {
 21176                           ;LED_B1.c: 138: RA3=0;
 21177  1418  118C               	bcf	(99/8),(99)&7
 21178                           	line	140
 21179                           ;LED_B1.c: 140: }
 21180  1419  2C63               	goto	l5968
 21181                           	line	153
 21182                           	
 21183  141A                     l5956:	
 21184                           	
 21185  141A                     l23419:	
 21186                           ;LED_B1.c: 153: else if(led == 99)
 21187  141A  0823               	movf	(setLED@led),w
 21188  141B  3A63               	xorlw	063h&0ffh
 21189  141C  1D03               	skipz
 21190  141D  2C1F               	goto	u6801
 21191  141E  2C20               	goto	u6800
 21192  141F                     u6801:
 21193  141F  2C63               	goto	l5968
 21194  1420                     u6800:
 21195                           	line	158
 21196                           	
 21197  1420                     l23421:	
 21198                           ;LED_B1.c: 154: {
 21199                           ;LED_B1.c: 158: RB5=0;
 21200  1420  128D               	bcf	(109/8),(109)&7
 21201  1421  2C63               	goto	l5968
 21202                           	line	160
 21203                           	
 21204  1422                     l5958:	
 21205  1422  2C63               	goto	l5968
 21206                           	line	162
 21207                           	
 21208  1423                     l5957:	
 21209  1423  2C63               	goto	l5968
 21210                           	
 21211  1424                     l5955:	
 21212                           ;LED_B1.c: 160: }
 21213                           ;LED_B1.c: 162: }
 21214  1424  2C63               	goto	l5968
 21215                           	line	163
 21216                           	
 21217  1425                     l5953:	
 21218                           	
 21219  1425                     l23423:	
 21220                           ;LED_B1.c: 163: else if(command == 10)
 21221  1425  0822               	movf	(setLED@command),w
 21222  1426  3A0A               	xorlw	0Ah&0ffh
 21223  1427  1D03               	skipz
 21224  1428  2C2A               	goto	u6811
 21225  1429  2C2B               	goto	u6810
 21226  142A                     u6811:
 21227  142A  2C54               	goto	l23439
 21228  142B                     u6810:
 21229                           	line	165
 21230                           	
 21231  142B                     l23425:	
 21232                           ;LED_B1.c: 164: {
 21233                           ;LED_B1.c: 165: LED->GO=0;
 21234  142B  0021               	movlb 1	; select bank1
 21235  142C  083C               	movf	(_LED)^080h,w
 21236  142D  0086               	movwf	fsr1l
 21237  142E  0187               	clrf fsr1h	
 21238                           	
 21239  142F  1081               	bcf	indf1,1
 21240                           	line	166
 21241                           ;LED_B1.c: 166: LED->Time=0;
 21242  1430  083C               	movf	(_LED)^080h,w
 21243  1431  3E01               	addlw	01h
 21244  1432  0086               	movwf	fsr1l
 21245  1433  0187               	clrf fsr1h	
 21246                           	
 21247  1434  3000               	movlw	low(0)
 21248  1435  3FC0               	movwi	[0]fsr1
 21249  1436  3000               	movlw	high(0)
 21250  1437  3FC1               	movwi	[1]fsr1
 21251                           	line	168
 21252                           	
 21253  1438                     l23427:	
 21254                           ;LED_B1.c: 168: if(led == 1)
 21255  1438  0020               	movlb 0	; select bank0
 21256  1439  0823               	movf	(setLED@led),w
 21257  143A  3A01               	xorlw	01h&0ffh
 21258  143B  1D03               	skipz
 21259  143C  2C3E               	goto	u6821
 21260  143D  2C3F               	goto	u6820
 21261  143E                     u6821:
 21262  143E  2C41               	goto	l23431
 21263  143F                     u6820:
 21264                           	line	173
 21265                           	
 21266  143F                     l23429:	
 21267                           ;LED_B1.c: 169: {
 21268                           ;LED_B1.c: 173: RC7=1;
 21269  143F  178E               	bsf	(119/8),(119)&7
 21270                           	line	175
 21271                           ;LED_B1.c: 175: }
 21272  1440  2C63               	goto	l5968
 21273                           	line	178
 21274                           	
 21275  1441                     l5961:	
 21276                           	
 21277  1441                     l23431:	
 21278                           ;LED_B1.c: 178: else if(led == 2)
 21279  1441  0823               	movf	(setLED@led),w
 21280  1442  3A02               	xorlw	02h&0ffh
 21281  1443  1D03               	skipz
 21282  1444  2C46               	goto	u6831
 21283  1445  2C47               	goto	u6830
 21284  1446                     u6831:
 21285  1446  2C49               	goto	l23435
 21286  1447                     u6830:
 21287                           	line	183
 21288                           	
 21289  1447                     l23433:	
 21290                           ;LED_B1.c: 179: {
 21291                           ;LED_B1.c: 183: RA3=1;
 21292  1447  158C               	bsf	(99/8),(99)&7
 21293                           	line	185
 21294                           ;LED_B1.c: 185: }
 21295  1448  2C63               	goto	l5968
 21296                           	line	198
 21297                           	
 21298  1449                     l5963:	
 21299                           	
 21300  1449                     l23435:	
 21301                           ;LED_B1.c: 198: else if(led == 99)
 21302  1449  0823               	movf	(setLED@led),w
 21303  144A  3A63               	xorlw	063h&0ffh
 21304  144B  1D03               	skipz
 21305  144C  2C4E               	goto	u6841
 21306  144D  2C4F               	goto	u6840
 21307  144E                     u6841:
 21308  144E  2C63               	goto	l5968
 21309  144F                     u6840:
 21310                           	line	203
 21311                           	
 21312  144F                     l23437:	
 21313                           ;LED_B1.c: 199: {
 21314                           ;LED_B1.c: 203: RB5=1;
 21315  144F  168D               	bsf	(109/8),(109)&7
 21316  1450  2C63               	goto	l5968
 21317                           	line	205
 21318                           	
 21319  1451                     l5965:	
 21320  1451  2C63               	goto	l5968
 21321                           	line	207
 21322                           	
 21323  1452                     l5964:	
 21324  1452  2C63               	goto	l5968
 21325                           	
 21326  1453                     l5962:	
 21327                           ;LED_B1.c: 205: }
 21328                           ;LED_B1.c: 207: }
 21329  1453  2C63               	goto	l5968
 21330                           	line	208
 21331                           	
 21332  1454                     l5960:	
 21333                           	
 21334  1454                     l23439:	
 21335                           ;LED_B1.c: 208: else if(command == 11)
 21336  1454  0822               	movf	(setLED@command),w
 21337  1455  3A0B               	xorlw	0Bh&0ffh
 21338  1456  1D03               	skipz
 21339  1457  2C59               	goto	u6851
 21340  1458  2C5A               	goto	u6850
 21341  1459                     u6851:
 21342  1459  2C63               	goto	l5968
 21343  145A                     u6850:
 21344                           	line	210
 21345                           	
 21346  145A                     l23441:	
 21347                           ;LED_B1.c: 209: {
 21348                           ;LED_B1.c: 210: LED->GO=1;
 21349  145A  0021               	movlb 1	; select bank1
 21350  145B  083C               	movf	(_LED)^080h,w
 21351  145C  0086               	movwf	fsr1l
 21352  145D  0187               	clrf fsr1h	
 21353                           	
 21354  145E  1481               	bsf	indf1,1
 21355  145F  2C63               	goto	l5968
 21356                           	line	211
 21357                           	
 21358  1460                     l5967:	
 21359  1460  2C63               	goto	l5968
 21360                           	line	212
 21361                           	
 21362  1461                     l5966:	
 21363  1461  2C63               	goto	l5968
 21364                           	
 21365  1462                     l5959:	
 21366  1462  2C63               	goto	l5968
 21367                           	
 21368  1463                     l5952:	
 21369                           	
 21370  1463                     l5968:	
 21371  1463  0008               	return
 21372                           	opt stack 0
 21373                           GLOBAL	__end_of_setLED
 21374  1464                     	__end_of_setLED:
 21375 ;; =============== function _setLED ends ============
 21376                           
 21377                           	signat	_setLED,8312
 21378                           	global	_setLoad_StatusOff
 21379                           psect	text3316,local,class=CODE,delta=2
 21380                           global __ptext3316
 21381  26A1                     __ptext3316:
 21382                           
 21383 ;; *************** function _setLoad_StatusOff *****************
 21384 ;; Defined at:
 21385 ;;		line 347 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 21386 ;; Parameters:    Size  Location     Type
 21387 ;;  load            1    wreg     unsigned char 
 21388 ;;  lights          1    2[BANK0 ] unsigned char 
 21389 ;;  command         1    3[BANK0 ] unsigned char 
 21390 ;; Auto vars:     Size  Location     Type
 21391 ;;  load            1    4[BANK0 ] unsigned char 
 21392 ;; Return value:  Size  Location     Type
 21393 ;;		None               void
 21394 ;; Registers used:
 21395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21396 ;; Tracked objects:
 21397 ;;		On entry : 0/0
 21398 ;;		On exit  : 0/0
 21399 ;;		Unchanged: 0/0
 21400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 21402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21404 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 21405 ;;Total ram usage:        3 bytes
 21406 ;; Hardware stack levels used:    1
 21407 ;; Hardware stack levels required when called:    5
 21408 ;; This function calls:
 21409 ;;		_LoadPointSelect
 21410 ;; This function is called by:
 21411 ;;		_setDimmerLights_ERROR
 21412 ;;		_setDimmerLights_Adj
 21413 ;; This function uses a non-reentrant model
 21414 ;;
 21415                           psect	text3316
 21416                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 21417                           	line	347
 21418                           	global	__size_of_setLoad_StatusOff
 21419  0038                     	__size_of_setLoad_StatusOff	equ	__end_of_setLoad_StatusOff-_setLoad_StatusOff
 21420                           	
 21421  26A1                     _setLoad_StatusOff:	
 21422                           	opt	stack 7
 21423                           ; Regs used in _setLoad_StatusOff: [wreg+fsr1l-status,0+pclath+cstack]
 21424                           ;setLoad_StatusOff@load stored from wreg
 21425  26A1  0020               	movlb 0	; select bank0
 21426  26A2  00A4               	movwf	(setLoad_StatusOff@load)
 21427                           	line	348
 21428                           	
 21429  26A3                     l23377:	
 21430                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 21431  26A3  0824               	movf	(setLoad_StatusOff@load),w
 21432  26A4  31AF  27BA  31A6   	fcall	_LoadPointSelect
 21433                           	line	349
 21434                           	
 21435  26A7                     l23379:	
 21436                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 21437  26A7  0020               	movlb 0	; select bank0
 21438  26A8  086E               	movf	(_Load),w
 21439  26A9  3E46               	addlw	046h
 21440  26AA  0086               	movwf	fsr1l
 21441  26AB  3002               	movlw 2	; select bank4/5
 21442  26AC  0087               	movwf fsr1h	
 21443                           	
 21444  26AD  0823               	movf	(setLoad_StatusOff@command),w
 21445  26AE  1081               	bcf	indf1,1
 21446  26AF  1D03               	skipz
 21447  26B0  1481               	bsf	indf1,1
 21448                           	line	351
 21449                           	
 21450  26B1                     l23381:	
 21451                           ;OverLoad_B1.c: 351: if(lights == 1)
 21452  26B1  0822               	movf	(setLoad_StatusOff@lights),w
 21453  26B2  3A01               	xorlw	01h&0ffh
 21454  26B3  1D03               	skipz
 21455  26B4  2EB6               	goto	u6701
 21456  26B5  2EB7               	goto	u6700
 21457  26B6                     u6701:
 21458  26B6  2EBE               	goto	l23385
 21459  26B7                     u6700:
 21460                           	line	353
 21461                           	
 21462  26B7                     l23383:	
 21463                           ;OverLoad_B1.c: 352: {
 21464                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 21465  26B7  086E               	movf	(_Load),w
 21466  26B8  3E43               	addlw	043h
 21467  26B9  0086               	movwf	fsr1l
 21468  26BA  3002               	movlw 2	; select bank4/5
 21469  26BB  0087               	movwf fsr1h	
 21470                           	
 21471  26BC  0181               	clrf	indf1
 21472  26BD  2EBE               	goto	l23385
 21473                           	line	354
 21474                           	
 21475  26BE                     l9604:	
 21476                           	line	355
 21477                           	
 21478  26BE                     l23385:	
 21479                           ;OverLoad_B1.c: 354: }
 21480                           ;OverLoad_B1.c: 355: if(lights == 2)
 21481  26BE  0822               	movf	(setLoad_StatusOff@lights),w
 21482  26BF  3A02               	xorlw	02h&0ffh
 21483  26C0  1D03               	skipz
 21484  26C1  2EC3               	goto	u6711
 21485  26C2  2EC4               	goto	u6710
 21486  26C3                     u6711:
 21487  26C3  2ECB               	goto	l23389
 21488  26C4                     u6710:
 21489                           	line	357
 21490                           	
 21491  26C4                     l23387:	
 21492                           ;OverLoad_B1.c: 356: {
 21493                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 21494  26C4  086E               	movf	(_Load),w
 21495  26C5  3E44               	addlw	044h
 21496  26C6  0086               	movwf	fsr1l
 21497  26C7  3002               	movlw 2	; select bank4/5
 21498  26C8  0087               	movwf fsr1h	
 21499                           	
 21500  26C9  0181               	clrf	indf1
 21501  26CA  2ECB               	goto	l23389
 21502                           	line	358
 21503                           	
 21504  26CB                     l9605:	
 21505                           	line	359
 21506                           	
 21507  26CB                     l23389:	
 21508                           ;OverLoad_B1.c: 358: }
 21509                           ;OverLoad_B1.c: 359: if(lights == 3)
 21510  26CB  0822               	movf	(setLoad_StatusOff@lights),w
 21511  26CC  3A03               	xorlw	03h&0ffh
 21512  26CD  1D03               	skipz
 21513  26CE  2ED0               	goto	u6721
 21514  26CF  2ED1               	goto	u6720
 21515  26D0                     u6721:
 21516  26D0  2ED8               	goto	l9607
 21517  26D1                     u6720:
 21518                           	line	361
 21519                           	
 21520  26D1                     l23391:	
 21521                           ;OverLoad_B1.c: 360: {
 21522                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 21523  26D1  086E               	movf	(_Load),w
 21524  26D2  3E45               	addlw	045h
 21525  26D3  0086               	movwf	fsr1l
 21526  26D4  3002               	movlw 2	; select bank4/5
 21527  26D5  0087               	movwf fsr1h	
 21528                           	
 21529  26D6  0181               	clrf	indf1
 21530  26D7  2ED8               	goto	l9607
 21531                           	line	362
 21532                           	
 21533  26D8                     l9606:	
 21534                           	line	363
 21535                           	
 21536  26D8                     l9607:	
 21537  26D8  0008               	return
 21538                           	opt stack 0
 21539                           GLOBAL	__end_of_setLoad_StatusOff
 21540  26D9                     	__end_of_setLoad_StatusOff:
 21541 ;; =============== function _setLoad_StatusOff ends ============
 21542                           
 21543                           	signat	_setLoad_StatusOff,12408
 21544                           	global	_setDimmerLights_TriggerERROR
 21545                           psect	text3317,local,class=CODE,delta=2
 21546                           global __ptext3317
 21547  2782                     __ptext3317:
 21548                           
 21549 ;; *************** function _setDimmerLights_TriggerERROR *****************
 21550 ;; Defined at:
 21551 ;;		line 350 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21552 ;; Parameters:    Size  Location     Type
 21553 ;;  lights          1    wreg     unsigned char 
 21554 ;;  command         1    2[BANK0 ] unsigned char 
 21555 ;; Auto vars:     Size  Location     Type
 21556 ;;  lights          1    4[BANK0 ] unsigned char 
 21557 ;; Return value:  Size  Location     Type
 21558 ;;		None               void
 21559 ;; Registers used:
 21560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21561 ;; Tracked objects:
 21562 ;;		On entry : 0/0
 21563 ;;		On exit  : 0/0
 21564 ;;		Unchanged: 0/0
 21565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21566 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 21570 ;;Total ram usage:        3 bytes
 21571 ;; Hardware stack levels used:    1
 21572 ;; Hardware stack levels required when called:    5
 21573 ;; This function calls:
 21574 ;;		_DimmerLightsPointSelect
 21575 ;; This function is called by:
 21576 ;;		_DimmerLights_ERROR
 21577 ;; This function uses a non-reentrant model
 21578 ;;
 21579                           psect	text3317
 21580                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21581                           	line	350
 21582                           	global	__size_of_setDimmerLights_TriggerERROR
 21583  003E                     	__size_of_setDimmerLights_TriggerERROR	equ	__end_of_setDimmerLights_TriggerERROR-_setDi
                                 mmerLights_TriggerERROR
 21584                           	
 21585  2782                     _setDimmerLights_TriggerERROR:	
 21586                           	opt	stack 6
 21587                           ; Regs used in _setDimmerLights_TriggerERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21588                           ;setDimmerLights_TriggerERROR@lights stored from wreg
 21589  2782  0020               	movlb 0	; select bank0
 21590  2783  00A4               	movwf	(setDimmerLights_TriggerERROR@lights)
 21591                           	line	351
 21592                           	
 21593  2784                     l23365:	
 21594                           ;Dimmer_B1.c: 351: DimmerLightsPointSelect(lights);
 21595  2784  0824               	movf	(setDimmerLights_TriggerERROR@lights),w
 21596  2785  31AF  27AC  31A7   	fcall	_DimmerLightsPointSelect
 21597                           	line	352
 21598                           	
 21599  2788                     l23367:	
 21600                           ;Dimmer_B1.c: 352: DimmerLights->Trigger=command;
 21601  2788  0020               	movlb 0	; select bank0
 21602  2789  086D               	movf	(_DimmerLights),w
 21603  278A  3E09               	addlw	09h
 21604  278B  0086               	movwf	fsr1l
 21605  278C  3001               	movlw 1	; select bank2/3
 21606  278D  0087               	movwf fsr1h	
 21607                           	
 21608  278E  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 21609  278F  1081               	bcf	indf1,1
 21610  2790  1D03               	skipz
 21611  2791  1481               	bsf	indf1,1
 21612                           	line	353
 21613                           	
 21614  2792                     l23369:	
 21615                           ;Dimmer_B1.c: 353: DimmerLights->Switch=command;
 21616  2792  086D               	movf	(_DimmerLights),w
 21617  2793  3E09               	addlw	09h
 21618  2794  0086               	movwf	fsr1l
 21619  2795  3001               	movlw 1	; select bank2/3
 21620  2796  0087               	movwf fsr1h	
 21621                           	
 21622  2797  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 21623  2798  1001               	bcf	indf1,0
 21624  2799  1D03               	skipz
 21625  279A  1401               	bsf	indf1,0
 21626                           	line	354
 21627                           	
 21628  279B                     l23371:	
 21629                           ;Dimmer_B1.c: 354: DimmerLights->TriggerAdj=command;
 21630  279B  086D               	movf	(_DimmerLights),w
 21631  279C  3E09               	addlw	09h
 21632  279D  0086               	movwf	fsr1l
 21633  279E  3001               	movlw 1	; select bank2/3
 21634  279F  0087               	movwf fsr1h	
 21635                           	
 21636  27A0  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 21637  27A1  1181               	bcf	indf1,3
 21638  27A2  1D03               	skipz
 21639  27A3  1581               	bsf	indf1,3
 21640                           	line	355
 21641                           	
 21642  27A4                     l23373:	
 21643                           ;Dimmer_B1.c: 355: DimmerLights->AdjGo=command;
 21644  27A4  086D               	movf	(_DimmerLights),w
 21645  27A5  3E09               	addlw	09h
 21646  27A6  0086               	movwf	fsr1l
 21647  27A7  3001               	movlw 1	; select bank2/3
 21648  27A8  0087               	movwf fsr1h	
 21649                           	
 21650  27A9  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 21651  27AA  1101               	bcf	indf1,2
 21652  27AB  1D03               	skipz
 21653  27AC  1501               	bsf	indf1,2
 21654                           	line	356
 21655                           	
 21656  27AD                     l23375:	
 21657                           ;Dimmer_B1.c: 356: DimmerLights->Open=!command;
 21658  27AD  0822               	movf	(setDimmerLights_TriggerERROR@command),w
 21659  27AE  3A00               	xorlw	0&0ffh
 21660  27AF  3000               	movlw	0
 21661  27B0  1903               	skipnz
 21662  27B1  3001               	movlw	1
 21663  27B2  00A3               	movwf	(??_setDimmerLights_TriggerERROR+0)+0
 21664  27B3  086D               	movf	(_DimmerLights),w
 21665  27B4  3E09               	addlw	09h
 21666  27B5  0086               	movwf	fsr1l
 21667  27B6  3001               	movlw 1	; select bank2/3
 21668  27B7  0087               	movwf fsr1h	
 21669                           	
 21670  27B8  0EA3               	swapf	(??_setDimmerLights_TriggerERROR+0)+0,f
 21671  27B9  0DA3               	rlf	(??_setDimmerLights_TriggerERROR+0)+0,f
 21672  27BA  0801               	movf	indf1,w
 21673  27BB  0623               	xorwf	(??_setDimmerLights_TriggerERROR+0)+0,w
 21674  27BC  39DF               	andlw	not (((1<<1)-1)<<5)
 21675  27BD  0623               	xorwf	(??_setDimmerLights_TriggerERROR+0)+0,w
 21676  27BE  0081               	movwf	indf1
 21677                           	line	357
 21678                           	
 21679  27BF                     l4745:	
 21680  27BF  0008               	return
 21681                           	opt stack 0
 21682                           GLOBAL	__end_of_setDimmerLights_TriggerERROR
 21683  27C0                     	__end_of_setDimmerLights_TriggerERROR:
 21684 ;; =============== function _setDimmerLights_TriggerERROR ends ============
 21685                           
 21686                           	signat	_setDimmerLights_TriggerERROR,8312
 21687                           	global	_getDimmer_PFERROR
 21688                           psect	text3318,local,class=CODE,delta=2
 21689                           global __ptext3318
 21690  2052                     __ptext3318:
 21691                           
 21692 ;; *************** function _getDimmer_PFERROR *****************
 21693 ;; Defined at:
 21694 ;;		line 545 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21695 ;; Parameters:    Size  Location     Type
 21696 ;;  dimmer          1    wreg     unsigned char 
 21697 ;; Auto vars:     Size  Location     Type
 21698 ;;  dimmer          1    2[BANK0 ] unsigned char 
 21699 ;; Return value:  Size  Location     Type
 21700 ;;                  1    wreg      unsigned char 
 21701 ;; Registers used:
 21702 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21703 ;; Tracked objects:
 21704 ;;		On entry : 0/0
 21705 ;;		On exit  : 0/0
 21706 ;;		Unchanged: 0/0
 21707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21712 ;;Total ram usage:        1 bytes
 21713 ;; Hardware stack levels used:    1
 21714 ;; Hardware stack levels required when called:    5
 21715 ;; This function calls:
 21716 ;;		_DimmerPointSelect
 21717 ;; This function is called by:
 21718 ;;		_DimmerLights_ERROR
 21719 ;; This function uses a non-reentrant model
 21720 ;;
 21721                           psect	text3318
 21722                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21723                           	line	545
 21724                           	global	__size_of_getDimmer_PFERROR
 21725  000F                     	__size_of_getDimmer_PFERROR	equ	__end_of_getDimmer_PFERROR-_getDimmer_PFERROR
 21726                           	
 21727  2052                     _getDimmer_PFERROR:	
 21728                           	opt	stack 6
 21729                           ; Regs used in _getDimmer_PFERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21730                           ;getDimmer_PFERROR@dimmer stored from wreg
 21731  2052  0020               	movlb 0	; select bank0
 21732  2053  00A2               	movwf	(getDimmer_PFERROR@dimmer)
 21733                           	line	546
 21734                           	
 21735  2054                     l23359:	
 21736                           ;Dimmer_B1.c: 546: DimmerPointSelect(dimmer);
 21737  2054  0822               	movf	(getDimmer_PFERROR@dimmer),w
 21738  2055  31A0  2025  31A0   	fcall	_DimmerPointSelect
 21739                           	line	547
 21740                           	
 21741  2058                     l23361:	
 21742                           ;Dimmer_B1.c: 547: return Dimmer->PFERROR;
 21743  2058  0021               	movlb 1	; select bank1
 21744  2059  083A               	movf	(_Dimmer)^080h,w
 21745  205A  0086               	movwf	fsr1l
 21746  205B  0187               	clrf fsr1h	
 21747                           	
 21748  205C  0C01               	rrf	indf1,w
 21749  205D  0C89               	rrf	wreg,f
 21750  205E  3901               	andlw	(1<<1)-1
 21751  205F  2860               	goto	l4821
 21752                           	
 21753  2060                     l23363:	
 21754                           	line	548
 21755                           	
 21756  2060                     l4821:	
 21757  2060  0008               	return
 21758                           	opt stack 0
 21759                           GLOBAL	__end_of_getDimmer_PFERROR
 21760  2061                     	__end_of_getDimmer_PFERROR:
 21761 ;; =============== function _getDimmer_PFERROR ends ============
 21762                           
 21763                           	signat	_getDimmer_PFERROR,4217
 21764                           	global	_getDimmer_LoadERROR
 21765                           psect	text3319,local,class=CODE,delta=2
 21766                           global __ptext3319
 21767  2FE4                     __ptext3319:
 21768                           
 21769 ;; *************** function _getDimmer_LoadERROR *****************
 21770 ;; Defined at:
 21771 ;;		line 540 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21772 ;; Parameters:    Size  Location     Type
 21773 ;;  dimmer          1    wreg     unsigned char 
 21774 ;; Auto vars:     Size  Location     Type
 21775 ;;  dimmer          1    2[BANK0 ] unsigned char 
 21776 ;; Return value:  Size  Location     Type
 21777 ;;                  1    wreg      unsigned char 
 21778 ;; Registers used:
 21779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21780 ;; Tracked objects:
 21781 ;;		On entry : 0/0
 21782 ;;		On exit  : 0/0
 21783 ;;		Unchanged: 0/0
 21784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21789 ;;Total ram usage:        1 bytes
 21790 ;; Hardware stack levels used:    1
 21791 ;; Hardware stack levels required when called:    5
 21792 ;; This function calls:
 21793 ;;		_DimmerPointSelect
 21794 ;; This function is called by:
 21795 ;;		_DimmerLights_ERROR
 21796 ;; This function uses a non-reentrant model
 21797 ;;
 21798                           psect	text3319
 21799                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21800                           	line	540
 21801                           	global	__size_of_getDimmer_LoadERROR
 21802  000E                     	__size_of_getDimmer_LoadERROR	equ	__end_of_getDimmer_LoadERROR-_getDimmer_LoadERROR
 21803                           	
 21804  2FE4                     _getDimmer_LoadERROR:	
 21805                           	opt	stack 6
 21806                           ; Regs used in _getDimmer_LoadERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21807                           ;getDimmer_LoadERROR@dimmer stored from wreg
 21808  2FE4  0020               	movlb 0	; select bank0
 21809  2FE5  00A2               	movwf	(getDimmer_LoadERROR@dimmer)
 21810                           	line	541
 21811                           	
 21812  2FE6                     l23353:	
 21813                           ;Dimmer_B1.c: 541: DimmerPointSelect(dimmer);
 21814  2FE6  0822               	movf	(getDimmer_LoadERROR@dimmer),w
 21815  2FE7  31A0  2025  31AF   	fcall	_DimmerPointSelect
 21816                           	line	542
 21817                           	
 21818  2FEA                     l23355:	
 21819                           ;Dimmer_B1.c: 542: return Dimmer->LoadERROR;
 21820  2FEA  0021               	movlb 1	; select bank1
 21821  2FEB  083A               	movf	(_Dimmer)^080h,w
 21822  2FEC  0086               	movwf	fsr1l
 21823  2FED  0187               	clrf fsr1h	
 21824                           	
 21825  2FEE  0801               	movf	indf1,w
 21826  2FEF  3901               	andlw	(1<<1)-1
 21827  2FF0  2FF1               	goto	l4818
 21828                           	
 21829  2FF1                     l23357:	
 21830                           	line	543
 21831                           	
 21832  2FF1                     l4818:	
 21833  2FF1  0008               	return
 21834                           	opt stack 0
 21835                           GLOBAL	__end_of_getDimmer_LoadERROR
 21836  2FF2                     	__end_of_getDimmer_LoadERROR:
 21837 ;; =============== function _getDimmer_LoadERROR ends ============
 21838                           
 21839                           	signat	_getDimmer_LoadERROR,4217
 21840                           	global	_getDimmer_TempERROR
 21841                           psect	text3320,local,class=CODE,delta=2
 21842                           global __ptext3320
 21843  2FD6                     __ptext3320:
 21844                           
 21845 ;; *************** function _getDimmer_TempERROR *****************
 21846 ;; Defined at:
 21847 ;;		line 535 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21848 ;; Parameters:    Size  Location     Type
 21849 ;;  dimmer          1    wreg     unsigned char 
 21850 ;; Auto vars:     Size  Location     Type
 21851 ;;  dimmer          1    2[BANK0 ] unsigned char 
 21852 ;; Return value:  Size  Location     Type
 21853 ;;                  1    wreg      unsigned char 
 21854 ;; Registers used:
 21855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21856 ;; Tracked objects:
 21857 ;;		On entry : 0/0
 21858 ;;		On exit  : 0/0
 21859 ;;		Unchanged: 0/0
 21860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21864 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21865 ;;Total ram usage:        1 bytes
 21866 ;; Hardware stack levels used:    1
 21867 ;; Hardware stack levels required when called:    5
 21868 ;; This function calls:
 21869 ;;		_DimmerPointSelect
 21870 ;; This function is called by:
 21871 ;;		_DimmerLights_ERROR
 21872 ;; This function uses a non-reentrant model
 21873 ;;
 21874                           psect	text3320
 21875                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21876                           	line	535
 21877                           	global	__size_of_getDimmer_TempERROR
 21878  000E                     	__size_of_getDimmer_TempERROR	equ	__end_of_getDimmer_TempERROR-_getDimmer_TempERROR
 21879                           	
 21880  2FD6                     _getDimmer_TempERROR:	
 21881                           	opt	stack 6
 21882                           ; Regs used in _getDimmer_TempERROR: [wreg+fsr1l-status,0+pclath+cstack]
 21883                           ;getDimmer_TempERROR@dimmer stored from wreg
 21884  2FD6  0020               	movlb 0	; select bank0
 21885  2FD7  00A2               	movwf	(getDimmer_TempERROR@dimmer)
 21886                           	line	536
 21887                           	
 21888  2FD8                     l23347:	
 21889                           ;Dimmer_B1.c: 536: DimmerPointSelect(dimmer);
 21890  2FD8  0822               	movf	(getDimmer_TempERROR@dimmer),w
 21891  2FD9  31A0  2025  31AF   	fcall	_DimmerPointSelect
 21892                           	line	537
 21893                           	
 21894  2FDC                     l23349:	
 21895                           ;Dimmer_B1.c: 537: return Dimmer->TempERROR;
 21896  2FDC  0021               	movlb 1	; select bank1
 21897  2FDD  083A               	movf	(_Dimmer)^080h,w
 21898  2FDE  0086               	movwf	fsr1l
 21899  2FDF  0187               	clrf fsr1h	
 21900                           	
 21901  2FE0  0C01               	rrf	indf1,w
 21902  2FE1  3901               	andlw	(1<<1)-1
 21903  2FE2  2FE3               	goto	l4815
 21904                           	
 21905  2FE3                     l23351:	
 21906                           	line	538
 21907                           	
 21908  2FE3                     l4815:	
 21909  2FE3  0008               	return
 21910                           	opt stack 0
 21911                           GLOBAL	__end_of_getDimmer_TempERROR
 21912  2FE4                     	__end_of_getDimmer_TempERROR:
 21913 ;; =============== function _getDimmer_TempERROR ends ============
 21914                           
 21915                           	signat	_getDimmer_TempERROR,4217
 21916                           	global	_getDimmerLights_Trigger
 21917                           psect	text3321,local,class=CODE,delta=2
 21918                           global __ptext3321
 21919  2410                     __ptext3321:
 21920                           
 21921 ;; *************** function _getDimmerLights_Trigger *****************
 21922 ;; Defined at:
 21923 ;;		line 254 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 21924 ;; Parameters:    Size  Location     Type
 21925 ;;		None
 21926 ;; Auto vars:     Size  Location     Type
 21927 ;;  i               1    5[BANK0 ] unsigned char 
 21928 ;;  Status          1    4[BANK0 ] unsigned char 
 21929 ;;  length          1    3[BANK0 ] unsigned char 
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  1    wreg      unsigned char 
 21932 ;; Registers used:
 21933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 21939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 21940 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 21941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 21942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 21943 ;;Total ram usage:        4 bytes
 21944 ;; Hardware stack levels used:    1
 21945 ;; Hardware stack levels required when called:    5
 21946 ;; This function calls:
 21947 ;;		_DimmerLightsPointSelect
 21948 ;; This function is called by:
 21949 ;;		_setDimmerLights_Main
 21950 ;; This function uses a non-reentrant model
 21951 ;;
 21952                           psect	text3321
 21953                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 21954                           	line	254
 21955                           	global	__size_of_getDimmerLights_Trigger
 21956  0028                     	__size_of_getDimmerLights_Trigger	equ	__end_of_getDimmerLights_Trigger-_getDimmerLights
                                 _Trigger
 21957                           	
 21958  2410                     _getDimmerLights_Trigger:	
 21959                           	opt	stack 8
 21960                           ; Regs used in _getDimmerLights_Trigger: [wreg+fsr1l-status,0+pclath+cstack]
 21961                           	line	255
 21962                           	
 21963  2410                     l23329:	
 21964                           ;Dimmer_B1.c: 255: char Status=0,i,length;
 21965  2410  0020               	movlb 0	; select bank0
 21966  2411  01A4               	clrf	(getDimmerLights_Trigger@Status)
 21967                           	line	262
 21968                           	
 21969  2412                     l23331:	
 21970                           ;Dimmer_B1.c: 262: length=1;
 21971  2412  01A3               	clrf	(getDimmerLights_Trigger@length)
 21972  2413  1403               	bsf	status,0
 21973  2414  0DA3               	rlf	(getDimmerLights_Trigger@length),f
 21974                           	line	266
 21975                           	
 21976  2415                     l23333:	
 21977                           ;Dimmer_B1.c: 266: for(i=0 ; i<length ; i++)
 21978  2415  01A5               	clrf	(getDimmerLights_Trigger@i)
 21979  2416  2C2E               	goto	l4724
 21980                           	line	267
 21981                           	
 21982  2417                     l4725:	
 21983                           	line	268
 21984                           	
 21985  2417                     l23335:	
 21986                           ;Dimmer_B1.c: 267: {
 21987                           ;Dimmer_B1.c: 268: DimmerLightsPointSelect(i+1);
 21988  2417  0825               	movf	(getDimmerLights_Trigger@i),w
 21989  2418  3E01               	addlw	01h
 21990  2419  31AF  27AC  31A4   	fcall	_DimmerLightsPointSelect
 21991                           	line	269
 21992                           	
 21993  241C                     l23337:	
 21994                           ;Dimmer_B1.c: 269: if(DimmerLights->Trigger)
 21995  241C  0020               	movlb 0	; select bank0
 21996  241D  086D               	movf	(_DimmerLights),w
 21997  241E  3E09               	addlw	09h
 21998  241F  0086               	movwf	fsr1l
 21999  2420  3001               	movlw 1	; select bank2/3
 22000  2421  0087               	movwf fsr1h	
 22001                           	
 22002  2422  1C81               	btfss	indf1,1
 22003  2423  2C25               	goto	u6681
 22004  2424  2C26               	goto	u6680
 22005  2425                     u6681:
 22006  2425  2C2A               	goto	l23341
 22007  2426                     u6680:
 22008                           	line	271
 22009                           	
 22010  2426                     l23339:	
 22011                           ;Dimmer_B1.c: 270: {
 22012                           ;Dimmer_B1.c: 271: Status=1;
 22013  2426  01A4               	clrf	(getDimmerLights_Trigger@Status)
 22014  2427  1403               	bsf	status,0
 22015  2428  0DA4               	rlf	(getDimmerLights_Trigger@Status),f
 22016  2429  2C2A               	goto	l23341
 22017                           	line	272
 22018                           	
 22019  242A                     l4726:	
 22020                           	line	266
 22021                           	
 22022  242A                     l23341:	
 22023  242A  3001               	movlw	(01h)
 22024  242B  00A2               	movwf	(??_getDimmerLights_Trigger+0)+0
 22025  242C  0822               	movf	(??_getDimmerLights_Trigger+0)+0,w
 22026  242D  07A5               	addwf	(getDimmerLights_Trigger@i),f
 22027                           	
 22028  242E                     l4724:	
 22029  242E  0823               	movf	(getDimmerLights_Trigger@length),w
 22030  242F  0225               	subwf	(getDimmerLights_Trigger@i),w
 22031  2430  1C03               	skipc
 22032  2431  2C33               	goto	u6691
 22033  2432  2C34               	goto	u6690
 22034  2433                     u6691:
 22035  2433  2C17               	goto	l23335
 22036  2434                     u6690:
 22037  2434  2C35               	goto	l23343
 22038                           	
 22039  2435                     l4727:	
 22040                           	line	274
 22041                           	
 22042  2435                     l23343:	
 22043                           ;Dimmer_B1.c: 272: }
 22044                           ;Dimmer_B1.c: 273: }
 22045                           ;Dimmer_B1.c: 274: return Status;
 22046  2435  0824               	movf	(getDimmerLights_Trigger@Status),w
 22047  2436  2C37               	goto	l4728
 22048                           	
 22049  2437                     l23345:	
 22050                           	line	275
 22051                           	
 22052  2437                     l4728:	
 22053  2437  0008               	return
 22054                           	opt stack 0
 22055                           GLOBAL	__end_of_getDimmerLights_Trigger
 22056  2438                     	__end_of_getDimmerLights_Trigger:
 22057 ;; =============== function _getDimmerLights_Trigger ends ============
 22058                           
 22059                           	signat	_getDimmerLights_Trigger,89
 22060                           	global	_setDimmerLights_Close
 22061                           psect	text3322,local,class=CODE,delta=2
 22062                           global __ptext3322
 22063  2174                     __ptext3322:
 22064                           
 22065 ;; *************** function _setDimmerLights_Close *****************
 22066 ;; Defined at:
 22067 ;;		line 480 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22068 ;; Parameters:    Size  Location     Type
 22069 ;;  lights          1    wreg     unsigned char 
 22070 ;;  command         1    2[BANK0 ] unsigned char 
 22071 ;; Auto vars:     Size  Location     Type
 22072 ;;  lights          1    3[BANK0 ] unsigned char 
 22073 ;; Return value:  Size  Location     Type
 22074 ;;		None               void
 22075 ;; Registers used:
 22076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22077 ;; Tracked objects:
 22078 ;;		On entry : 0/0
 22079 ;;		On exit  : 0/0
 22080 ;;		Unchanged: 0/0
 22081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22082 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22086 ;;Total ram usage:        2 bytes
 22087 ;; Hardware stack levels used:    1
 22088 ;; Hardware stack levels required when called:    5
 22089 ;; This function calls:
 22090 ;;		_DimmerLightsPointSelect
 22091 ;; This function is called by:
 22092 ;;		_setDimmerLights_Main
 22093 ;; This function uses a non-reentrant model
 22094 ;;
 22095                           psect	text3322
 22096                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22097                           	line	480
 22098                           	global	__size_of_setDimmerLights_Close
 22099  0011                     	__size_of_setDimmerLights_Close	equ	__end_of_setDimmerLights_Close-_setDimmerLights_Clo
                                 se
 22100                           	
 22101  2174                     _setDimmerLights_Close:	
 22102                           	opt	stack 8
 22103                           ; Regs used in _setDimmerLights_Close: [wreg+fsr1l-status,0+pclath+cstack]
 22104                           ;setDimmerLights_Close@lights stored from wreg
 22105  2174  0020               	movlb 0	; select bank0
 22106  2175  00A3               	movwf	(setDimmerLights_Close@lights)
 22107                           	line	481
 22108                           	
 22109  2176                     l23325:	
 22110                           ;Dimmer_B1.c: 481: DimmerLightsPointSelect(lights);
 22111  2176  0823               	movf	(setDimmerLights_Close@lights),w
 22112  2177  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 22113                           	line	482
 22114                           	
 22115  217A                     l23327:	
 22116                           ;Dimmer_B1.c: 482: DimmerLights->Close=command;
 22117  217A  0020               	movlb 0	; select bank0
 22118  217B  086D               	movf	(_DimmerLights),w
 22119  217C  3E09               	addlw	09h
 22120  217D  0086               	movwf	fsr1l
 22121  217E  3001               	movlw 1	; select bank2/3
 22122  217F  0087               	movwf fsr1h	
 22123                           	
 22124  2180  0822               	movf	(setDimmerLights_Close@command),w
 22125  2181  1301               	bcf	indf1,6
 22126  2182  1D03               	skipz
 22127  2183  1701               	bsf	indf1,6
 22128                           	line	483
 22129                           	
 22130  2184                     l4787:	
 22131  2184  0008               	return
 22132                           	opt stack 0
 22133                           GLOBAL	__end_of_setDimmerLights_Close
 22134  2185                     	__end_of_setDimmerLights_Close:
 22135 ;; =============== function _setDimmerLights_Close ends ============
 22136                           
 22137                           	signat	_setDimmerLights_Close,8312
 22138                           	global	_setDimmerLights_Open
 22139                           psect	text3323,local,class=CODE,delta=2
 22140                           global __ptext3323
 22141  2163                     __ptext3323:
 22142                           
 22143 ;; *************** function _setDimmerLights_Open *****************
 22144 ;; Defined at:
 22145 ;;		line 470 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;  lights          1    wreg     unsigned char 
 22148 ;;  command         1    2[BANK0 ] unsigned char 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;  lights          1    3[BANK0 ] unsigned char 
 22151 ;; Return value:  Size  Location     Type
 22152 ;;		None               void
 22153 ;; Registers used:
 22154 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22160 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22163 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22164 ;;Total ram usage:        2 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:    5
 22167 ;; This function calls:
 22168 ;;		_DimmerLightsPointSelect
 22169 ;; This function is called by:
 22170 ;;		_setDimmerLights_Main
 22171 ;;		_setLoad_Main
 22172 ;; This function uses a non-reentrant model
 22173 ;;
 22174                           psect	text3323
 22175                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22176                           	line	470
 22177                           	global	__size_of_setDimmerLights_Open
 22178  0011                     	__size_of_setDimmerLights_Open	equ	__end_of_setDimmerLights_Open-_setDimmerLights_Open
 22179                           	
 22180  2163                     _setDimmerLights_Open:	
 22181                           	opt	stack 8
 22182                           ; Regs used in _setDimmerLights_Open: [wreg+fsr1l-status,0+pclath+cstack]
 22183                           ;setDimmerLights_Open@lights stored from wreg
 22184  2163  0020               	movlb 0	; select bank0
 22185  2164  00A3               	movwf	(setDimmerLights_Open@lights)
 22186                           	line	471
 22187                           	
 22188  2165                     l23321:	
 22189                           ;Dimmer_B1.c: 471: DimmerLightsPointSelect(lights);
 22190  2165  0823               	movf	(setDimmerLights_Open@lights),w
 22191  2166  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 22192                           	line	472
 22193                           	
 22194  2169                     l23323:	
 22195                           ;Dimmer_B1.c: 472: DimmerLights->Open=command;
 22196  2169  0020               	movlb 0	; select bank0
 22197  216A  086D               	movf	(_DimmerLights),w
 22198  216B  3E09               	addlw	09h
 22199  216C  0086               	movwf	fsr1l
 22200  216D  3001               	movlw 1	; select bank2/3
 22201  216E  0087               	movwf fsr1h	
 22202                           	
 22203  216F  0822               	movf	(setDimmerLights_Open@command),w
 22204  2170  1281               	bcf	indf1,5
 22205  2171  1D03               	skipz
 22206  2172  1681               	bsf	indf1,5
 22207                           	line	473
 22208                           	
 22209  2173                     l4781:	
 22210  2173  0008               	return
 22211                           	opt stack 0
 22212                           GLOBAL	__end_of_setDimmerLights_Open
 22213  2174                     	__end_of_setDimmerLights_Open:
 22214 ;; =============== function _setDimmerLights_Open ends ============
 22215                           
 22216                           	signat	_setDimmerLights_Open,8312
 22217                           	global	_setLoad_GO
 22218                           psect	text3324,local,class=CODE,delta=2
 22219                           global __ptext3324
 22220  20B0                     __ptext3324:
 22221                           
 22222 ;; *************** function _setLoad_GO *****************
 22223 ;; Defined at:
 22224 ;;		line 337 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 22225 ;; Parameters:    Size  Location     Type
 22226 ;;  load            1    wreg     unsigned char 
 22227 ;;  command         1    2[BANK0 ] unsigned char 
 22228 ;; Auto vars:     Size  Location     Type
 22229 ;;  load            1    3[BANK0 ] unsigned char 
 22230 ;; Return value:  Size  Location     Type
 22231 ;;		None               void
 22232 ;; Registers used:
 22233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22234 ;; Tracked objects:
 22235 ;;		On entry : 0/0
 22236 ;;		On exit  : 0/0
 22237 ;;		Unchanged: 0/0
 22238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22240 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22242 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22243 ;;Total ram usage:        2 bytes
 22244 ;; Hardware stack levels used:    1
 22245 ;; Hardware stack levels required when called:    5
 22246 ;; This function calls:
 22247 ;;		_LoadPointSelect
 22248 ;; This function is called by:
 22249 ;;		_DimmerLights_Close
 22250 ;;		_setDimmerLights
 22251 ;; This function uses a non-reentrant model
 22252 ;;
 22253                           psect	text3324
 22254                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 22255                           	line	337
 22256                           	global	__size_of_setLoad_GO
 22257  0010                     	__size_of_setLoad_GO	equ	__end_of_setLoad_GO-_setLoad_GO
 22258                           	
 22259  20B0                     _setLoad_GO:	
 22260                           	opt	stack 5
 22261                           ; Regs used in _setLoad_GO: [wreg+fsr1l-status,0+pclath+cstack]
 22262                           ;setLoad_GO@load stored from wreg
 22263  20B0  0020               	movlb 0	; select bank0
 22264  20B1  00A3               	movwf	(setLoad_GO@load)
 22265                           	line	338
 22266                           	
 22267  20B2                     l23317:	
 22268                           ;OverLoad_B1.c: 338: LoadPointSelect(load);
 22269  20B2  0823               	movf	(setLoad_GO@load),w
 22270  20B3  31AF  27BA  31A0   	fcall	_LoadPointSelect
 22271                           	line	339
 22272                           	
 22273  20B6                     l23319:	
 22274                           ;OverLoad_B1.c: 339: Load->GO=command;
 22275  20B6  0020               	movlb 0	; select bank0
 22276  20B7  086E               	movf	(_Load),w
 22277  20B8  0086               	movwf	fsr1l
 22278  20B9  3002               	movlw 2	; select bank4/5
 22279  20BA  0087               	movwf fsr1h	
 22280                           	
 22281  20BB  0822               	movf	(setLoad_GO@command),w
 22282  20BC  1081               	bcf	indf1,1
 22283  20BD  1D03               	skipz
 22284  20BE  1481               	bsf	indf1,1
 22285                           	line	340
 22286                           	
 22287  20BF                     l9598:	
 22288  20BF  0008               	return
 22289                           	opt stack 0
 22290                           GLOBAL	__end_of_setLoad_GO
 22291  20C0                     	__end_of_setLoad_GO:
 22292 ;; =============== function _setLoad_GO ends ============
 22293                           
 22294                           	signat	_setLoad_GO,8312
 22295                           	global	_getDimmerLights_StatusFlag
 22296                           psect	text3325,local,class=CODE,delta=2
 22297                           global __ptext3325
 22298  239B                     __ptext3325:
 22299                           
 22300 ;; *************** function _getDimmerLights_StatusFlag *****************
 22301 ;; Defined at:
 22302 ;;		line 229 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22303 ;; Parameters:    Size  Location     Type
 22304 ;;		None
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;  i               1    5[BANK0 ] unsigned char 
 22307 ;;  Status          1    4[BANK0 ] unsigned char 
 22308 ;;  length          1    3[BANK0 ] unsigned char 
 22309 ;; Return value:  Size  Location     Type
 22310 ;;                  1    wreg      unsigned char 
 22311 ;; Registers used:
 22312 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22313 ;; Tracked objects:
 22314 ;;		On entry : 0/0
 22315 ;;		On exit  : 0/0
 22316 ;;		Unchanged: 0/0
 22317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22319 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 22320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22321 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22322 ;;Total ram usage:        4 bytes
 22323 ;; Hardware stack levels used:    1
 22324 ;; Hardware stack levels required when called:    5
 22325 ;; This function calls:
 22326 ;;		_DimmerLightsPointSelect
 22327 ;; This function is called by:
 22328 ;;		_DimmerLights_Close
 22329 ;;		_DimmerLights_ERROR
 22330 ;; This function uses a non-reentrant model
 22331 ;;
 22332                           psect	text3325
 22333                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22334                           	line	229
 22335                           	global	__size_of_getDimmerLights_StatusFlag
 22336  0027                     	__size_of_getDimmerLights_StatusFlag	equ	__end_of_getDimmerLights_StatusFlag-_getDimmer
                                 Lights_StatusFlag
 22337                           	
 22338  239B                     _getDimmerLights_StatusFlag:	
 22339                           	opt	stack 8
 22340                           ; Regs used in _getDimmerLights_StatusFlag: [wreg+fsr1l-status,0+pclath+cstack]
 22341                           	line	230
 22342                           	
 22343  239B                     l23299:	
 22344                           ;Dimmer_B1.c: 230: char Status=0,i,length;
 22345  239B  0020               	movlb 0	; select bank0
 22346  239C  01A4               	clrf	(getDimmerLights_StatusFlag@Status)
 22347                           	line	237
 22348                           	
 22349  239D                     l23301:	
 22350                           ;Dimmer_B1.c: 237: length=1;
 22351  239D  01A3               	clrf	(getDimmerLights_StatusFlag@length)
 22352  239E  1403               	bsf	status,0
 22353  239F  0DA3               	rlf	(getDimmerLights_StatusFlag@length),f
 22354                           	line	242
 22355                           	
 22356  23A0                     l23303:	
 22357                           ;Dimmer_B1.c: 242: for(i=0 ; i<length ; i++)
 22358  23A0  01A5               	clrf	(getDimmerLights_StatusFlag@i)
 22359  23A1  2BB8               	goto	l4717
 22360                           	line	243
 22361                           	
 22362  23A2                     l4718:	
 22363                           	line	244
 22364                           	
 22365  23A2                     l23305:	
 22366                           ;Dimmer_B1.c: 243: {
 22367                           ;Dimmer_B1.c: 244: DimmerLightsPointSelect(i+1);
 22368  23A2  0825               	movf	(getDimmerLights_StatusFlag@i),w
 22369  23A3  3E01               	addlw	01h
 22370  23A4  31AF  27AC  31A3   	fcall	_DimmerLightsPointSelect
 22371                           	line	245
 22372                           	
 22373  23A7                     l23307:	
 22374                           ;Dimmer_B1.c: 245: if(DimmerLights->StatusFlag)
 22375  23A7  0020               	movlb 0	; select bank0
 22376  23A8  086D               	movf	(_DimmerLights),w
 22377  23A9  0086               	movwf	fsr1l
 22378  23AA  3001               	movlw 1	; select bank2/3
 22379  23AB  0087               	movwf fsr1h	
 22380                           	
 22381  23AC  1F01               	btfss	indf1,6
 22382  23AD  2BAF               	goto	u6661
 22383  23AE  2BB0               	goto	u6660
 22384  23AF                     u6661:
 22385  23AF  2BB4               	goto	l23311
 22386  23B0                     u6660:
 22387                           	line	247
 22388                           	
 22389  23B0                     l23309:	
 22390                           ;Dimmer_B1.c: 246: {
 22391                           ;Dimmer_B1.c: 247: Status=1;
 22392  23B0  01A4               	clrf	(getDimmerLights_StatusFlag@Status)
 22393  23B1  1403               	bsf	status,0
 22394  23B2  0DA4               	rlf	(getDimmerLights_StatusFlag@Status),f
 22395  23B3  2BB4               	goto	l23311
 22396                           	line	248
 22397                           	
 22398  23B4                     l4719:	
 22399                           	line	242
 22400                           	
 22401  23B4                     l23311:	
 22402  23B4  3001               	movlw	(01h)
 22403  23B5  00A2               	movwf	(??_getDimmerLights_StatusFlag+0)+0
 22404  23B6  0822               	movf	(??_getDimmerLights_StatusFlag+0)+0,w
 22405  23B7  07A5               	addwf	(getDimmerLights_StatusFlag@i),f
 22406                           	
 22407  23B8                     l4717:	
 22408  23B8  0823               	movf	(getDimmerLights_StatusFlag@length),w
 22409  23B9  0225               	subwf	(getDimmerLights_StatusFlag@i),w
 22410  23BA  1C03               	skipc
 22411  23BB  2BBD               	goto	u6671
 22412  23BC  2BBE               	goto	u6670
 22413  23BD                     u6671:
 22414  23BD  2BA2               	goto	l23305
 22415  23BE                     u6670:
 22416  23BE  2BBF               	goto	l23313
 22417                           	
 22418  23BF                     l4720:	
 22419                           	line	250
 22420                           	
 22421  23BF                     l23313:	
 22422                           ;Dimmer_B1.c: 248: }
 22423                           ;Dimmer_B1.c: 249: }
 22424                           ;Dimmer_B1.c: 250: return Status;
 22425  23BF  0824               	movf	(getDimmerLights_StatusFlag@Status),w
 22426  23C0  2BC1               	goto	l4721
 22427                           	
 22428  23C1                     l23315:	
 22429                           	line	251
 22430                           	
 22431  23C1                     l4721:	
 22432  23C1  0008               	return
 22433                           	opt stack 0
 22434                           GLOBAL	__end_of_getDimmerLights_StatusFlag
 22435  23C2                     	__end_of_getDimmerLights_StatusFlag:
 22436 ;; =============== function _getDimmerLights_StatusFlag ends ============
 22437                           
 22438                           	signat	_getDimmerLights_StatusFlag,89
 22439                           	global	_setDimmer_Detect
 22440                           psect	text3326,local,class=CODE,delta=2
 22441                           global __ptext3326
 22442  20A0                     __ptext3326:
 22443                           
 22444 ;; *************** function _setDimmer_Detect *****************
 22445 ;; Defined at:
 22446 ;;		line 530 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22447 ;; Parameters:    Size  Location     Type
 22448 ;;  dimmer          1    wreg     unsigned char 
 22449 ;;  command         1    2[BANK0 ] unsigned char 
 22450 ;; Auto vars:     Size  Location     Type
 22451 ;;  dimmer          1    3[BANK0 ] unsigned char 
 22452 ;; Return value:  Size  Location     Type
 22453 ;;		None               void
 22454 ;; Registers used:
 22455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22456 ;; Tracked objects:
 22457 ;;		On entry : 0/0
 22458 ;;		On exit  : 0/0
 22459 ;;		Unchanged: 0/0
 22460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22461 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22465 ;;Total ram usage:        2 bytes
 22466 ;; Hardware stack levels used:    1
 22467 ;; Hardware stack levels required when called:    5
 22468 ;; This function calls:
 22469 ;;		_DimmerPointSelect
 22470 ;; This function is called by:
 22471 ;;		_DimmerLights_Close
 22472 ;;		_setDimmerLights
 22473 ;; This function uses a non-reentrant model
 22474 ;;
 22475                           psect	text3326
 22476                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22477                           	line	530
 22478                           	global	__size_of_setDimmer_Detect
 22479  0010                     	__size_of_setDimmer_Detect	equ	__end_of_setDimmer_Detect-_setDimmer_Detect
 22480                           	
 22481  20A0                     _setDimmer_Detect:	
 22482                           	opt	stack 5
 22483                           ; Regs used in _setDimmer_Detect: [wreg+fsr1l-status,0+pclath+cstack]
 22484                           ;setDimmer_Detect@dimmer stored from wreg
 22485  20A0  0020               	movlb 0	; select bank0
 22486  20A1  00A3               	movwf	(setDimmer_Detect@dimmer)
 22487                           	line	531
 22488                           	
 22489  20A2                     l23295:	
 22490                           ;Dimmer_B1.c: 531: DimmerPointSelect(dimmer);
 22491  20A2  0823               	movf	(setDimmer_Detect@dimmer),w
 22492  20A3  31A0  2025  31A0   	fcall	_DimmerPointSelect
 22493                           	line	532
 22494                           	
 22495  20A6                     l23297:	
 22496                           ;Dimmer_B1.c: 532: Dimmer->Detect=command;
 22497  20A6  0021               	movlb 1	; select bank1
 22498  20A7  083A               	movf	(_Dimmer)^080h,w
 22499  20A8  0086               	movwf	fsr1l
 22500  20A9  0187               	clrf fsr1h	
 22501                           	
 22502  20AA  0020               	movlb 0	; select bank0
 22503  20AB  0822               	movf	(setDimmer_Detect@command),w
 22504  20AC  1181               	bcf	indf1,3
 22505  20AD  1D03               	skipz
 22506  20AE  1581               	bsf	indf1,3
 22507                           	line	533
 22508                           	
 22509  20AF                     l4812:	
 22510  20AF  0008               	return
 22511                           	opt stack 0
 22512                           GLOBAL	__end_of_setDimmer_Detect
 22513  20B0                     	__end_of_setDimmer_Detect:
 22514 ;; =============== function _setDimmer_Detect ends ============
 22515                           
 22516                           	signat	_setDimmer_Detect,8312
 22517                           	global	_getDimmer_Detect
 22518                           psect	text3327,local,class=CODE,delta=2
 22519                           global __ptext3327
 22520  21B8                     __ptext3327:
 22521                           
 22522 ;; *************** function _getDimmer_Detect *****************
 22523 ;; Defined at:
 22524 ;;		line 550 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;  dimmer          1    wreg     unsigned char 
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;  dimmer          1    3[BANK0 ] unsigned char 
 22529 ;; Return value:  Size  Location     Type
 22530 ;;                  1    wreg      unsigned char 
 22531 ;; Registers used:
 22532 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22533 ;; Tracked objects:
 22534 ;;		On entry : 0/0
 22535 ;;		On exit  : 0/0
 22536 ;;		Unchanged: 0/0
 22537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22540 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22541 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22542 ;;Total ram usage:        2 bytes
 22543 ;; Hardware stack levels used:    1
 22544 ;; Hardware stack levels required when called:    5
 22545 ;; This function calls:
 22546 ;;		_DimmerPointSelect
 22547 ;; This function is called by:
 22548 ;;		_DimmerLights_Close
 22549 ;; This function uses a non-reentrant model
 22550 ;;
 22551                           psect	text3327
 22552                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 22553                           	line	550
 22554                           	global	__size_of_getDimmer_Detect
 22555  0012                     	__size_of_getDimmer_Detect	equ	__end_of_getDimmer_Detect-_getDimmer_Detect
 22556                           	
 22557  21B8                     _getDimmer_Detect:	
 22558                           	opt	stack 8
 22559                           ; Regs used in _getDimmer_Detect: [wreg+fsr1l-status,0+pclath+cstack]
 22560                           ;getDimmer_Detect@dimmer stored from wreg
 22561  21B8  0020               	movlb 0	; select bank0
 22562  21B9  00A3               	movwf	(getDimmer_Detect@dimmer)
 22563                           	line	551
 22564                           	
 22565  21BA                     l23289:	
 22566                           ;Dimmer_B1.c: 551: DimmerPointSelect(dimmer);
 22567  21BA  0823               	movf	(getDimmer_Detect@dimmer),w
 22568  21BB  31A0  2025  31A1   	fcall	_DimmerPointSelect
 22569                           	line	552
 22570                           	
 22571  21BE                     l23291:	
 22572                           ;Dimmer_B1.c: 552: return Dimmer->Detect;
 22573  21BE  0021               	movlb 1	; select bank1
 22574  21BF  083A               	movf	(_Dimmer)^080h,w
 22575  21C0  0086               	movwf	fsr1l
 22576  21C1  0187               	clrf fsr1h	
 22577                           	
 22578  21C2  0C01               	rrf	indf1,w
 22579  21C3  0020               	movlb 0	; select bank0
 22580  21C4  00A2               	movwf	(??_getDimmer_Detect+0)+0
 22581  21C5  0CA2               	rrf	(??_getDimmer_Detect+0)+0,f
 22582  21C6  0C22               	rrf	(??_getDimmer_Detect+0)+0,w
 22583  21C7  3901               	andlw	(1<<1)-1
 22584  21C8  29C9               	goto	l4824
 22585                           	
 22586  21C9                     l23293:	
 22587                           	line	553
 22588                           	
 22589  21C9                     l4824:	
 22590  21C9  0008               	return
 22591                           	opt stack 0
 22592                           GLOBAL	__end_of_getDimmer_Detect
 22593  21CA                     	__end_of_getDimmer_Detect:
 22594 ;; =============== function _getDimmer_Detect ends ============
 22595                           
 22596                           	signat	_getDimmer_Detect,4217
 22597                           	global	_setDelayOff_GO
 22598                           psect	text3328,local,class=CODE,delta=2
 22599                           global __ptext3328
 22600  198D                     __ptext3328:
 22601                           
 22602 ;; *************** function _setDelayOff_GO *****************
 22603 ;; Defined at:
 22604 ;;		line 89 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 22605 ;; Parameters:    Size  Location     Type
 22606 ;;  sw              1    wreg     unsigned char 
 22607 ;;  command         1    3[BANK0 ] unsigned char 
 22608 ;;  value           1    4[BANK0 ] unsigned char 
 22609 ;; Auto vars:     Size  Location     Type
 22610 ;;  sw              1    6[BANK0 ] unsigned char 
 22611 ;; Return value:  Size  Location     Type
 22612 ;;		None               void
 22613 ;; Registers used:
 22614 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22615 ;; Tracked objects:
 22616 ;;		On entry : 0/0
 22617 ;;		On exit  : 0/0
 22618 ;;		Unchanged: 0/0
 22619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22622 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 22623 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22624 ;;Total ram usage:        4 bytes
 22625 ;; Hardware stack levels used:    1
 22626 ;; Hardware stack levels required when called:    5
 22627 ;; This function calls:
 22628 ;;		_DelayOffPointSelect
 22629 ;;		_DelayTimejudge
 22630 ;; This function is called by:
 22631 ;;		_setRFSW_Control
 22632 ;;		_Sw_OffFunc
 22633 ;; This function uses a non-reentrant model
 22634 ;;
 22635                           psect	text3328
 22636                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 22637                           	line	89
 22638                           	global	__size_of_setDelayOff_GO
 22639  0049                     	__size_of_setDelayOff_GO	equ	__end_of_setDelayOff_GO-_setDelayOff_GO
 22640                           	
 22641  198D                     _setDelayOff_GO:	
 22642                           	opt	stack 5
 22643                           ; Regs used in _setDelayOff_GO: [wreg+fsr1l-status,0+pclath+cstack]
 22644                           ;setDelayOff_GO@sw stored from wreg
 22645  198D  0020               	movlb 0	; select bank0
 22646  198E  00A6               	movwf	(setDelayOff_GO@sw)
 22647                           	line	90
 22648                           	
 22649  198F                     l23271:	
 22650                           ;DelayOff_B1.c: 90: DelayOffPointSelect(sw);
 22651  198F  0826               	movf	(setDelayOff_GO@sw),w
 22652  1990  31A0  2016  3199   	fcall	_DelayOffPointSelect
 22653                           	line	91
 22654                           	
 22655  1993                     l23273:	
 22656                           ;DelayOff_B1.c: 91: if(DelayOff->Enable)
 22657  1993  0021               	movlb 1	; select bank1
 22658  1994  0839               	movf	(_DelayOff)^080h,w
 22659  1995  0086               	movwf	fsr1l
 22660  1996  0187               	clrf fsr1h	
 22661                           	
 22662  1997  1C01               	btfss	indf1,0
 22663  1998  299A               	goto	u6631
 22664  1999  299B               	goto	u6630
 22665  199A                     u6631:
 22666  199A  29D5               	goto	l3517
 22667  199B                     u6630:
 22668                           	line	93
 22669                           	
 22670  199B                     l23275:	
 22671                           ;DelayOff_B1.c: 92: {
 22672                           ;DelayOff_B1.c: 93: DelayOff->GO=command;
 22673  199B  0839               	movf	(_DelayOff)^080h,w
 22674  199C  0086               	movwf	fsr1l
 22675  199D  0187               	clrf fsr1h	
 22676                           	
 22677  199E  0020               	movlb 0	; select bank0
 22678  199F  0823               	movf	(setDelayOff_GO@command),w
 22679  19A0  1081               	bcf	indf1,1
 22680  19A1  1D03               	skipz
 22681  19A2  1481               	bsf	indf1,1
 22682                           	line	94
 22683                           	
 22684  19A3                     l23277:	
 22685                           ;DelayOff_B1.c: 94: if(command)
 22686  19A3  0823               	movf	(setDelayOff_GO@command),w
 22687  19A4  1D03               	skipz
 22688  19A5  29A7               	goto	u6640
 22689  19A6  29B6               	goto	l23281
 22690  19A7                     u6640:
 22691                           	line	96
 22692                           	
 22693  19A7                     l23279:	
 22694                           ;DelayOff_B1.c: 95: {
 22695                           ;DelayOff_B1.c: 96: DelayOff->Value=DelayTimejudge(value);
 22696  19A7  0824               	movf	(setDelayOff_GO@value),w
 22697  19A8  319A  2223  3199   	fcall	_DelayTimejudge
 22698  19AB  0020               	movlb 0	; select bank0
 22699  19AC  00A5               	movwf	(??_setDelayOff_GO+0)+0
 22700  19AD  0021               	movlb 1	; select bank1
 22701  19AE  0839               	movf	(_DelayOff)^080h,w
 22702  19AF  3E01               	addlw	01h
 22703  19B0  0086               	movwf	fsr1l
 22704  19B1  0187               	clrf fsr1h	
 22705                           	
 22706  19B2  0020               	movlb 0	; select bank0
 22707  19B3  0825               	movf	(??_setDelayOff_GO+0)+0,w
 22708  19B4  0081               	movwf	indf1
 22709                           	line	97
 22710                           ;DelayOff_B1.c: 97: }
 22711  19B5  29C6               	goto	l23285
 22712                           	line	98
 22713                           	
 22714  19B6                     l3514:	
 22715                           	
 22716  19B6                     l23281:	
 22717                           ;DelayOff_B1.c: 98: else if(command == 0)
 22718  19B6  08A3               	movf	(setDelayOff_GO@command),f
 22719  19B7  1D03               	skipz
 22720  19B8  29BA               	goto	u6651
 22721  19B9  29BB               	goto	u6650
 22722  19BA                     u6651:
 22723  19BA  29C6               	goto	l23285
 22724  19BB                     u6650:
 22725                           	line	100
 22726                           	
 22727  19BB                     l23283:	
 22728                           ;DelayOff_B1.c: 99: {
 22729                           ;DelayOff_B1.c: 100: Product->Data[sw+26]=0;
 22730  19BB  0826               	movf	(setDelayOff_GO@sw),w
 22731  19BC  3E1A               	addlw	01Ah
 22732  19BD  077D               	addwf	(_Product),w
 22733  19BE  00A5               	movwf	(??_setDelayOff_GO+0)+0
 22734  19BF  0825               	movf	0+(??_setDelayOff_GO+0)+0,w
 22735  19C0  0086               	movwf	fsr1l
 22736  19C1  3001               	movlw 1	; select bank2/3
 22737  19C2  0087               	movwf fsr1h	
 22738                           	
 22739  19C3  0181               	clrf	indf1
 22740  19C4  29C6               	goto	l23285
 22741                           	line	101
 22742                           	
 22743  19C5                     l3516:	
 22744  19C5  29C6               	goto	l23285
 22745                           	line	102
 22746                           	
 22747  19C6                     l3515:	
 22748                           	
 22749  19C6                     l23285:	
 22750                           ;DelayOff_B1.c: 101: }
 22751                           ;DelayOff_B1.c: 102: DelayOff->SecondTime=0;
 22752  19C6  0021               	movlb 1	; select bank1
 22753  19C7  0839               	movf	(_DelayOff)^080h,w
 22754  19C8  3E02               	addlw	02h
 22755  19C9  0086               	movwf	fsr1l
 22756  19CA  0187               	clrf fsr1h	
 22757                           	
 22758  19CB  3000               	movlw	low(0)
 22759  19CC  3FC0               	movwi	[0]fsr1
 22760  19CD  3000               	movlw	high(0)
 22761  19CE  3FC1               	movwi	[1]fsr1
 22762                           	line	103
 22763                           	
 22764  19CF                     l23287:	
 22765                           ;DelayOff_B1.c: 103: DelayOff->MinuteTime=0;
 22766  19CF  0839               	movf	(_DelayOff)^080h,w
 22767  19D0  3E04               	addlw	04h
 22768  19D1  0086               	movwf	fsr1l
 22769  19D2  0187               	clrf fsr1h	
 22770                           	
 22771  19D3  0181               	clrf	indf1
 22772  19D4  29D5               	goto	l3517
 22773                           	line	104
 22774                           	
 22775  19D5                     l3513:	
 22776                           	line	105
 22777                           	
 22778  19D5                     l3517:	
 22779  19D5  0008               	return
 22780                           	opt stack 0
 22781                           GLOBAL	__end_of_setDelayOff_GO
 22782  19D6                     	__end_of_setDelayOff_GO:
 22783 ;; =============== function _setDelayOff_GO ends ============
 22784                           
 22785                           	signat	_setDelayOff_GO,12408
 22786                           	global	_setTxData
 22787                           psect	text3329,local,class=CODE,delta=2
 22788                           global __ptext3329
 22789  1A72                     __ptext3329:
 22790                           
 22791 ;; *************** function _setTxData *****************
 22792 ;; Defined at:
 22793 ;;		line 129 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 22794 ;; Parameters:    Size  Location     Type
 22795 ;;  rf              1    wreg     unsigned char 
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;  rf              1    4[BANK0 ] unsigned char 
 22798 ;;  i               1    5[BANK0 ] unsigned char 
 22799 ;; Return value:  Size  Location     Type
 22800 ;;		None               void
 22801 ;; Registers used:
 22802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22803 ;; Tracked objects:
 22804 ;;		On entry : 0/0
 22805 ;;		On exit  : 0/0
 22806 ;;		Unchanged: 0/0
 22807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 22808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 22809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 22811 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 22812 ;;Total ram usage:        4 bytes
 22813 ;; Hardware stack levels used:    1
 22814 ;; Hardware stack levels required when called:    5
 22815 ;; This function calls:
 22816 ;;		_RfPointSelect
 22817 ;; This function is called by:
 22818 ;;		_DlyOff_Main
 22819 ;;		_setDimmerLights_Adj
 22820 ;;		_setControl_Lights_Table
 22821 ;;		_setRFSW_Control
 22822 ;;		_setRFSW_AdjControl
 22823 ;;		_Sw_OnFunc
 22824 ;;		_Sw_OffFunc
 22825 ;; This function uses a non-reentrant model
 22826 ;;
 22827                           psect	text3329
 22828                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 22829                           	line	129
 22830                           	global	__size_of_setTxData
 22831  004F                     	__size_of_setTxData	equ	__end_of_setTxData-_setTxData
 22832                           	
 22833  1A72                     _setTxData:	
 22834                           	opt	stack 8
 22835                           ; Regs used in _setTxData: [wreg+fsr1l-status,0+pclath+cstack]
 22836                           ;setTxData@rf stored from wreg
 22837                           	line	131
 22838  1A72  0020               	movlb 0	; select bank0
 22839  1A73  00A4               	movwf	(setTxData@rf)
 22840                           	
 22841  1A74                     l23247:	
 22842                           ;RF_Control_B1.c: 130: char i;
 22843                           ;RF_Control_B1.c: 131: RfPointSelect(rf);
 22844  1A74  0824               	movf	(setTxData@rf),w
 22845  1A75  31A0  2034  319A   	fcall	_RfPointSelect
 22846                           	line	132
 22847                           	
 22848  1A78                     l23249:	
 22849                           ;RF_Control_B1.c: 132: if(RF->Enable)
 22850  1A78  0021               	movlb 1	; select bank1
 22851  1A79  083E               	movf	(_RF)^080h,w
 22852  1A7A  0086               	movwf	fsr1l
 22853  1A7B  0187               	clrf fsr1h	
 22854                           	
 22855  1A7C  1C01               	btfss	indf1,0
 22856  1A7D  2A7F               	goto	u6591
 22857  1A7E  2A80               	goto	u6590
 22858  1A7F                     u6591:
 22859  1A7F  2AC0               	goto	l13146
 22860  1A80                     u6590:
 22861                           	line	134
 22862                           	
 22863  1A80                     l23251:	
 22864                           ;RF_Control_B1.c: 133: {
 22865                           ;RF_Control_B1.c: 134: if(RF->TransceiveGO == 0 && 1)
 22866  1A80  083E               	movf	(_RF)^080h,w
 22867  1A81  0086               	movwf	fsr1l
 22868  1A82  0187               	clrf fsr1h	
 22869                           	
 22870  1A83  1901               	btfsc	indf1,2
 22871  1A84  2A86               	goto	u6601
 22872  1A85  2A87               	goto	u6600
 22873  1A86                     u6601:
 22874  1A86  2AC0               	goto	l13146
 22875  1A87                     u6600:
 22876                           	line	137
 22877                           	
 22878  1A87                     l23253:	
 22879                           ;RF_Control_B1.c: 135: {
 22880                           ;RF_Control_B1.c: 137: RF->TransceiveGO=1;
 22881  1A87  083E               	movf	(_RF)^080h,w
 22882  1A88  0086               	movwf	fsr1l
 22883  1A89  0187               	clrf fsr1h	
 22884                           	
 22885  1A8A  1501               	bsf	indf1,2
 22886                           	line	138
 22887                           	
 22888  1A8B                     l23255:	
 22889                           ;RF_Control_B1.c: 138: RF_Data[0]=0x63;
 22890  1A8B  3063               	movlw	(063h)
 22891  1A8C  0020               	movlb 0	; select bank0
 22892  1A8D  00A2               	movwf	(??_setTxData+0)+0
 22893  1A8E  0822               	movf	(??_setTxData+0)+0,w
 22894  1A8F  0021               	movlb 1	; select bank1
 22895  1A90  00A0               	movwf	(_RF_Data)^080h
 22896                           	line	139
 22897                           	
 22898  1A91                     l23257:	
 22899                           ;RF_Control_B1.c: 139: RF_Data[1]=0x02;
 22900  1A91  3002               	movlw	(02h)
 22901  1A92  0020               	movlb 0	; select bank0
 22902  1A93  00A2               	movwf	(??_setTxData+0)+0
 22903  1A94  0822               	movf	(??_setTxData+0)+0,w
 22904  1A95  0021               	movlb 1	; select bank1
 22905  1A96  00A1               	movwf	0+(_RF_Data)^080h+01h
 22906                           	line	140
 22907                           	
 22908  1A97                     l23259:	
 22909                           ;RF_Control_B1.c: 140: for(i=2 ;i< 21 ;i++)
 22910  1A97  3002               	movlw	(02h)
 22911  1A98  0020               	movlb 0	; select bank0
 22912  1A99  00A2               	movwf	(??_setTxData+0)+0
 22913  1A9A  0822               	movf	(??_setTxData+0)+0,w
 22914  1A9B  00A5               	movwf	(setTxData@i)
 22915                           	
 22916  1A9C                     l23261:	
 22917  1A9C  3015               	movlw	(015h)
 22918  1A9D  0225               	subwf	(setTxData@i),w
 22919  1A9E  1C03               	skipc
 22920  1A9F  2AA1               	goto	u6611
 22921  1AA0  2AA2               	goto	u6610
 22922  1AA1                     u6611:
 22923  1AA1  2AA4               	goto	l23265
 22924  1AA2                     u6610:
 22925  1AA2  2AC0               	goto	l13146
 22926                           	
 22927  1AA3                     l23263:	
 22928  1AA3  2AC0               	goto	l13146
 22929                           	line	141
 22930                           	
 22931  1AA4                     l13144:	
 22932                           	line	142
 22933                           	
 22934  1AA4                     l23265:	
 22935                           ;RF_Control_B1.c: 141: {
 22936                           ;RF_Control_B1.c: 142: RF_Data[i]=Product->Data[i];
 22937  1AA4  0825               	movf	(setTxData@i),w
 22938  1AA5  077D               	addwf	(_Product),w
 22939  1AA6  00A2               	movwf	(??_setTxData+0)+0
 22940  1AA7  0822               	movf	0+(??_setTxData+0)+0,w
 22941  1AA8  0086               	movwf	fsr1l
 22942  1AA9  3001               	movlw 1	; select bank2/3
 22943  1AAA  0087               	movwf fsr1h	
 22944                           	
 22945  1AAB  0801               	movf	indf1,w
 22946  1AAC  00A3               	movwf	(??_setTxData+1)+0
 22947  1AAD  0825               	movf	(setTxData@i),w
 22948  1AAE  3EA0               	addlw	_RF_Data&0ffh
 22949  1AAF  0086               	movwf	fsr1l
 22950  1AB0  0187               	clrf fsr1h	
 22951                           	
 22952  1AB1  0823               	movf	(??_setTxData+1)+0,w
 22953  1AB2  0081               	movwf	indf1
 22954                           	line	140
 22955                           	
 22956  1AB3                     l23267:	
 22957  1AB3  3001               	movlw	(01h)
 22958  1AB4  00A2               	movwf	(??_setTxData+0)+0
 22959  1AB5  0822               	movf	(??_setTxData+0)+0,w
 22960  1AB6  07A5               	addwf	(setTxData@i),f
 22961                           	
 22962  1AB7                     l23269:	
 22963  1AB7  3015               	movlw	(015h)
 22964  1AB8  0225               	subwf	(setTxData@i),w
 22965  1AB9  1C03               	skipc
 22966  1ABA  2ABC               	goto	u6621
 22967  1ABB  2ABD               	goto	u6620
 22968  1ABC                     u6621:
 22969  1ABC  2AA4               	goto	l23265
 22970  1ABD                     u6620:
 22971  1ABD  2AC0               	goto	l13146
 22972                           	
 22973  1ABE                     l13145:	
 22974  1ABE  2AC0               	goto	l13146
 22975                           	line	167
 22976                           	
 22977  1ABF                     l13143:	
 22978  1ABF  2AC0               	goto	l13146
 22979                           	line	168
 22980                           	
 22981  1AC0                     l13142:	
 22982                           	line	169
 22983                           	
 22984  1AC0                     l13146:	
 22985  1AC0  0008               	return
 22986                           	opt stack 0
 22987                           GLOBAL	__end_of_setTxData
 22988  1AC1                     	__end_of_setTxData:
 22989 ;; =============== function _setTxData ends ============
 22990                           
 22991                           	signat	_setTxData,4216
 22992                           	global	_setDimmerLights_Switch
 22993                           psect	text3330,local,class=CODE,delta=2
 22994                           global __ptext3330
 22995  2152                     __ptext3330:
 22996                           
 22997 ;; *************** function _setDimmerLights_Switch *****************
 22998 ;; Defined at:
 22999 ;;		line 450 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23000 ;; Parameters:    Size  Location     Type
 23001 ;;  lights          1    wreg     unsigned char 
 23002 ;;  command         1    2[BANK0 ] unsigned char 
 23003 ;; Auto vars:     Size  Location     Type
 23004 ;;  lights          1    3[BANK0 ] unsigned char 
 23005 ;; Return value:  Size  Location     Type
 23006 ;;		None               void
 23007 ;; Registers used:
 23008 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23009 ;; Tracked objects:
 23010 ;;		On entry : 0/0
 23011 ;;		On exit  : 0/0
 23012 ;;		Unchanged: 0/0
 23013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23015 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23018 ;;Total ram usage:        2 bytes
 23019 ;; Hardware stack levels used:    1
 23020 ;; Hardware stack levels required when called:    5
 23021 ;; This function calls:
 23022 ;;		_DimmerLightsPointSelect
 23023 ;; This function is called by:
 23024 ;;		_DlyOff_Main
 23025 ;;		_setRFSW_Control
 23026 ;;		_Sw_OnFunc
 23027 ;;		_Sw_OffFunc
 23028 ;; This function uses a non-reentrant model
 23029 ;;
 23030                           psect	text3330
 23031                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23032                           	line	450
 23033                           	global	__size_of_setDimmerLights_Switch
 23034  0011                     	__size_of_setDimmerLights_Switch	equ	__end_of_setDimmerLights_Switch-_setDimmerLights_S
                                 witch
 23035                           	
 23036  2152                     _setDimmerLights_Switch:	
 23037                           	opt	stack 8
 23038                           ; Regs used in _setDimmerLights_Switch: [wreg+fsr1l-status,0+pclath+cstack]
 23039                           ;setDimmerLights_Switch@lights stored from wreg
 23040  2152  0020               	movlb 0	; select bank0
 23041  2153  00A3               	movwf	(setDimmerLights_Switch@lights)
 23042                           	line	451
 23043                           	
 23044  2154                     l23243:	
 23045                           ;Dimmer_B1.c: 451: DimmerLightsPointSelect(lights);
 23046  2154  0823               	movf	(setDimmerLights_Switch@lights),w
 23047  2155  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 23048                           	line	452
 23049                           	
 23050  2158                     l23245:	
 23051                           ;Dimmer_B1.c: 452: DimmerLights->Switch=command;
 23052  2158  0020               	movlb 0	; select bank0
 23053  2159  086D               	movf	(_DimmerLights),w
 23054  215A  3E09               	addlw	09h
 23055  215B  0086               	movwf	fsr1l
 23056  215C  3001               	movlw 1	; select bank2/3
 23057  215D  0087               	movwf fsr1h	
 23058                           	
 23059  215E  0822               	movf	(setDimmerLights_Switch@command),w
 23060  215F  1001               	bcf	indf1,0
 23061  2160  1D03               	skipz
 23062  2161  1401               	bsf	indf1,0
 23063                           	line	453
 23064                           	
 23065  2162                     l4769:	
 23066  2162  0008               	return
 23067                           	opt stack 0
 23068                           GLOBAL	__end_of_setDimmerLights_Switch
 23069  2163                     	__end_of_setDimmerLights_Switch:
 23070 ;; =============== function _setDimmerLights_Switch ends ============
 23071                           
 23072                           	signat	_setDimmerLights_Switch,8312
 23073                           	global	_setDimmerLights_Trigger
 23074                           psect	text3331,local,class=CODE,delta=2
 23075                           global __ptext3331
 23076  2141                     __ptext3331:
 23077                           
 23078 ;; *************** function _setDimmerLights_Trigger *****************
 23079 ;; Defined at:
 23080 ;;		line 460 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 23081 ;; Parameters:    Size  Location     Type
 23082 ;;  lights          1    wreg     unsigned char 
 23083 ;;  command         1    2[BANK0 ] unsigned char 
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;  lights          1    3[BANK0 ] unsigned char 
 23086 ;; Return value:  Size  Location     Type
 23087 ;;		None               void
 23088 ;; Registers used:
 23089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23090 ;; Tracked objects:
 23091 ;;		On entry : 0/0
 23092 ;;		On exit  : 0/0
 23093 ;;		Unchanged: 0/0
 23094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23095 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23099 ;;Total ram usage:        2 bytes
 23100 ;; Hardware stack levels used:    1
 23101 ;; Hardware stack levels required when called:    5
 23102 ;; This function calls:
 23103 ;;		_DimmerLightsPointSelect
 23104 ;; This function is called by:
 23105 ;;		_DlyOff_Main
 23106 ;;		_setRFSW_Control
 23107 ;;		_Sw_OnFunc
 23108 ;;		_Sw_OffFunc
 23109 ;; This function uses a non-reentrant model
 23110 ;;
 23111                           psect	text3331
 23112                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 23113                           	line	460
 23114                           	global	__size_of_setDimmerLights_Trigger
 23115  0011                     	__size_of_setDimmerLights_Trigger	equ	__end_of_setDimmerLights_Trigger-_setDimmerLights
                                 _Trigger
 23116                           	
 23117  2141                     _setDimmerLights_Trigger:	
 23118                           	opt	stack 8
 23119                           ; Regs used in _setDimmerLights_Trigger: [wreg+fsr1l-status,0+pclath+cstack]
 23120                           ;setDimmerLights_Trigger@lights stored from wreg
 23121  2141  0020               	movlb 0	; select bank0
 23122  2142  00A3               	movwf	(setDimmerLights_Trigger@lights)
 23123                           	line	461
 23124                           	
 23125  2143                     l23239:	
 23126                           ;Dimmer_B1.c: 461: DimmerLightsPointSelect(lights);
 23127  2143  0823               	movf	(setDimmerLights_Trigger@lights),w
 23128  2144  31AF  27AC  31A1   	fcall	_DimmerLightsPointSelect
 23129                           	line	462
 23130                           	
 23131  2147                     l23241:	
 23132                           ;Dimmer_B1.c: 462: DimmerLights->Trigger=command;
 23133  2147  0020               	movlb 0	; select bank0
 23134  2148  086D               	movf	(_DimmerLights),w
 23135  2149  3E09               	addlw	09h
 23136  214A  0086               	movwf	fsr1l
 23137  214B  3001               	movlw 1	; select bank2/3
 23138  214C  0087               	movwf fsr1h	
 23139                           	
 23140  214D  0822               	movf	(setDimmerLights_Trigger@command),w
 23141  214E  1081               	bcf	indf1,1
 23142  214F  1D03               	skipz
 23143  2150  1481               	bsf	indf1,1
 23144                           	line	463
 23145                           	
 23146  2151                     l4775:	
 23147  2151  0008               	return
 23148                           	opt stack 0
 23149                           GLOBAL	__end_of_setDimmerLights_Trigger
 23150  2152                     	__end_of_setDimmerLights_Trigger:
 23151 ;; =============== function _setDimmerLights_Trigger ends ============
 23152                           
 23153                           	signat	_setDimmerLights_Trigger,8312
 23154                           	global	_setRFSW_Status
 23155                           psect	text3332,local,class=CODE,delta=2
 23156                           global __ptext3332
 23157  2090                     __ptext3332:
 23158                           
 23159 ;; *************** function _setRFSW_Status *****************
 23160 ;; Defined at:
 23161 ;;		line 412 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 23162 ;; Parameters:    Size  Location     Type
 23163 ;;  sw              1    wreg     unsigned char 
 23164 ;;  command         1    2[BANK0 ] unsigned char 
 23165 ;; Auto vars:     Size  Location     Type
 23166 ;;  sw              1    3[BANK0 ] unsigned char 
 23167 ;; Return value:  Size  Location     Type
 23168 ;;		None               void
 23169 ;; Registers used:
 23170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23171 ;; Tracked objects:
 23172 ;;		On entry : 0/0
 23173 ;;		On exit  : 0/0
 23174 ;;		Unchanged: 0/0
 23175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23176 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23179 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23180 ;;Total ram usage:        2 bytes
 23181 ;; Hardware stack levels used:    1
 23182 ;; Hardware stack levels required when called:    5
 23183 ;; This function calls:
 23184 ;;		_RfSWPointSelect
 23185 ;; This function is called by:
 23186 ;;		_DlyOff_Main
 23187 ;;		_setDimmerLights_ERROR
 23188 ;;		_setControl_Lights_Table
 23189 ;;		_Sw_OnFunc
 23190 ;;		_Sw_AdjFunc
 23191 ;; This function uses a non-reentrant model
 23192 ;;
 23193                           psect	text3332
 23194                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 23195                           	line	412
 23196                           	global	__size_of_setRFSW_Status
 23197  0010                     	__size_of_setRFSW_Status	equ	__end_of_setRFSW_Status-_setRFSW_Status
 23198                           	
 23199  2090                     _setRFSW_Status:	
 23200                           	opt	stack 8
 23201                           ; Regs used in _setRFSW_Status: [wreg+fsr1l-status,0+pclath+cstack]
 23202                           ;setRFSW_Status@sw stored from wreg
 23203  2090  0020               	movlb 0	; select bank0
 23204  2091  00A3               	movwf	(setRFSW_Status@sw)
 23205                           	line	413
 23206                           	
 23207  2092                     l23235:	
 23208                           ;RF_Control_B1.c: 413: RfSWPointSelect(sw);
 23209  2092  0823               	movf	(setRFSW_Status@sw),w
 23210  2093  31A0  2043  31A0   	fcall	_RfSWPointSelect
 23211                           	line	414
 23212                           	
 23213  2096                     l23237:	
 23214                           ;RF_Control_B1.c: 414: RFSW->Status=command;
 23215  2096  0021               	movlb 1	; select bank1
 23216  2097  083F               	movf	(_RFSW)^080h,w
 23217  2098  0086               	movwf	fsr1l
 23218  2099  0187               	clrf fsr1h	
 23219                           	
 23220  209A  0020               	movlb 0	; select bank0
 23221  209B  0822               	movf	(setRFSW_Status@command),w
 23222  209C  1001               	bcf	indf1,0
 23223  209D  1D03               	skipz
 23224  209E  1401               	bsf	indf1,0
 23225                           	line	415
 23226                           	
 23227  209F                     l13205:	
 23228  209F  0008               	return
 23229                           	opt stack 0
 23230                           GLOBAL	__end_of_setRFSW_Status
 23231  20A0                     	__end_of_setRFSW_Status:
 23232 ;; =============== function _setRFSW_Status ends ============
 23233                           
 23234                           	signat	_setRFSW_Status,8312
 23235                           	global	_setSw_Status
 23236                           psect	text3333,local,class=CODE,delta=2
 23237                           global __ptext3333
 23238  2080                     __ptext3333:
 23239                           
 23240 ;; *************** function _setSw_Status *****************
 23241 ;; Defined at:
 23242 ;;		line 87 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 23243 ;; Parameters:    Size  Location     Type
 23244 ;;  sw              1    wreg     unsigned char 
 23245 ;;  command         1    2[BANK0 ] unsigned char 
 23246 ;; Auto vars:     Size  Location     Type
 23247 ;;  sw              1    3[BANK0 ] unsigned char 
 23248 ;; Return value:  Size  Location     Type
 23249 ;;		None               void
 23250 ;; Registers used:
 23251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23252 ;; Tracked objects:
 23253 ;;		On entry : 0/0
 23254 ;;		On exit  : 0/0
 23255 ;;		Unchanged: 0/0
 23256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23257 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23261 ;;Total ram usage:        2 bytes
 23262 ;; Hardware stack levels used:    1
 23263 ;; Hardware stack levels required when called:    5
 23264 ;; This function calls:
 23265 ;;		_SwPointSelect
 23266 ;; This function is called by:
 23267 ;;		_DlyOff_Main
 23268 ;;		_setDimmerLights_ERROR
 23269 ;;		_setControl_Lights_Table
 23270 ;;		_setRFSW_Control
 23271 ;; This function uses a non-reentrant model
 23272 ;;
 23273                           psect	text3333
 23274                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 23275                           	line	87
 23276                           	global	__size_of_setSw_Status
 23277  0010                     	__size_of_setSw_Status	equ	__end_of_setSw_Status-_setSw_Status
 23278                           	
 23279  2080                     _setSw_Status:	
 23280                           	opt	stack 8
 23281                           ; Regs used in _setSw_Status: [wreg+fsr1l-status,0+pclath+cstack]
 23282                           ;setSw_Status@sw stored from wreg
 23283  2080  0020               	movlb 0	; select bank0
 23284  2081  00A3               	movwf	(setSw_Status@sw)
 23285                           	line	88
 23286                           	
 23287  2082                     l23231:	
 23288                           ;Switch_B1.c: 88: SwPointSelect(sw);
 23289  2082  0823               	movf	(setSw_Status@sw),w
 23290  2083  31AF  27C8  31A0   	fcall	_SwPointSelect
 23291                           	line	89
 23292                           	
 23293  2086                     l23233:	
 23294                           ;Switch_B1.c: 89: Sw->Status=command;
 23295  2086  0020               	movlb 0	; select bank0
 23296  2087  086F               	movf	(_Sw),w
 23297  2088  0086               	movwf	fsr1l
 23298  2089  3001               	movlw 1	; select bank2/3
 23299  208A  0087               	movwf fsr1h	
 23300                           	
 23301  208B  0822               	movf	(setSw_Status@command),w
 23302  208C  1301               	bcf	indf1,6
 23303  208D  1D03               	skipz
 23304  208E  1701               	bsf	indf1,6
 23305                           	line	90
 23306                           	
 23307  208F                     l14373:	
 23308  208F  0008               	return
 23309                           	opt stack 0
 23310                           GLOBAL	__end_of_setSw_Status
 23311  2090                     	__end_of_setSw_Status:
 23312 ;; =============== function _setSw_Status ends ============
 23313                           
 23314                           	signat	_setSw_Status,8312
 23315                           	global	_DlyOff_Initialization
 23316                           psect	text3334,local,class=CODE,delta=2
 23317                           global __ptext3334
 23318  2F36                     __ptext3334:
 23319                           
 23320 ;; *************** function _DlyOff_Initialization *****************
 23321 ;; Defined at:
 23322 ;;		line 57 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 23323 ;; Parameters:    Size  Location     Type
 23324 ;;  sw              1    wreg     unsigned char 
 23325 ;; Auto vars:     Size  Location     Type
 23326 ;;  sw              1    2[BANK0 ] unsigned char 
 23327 ;; Return value:  Size  Location     Type
 23328 ;;		None               void
 23329 ;; Registers used:
 23330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23331 ;; Tracked objects:
 23332 ;;		On entry : 0/0
 23333 ;;		On exit  : 0/0
 23334 ;;		Unchanged: 0/0
 23335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23337 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23339 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23340 ;;Total ram usage:        1 bytes
 23341 ;; Hardware stack levels used:    1
 23342 ;; Hardware stack levels required when called:    5
 23343 ;; This function calls:
 23344 ;;		_DelayOffPointSelect
 23345 ;; This function is called by:
 23346 ;;		_DelayOff_Initialization
 23347 ;; This function uses a non-reentrant model
 23348 ;;
 23349                           psect	text3334
 23350                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 23351                           	line	57
 23352                           	global	__size_of_DlyOff_Initialization
 23353  000C                     	__size_of_DlyOff_Initialization	equ	__end_of_DlyOff_Initialization-_DlyOff_Initializati
                                 on
 23354                           	
 23355  2F36                     _DlyOff_Initialization:	
 23356                           	opt	stack 9
 23357                           ; Regs used in _DlyOff_Initialization: [wreg+fsr1l-status,0+pclath+cstack]
 23358                           ;DlyOff_Initialization@sw stored from wreg
 23359  2F36  0020               	movlb 0	; select bank0
 23360  2F37  00A2               	movwf	(DlyOff_Initialization@sw)
 23361                           	line	58
 23362                           	
 23363  2F38                     l23227:	
 23364                           ;DelayOff_B1.c: 58: DelayOffPointSelect(sw);
 23365  2F38  0822               	movf	(DlyOff_Initialization@sw),w
 23366  2F39  31A0  2016  31AF   	fcall	_DelayOffPointSelect
 23367                           	line	59
 23368                           	
 23369  2F3C                     l23229:	
 23370                           ;DelayOff_B1.c: 59: DelayOff->Enable=1;
 23371  2F3C  0021               	movlb 1	; select bank1
 23372  2F3D  0839               	movf	(_DelayOff)^080h,w
 23373  2F3E  0086               	movwf	fsr1l
 23374  2F3F  0187               	clrf fsr1h	
 23375                           	
 23376  2F40  1401               	bsf	indf1,0
 23377                           	line	60
 23378                           	
 23379  2F41                     l3504:	
 23380  2F41  0008               	return
 23381                           	opt stack 0
 23382                           GLOBAL	__end_of_DlyOff_Initialization
 23383  2F42                     	__end_of_DlyOff_Initialization:
 23384 ;; =============== function _DlyOff_Initialization ends ============
 23385                           
 23386                           	signat	_DlyOff_Initialization,4216
 23387                           	global	_CC2500_WriteREG
 23388                           psect	text3335,local,class=CODE,delta=2
 23389                           global __ptext3335
 23390  22CA                     __ptext3335:
 23391                           
 23392 ;; *************** function _CC2500_WriteREG *****************
 23393 ;; Defined at:
 23394 ;;		line 228 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 23395 ;; Parameters:    Size  Location     Type
 23396 ;;  w_addr          1    wreg     unsigned char 
 23397 ;;  value           1    2[BANK0 ] unsigned char 
 23398 ;; Auto vars:     Size  Location     Type
 23399 ;;  w_addr          1    4[BANK0 ] unsigned char 
 23400 ;; Return value:  Size  Location     Type
 23401 ;;		None               void
 23402 ;; Registers used:
 23403 ;;		wreg, status,2, status,0, pclath, cstack
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23409 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23413 ;;Total ram usage:        3 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:    5
 23416 ;; This function calls:
 23417 ;;		_CC2500_WriteByte
 23418 ;; This function is called by:
 23419 ;;		_CC2500_InitSetREG
 23420 ;;		_CC2500_InitPATable
 23421 ;; This function uses a non-reentrant model
 23422 ;;
 23423                           psect	text3335
 23424                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 23425                           	line	228
 23426                           	global	__size_of_CC2500_WriteREG
 23427  001E                     	__size_of_CC2500_WriteREG	equ	__end_of_CC2500_WriteREG-_CC2500_WriteREG
 23428                           	
 23429  22CA                     _CC2500_WriteREG:	
 23430                           	opt	stack 8
 23431                           ; Regs used in _CC2500_WriteREG: [wreg+status,2+status,0+pclath+cstack]
 23432                           ;CC2500_WriteREG@w_addr stored from wreg
 23433  22CA  0020               	movlb 0	; select bank0
 23434  22CB  00A4               	movwf	(CC2500_WriteREG@w_addr)
 23435                           	line	229
 23436                           	
 23437  22CC                     l23215:	
 23438                           ;CC2500_B1.c: 229: RC4=0;
 23439  22CC  120E               	bcf	(116/8),(116)&7
 23440                           	line	230
 23441                           	
 23442  22CD                     l23217:	
 23443                           ;CC2500_B1.c: 230: SPI0Buffer=w_addr;
 23444  22CD  0824               	movf	(CC2500_WriteREG@w_addr),w
 23445  22CE  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 23446  22CF  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 23447  22D0  0021               	movlb 1	; select bank1
 23448  22D1  00C2               	movwf	(_SPI0Buffer)^080h
 23449                           	line	231
 23450                           ;CC2500_B1.c: 231: while(RC2==1);
 23451  22D2  2AD3               	goto	l2346
 23452                           	
 23453  22D3                     l2347:	
 23454                           	
 23455  22D3                     l2346:	
 23456  22D3  0020               	movlb 0	; select bank0
 23457  22D4  190E               	btfsc	(114/8),(114)&7
 23458  22D5  2AD7               	goto	u6581
 23459  22D6  2AD8               	goto	u6580
 23460  22D7                     u6581:
 23461  22D7  2AD3               	goto	l2346
 23462  22D8                     u6580:
 23463  22D8  2AD9               	goto	l23219
 23464                           	
 23465  22D9                     l2348:	
 23466                           	line	232
 23467                           	
 23468  22D9                     l23219:	
 23469                           ;CC2500_B1.c: 232: CC2500_WriteByte();
 23470  22D9  31A3  2375  31A2   	fcall	_CC2500_WriteByte
 23471                           	line	233
 23472                           	
 23473  22DC                     l23221:	
 23474                           ;CC2500_B1.c: 233: SPI0Buffer=value;
 23475  22DC  0020               	movlb 0	; select bank0
 23476  22DD  0822               	movf	(CC2500_WriteREG@value),w
 23477  22DE  00A3               	movwf	(??_CC2500_WriteREG+0)+0
 23478  22DF  0823               	movf	(??_CC2500_WriteREG+0)+0,w
 23479  22E0  0021               	movlb 1	; select bank1
 23480  22E1  00C2               	movwf	(_SPI0Buffer)^080h
 23481                           	line	234
 23482                           	
 23483  22E2                     l23223:	
 23484                           ;CC2500_B1.c: 234: CC2500_WriteByte();
 23485  22E2  31A3  2375  31A2   	fcall	_CC2500_WriteByte
 23486                           	line	235
 23487                           	
 23488  22E5                     l23225:	
 23489                           ;CC2500_B1.c: 235: RC4=1;
 23490  22E5  0020               	movlb 0	; select bank0
 23491  22E6  160E               	bsf	(116/8),(116)&7
 23492                           	line	236
 23493                           	
 23494  22E7                     l2349:	
 23495  22E7  0008               	return
 23496                           	opt stack 0
 23497                           GLOBAL	__end_of_CC2500_WriteREG
 23498  22E8                     	__end_of_CC2500_WriteREG:
 23499 ;; =============== function _CC2500_WriteREG ends ============
 23500                           
 23501                           	signat	_CC2500_WriteREG,8312
 23502                           	global	_CC2500_PowerRST
 23503                           psect	text3336,local,class=CODE,delta=2
 23504                           global __ptext3336
 23505  266A                     __ptext3336:
 23506                           
 23507 ;; *************** function _CC2500_PowerRST *****************
 23508 ;; Defined at:
 23509 ;;		line 111 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 23510 ;; Parameters:    Size  Location     Type
 23511 ;;		None
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;		None
 23514 ;; Return value:  Size  Location     Type
 23515 ;;		None               void
 23516 ;; Registers used:
 23517 ;;		wreg, status,2, status,0, pclath, cstack
 23518 ;; Tracked objects:
 23519 ;;		On entry : 0/0
 23520 ;;		On exit  : 0/0
 23521 ;;		Unchanged: 0/0
 23522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23526 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23527 ;;Total ram usage:        1 bytes
 23528 ;; Hardware stack levels used:    1
 23529 ;; Hardware stack levels required when called:    5
 23530 ;; This function calls:
 23531 ;;		_DelayTime_1us
 23532 ;;		_CC2500_WriteByte
 23533 ;; This function is called by:
 23534 ;;		_CC2500_PowerOnInitial
 23535 ;; This function uses a non-reentrant model
 23536 ;;
 23537                           psect	text3336
 23538                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 23539                           	line	111
 23540                           	global	__size_of_CC2500_PowerRST
 23541  0037                     	__size_of_CC2500_PowerRST	equ	__end_of_CC2500_PowerRST-_CC2500_PowerRST
 23542                           	
 23543  266A                     _CC2500_PowerRST:	
 23544                           	opt	stack 9
 23545                           ; Regs used in _CC2500_PowerRST: [wreg+status,2+status,0+pclath+cstack]
 23546                           	line	112
 23547                           	
 23548  266A                     l23201:	
 23549                           ;CC2500_B1.c: 112: RC1=0;
 23550  266A  0020               	movlb 0	; select bank0
 23551  266B  108E               	bcf	(113/8),(113)&7
 23552                           	line	113
 23553                           ;CC2500_B1.c: 113: RC0=0;
 23554  266C  100E               	bcf	(112/8),(112)&7
 23555                           	line	114
 23556                           ;CC2500_B1.c: 114: RC4=1;
 23557  266D  160E               	bsf	(116/8),(116)&7
 23558                           	line	115
 23559                           	
 23560  266E                     l23203:	
 23561                           ;CC2500_B1.c: 115: DelayTime_1us(10);
 23562  266E  300A               	movlw	low(0Ah)
 23563  266F  00A0               	movwf	(?_DelayTime_1us)
 23564  2670  3000               	movlw	high(0Ah)
 23565  2671  00A1               	movwf	((?_DelayTime_1us))+1
 23566  2672  31A5  2599  31A6   	fcall	_DelayTime_1us
 23567                           	line	116
 23568                           	
 23569  2675                     l23205:	
 23570                           ;CC2500_B1.c: 116: RC4=0;
 23571  2675  0020               	movlb 0	; select bank0
 23572  2676  120E               	bcf	(116/8),(116)&7
 23573                           	line	117
 23574                           ;CC2500_B1.c: 117: DelayTime_1us(10);
 23575  2677  300A               	movlw	low(0Ah)
 23576  2678  00A0               	movwf	(?_DelayTime_1us)
 23577  2679  3000               	movlw	high(0Ah)
 23578  267A  00A1               	movwf	((?_DelayTime_1us))+1
 23579  267B  31A5  2599  31A6   	fcall	_DelayTime_1us
 23580                           	line	118
 23581                           	
 23582  267E                     l23207:	
 23583                           ;CC2500_B1.c: 118: RC4=1;
 23584  267E  0020               	movlb 0	; select bank0
 23585  267F  160E               	bsf	(116/8),(116)&7
 23586                           	line	119
 23587                           ;CC2500_B1.c: 119: DelayTime_1us(40);
 23588  2680  3028               	movlw	low(028h)
 23589  2681  00A0               	movwf	(?_DelayTime_1us)
 23590  2682  3000               	movlw	high(028h)
 23591  2683  00A1               	movwf	((?_DelayTime_1us))+1
 23592  2684  31A5  2599  31A6   	fcall	_DelayTime_1us
 23593                           	line	120
 23594                           	
 23595  2687                     l23209:	
 23596                           ;CC2500_B1.c: 120: RC4=0;
 23597  2687  0020               	movlb 0	; select bank0
 23598  2688  120E               	bcf	(116/8),(116)&7
 23599                           	line	121
 23600                           	
 23601  2689                     l23211:	
 23602                           ;CC2500_B1.c: 121: SPI0Buffer=0x30;
 23603  2689  3030               	movlw	(030h)
 23604  268A  00A6               	movwf	(??_CC2500_PowerRST+0)+0
 23605  268B  0826               	movf	(??_CC2500_PowerRST+0)+0,w
 23606  268C  0021               	movlb 1	; select bank1
 23607  268D  00C2               	movwf	(_SPI0Buffer)^080h
 23608                           	line	122
 23609                           ;CC2500_B1.c: 122: while(RC2==1);
 23610  268E  2E8F               	goto	l2301
 23611                           	
 23612  268F                     l2302:	
 23613                           	
 23614  268F                     l2301:	
 23615  268F  0020               	movlb 0	; select bank0
 23616  2690  190E               	btfsc	(114/8),(114)&7
 23617  2691  2E93               	goto	u6561
 23618  2692  2E94               	goto	u6560
 23619  2693                     u6561:
 23620  2693  2E8F               	goto	l2301
 23621  2694                     u6560:
 23622  2694  2E95               	goto	l23213
 23623                           	
 23624  2695                     l2303:	
 23625                           	line	123
 23626                           	
 23627  2695                     l23213:	
 23628                           ;CC2500_B1.c: 123: CC2500_WriteByte();
 23629  2695  31A3  2375  31A6   	fcall	_CC2500_WriteByte
 23630                           	line	124
 23631                           ;CC2500_B1.c: 124: while(RC2==1);
 23632  2698  2E99               	goto	l2304
 23633                           	
 23634  2699                     l2305:	
 23635                           	
 23636  2699                     l2304:	
 23637  2699  0020               	movlb 0	; select bank0
 23638  269A  190E               	btfsc	(114/8),(114)&7
 23639  269B  2E9D               	goto	u6571
 23640  269C  2E9E               	goto	u6570
 23641  269D                     u6571:
 23642  269D  2E99               	goto	l2304
 23643  269E                     u6570:
 23644                           	
 23645  269E                     l2306:	
 23646                           	line	125
 23647                           ;CC2500_B1.c: 125: RC0=0;
 23648  269E  100E               	bcf	(112/8),(112)&7
 23649                           	line	126
 23650                           ;CC2500_B1.c: 126: RC4=1;
 23651  269F  160E               	bsf	(116/8),(116)&7
 23652                           	line	127
 23653                           	
 23654  26A0                     l2307:	
 23655  26A0  0008               	return
 23656                           	opt stack 0
 23657                           GLOBAL	__end_of_CC2500_PowerRST
 23658  26A1                     	__end_of_CC2500_PowerRST:
 23659 ;; =============== function _CC2500_PowerRST ends ============
 23660                           
 23661                           	signat	_CC2500_PowerRST,88
 23662                           	global	_setRF_RxStatus
 23663                           psect	text3337,local,class=CODE,delta=2
 23664                           global __ptext3337
 23665  2070                     __ptext3337:
 23666                           
 23667 ;; *************** function _setRF_RxStatus *****************
 23668 ;; Defined at:
 23669 ;;		line 44 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 23670 ;; Parameters:    Size  Location     Type
 23671 ;;  rf              1    wreg     unsigned char 
 23672 ;;  command         1    2[BANK0 ] unsigned char 
 23673 ;; Auto vars:     Size  Location     Type
 23674 ;;  rf              1    3[BANK0 ] unsigned char 
 23675 ;; Return value:  Size  Location     Type
 23676 ;;		None               void
 23677 ;; Registers used:
 23678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23679 ;; Tracked objects:
 23680 ;;		On entry : 0/0
 23681 ;;		On exit  : 0/0
 23682 ;;		Unchanged: 0/0
 23683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23684 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23687 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23688 ;;Total ram usage:        2 bytes
 23689 ;; Hardware stack levels used:    1
 23690 ;; Hardware stack levels required when called:    5
 23691 ;; This function calls:
 23692 ;;		_RfPointSelect
 23693 ;; This function is called by:
 23694 ;;		_CC2500_RxData
 23695 ;; This function uses a non-reentrant model
 23696 ;;
 23697                           psect	text3337
 23698                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 23699                           	line	44
 23700                           	global	__size_of_setRF_RxStatus
 23701  0010                     	__size_of_setRF_RxStatus	equ	__end_of_setRF_RxStatus-_setRF_RxStatus
 23702                           	
 23703  2070                     _setRF_RxStatus:	
 23704                           	opt	stack 7
 23705                           ; Regs used in _setRF_RxStatus: [wreg+fsr1l-status,0+pclath+cstack]
 23706                           ;setRF_RxStatus@rf stored from wreg
 23707  2070  0020               	movlb 0	; select bank0
 23708  2071  00A3               	movwf	(setRF_RxStatus@rf)
 23709                           	line	45
 23710                           	
 23711  2072                     l23197:	
 23712                           ;RF_Control_B1.c: 45: RfPointSelect(rf);
 23713  2072  0823               	movf	(setRF_RxStatus@rf),w
 23714  2073  31A0  2034  31A0   	fcall	_RfPointSelect
 23715                           	line	46
 23716                           	
 23717  2076                     l23199:	
 23718                           ;RF_Control_B1.c: 46: RF->RxStatus=command;
 23719  2076  0021               	movlb 1	; select bank1
 23720  2077  083E               	movf	(_RF)^080h,w
 23721  2078  0086               	movwf	fsr1l
 23722  2079  0187               	clrf fsr1h	
 23723                           	
 23724  207A  0020               	movlb 0	; select bank0
 23725  207B  0822               	movf	(setRF_RxStatus@command),w
 23726  207C  1181               	bcf	indf1,3
 23727  207D  1D03               	skipz
 23728  207E  1581               	bsf	indf1,3
 23729                           	line	47
 23730                           	
 23731  207F                     l13120:	
 23732  207F  0008               	return
 23733                           	opt stack 0
 23734                           GLOBAL	__end_of_setRF_RxStatus
 23735  2080                     	__end_of_setRF_RxStatus:
 23736 ;; =============== function _setRF_RxStatus ends ============
 23737                           
 23738                           	signat	_setRF_RxStatus,8312
 23739                           	global	_CC2500_ReadStatus
 23740                           psect	text3338,local,class=CODE,delta=2
 23741                           global __ptext3338
 23742  22E8                     __ptext3338:
 23743                           
 23744 ;; *************** function _CC2500_ReadStatus *****************
 23745 ;; Defined at:
 23746 ;;		line 268 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 23747 ;; Parameters:    Size  Location     Type
 23748 ;;  status_addr     1    wreg     unsigned char 
 23749 ;; Auto vars:     Size  Location     Type
 23750 ;;  status_addr     1    3[BANK0 ] unsigned char 
 23751 ;; Return value:  Size  Location     Type
 23752 ;;		None               void
 23753 ;; Registers used:
 23754 ;;		wreg, status,2, status,0, pclath, cstack
 23755 ;; Tracked objects:
 23756 ;;		On entry : 0/0
 23757 ;;		On exit  : 0/0
 23758 ;;		Unchanged: 0/0
 23759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23764 ;;Total ram usage:        2 bytes
 23765 ;; Hardware stack levels used:    1
 23766 ;; Hardware stack levels required when called:    5
 23767 ;; This function calls:
 23768 ;;		_CC2500_WriteByte
 23769 ;;		_CC2500_ReadByte
 23770 ;; This function is called by:
 23771 ;;		_CC2500_RxData
 23772 ;; This function uses a non-reentrant model
 23773 ;;
 23774                           psect	text3338
 23775                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 23776                           	line	268
 23777                           	global	__size_of_CC2500_ReadStatus
 23778  0020                     	__size_of_CC2500_ReadStatus	equ	__end_of_CC2500_ReadStatus-_CC2500_ReadStatus
 23779                           	
 23780  22E8                     _CC2500_ReadStatus:	
 23781                           	opt	stack 7
 23782                           ; Regs used in _CC2500_ReadStatus: [wreg+status,2+status,0+pclath+cstack]
 23783                           ;CC2500_ReadStatus@status_addr stored from wreg
 23784  22E8  0020               	movlb 0	; select bank0
 23785  22E9  00A3               	movwf	(CC2500_ReadStatus@status_addr)
 23786                           	line	269
 23787                           	
 23788  22EA                     l23187:	
 23789                           ;CC2500_B1.c: 269: RC4=0;
 23790  22EA  120E               	bcf	(116/8),(116)&7
 23791                           	line	270
 23792                           	
 23793  22EB                     l23189:	
 23794                           ;CC2500_B1.c: 270: SPI0Buffer=status_addr+0xC0;
 23795  22EB  0823               	movf	(CC2500_ReadStatus@status_addr),w
 23796  22EC  3EC0               	addlw	0C0h
 23797  22ED  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 23798  22EE  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 23799  22EF  0021               	movlb 1	; select bank1
 23800  22F0  00C2               	movwf	(_SPI0Buffer)^080h
 23801                           	line	272
 23802                           ;CC2500_B1.c: 272: while(RC2==1);
 23803  22F1  2AF2               	goto	l2364
 23804                           	
 23805  22F2                     l2365:	
 23806                           	
 23807  22F2                     l2364:	
 23808  22F2  0020               	movlb 0	; select bank0
 23809  22F3  190E               	btfsc	(114/8),(114)&7
 23810  22F4  2AF6               	goto	u6551
 23811  22F5  2AF7               	goto	u6550
 23812  22F6                     u6551:
 23813  22F6  2AF2               	goto	l2364
 23814  22F7                     u6550:
 23815  22F7  2AF8               	goto	l23191
 23816                           	
 23817  22F8                     l2366:	
 23818                           	line	274
 23819                           	
 23820  22F8                     l23191:	
 23821                           ;CC2500_B1.c: 274: CC2500_WriteByte();
 23822  22F8  31A3  2375  31A2   	fcall	_CC2500_WriteByte
 23823                           	line	275
 23824                           ;CC2500_B1.c: 275: CC2500_ReadByte();
 23825  22FB  31A4  2489  31A2   	fcall	_CC2500_ReadByte
 23826                           	line	276
 23827                           	
 23828  22FE                     l23193:	
 23829                           ;CC2500_B1.c: 276: RC4=1;
 23830  22FE  0020               	movlb 0	; select bank0
 23831  22FF  160E               	bsf	(116/8),(116)&7
 23832                           	line	278
 23833                           	
 23834  2300                     l23195:	
 23835                           ;CC2500_B1.c: 278: s_data=SPI0Buffer;
 23836  2300  0021               	movlb 1	; select bank1
 23837  2301  0842               	movf	(_SPI0Buffer)^080h,w
 23838  2302  0020               	movlb 0	; select bank0
 23839  2303  00A2               	movwf	(??_CC2500_ReadStatus+0)+0
 23840  2304  0822               	movf	(??_CC2500_ReadStatus+0)+0,w
 23841  2305  0021               	movlb 1	; select bank1
 23842  2306  00C6               	movwf	(_s_data)^080h
 23843                           	line	279
 23844                           	
 23845  2307                     l2367:	
 23846  2307  0008               	return
 23847                           	opt stack 0
 23848                           GLOBAL	__end_of_CC2500_ReadStatus
 23849  2308                     	__end_of_CC2500_ReadStatus:
 23850 ;; =============== function _CC2500_ReadStatus ends ============
 23851                           
 23852                           	signat	_CC2500_ReadStatus,4216
 23853                           	global	_CC2500_WriteCommand
 23854                           psect	text3339,local,class=CODE,delta=2
 23855                           global __ptext3339
 23856  223D                     __ptext3339:
 23857                           
 23858 ;; *************** function _CC2500_WriteCommand *****************
 23859 ;; Defined at:
 23860 ;;		line 254 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 23861 ;; Parameters:    Size  Location     Type
 23862 ;;  command         1    wreg     unsigned char 
 23863 ;; Auto vars:     Size  Location     Type
 23864 ;;  command         1    3[BANK0 ] unsigned char 
 23865 ;; Return value:  Size  Location     Type
 23866 ;;		None               void
 23867 ;; Registers used:
 23868 ;;		wreg, status,2, status,0, pclath, cstack
 23869 ;; Tracked objects:
 23870 ;;		On entry : 0/0
 23871 ;;		On exit  : 0/0
 23872 ;;		Unchanged: 0/0
 23873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 23875 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 23878 ;;Total ram usage:        2 bytes
 23879 ;; Hardware stack levels used:    1
 23880 ;; Hardware stack levels required when called:    5
 23881 ;; This function calls:
 23882 ;;		_CC2500_WriteByte
 23883 ;; This function is called by:
 23884 ;;		_CC2500_TxData
 23885 ;;		_CC2500_RxData
 23886 ;;		_CC2500_ClearTXFIFO
 23887 ;;		_CC2500_ClearRXFIFO
 23888 ;;		_CC2500_FrequencyCabr
 23889 ;;		_CC2500_SIDLEMode
 23890 ;;		_setRF_Main
 23891 ;;		_setRF_Enable
 23892 ;;		_RF_RxDisable
 23893 ;; This function uses a non-reentrant model
 23894 ;;
 23895                           psect	text3339
 23896                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 23897                           	line	254
 23898                           	global	__size_of_CC2500_WriteCommand
 23899  0015                     	__size_of_CC2500_WriteCommand	equ	__end_of_CC2500_WriteCommand-_CC2500_WriteCommand
 23900                           	
 23901  223D                     _CC2500_WriteCommand:	
 23902                           	opt	stack 8
 23903                           ; Regs used in _CC2500_WriteCommand: [wreg+status,2+status,0+pclath+cstack]
 23904                           ;CC2500_WriteCommand@command stored from wreg
 23905  223D  0020               	movlb 0	; select bank0
 23906  223E  00A3               	movwf	(CC2500_WriteCommand@command)
 23907                           	line	255
 23908                           	
 23909  223F                     l23179:	
 23910                           ;CC2500_B1.c: 255: RC4=0;
 23911  223F  120E               	bcf	(116/8),(116)&7
 23912                           	line	256
 23913                           	
 23914  2240                     l23181:	
 23915                           ;CC2500_B1.c: 256: SPI0Buffer=command;
 23916  2240  0823               	movf	(CC2500_WriteCommand@command),w
 23917  2241  00A2               	movwf	(??_CC2500_WriteCommand+0)+0
 23918  2242  0822               	movf	(??_CC2500_WriteCommand+0)+0,w
 23919  2243  0021               	movlb 1	; select bank1
 23920  2244  00C2               	movwf	(_SPI0Buffer)^080h
 23921                           	line	258
 23922                           ;CC2500_B1.c: 258: while(RC2==1);
 23923  2245  2A46               	goto	l2358
 23924                           	
 23925  2246                     l2359:	
 23926                           	
 23927  2246                     l2358:	
 23928  2246  0020               	movlb 0	; select bank0
 23929  2247  190E               	btfsc	(114/8),(114)&7
 23930  2248  2A4A               	goto	u6541
 23931  2249  2A4B               	goto	u6540
 23932  224A                     u6541:
 23933  224A  2A46               	goto	l2358
 23934  224B                     u6540:
 23935  224B  2A4C               	goto	l23183
 23936                           	
 23937  224C                     l2360:	
 23938                           	line	260
 23939                           	
 23940  224C                     l23183:	
 23941                           ;CC2500_B1.c: 260: CC2500_WriteByte();
 23942  224C  31A3  2375  31A2   	fcall	_CC2500_WriteByte
 23943                           	line	261
 23944                           	
 23945  224F                     l23185:	
 23946                           ;CC2500_B1.c: 261: RC4=1;
 23947  224F  0020               	movlb 0	; select bank0
 23948  2250  160E               	bsf	(116/8),(116)&7
 23949                           	line	263
 23950                           	
 23951  2251                     l2361:	
 23952  2251  0008               	return
 23953                           	opt stack 0
 23954                           GLOBAL	__end_of_CC2500_WriteCommand
 23955  2252                     	__end_of_CC2500_WriteCommand:
 23956 ;; =============== function _CC2500_WriteCommand ends ============
 23957                           
 23958                           	signat	_CC2500_WriteCommand,4216
 23959                           	global	_setBuz
 23960                           psect	text3340,local,class=CODE,delta=2
 23961                           global __ptext3340
 23962  1617                     __ptext3340:
 23963                           
 23964 ;; *************** function _setBuz *****************
 23965 ;; Defined at:
 23966 ;;		line 45 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  buz             1    wreg     unsigned char 
 23969 ;;  count           1    9[BANK0 ] unsigned char 
 23970 ;;  time            2   10[BANK0 ] int 
 23971 ;; Auto vars:     Size  Location     Type
 23972 ;;  buz             1   13[BANK0 ] unsigned char 
 23973 ;; Return value:  Size  Location     Type
 23974 ;;		None               void
 23975 ;; Registers used:
 23976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23977 ;; Tracked objects:
 23978 ;;		On entry : 0/0
 23979 ;;		On exit  : 0/0
 23980 ;;		Unchanged: 0/0
 23981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 23982 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 23983 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 23985 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 23986 ;;Total ram usage:        5 bytes
 23987 ;; Hardware stack levels used:    1
 23988 ;; Hardware stack levels required when called:    5
 23989 ;; This function calls:
 23990 ;;		_BuzPointSelect
 23991 ;;		___awdiv
 23992 ;; This function is called by:
 23993 ;;		_DlyOff_Main
 23994 ;;		_setDimmerLights_Main
 23995 ;;		_DimmerLights_ERROR
 23996 ;;		_MainT
 23997 ;;		_setLog_Code
 23998 ;;		_setControl_Lights_Table
 23999 ;;		_setRFSW_Control
 24000 ;;		_setSw_Main
 24001 ;;		_Sw_OnFunc
 24002 ;; This function uses a non-reentrant model
 24003 ;;
 24004                           psect	text3340
 24005                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 24006                           	line	45
 24007                           	global	__size_of_setBuz
 24008  00A1                     	__size_of_setBuz	equ	__end_of_setBuz-_setBuz
 24009                           	
 24010  1617                     _setBuz:	
 24011                           	opt	stack 8
 24012                           ; Regs used in _setBuz: [wreg+fsr1l-status,0+pclath+cstack]
 24013                           ;setBuz@buz stored from wreg
 24014  1617  0020               	movlb 0	; select bank0
 24015  1618  00AD               	movwf	(setBuz@buz)
 24016                           	line	46
 24017                           	
 24018  1619                     l23159:	
 24019                           ;Buzzer_B1.c: 46: BuzPointSelect(buz);
 24020  1619  082D               	movf	(setBuz@buz),w
 24021  161A  31A0  2007  3196   	fcall	_BuzPointSelect
 24022                           	line	47
 24023                           ;Buzzer_B1.c: 47: time/=10;
 24024  161D  300A               	movlw	low(0Ah)
 24025  161E  0020               	movlb 0	; select bank0
 24026  161F  00A0               	movwf	(?___awdiv)
 24027  1620  3000               	movlw	high(0Ah)
 24028  1621  00A1               	movwf	((?___awdiv))+1
 24029  1622  082B               	movf	(setBuz@time+1),w
 24030  1623  01A3               	clrf	1+(?___awdiv)+02h
 24031  1624  07A3               	addwf	1+(?___awdiv)+02h
 24032  1625  082A               	movf	(setBuz@time),w
 24033  1626  01A2               	clrf	0+(?___awdiv)+02h
 24034  1627  07A2               	addwf	0+(?___awdiv)+02h
 24035                           
 24036  1628  319E  26AC  3196   	fcall	___awdiv
 24037  162B  0020               	movlb 0	; select bank0
 24038  162C  0821               	movf	(1+(?___awdiv)),w
 24039  162D  01AB               	clrf	(setBuz@time+1)
 24040  162E  07AB               	addwf	(setBuz@time+1)
 24041  162F  0820               	movf	(0+(?___awdiv)),w
 24042  1630  01AA               	clrf	(setBuz@time)
 24043  1631  07AA               	addwf	(setBuz@time)
 24044                           
 24045                           	line	48
 24046                           	
 24047  1632                     l23161:	
 24048                           ;Buzzer_B1.c: 48: if(Buz->Enable)
 24049  1632  0021               	movlb 1	; select bank1
 24050  1633  0837               	movf	(_Buz)^080h,w
 24051  1634  0086               	movwf	fsr1l
 24052  1635  3001               	movlw 1	; select bank2/3
 24053  1636  0087               	movwf fsr1h	
 24054                           	
 24055  1637  1C01               	btfss	indf1,0
 24056  1638  2E3A               	goto	u6491
 24057  1639  2E3B               	goto	u6490
 24058  163A                     u6491:
 24059  163A  2EB7               	goto	l1126
 24060  163B                     u6490:
 24061                           	line	50
 24062                           	
 24063  163B                     l23163:	
 24064                           ;Buzzer_B1.c: 49: {
 24065                           ;Buzzer_B1.c: 50: if(!Buz->GO)
 24066  163B  0837               	movf	(_Buz)^080h,w
 24067  163C  0086               	movwf	fsr1l
 24068  163D  3001               	movlw 1	; select bank2/3
 24069  163E  0087               	movwf fsr1h	
 24070                           	
 24071  163F  1881               	btfsc	indf1,1
 24072  1640  2E42               	goto	u6501
 24073  1641  2E43               	goto	u6500
 24074  1642                     u6501:
 24075  1642  2E68               	goto	l23171
 24076  1643                     u6500:
 24077                           	line	52
 24078                           	
 24079  1643                     l23165:	
 24080                           ;Buzzer_B1.c: 51: {
 24081                           ;Buzzer_B1.c: 52: Buz->GO=1;
 24082  1643  0837               	movf	(_Buz)^080h,w
 24083  1644  0086               	movwf	fsr1l
 24084  1645  3001               	movlw 1	; select bank2/3
 24085  1646  0087               	movwf fsr1h	
 24086                           	
 24087  1647  1481               	bsf	indf1,1
 24088                           	line	53
 24089                           ;Buzzer_B1.c: 53: Buz->Count=count;
 24090  1648  0020               	movlb 0	; select bank0
 24091  1649  0829               	movf	(setBuz@count),w
 24092  164A  00AC               	movwf	(??_setBuz+0)+0
 24093  164B  0021               	movlb 1	; select bank1
 24094  164C  0837               	movf	(_Buz)^080h,w
 24095  164D  3E03               	addlw	03h
 24096  164E  0086               	movwf	fsr1l
 24097  164F  3001               	movlw 1	; select bank2/3
 24098  1650  0087               	movwf fsr1h	
 24099                           	
 24100  1651  0020               	movlb 0	; select bank0
 24101  1652  082C               	movf	(??_setBuz+0)+0,w
 24102  1653  0081               	movwf	indf1
 24103                           	line	54
 24104                           ;Buzzer_B1.c: 54: Buz->TimeValue=time;
 24105  1654  0021               	movlb 1	; select bank1
 24106  1655  0837               	movf	(_Buz)^080h,w
 24107  1656  3E06               	addlw	06h
 24108  1657  0086               	movwf	fsr1l
 24109  1658  3001               	movlw 1	; select bank2/3
 24110  1659  0087               	movwf fsr1h	
 24111                           	
 24112  165A  0020               	movlb 0	; select bank0
 24113  165B  082A               	movf	(setBuz@time),w
 24114  165C  3FC0               	movwi	[0]fsr1
 24115  165D  082B               	movf	(setBuz@time+1),w
 24116  165E  3FC1               	movwi	[1]fsr1
 24117                           	line	56
 24118                           	
 24119  165F                     l23167:	
 24120                           ;Buzzer_B1.c: 56: if(buz == 1)
 24121  165F  082D               	movf	(setBuz@buz),w
 24122  1660  3A01               	xorlw	01h&0ffh
 24123  1661  1D03               	skipz
 24124  1662  2E64               	goto	u6511
 24125  1663  2E65               	goto	u6510
 24126  1664                     u6511:
 24127  1664  2EB7               	goto	l1126
 24128  1665                     u6510:
 24129                           	line	58
 24130                           	
 24131  1665                     l23169:	
 24132                           ;Buzzer_B1.c: 57: {
 24133                           ;Buzzer_B1.c: 58: RB3=1;
 24134  1665  158D               	bsf	(107/8),(107)&7
 24135  1666  2EB7               	goto	l1126
 24136                           	line	59
 24137                           	
 24138  1667                     l1121:	
 24139                           	line	61
 24140                           ;Buzzer_B1.c: 59: }
 24141                           ;Buzzer_B1.c: 61: }
 24142  1667  2EB7               	goto	l1126
 24143                           	line	62
 24144                           	
 24145  1668                     l1120:	
 24146                           	line	64
 24147                           	
 24148  1668                     l23171:	
 24149                           ;Buzzer_B1.c: 62: else
 24150                           ;Buzzer_B1.c: 63: {
 24151                           ;Buzzer_B1.c: 64: if(!Buz->BufferStatus1)
 24152  1668  0021               	movlb 1	; select bank1
 24153  1669  0837               	movf	(_Buz)^080h,w
 24154  166A  0086               	movwf	fsr1l
 24155  166B  3001               	movlw 1	; select bank2/3
 24156  166C  0087               	movwf fsr1h	
 24157                           	
 24158  166D  1981               	btfsc	indf1,3
 24159  166E  2E70               	goto	u6521
 24160  166F  2E71               	goto	u6520
 24161  1670                     u6521:
 24162  1670  2E8E               	goto	l23175
 24163  1671                     u6520:
 24164                           	line	66
 24165                           	
 24166  1671                     l23173:	
 24167                           ;Buzzer_B1.c: 65: {
 24168                           ;Buzzer_B1.c: 66: Buz->BufferStatus1=1;
 24169  1671  0837               	movf	(_Buz)^080h,w
 24170  1672  0086               	movwf	fsr1l
 24171  1673  3001               	movlw 1	; select bank2/3
 24172  1674  0087               	movwf fsr1h	
 24173                           	
 24174  1675  1581               	bsf	indf1,3
 24175                           	line	67
 24176                           ;Buzzer_B1.c: 67: Buz->CountBuffer1=count;
 24177  1676  0020               	movlb 0	; select bank0
 24178  1677  0829               	movf	(setBuz@count),w
 24179  1678  00AC               	movwf	(??_setBuz+0)+0
 24180  1679  0021               	movlb 1	; select bank1
 24181  167A  0837               	movf	(_Buz)^080h,w
 24182  167B  3E04               	addlw	04h
 24183  167C  0086               	movwf	fsr1l
 24184  167D  3001               	movlw 1	; select bank2/3
 24185  167E  0087               	movwf fsr1h	
 24186                           	
 24187  167F  0020               	movlb 0	; select bank0
 24188  1680  082C               	movf	(??_setBuz+0)+0,w
 24189  1681  0081               	movwf	indf1
 24190                           	line	68
 24191                           ;Buzzer_B1.c: 68: Buz->TimeValueBuffer1=time;
 24192  1682  0021               	movlb 1	; select bank1
 24193  1683  0837               	movf	(_Buz)^080h,w
 24194  1684  3E08               	addlw	08h
 24195  1685  0086               	movwf	fsr1l
 24196  1686  3001               	movlw 1	; select bank2/3
 24197  1687  0087               	movwf fsr1h	
 24198                           	
 24199  1688  0020               	movlb 0	; select bank0
 24200  1689  082A               	movf	(setBuz@time),w
 24201  168A  3FC0               	movwi	[0]fsr1
 24202  168B  082B               	movf	(setBuz@time+1),w
 24203  168C  3FC1               	movwi	[1]fsr1
 24204                           	line	69
 24205                           ;Buzzer_B1.c: 69: }
 24206  168D  2EB7               	goto	l1126
 24207                           	line	70
 24208                           	
 24209  168E                     l1123:	
 24210                           	
 24211  168E                     l23175:	
 24212                           ;Buzzer_B1.c: 70: else if(!Buz->BufferStatus2)
 24213  168E  0021               	movlb 1	; select bank1
 24214  168F  0837               	movf	(_Buz)^080h,w
 24215  1690  0086               	movwf	fsr1l
 24216  1691  3001               	movlw 1	; select bank2/3
 24217  1692  0087               	movwf fsr1h	
 24218                           	
 24219  1693  1A01               	btfsc	indf1,4
 24220  1694  2E96               	goto	u6531
 24221  1695  2E97               	goto	u6530
 24222  1696                     u6531:
 24223  1696  2EB7               	goto	l1126
 24224  1697                     u6530:
 24225                           	line	72
 24226                           	
 24227  1697                     l23177:	
 24228                           ;Buzzer_B1.c: 71: {
 24229                           ;Buzzer_B1.c: 72: Buz->BufferStatus2=1;
 24230  1697  0837               	movf	(_Buz)^080h,w
 24231  1698  0086               	movwf	fsr1l
 24232  1699  3001               	movlw 1	; select bank2/3
 24233  169A  0087               	movwf fsr1h	
 24234                           	
 24235  169B  1601               	bsf	indf1,4
 24236                           	line	73
 24237                           ;Buzzer_B1.c: 73: Buz->CountBuffer2=count;
 24238  169C  0020               	movlb 0	; select bank0
 24239  169D  0829               	movf	(setBuz@count),w
 24240  169E  00AC               	movwf	(??_setBuz+0)+0
 24241  169F  0021               	movlb 1	; select bank1
 24242  16A0  0837               	movf	(_Buz)^080h,w
 24243  16A1  3E05               	addlw	05h
 24244  16A2  0086               	movwf	fsr1l
 24245  16A3  3001               	movlw 1	; select bank2/3
 24246  16A4  0087               	movwf fsr1h	
 24247                           	
 24248  16A5  0020               	movlb 0	; select bank0
 24249  16A6  082C               	movf	(??_setBuz+0)+0,w
 24250  16A7  0081               	movwf	indf1
 24251                           	line	74
 24252                           ;Buzzer_B1.c: 74: Buz->TimeValueBuffer2=time;
 24253  16A8  0021               	movlb 1	; select bank1
 24254  16A9  0837               	movf	(_Buz)^080h,w
 24255  16AA  3E0A               	addlw	0Ah
 24256  16AB  0086               	movwf	fsr1l
 24257  16AC  3001               	movlw 1	; select bank2/3
 24258  16AD  0087               	movwf fsr1h	
 24259                           	
 24260  16AE  0020               	movlb 0	; select bank0
 24261  16AF  082A               	movf	(setBuz@time),w
 24262  16B0  3FC0               	movwi	[0]fsr1
 24263  16B1  082B               	movf	(setBuz@time+1),w
 24264  16B2  3FC1               	movwi	[1]fsr1
 24265  16B3  2EB7               	goto	l1126
 24266                           	line	75
 24267                           	
 24268  16B4                     l1125:	
 24269  16B4  2EB7               	goto	l1126
 24270                           	line	76
 24271                           	
 24272  16B5                     l1124:	
 24273  16B5  2EB7               	goto	l1126
 24274                           	
 24275  16B6                     l1122:	
 24276  16B6  2EB7               	goto	l1126
 24277                           	line	77
 24278                           	
 24279  16B7                     l1119:	
 24280                           	line	78
 24281                           	
 24282  16B7                     l1126:	
 24283  16B7  0008               	return
 24284                           	opt stack 0
 24285                           GLOBAL	__end_of_setBuz
 24286  16B8                     	__end_of_setBuz:
 24287 ;; =============== function _setBuz ends ============
 24288                           
 24289                           	signat	_setBuz,12408
 24290                           	global	_setBuz_Enable
 24291                           psect	text3341,local,class=CODE,delta=2
 24292                           global __ptext3341
 24293  2130                     __ptext3341:
 24294                           
 24295 ;; *************** function _setBuz_Enable *****************
 24296 ;; Defined at:
 24297 ;;		line 34 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 24298 ;; Parameters:    Size  Location     Type
 24299 ;;  buz             1    wreg     unsigned char 
 24300 ;;  command         1    2[BANK0 ] unsigned char 
 24301 ;; Auto vars:     Size  Location     Type
 24302 ;;  buz             1    3[BANK0 ] unsigned char 
 24303 ;; Return value:  Size  Location     Type
 24304 ;;		None               void
 24305 ;; Registers used:
 24306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24307 ;; Tracked objects:
 24308 ;;		On entry : 0/0
 24309 ;;		On exit  : 0/0
 24310 ;;		Unchanged: 0/0
 24311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24312 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 24316 ;;Total ram usage:        2 bytes
 24317 ;; Hardware stack levels used:    1
 24318 ;; Hardware stack levels required when called:    5
 24319 ;; This function calls:
 24320 ;;		_BuzPointSelect
 24321 ;; This function is called by:
 24322 ;;		_setBuz_Initialization
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           psect	text3341
 24326                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 24327                           	line	34
 24328                           	global	__size_of_setBuz_Enable
 24329  0011                     	__size_of_setBuz_Enable	equ	__end_of_setBuz_Enable-_setBuz_Enable
 24330                           	
 24331  2130                     _setBuz_Enable:	
 24332                           	opt	stack 8
 24333                           ; Regs used in _setBuz_Enable: [wreg+fsr1l-status,0+pclath+cstack]
 24334                           ;setBuz_Enable@buz stored from wreg
 24335  2130  0020               	movlb 0	; select bank0
 24336  2131  00A3               	movwf	(setBuz_Enable@buz)
 24337                           	line	35
 24338                           	
 24339  2132                     l23155:	
 24340                           ;Buzzer_B1.c: 35: BuzPointSelect(buz);
 24341  2132  0823               	movf	(setBuz_Enable@buz),w
 24342  2133  31A0  2007  31A1   	fcall	_BuzPointSelect
 24343                           	line	36
 24344                           	
 24345  2136                     l23157:	
 24346                           ;Buzzer_B1.c: 36: Buz->Enable=command;
 24347  2136  0021               	movlb 1	; select bank1
 24348  2137  0837               	movf	(_Buz)^080h,w
 24349  2138  0086               	movwf	fsr1l
 24350  2139  3001               	movlw 1	; select bank2/3
 24351  213A  0087               	movwf fsr1h	
 24352                           	
 24353  213B  0020               	movlb 0	; select bank0
 24354  213C  0822               	movf	(setBuz_Enable@command),w
 24355  213D  1001               	bcf	indf1,0
 24356  213E  1D03               	skipz
 24357  213F  1401               	bsf	indf1,0
 24358                           	line	37
 24359                           	
 24360  2140                     l1113:	
 24361  2140  0008               	return
 24362                           	opt stack 0
 24363                           GLOBAL	__end_of_setBuz_Enable
 24364  2141                     	__end_of_setBuz_Enable:
 24365 ;; =============== function _setBuz_Enable ends ============
 24366                           
 24367                           	signat	_setBuz_Enable,8312
 24368                           	global	_setBuz_Main
 24369                           psect	text3342,local,class=CODE,delta=2
 24370                           global __ptext3342
 24371  0C64                     __ptext3342:
 24372                           
 24373 ;; *************** function _setBuz_Main *****************
 24374 ;; Defined at:
 24375 ;;		line 81 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 24376 ;; Parameters:    Size  Location     Type
 24377 ;;  buz             1    wreg     unsigned char 
 24378 ;; Auto vars:     Size  Location     Type
 24379 ;;  buz             1    6[BANK0 ] unsigned char 
 24380 ;; Return value:  Size  Location     Type
 24381 ;;		None               void
 24382 ;; Registers used:
 24383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24384 ;; Tracked objects:
 24385 ;;		On entry : 0/0
 24386 ;;		On exit  : 0/0
 24387 ;;		Unchanged: 0/0
 24388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 24390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24392 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 24393 ;;Total ram usage:        5 bytes
 24394 ;; Hardware stack levels used:    1
 24395 ;; Hardware stack levels required when called:    5
 24396 ;; This function calls:
 24397 ;;		_BuzPointSelect
 24398 ;; This function is called by:
 24399 ;;		_Buzzer_Main
 24400 ;; This function uses a non-reentrant model
 24401 ;;
 24402                           psect	text3342
 24403                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 24404                           	line	81
 24405                           	global	__size_of_setBuz_Main
 24406  0105                     	__size_of_setBuz_Main	equ	__end_of_setBuz_Main-_setBuz_Main
 24407                           	
 24408  0C64                     _setBuz_Main:	
 24409                           	opt	stack 9
 24410                           ; Regs used in _setBuz_Main: [wreg+fsr1l-status,0+pclath+cstack]
 24411                           ;setBuz_Main@buz stored from wreg
 24412  0C64  0020               	movlb 0	; select bank0
 24413  0C65  00A6               	movwf	(setBuz_Main@buz)
 24414                           	line	82
 24415                           	
 24416  0C66                     l23117:	
 24417                           ;Buzzer_B1.c: 82: BuzPointSelect(buz);
 24418  0C66  0826               	movf	(setBuz_Main@buz),w
 24419  0C67  31A0  2007  318C   	fcall	_BuzPointSelect
 24420                           	line	84
 24421                           	
 24422  0C6A                     l23119:	
 24423                           ;Buzzer_B1.c: 84: if(buz == 1)
 24424  0C6A  0020               	movlb 0	; select bank0
 24425  0C6B  0826               	movf	(setBuz_Main@buz),w
 24426  0C6C  3A01               	xorlw	01h&0ffh
 24427  0C6D  1D03               	skipz
 24428  0C6E  2C70               	goto	u6411
 24429  0C6F  2C71               	goto	u6410
 24430  0C70                     u6411:
 24431  0C70  2C83               	goto	l23123
 24432  0C71                     u6410:
 24433                           	line	86
 24434                           	
 24435  0C71                     l23121:	
 24436                           ;Buzzer_B1.c: 85: {
 24437                           ;Buzzer_B1.c: 86: Buz->Switch=(RB3)?1:0;
 24438  0C71  3000               	movlw	0
 24439  0C72  198D               	btfsc	(107/8),(107)&7
 24440  0C73  3001               	movlw	1
 24441  0C74  00A2               	movwf	(??_setBuz_Main+0)+0
 24442  0C75  0021               	movlb 1	; select bank1
 24443  0C76  0837               	movf	(_Buz)^080h,w
 24444  0C77  0086               	movwf	fsr1l
 24445  0C78  3001               	movlw 1	; select bank2/3
 24446  0C79  0087               	movwf fsr1h	
 24447                           	
 24448  0C7A  0020               	movlb 0	; select bank0
 24449  0C7B  0EA2               	swapf	(??_setBuz_Main+0)+0,f
 24450  0C7C  0DA2               	rlf	(??_setBuz_Main+0)+0,f
 24451  0C7D  0801               	movf	indf1,w
 24452  0C7E  0622               	xorwf	(??_setBuz_Main+0)+0,w
 24453  0C7F  39DF               	andlw	not (((1<<1)-1)<<5)
 24454  0C80  0622               	xorwf	(??_setBuz_Main+0)+0,w
 24455  0C81  0081               	movwf	indf1
 24456  0C82  2C83               	goto	l23123
 24457                           	line	87
 24458                           	
 24459  0C83                     l1129:	
 24460                           	line	89
 24461                           	
 24462  0C83                     l23123:	
 24463                           ;Buzzer_B1.c: 87: }
 24464                           ;Buzzer_B1.c: 89: if(Buz->GO)
 24465  0C83  0021               	movlb 1	; select bank1
 24466  0C84  0837               	movf	(_Buz)^080h,w
 24467  0C85  0086               	movwf	fsr1l
 24468  0C86  3001               	movlw 1	; select bank2/3
 24469  0C87  0087               	movwf fsr1h	
 24470                           	
 24471  0C88  1C81               	btfss	indf1,1
 24472  0C89  2C8B               	goto	u6421
 24473  0C8A  2C8C               	goto	u6420
 24474  0C8B                     u6421:
 24475  0C8B  2D68               	goto	l1141
 24476  0C8C                     u6420:
 24477                           	line	91
 24478                           	
 24479  0C8C                     l23125:	
 24480                           ;Buzzer_B1.c: 90: {
 24481                           ;Buzzer_B1.c: 91: Buz->Time++;
 24482  0C8C  0837               	movf	(_Buz)^080h,w
 24483  0C8D  3E01               	addlw	01h
 24484  0C8E  0086               	movwf	fsr1l
 24485  0C8F  3001               	movlw 1	; select bank2/3
 24486  0C90  0087               	movwf fsr1h	
 24487                           	
 24488  0C91  3001               	movlw	01h
 24489  0C92  0781               	addwf	indf1,f
 24490  0C93  3141               	addfsr	fsr1,1
 24491  0C94  1803               	skipnc
 24492  0C95  0A81               	incf	indf1,f
 24493                           	line	92
 24494                           	
 24495  0C96                     l23127:	
 24496                           ;Buzzer_B1.c: 92: if(Buz->Time >= Buz->TimeValue)
 24497  0C96  0837               	movf	(_Buz)^080h,w
 24498  0C97  3E06               	addlw	06h
 24499  0C98  0086               	movwf	fsr1l
 24500  0C99  3001               	movlw 1	; select bank2/3
 24501  0C9A  0087               	movwf fsr1h	
 24502                           	
 24503  0C9B  3F40               	moviw	[0]fsr1
 24504  0C9C  0020               	movlb 0	; select bank0
 24505  0C9D  00A2               	movwf	(??_setBuz_Main+0)+0
 24506  0C9E  3F41               	moviw	[1]fsr1
 24507  0C9F  00A3               	movwf	(??_setBuz_Main+0)+0+1
 24508  0CA0  0021               	movlb 1	; select bank1
 24509  0CA1  0837               	movf	(_Buz)^080h,w
 24510  0CA2  3E01               	addlw	01h
 24511  0CA3  0086               	movwf	fsr1l
 24512  0CA4  3001               	movlw 1	; select bank2/3
 24513  0CA5  0087               	movwf fsr1h	
 24514                           	
 24515  0CA6  3F40               	moviw	[0]fsr1
 24516  0CA7  0020               	movlb 0	; select bank0
 24517  0CA8  00A4               	movwf	(??_setBuz_Main+2)+0
 24518  0CA9  3F41               	moviw	[1]fsr1
 24519  0CAA  00A5               	movwf	(??_setBuz_Main+2)+0+1
 24520  0CAB  0823               	movf	1+(??_setBuz_Main+0)+0,w
 24521  0CAC  0225               	subwf	1+(??_setBuz_Main+2)+0,w
 24522  0CAD  1D03               	skipz
 24523  0CAE  2CB1               	goto	u6435
 24524  0CAF  0822               	movf	0+(??_setBuz_Main+0)+0,w
 24525  0CB0  0224               	subwf	0+(??_setBuz_Main+2)+0,w
 24526  0CB1                     u6435:
 24527  0CB1  1C03               	skipc
 24528  0CB2  2CB4               	goto	u6431
 24529  0CB3  2CB5               	goto	u6430
 24530  0CB4                     u6431:
 24531  0CB4  2D68               	goto	l1141
 24532  0CB5                     u6430:
 24533                           	line	94
 24534                           	
 24535  0CB5                     l23129:	
 24536                           ;Buzzer_B1.c: 93: {
 24537                           ;Buzzer_B1.c: 94: Buz->Time=0;
 24538  0CB5  0021               	movlb 1	; select bank1
 24539  0CB6  0837               	movf	(_Buz)^080h,w
 24540  0CB7  3E01               	addlw	01h
 24541  0CB8  0086               	movwf	fsr1l
 24542  0CB9  3001               	movlw 1	; select bank2/3
 24543  0CBA  0087               	movwf fsr1h	
 24544                           	
 24545  0CBB  3000               	movlw	low(0)
 24546  0CBC  3FC0               	movwi	[0]fsr1
 24547  0CBD  3000               	movlw	high(0)
 24548  0CBE  3FC1               	movwi	[1]fsr1
 24549                           	line	95
 24550                           ;Buzzer_B1.c: 95: if(!Buz->Switch)
 24551  0CBF  0837               	movf	(_Buz)^080h,w
 24552  0CC0  0086               	movwf	fsr1l
 24553  0CC1  3001               	movlw 1	; select bank2/3
 24554  0CC2  0087               	movwf fsr1h	
 24555                           	
 24556  0CC3  1A81               	btfsc	indf1,5
 24557  0CC4  2CC6               	goto	u6441
 24558  0CC5  2CC7               	goto	u6440
 24559  0CC6                     u6441:
 24560  0CC6  2D4E               	goto	l23147
 24561  0CC7                     u6440:
 24562                           	line	97
 24563                           	
 24564  0CC7                     l23131:	
 24565                           ;Buzzer_B1.c: 96: {
 24566                           ;Buzzer_B1.c: 97: if(Buz->Count == 0)
 24567  0CC7  0837               	movf	(_Buz)^080h,w
 24568  0CC8  3E03               	addlw	03h
 24569  0CC9  0086               	movwf	fsr1l
 24570  0CCA  3001               	movlw 1	; select bank2/3
 24571  0CCB  0087               	movwf fsr1h	
 24572                           	
 24573  0CCC  0881               	movf	indf1,f
 24574  0CCD  1D03               	skipz
 24575  0CCE  2CD0               	goto	u6451
 24576  0CCF  2CD1               	goto	u6450
 24577  0CD0                     u6451:
 24578  0CD0  2D45               	goto	l23143
 24579  0CD1                     u6450:
 24580                           	line	99
 24581                           	
 24582  0CD1                     l23133:	
 24583                           ;Buzzer_B1.c: 98: {
 24584                           ;Buzzer_B1.c: 99: if(Buz->BufferStatus1)
 24585  0CD1  0837               	movf	(_Buz)^080h,w
 24586  0CD2  0086               	movwf	fsr1l
 24587  0CD3  3001               	movlw 1	; select bank2/3
 24588  0CD4  0087               	movwf fsr1h	
 24589                           	
 24590  0CD5  1D81               	btfss	indf1,3
 24591  0CD6  2CD8               	goto	u6461
 24592  0CD7  2CD9               	goto	u6460
 24593  0CD8                     u6461:
 24594  0CD8  2D06               	goto	l23137
 24595  0CD9                     u6460:
 24596                           	line	101
 24597                           	
 24598  0CD9                     l23135:	
 24599                           ;Buzzer_B1.c: 100: {
 24600                           ;Buzzer_B1.c: 101: Buz->BufferStatus1=0;
 24601  0CD9  0837               	movf	(_Buz)^080h,w
 24602  0CDA  0086               	movwf	fsr1l
 24603  0CDB  3001               	movlw 1	; select bank2/3
 24604  0CDC  0087               	movwf fsr1h	
 24605                           	
 24606  0CDD  1181               	bcf	indf1,3
 24607                           	line	102
 24608                           ;Buzzer_B1.c: 102: Buz->Count=Buz->CountBuffer1;
 24609  0CDE  0837               	movf	(_Buz)^080h,w
 24610  0CDF  3E04               	addlw	04h
 24611  0CE0  0086               	movwf	fsr1l
 24612  0CE1  3001               	movlw 1	; select bank2/3
 24613  0CE2  0087               	movwf fsr1h	
 24614                           	
 24615  0CE3  0801               	movf	indf1,w
 24616  0CE4  0020               	movlb 0	; select bank0
 24617  0CE5  00A2               	movwf	(??_setBuz_Main+0)+0
 24618  0CE6  0021               	movlb 1	; select bank1
 24619  0CE7  0837               	movf	(_Buz)^080h,w
 24620  0CE8  3E03               	addlw	03h
 24621  0CE9  0086               	movwf	fsr1l
 24622  0CEA  3001               	movlw 1	; select bank2/3
 24623  0CEB  0087               	movwf fsr1h	
 24624                           	
 24625  0CEC  0020               	movlb 0	; select bank0
 24626  0CED  0822               	movf	(??_setBuz_Main+0)+0,w
 24627  0CEE  0081               	movwf	indf1
 24628                           	line	103
 24629                           ;Buzzer_B1.c: 103: Buz->TimeValue=Buz->TimeValueBuffer1;
 24630  0CEF  0021               	movlb 1	; select bank1
 24631  0CF0  0837               	movf	(_Buz)^080h,w
 24632  0CF1  3E08               	addlw	08h
 24633  0CF2  0086               	movwf	fsr1l
 24634  0CF3  3001               	movlw 1	; select bank2/3
 24635  0CF4  0087               	movwf fsr1h	
 24636                           	
 24637  0CF5  3F40               	moviw	[0]fsr1
 24638  0CF6  0020               	movlb 0	; select bank0
 24639  0CF7  00A2               	movwf	(??_setBuz_Main+0)+0
 24640  0CF8  3F41               	moviw	[1]fsr1
 24641  0CF9  00A3               	movwf	(??_setBuz_Main+0)+0+1
 24642  0CFA  0021               	movlb 1	; select bank1
 24643  0CFB  0837               	movf	(_Buz)^080h,w
 24644  0CFC  3E06               	addlw	06h
 24645  0CFD  0086               	movwf	fsr1l
 24646  0CFE  3001               	movlw 1	; select bank2/3
 24647  0CFF  0087               	movwf fsr1h	
 24648                           	
 24649  0D00  0020               	movlb 0	; select bank0
 24650  0D01  0822               	movf	0+(??_setBuz_Main+0)+0,w
 24651  0D02  3FC0               	movwi	[0]fsr1
 24652  0D03  0823               	movf	1+(??_setBuz_Main+0)+0,w
 24653  0D04  3FC1               	movwi	[1]fsr1
 24654                           	line	104
 24655                           ;Buzzer_B1.c: 104: }
 24656  0D05  2D68               	goto	l1141
 24657                           	line	105
 24658                           	
 24659  0D06                     l1134:	
 24660                           	
 24661  0D06                     l23137:	
 24662                           ;Buzzer_B1.c: 105: else if(Buz->BufferStatus2)
 24663  0D06  0021               	movlb 1	; select bank1
 24664  0D07  0837               	movf	(_Buz)^080h,w
 24665  0D08  0086               	movwf	fsr1l
 24666  0D09  3001               	movlw 1	; select bank2/3
 24667  0D0A  0087               	movwf fsr1h	
 24668                           	
 24669  0D0B  1E01               	btfss	indf1,4
 24670  0D0C  2D0E               	goto	u6471
 24671  0D0D  2D0F               	goto	u6470
 24672  0D0E                     u6471:
 24673  0D0E  2D3C               	goto	l23141
 24674  0D0F                     u6470:
 24675                           	line	107
 24676                           	
 24677  0D0F                     l23139:	
 24678                           ;Buzzer_B1.c: 106: {
 24679                           ;Buzzer_B1.c: 107: Buz->BufferStatus2=0;
 24680  0D0F  0837               	movf	(_Buz)^080h,w
 24681  0D10  0086               	movwf	fsr1l
 24682  0D11  3001               	movlw 1	; select bank2/3
 24683  0D12  0087               	movwf fsr1h	
 24684                           	
 24685  0D13  1201               	bcf	indf1,4
 24686                           	line	108
 24687                           ;Buzzer_B1.c: 108: Buz->Count=Buz->CountBuffer2;
 24688  0D14  0837               	movf	(_Buz)^080h,w
 24689  0D15  3E05               	addlw	05h
 24690  0D16  0086               	movwf	fsr1l
 24691  0D17  3001               	movlw 1	; select bank2/3
 24692  0D18  0087               	movwf fsr1h	
 24693                           	
 24694  0D19  0801               	movf	indf1,w
 24695  0D1A  0020               	movlb 0	; select bank0
 24696  0D1B  00A2               	movwf	(??_setBuz_Main+0)+0
 24697  0D1C  0021               	movlb 1	; select bank1
 24698  0D1D  0837               	movf	(_Buz)^080h,w
 24699  0D1E  3E03               	addlw	03h
 24700  0D1F  0086               	movwf	fsr1l
 24701  0D20  3001               	movlw 1	; select bank2/3
 24702  0D21  0087               	movwf fsr1h	
 24703                           	
 24704  0D22  0020               	movlb 0	; select bank0
 24705  0D23  0822               	movf	(??_setBuz_Main+0)+0,w
 24706  0D24  0081               	movwf	indf1
 24707                           	line	109
 24708                           ;Buzzer_B1.c: 109: Buz->TimeValue=Buz->TimeValueBuffer2;
 24709  0D25  0021               	movlb 1	; select bank1
 24710  0D26  0837               	movf	(_Buz)^080h,w
 24711  0D27  3E0A               	addlw	0Ah
 24712  0D28  0086               	movwf	fsr1l
 24713  0D29  3001               	movlw 1	; select bank2/3
 24714  0D2A  0087               	movwf fsr1h	
 24715                           	
 24716  0D2B  3F40               	moviw	[0]fsr1
 24717  0D2C  0020               	movlb 0	; select bank0
 24718  0D2D  00A2               	movwf	(??_setBuz_Main+0)+0
 24719  0D2E  3F41               	moviw	[1]fsr1
 24720  0D2F  00A3               	movwf	(??_setBuz_Main+0)+0+1
 24721  0D30  0021               	movlb 1	; select bank1
 24722  0D31  0837               	movf	(_Buz)^080h,w
 24723  0D32  3E06               	addlw	06h
 24724  0D33  0086               	movwf	fsr1l
 24725  0D34  3001               	movlw 1	; select bank2/3
 24726  0D35  0087               	movwf fsr1h	
 24727                           	
 24728  0D36  0020               	movlb 0	; select bank0
 24729  0D37  0822               	movf	0+(??_setBuz_Main+0)+0,w
 24730  0D38  3FC0               	movwi	[0]fsr1
 24731  0D39  0823               	movf	1+(??_setBuz_Main+0)+0,w
 24732  0D3A  3FC1               	movwi	[1]fsr1
 24733                           	line	110
 24734                           ;Buzzer_B1.c: 110: }
 24735  0D3B  2D68               	goto	l1141
 24736                           	line	111
 24737                           	
 24738  0D3C                     l1136:	
 24739                           	line	113
 24740                           	
 24741  0D3C                     l23141:	
 24742                           ;Buzzer_B1.c: 111: else
 24743                           ;Buzzer_B1.c: 112: {
 24744                           ;Buzzer_B1.c: 113: Buz->GO=0;
 24745  0D3C  0021               	movlb 1	; select bank1
 24746  0D3D  0837               	movf	(_Buz)^080h,w
 24747  0D3E  0086               	movwf	fsr1l
 24748  0D3F  3001               	movlw 1	; select bank2/3
 24749  0D40  0087               	movwf fsr1h	
 24750                           	
 24751  0D41  1081               	bcf	indf1,1
 24752  0D42  2D68               	goto	l1141
 24753                           	line	114
 24754                           	
 24755  0D43                     l1137:	
 24756  0D43  2D68               	goto	l1141
 24757                           	
 24758  0D44                     l1135:	
 24759                           	line	115
 24760                           ;Buzzer_B1.c: 114: }
 24761                           ;Buzzer_B1.c: 115: }
 24762  0D44  2D68               	goto	l1141
 24763                           	line	116
 24764                           	
 24765  0D45                     l1133:	
 24766                           	line	118
 24767                           	
 24768  0D45                     l23143:	
 24769                           ;Buzzer_B1.c: 116: else
 24770                           ;Buzzer_B1.c: 117: {
 24771                           ;Buzzer_B1.c: 118: Buz->Switch=1;
 24772  0D45  0837               	movf	(_Buz)^080h,w
 24773  0D46  0086               	movwf	fsr1l
 24774  0D47  3001               	movlw 1	; select bank2/3
 24775  0D48  0087               	movwf fsr1h	
 24776                           	
 24777  0D49  1681               	bsf	indf1,5
 24778                           	line	120
 24779                           	
 24780  0D4A                     l23145:	
 24781                           ;Buzzer_B1.c: 120: RB3=1;
 24782  0D4A  0020               	movlb 0	; select bank0
 24783  0D4B  158D               	bsf	(107/8),(107)&7
 24784  0D4C  2D68               	goto	l1141
 24785                           	line	122
 24786                           	
 24787  0D4D                     l1138:	
 24788                           	line	123
 24789                           ;Buzzer_B1.c: 122: }
 24790                           ;Buzzer_B1.c: 123: }
 24791  0D4D  2D68               	goto	l1141
 24792                           	line	124
 24793                           	
 24794  0D4E                     l1132:	
 24795                           	line	126
 24796                           	
 24797  0D4E                     l23147:	
 24798                           ;Buzzer_B1.c: 124: else
 24799                           ;Buzzer_B1.c: 125: {
 24800                           ;Buzzer_B1.c: 126: Buz->Switch=0;
 24801  0D4E  0021               	movlb 1	; select bank1
 24802  0D4F  0837               	movf	(_Buz)^080h,w
 24803  0D50  0086               	movwf	fsr1l
 24804  0D51  3001               	movlw 1	; select bank2/3
 24805  0D52  0087               	movwf fsr1h	
 24806                           	
 24807  0D53  1281               	bcf	indf1,5
 24808                           	line	128
 24809                           	
 24810  0D54                     l23149:	
 24811                           ;Buzzer_B1.c: 128: if(buz == 1)
 24812  0D54  0020               	movlb 0	; select bank0
 24813  0D55  0826               	movf	(setBuz_Main@buz),w
 24814  0D56  3A01               	xorlw	01h&0ffh
 24815  0D57  1D03               	skipz
 24816  0D58  2D5A               	goto	u6481
 24817  0D59  2D5B               	goto	u6480
 24818  0D5A                     u6481:
 24819  0D5A  2D5D               	goto	l23153
 24820  0D5B                     u6480:
 24821                           	line	130
 24822                           	
 24823  0D5B                     l23151:	
 24824                           ;Buzzer_B1.c: 129: {
 24825                           ;Buzzer_B1.c: 130: RB3=0;
 24826  0D5B  118D               	bcf	(107/8),(107)&7
 24827  0D5C  2D5D               	goto	l23153
 24828                           	line	131
 24829                           	
 24830  0D5D                     l1140:	
 24831                           	line	133
 24832                           	
 24833  0D5D                     l23153:	
 24834                           ;Buzzer_B1.c: 131: }
 24835                           ;Buzzer_B1.c: 133: Buz->Count--;
 24836  0D5D  0021               	movlb 1	; select bank1
 24837  0D5E  0837               	movf	(_Buz)^080h,w
 24838  0D5F  3E03               	addlw	03h
 24839  0D60  0086               	movwf	fsr1l
 24840  0D61  3001               	movlw 1	; select bank2/3
 24841  0D62  0087               	movwf fsr1h	
 24842                           	
 24843  0D63  3001               	movlw	low(01h)
 24844  0D64  0281               	subwf	indf1,f
 24845  0D65  2D68               	goto	l1141
 24846                           	line	134
 24847                           	
 24848  0D66                     l1139:	
 24849  0D66  2D68               	goto	l1141
 24850                           	line	135
 24851                           	
 24852  0D67                     l1131:	
 24853  0D67  2D68               	goto	l1141
 24854                           	line	136
 24855                           	
 24856  0D68                     l1130:	
 24857                           	line	137
 24858                           	
 24859  0D68                     l1141:	
 24860  0D68  0008               	return
 24861                           	opt stack 0
 24862                           GLOBAL	__end_of_setBuz_Main
 24863  0D69                     	__end_of_setBuz_Main:
 24864 ;; =============== function _setBuz_Main ends ============
 24865                           
 24866                           	signat	_setBuz_Main,4216
 24867                           	global	___awdiv
 24868                           psect	text3343,local,class=CODE,delta=2
 24869                           global __ptext3343
 24870  1EAC                     __ptext3343:
 24871                           
 24872 ;; *************** function ___awdiv *****************
 24873 ;; Defined at:
 24874 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 24875 ;; Parameters:    Size  Location     Type
 24876 ;;  divisor         2    0[BANK0 ] int 
 24877 ;;  dividend        2    2[BANK0 ] int 
 24878 ;; Auto vars:     Size  Location     Type
 24879 ;;  quotient        2    7[BANK0 ] int 
 24880 ;;  sign            1    6[BANK0 ] unsigned char 
 24881 ;;  counter         1    5[BANK0 ] unsigned char 
 24882 ;; Return value:  Size  Location     Type
 24883 ;;                  2    0[BANK0 ] int 
 24884 ;; Registers used:
 24885 ;;		wreg, status,2, status,0
 24886 ;; Tracked objects:
 24887 ;;		On entry : 0/0
 24888 ;;		On exit  : 0/0
 24889 ;;		Unchanged: 0/0
 24890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 24891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24892 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 24893 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 24894 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
       0       0
 24895 ;;Total ram usage:        9 bytes
 24896 ;; Hardware stack levels used:    1
 24897 ;; Hardware stack levels required when called:    4
 24898 ;; This function calls:
 24899 ;;		Nothing
 24900 ;; This function is called by:
 24901 ;;		_setBuz
 24902 ;; This function uses a non-reentrant model
 24903 ;;
 24904                           psect	text3343
 24905                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
 24906                           	line	5
 24907                           	global	__size_of___awdiv
 24908  006D                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 24909                           	
 24910  1EAC                     ___awdiv:	
 24911                           	opt	stack 8
 24912                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 24913                           	line	9
 24914                           	
 24915  1EAC                     l23007:	
 24916  1EAC  0020               	movlb 0	; select bank0
 24917  1EAD  01A6               	clrf	(___awdiv@sign)
 24918                           	line	10
 24919  1EAE  1FA1               	btfss	(___awdiv@divisor+1),7
 24920  1EAF  2EB1               	goto	u6201
 24921  1EB0  2EB2               	goto	u6200
 24922  1EB1                     u6201:
 24923  1EB1  2EBB               	goto	l23011
 24924  1EB2                     u6200:
 24925                           	line	11
 24926                           	
 24927  1EB2                     l23009:	
 24928  1EB2  09A0               	comf	(___awdiv@divisor),f
 24929  1EB3  09A1               	comf	(___awdiv@divisor+1),f
 24930  1EB4  0AA0               	incf	(___awdiv@divisor),f
 24931  1EB5  1903               	skipnz
 24932  1EB6  0AA1               	incf	(___awdiv@divisor+1),f
 24933                           	line	12
 24934  1EB7  01A6               	clrf	(___awdiv@sign)
 24935  1EB8  1403               	bsf	status,0
 24936  1EB9  0DA6               	rlf	(___awdiv@sign),f
 24937  1EBA  2EBB               	goto	l23011
 24938                           	line	13
 24939                           	
 24940  1EBB                     l18949:	
 24941                           	line	14
 24942                           	
 24943  1EBB                     l23011:	
 24944  1EBB  1FA3               	btfss	(___awdiv@dividend+1),7
 24945  1EBC  2EBE               	goto	u6211
 24946  1EBD  2EBF               	goto	u6210
 24947  1EBE                     u6211:
 24948  1EBE  2EC9               	goto	l23017
 24949  1EBF                     u6210:
 24950                           	line	15
 24951                           	
 24952  1EBF                     l23013:	
 24953  1EBF  09A2               	comf	(___awdiv@dividend),f
 24954  1EC0  09A3               	comf	(___awdiv@dividend+1),f
 24955  1EC1  0AA2               	incf	(___awdiv@dividend),f
 24956  1EC2  1903               	skipnz
 24957  1EC3  0AA3               	incf	(___awdiv@dividend+1),f
 24958                           	line	16
 24959                           	
 24960  1EC4                     l23015:	
 24961  1EC4  3001               	movlw	(01h)
 24962  1EC5  00A4               	movwf	(??___awdiv+0)+0
 24963  1EC6  0824               	movf	(??___awdiv+0)+0,w
 24964  1EC7  06A6               	xorwf	(___awdiv@sign),f
 24965  1EC8  2EC9               	goto	l23017
 24966                           	line	17
 24967                           	
 24968  1EC9                     l18950:	
 24969                           	line	18
 24970                           	
 24971  1EC9                     l23017:	
 24972  1EC9  01A7               	clrf	(___awdiv@quotient)
 24973  1ECA  01A8               	clrf	(___awdiv@quotient+1)
 24974                           	line	19
 24975                           	
 24976  1ECB                     l23019:	
 24977  1ECB  0821               	movf	(___awdiv@divisor+1),w
 24978  1ECC  0420               	iorwf	(___awdiv@divisor),w
 24979  1ECD  1903               	skipnz
 24980  1ECE  2ED0               	goto	u6221
 24981  1ECF  2ED1               	goto	u6220
 24982  1ED0                     u6221:
 24983  1ED0  2F07               	goto	l23039
 24984  1ED1                     u6220:
 24985                           	line	20
 24986                           	
 24987  1ED1                     l23021:	
 24988  1ED1  01A5               	clrf	(___awdiv@counter)
 24989  1ED2  1403               	bsf	status,0
 24990  1ED3  0DA5               	rlf	(___awdiv@counter),f
 24991                           	line	21
 24992  1ED4  2EDF               	goto	l23027
 24993                           	
 24994  1ED5                     l18953:	
 24995                           	line	22
 24996                           	
 24997  1ED5                     l23023:	
 24998  1ED5  3001               	movlw	01h
 24999                           	
 25000  1ED6                     u6235:
 25001  1ED6  35A0               	lslf	(___awdiv@divisor),f
 25002  1ED7  0DA1               	rlf	(___awdiv@divisor+1),f
 25003  1ED8  0B89               	decfsz	wreg,f
 25004  1ED9  2ED6               	goto	u6235
 25005                           	line	23
 25006                           	
 25007  1EDA                     l23025:	
 25008  1EDA  3001               	movlw	(01h)
 25009  1EDB  00A4               	movwf	(??___awdiv+0)+0
 25010  1EDC  0824               	movf	(??___awdiv+0)+0,w
 25011  1EDD  07A5               	addwf	(___awdiv@counter),f
 25012  1EDE  2EDF               	goto	l23027
 25013                           	line	24
 25014                           	
 25015  1EDF                     l18952:	
 25016                           	line	21
 25017                           	
 25018  1EDF                     l23027:	
 25019  1EDF  1FA1               	btfss	(___awdiv@divisor+1),(15)&7
 25020  1EE0  2EE2               	goto	u6241
 25021  1EE1  2EE3               	goto	u6240
 25022  1EE2                     u6241:
 25023  1EE2  2ED5               	goto	l23023
 25024  1EE3                     u6240:
 25025  1EE3  2EE5               	goto	l23029
 25026                           	
 25027  1EE4                     l18954:	
 25028  1EE4  2EE5               	goto	l23029
 25029                           	line	25
 25030                           	
 25031  1EE5                     l18955:	
 25032                           	line	26
 25033                           	
 25034  1EE5                     l23029:	
 25035  1EE5  3001               	movlw	01h
 25036                           	
 25037  1EE6                     u6255:
 25038  1EE6  35A7               	lslf	(___awdiv@quotient),f
 25039  1EE7  0DA8               	rlf	(___awdiv@quotient+1),f
 25040  1EE8  0B89               	decfsz	wreg,f
 25041  1EE9  2EE6               	goto	u6255
 25042                           	line	27
 25043  1EEA  0821               	movf	(___awdiv@divisor+1),w
 25044  1EEB  0223               	subwf	(___awdiv@dividend+1),w
 25045  1EEC  1D03               	skipz
 25046  1EED  2EF0               	goto	u6265
 25047  1EEE  0820               	movf	(___awdiv@divisor),w
 25048  1EEF  0222               	subwf	(___awdiv@dividend),w
 25049  1EF0                     u6265:
 25050  1EF0  1C03               	skipc
 25051  1EF1  2EF3               	goto	u6261
 25052  1EF2  2EF4               	goto	u6260
 25053  1EF3                     u6261:
 25054  1EF3  2EFA               	goto	l23035
 25055  1EF4                     u6260:
 25056                           	line	28
 25057                           	
 25058  1EF4                     l23031:	
 25059  1EF4  0820               	movf	(___awdiv@divisor),w
 25060  1EF5  02A2               	subwf	(___awdiv@dividend),f
 25061  1EF6  0821               	movf	(___awdiv@divisor+1),w
 25062  1EF7  3BA3               	subwfb	(___awdiv@dividend+1),f
 25063                           	line	29
 25064                           	
 25065  1EF8                     l23033:	
 25066  1EF8  1427               	bsf	(___awdiv@quotient)+(0/8),(0)&7
 25067  1EF9  2EFA               	goto	l23035
 25068                           	line	30
 25069                           	
 25070  1EFA                     l18956:	
 25071                           	line	31
 25072                           	
 25073  1EFA                     l23035:	
 25074  1EFA  3001               	movlw	01h
 25075                           	
 25076  1EFB                     u6275:
 25077  1EFB  36A1               	lsrf	(___awdiv@divisor+1),f
 25078  1EFC  0CA0               	rrf	(___awdiv@divisor),f
 25079  1EFD  0B89               	decfsz	wreg,f
 25080  1EFE  2EFB               	goto	u6275
 25081                           	line	32
 25082                           	
 25083  1EFF                     l23037:	
 25084  1EFF  3001               	movlw	low(01h)
 25085  1F00  02A5               	subwf	(___awdiv@counter),f
 25086  1F01  1D03               	btfss	status,2
 25087  1F02  2F04               	goto	u6281
 25088  1F03  2F05               	goto	u6280
 25089  1F04                     u6281:
 25090  1F04  2EE5               	goto	l23029
 25091  1F05                     u6280:
 25092  1F05  2F07               	goto	l23039
 25093                           	
 25094  1F06                     l18957:	
 25095  1F06  2F07               	goto	l23039
 25096                           	line	33
 25097                           	
 25098  1F07                     l18951:	
 25099                           	line	34
 25100                           	
 25101  1F07                     l23039:	
 25102  1F07  0826               	movf	(___awdiv@sign),w
 25103  1F08  1D03               	skipz
 25104  1F09  2F0B               	goto	u6290
 25105  1F0A  2F11               	goto	l23043
 25106  1F0B                     u6290:
 25107                           	line	35
 25108                           	
 25109  1F0B                     l23041:	
 25110  1F0B  09A7               	comf	(___awdiv@quotient),f
 25111  1F0C  09A8               	comf	(___awdiv@quotient+1),f
 25112  1F0D  0AA7               	incf	(___awdiv@quotient),f
 25113  1F0E  1903               	skipnz
 25114  1F0F  0AA8               	incf	(___awdiv@quotient+1),f
 25115  1F10  2F11               	goto	l23043
 25116                           	
 25117  1F11                     l18958:	
 25118                           	line	36
 25119                           	
 25120  1F11                     l23043:	
 25121  1F11  0828               	movf	(___awdiv@quotient+1),w
 25122  1F12  01A1               	clrf	(?___awdiv+1)
 25123  1F13  07A1               	addwf	(?___awdiv+1)
 25124  1F14  0827               	movf	(___awdiv@quotient),w
 25125  1F15  01A0               	clrf	(?___awdiv)
 25126  1F16  07A0               	addwf	(?___awdiv)
 25127                           
 25128  1F17  2F18               	goto	l18959
 25129                           	
 25130  1F18                     l23045:	
 25131                           	line	37
 25132                           	
 25133  1F18                     l18959:	
 25134  1F18  0008               	return
 25135                           	opt stack 0
 25136                           GLOBAL	__end_of___awdiv
 25137  1F19                     	__end_of___awdiv:
 25138 ;; =============== function ___awdiv ends ============
 25139                           
 25140                           	signat	___awdiv,8314
 25141                           	global	___fttol
 25142                           psect	text3344,local,class=CODE,delta=2
 25143                           global __ptext3344
 25144  1578                     __ptext3344:
 25145                           
 25146 ;; *************** function ___fttol *****************
 25147 ;; Defined at:
 25148 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 25149 ;; Parameters:    Size  Location     Type
 25150 ;;  f1              3    8[BANK0 ] float 
 25151 ;; Auto vars:     Size  Location     Type
 25152 ;;  lval            4   17[BANK0 ] unsigned long 
 25153 ;;  exp1            1   21[BANK0 ] unsigned char 
 25154 ;;  sign1           1   16[BANK0 ] unsigned char 
 25155 ;; Return value:  Size  Location     Type
 25156 ;;                  4    8[BANK0 ] long 
 25157 ;; Registers used:
 25158 ;;		wreg, status,2, status,0
 25159 ;; Tracked objects:
 25160 ;;		On entry : 0/0
 25161 ;;		On exit  : 0/0
 25162 ;;		Unchanged: 0/0
 25163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25165 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25166 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25167 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
       0       0
 25168 ;;Total ram usage:       14 bytes
 25169 ;; Hardware stack levels used:    1
 25170 ;; Hardware stack levels required when called:    4
 25171 ;; This function calls:
 25172 ;;		Nothing
 25173 ;; This function is called by:
 25174 ;;		_getPercentValue
 25175 ;;		_setPercentValue
 25176 ;; This function uses a non-reentrant model
 25177 ;;
 25178                           psect	text3344
 25179                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
 25180                           	line	45
 25181                           	global	__size_of___fttol
 25182  009F                     	__size_of___fttol	equ	__end_of___fttol-___fttol
 25183                           	
 25184  1578                     ___fttol:	
 25185                           	opt	stack 3
 25186                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 25187                           	line	49
 25188                           	
 25189  1578                     l22947:	
 25190  1578  0020               	movlb 0	; select bank0
 25191  1579  0828               	movf	(___fttol@f1),w
 25192  157A  00AC               	movwf	((??___fttol+0)+0)
 25193  157B  0829               	movf	(___fttol@f1+1),w
 25194  157C  00AD               	movwf	((??___fttol+0)+0+1)
 25195  157D  082A               	movf	(___fttol@f1+2),w
 25196  157E  00AE               	movwf	((??___fttol+0)+0+2)
 25197  157F  1003               	clrc
 25198  1580  0D2D               	rlf	(??___fttol+0)+1,w
 25199  1581  0D2E               	rlf	(??___fttol+0)+2,w
 25200  1582  00AF               	movwf	(??___fttol+3)+0
 25201  1583  082F               	movf	(??___fttol+3)+0,w
 25202  1584  00B5               	movwf	(___fttol@exp1)
 25203  1585  08B5               	movf	((___fttol@exp1)),f
 25204  1586  1D03               	skipz
 25205  1587  2D89               	goto	u6091
 25206  1588  2D8A               	goto	u6090
 25207  1589                     u6091:
 25208  1589  2D94               	goto	l22953
 25209  158A                     u6090:
 25210                           	line	50
 25211                           	
 25212  158A                     l22949:	
 25213  158A  3000               	movlw	0
 25214  158B  00AB               	movwf	(?___fttol+3)
 25215  158C  3000               	movlw	0
 25216  158D  00AA               	movwf	(?___fttol+2)
 25217  158E  3000               	movlw	0
 25218  158F  00A9               	movwf	(?___fttol+1)
 25219  1590  3000               	movlw	0
 25220  1591  00A8               	movwf	(?___fttol)
 25221                           
 25222  1592  2E16               	goto	l18919
 25223                           	
 25224  1593                     l22951:	
 25225  1593  2E16               	goto	l18919
 25226                           	
 25227  1594                     l18918:	
 25228                           	line	51
 25229                           	
 25230  1594                     l22953:	
 25231  1594  0828               	movf	(___fttol@f1),w
 25232  1595  00AC               	movwf	((??___fttol+0)+0)
 25233  1596  0829               	movf	(___fttol@f1+1),w
 25234  1597  00AD               	movwf	((??___fttol+0)+0+1)
 25235  1598  082A               	movf	(___fttol@f1+2),w
 25236  1599  00AE               	movwf	((??___fttol+0)+0+2)
 25237  159A  3017               	movlw	017h
 25238  159B                     u6105:
 25239  159B  36AE               	lsrf	(??___fttol+0)+2,f
 25240  159C  0CAD               	rrf	(??___fttol+0)+1,f
 25241  159D  0CAC               	rrf	(??___fttol+0)+0,f
 25242  159E                     u6100:
 25243  159E  0B89               	decfsz	wreg,f
 25244  159F  2D9B               	goto	u6105
 25245  15A0  082C               	movf	0+(??___fttol+0)+0,w
 25246  15A1  00AF               	movwf	(??___fttol+3)+0
 25247  15A2  082F               	movf	(??___fttol+3)+0,w
 25248  15A3  00B0               	movwf	(___fttol@sign1)
 25249                           	line	52
 25250                           	
 25251  15A4                     l22955:	
 25252  15A4  17A9               	bsf	(___fttol@f1)+(15/8),(15)&7
 25253                           	line	53
 25254                           	
 25255  15A5                     l22957:	
 25256  15A5  30FF               	movlw	0FFh
 25257  15A6  05A8               	andwf	(___fttol@f1),f
 25258  15A7  30FF               	movlw	0FFh
 25259  15A8  05A9               	andwf	(___fttol@f1+1),f
 25260  15A9  3000               	movlw	0
 25261  15AA  05AA               	andwf	(___fttol@f1+2),f
 25262                           	line	54
 25263                           	
 25264  15AB                     l22959:	
 25265  15AB  0828               	movf	(___fttol@f1),w
 25266  15AC  00B1               	movwf	(___fttol@lval)
 25267  15AD  0829               	movf	(___fttol@f1+1),w
 25268  15AE  00B2               	movwf	((___fttol@lval))+1
 25269  15AF  082A               	movf	(___fttol@f1+2),w
 25270  15B0  00B3               	movwf	((___fttol@lval))+2
 25271  15B1  01B4               	clrf	((___fttol@lval))+3
 25272                           	line	55
 25273                           	
 25274  15B2                     l22961:	
 25275  15B2  308E               	movlw	low(08Eh)
 25276  15B3  02B5               	subwf	(___fttol@exp1),f
 25277                           	line	56
 25278                           	
 25279  15B4                     l22963:	
 25280  15B4  1FB5               	btfss	(___fttol@exp1),7
 25281  15B5  2DB7               	goto	u6111
 25282  15B6  2DB8               	goto	u6110
 25283  15B7                     u6111:
 25284  15B7  2DDB               	goto	l22973
 25285  15B8                     u6110:
 25286                           	line	57
 25287                           	
 25288  15B8                     l22965:	
 25289  15B8  0835               	movf	(___fttol@exp1),w
 25290  15B9  3A80               	xorlw	80h
 25291  15BA  3E8F               	addlw	-((-15)^80h)
 25292  15BB  1803               	skipnc
 25293  15BC  2DBE               	goto	u6121
 25294  15BD  2DBF               	goto	u6120
 25295  15BE                     u6121:
 25296  15BE  2DCA               	goto	l22971
 25297  15BF                     u6120:
 25298                           	line	58
 25299                           	
 25300  15BF                     l22967:	
 25301  15BF  3000               	movlw	0
 25302  15C0  00AB               	movwf	(?___fttol+3)
 25303  15C1  3000               	movlw	0
 25304  15C2  00AA               	movwf	(?___fttol+2)
 25305  15C3  3000               	movlw	0
 25306  15C4  00A9               	movwf	(?___fttol+1)
 25307  15C5  3000               	movlw	0
 25308  15C6  00A8               	movwf	(?___fttol)
 25309                           
 25310  15C7  2E16               	goto	l18919
 25311                           	
 25312  15C8                     l22969:	
 25313  15C8  2E16               	goto	l18919
 25314                           	
 25315  15C9                     l18921:	
 25316  15C9  2DCA               	goto	l22971
 25317                           	line	59
 25318                           	
 25319  15CA                     l18922:	
 25320                           	line	60
 25321                           	
 25322  15CA                     l22971:	
 25323  15CA  3001               	movlw	01h
 25324  15CB                     u6135:
 25325  15CB  36B4               	lsrf	(___fttol@lval+3),f
 25326  15CC  0CB3               	rrf	(___fttol@lval+2),f
 25327  15CD  0CB2               	rrf	(___fttol@lval+1),f
 25328  15CE  0CB1               	rrf	(___fttol@lval),f
 25329  15CF  0B89               	decfsz	wreg,f
 25330  15D0  2DCB               	goto	u6135
 25331                           
 25332                           	line	61
 25333  15D1  3001               	movlw	(01h)
 25334  15D2  00AC               	movwf	(??___fttol+0)+0
 25335  15D3  082C               	movf	(??___fttol+0)+0,w
 25336  15D4  07B5               	addwf	(___fttol@exp1),f
 25337  15D5  1D03               	btfss	status,2
 25338  15D6  2DD8               	goto	u6141
 25339  15D7  2DD9               	goto	u6140
 25340  15D8                     u6141:
 25341  15D8  2DCA               	goto	l22971
 25342  15D9                     u6140:
 25343  15D9  2DFD               	goto	l22983
 25344                           	
 25345  15DA                     l18923:	
 25346                           	line	62
 25347  15DA  2DFD               	goto	l22983
 25348                           	
 25349  15DB                     l18920:	
 25350                           	line	63
 25351                           	
 25352  15DB                     l22973:	
 25353  15DB  3018               	movlw	(018h)
 25354  15DC  0235               	subwf	(___fttol@exp1),w
 25355  15DD  1C03               	skipc
 25356  15DE  2DE0               	goto	u6151
 25357  15DF  2DE1               	goto	u6150
 25358  15E0                     u6151:
 25359  15E0  2DF6               	goto	l22981
 25360  15E1                     u6150:
 25361                           	line	64
 25362                           	
 25363  15E1                     l22975:	
 25364  15E1  3000               	movlw	0
 25365  15E2  00AB               	movwf	(?___fttol+3)
 25366  15E3  3000               	movlw	0
 25367  15E4  00AA               	movwf	(?___fttol+2)
 25368  15E5  3000               	movlw	0
 25369  15E6  00A9               	movwf	(?___fttol+1)
 25370  15E7  3000               	movlw	0
 25371  15E8  00A8               	movwf	(?___fttol)
 25372                           
 25373  15E9  2E16               	goto	l18919
 25374                           	
 25375  15EA                     l22977:	
 25376  15EA  2E16               	goto	l18919
 25377                           	
 25378  15EB                     l18925:	
 25379                           	line	65
 25380  15EB  2DF6               	goto	l22981
 25381                           	
 25382  15EC                     l18927:	
 25383                           	line	66
 25384                           	
 25385  15EC                     l22979:	
 25386  15EC  3001               	movlw	01h
 25387  15ED                     u6165:
 25388  15ED  35B1               	lslf	(___fttol@lval),f
 25389  15EE  0DB2               	rlf	(___fttol@lval+1),f
 25390  15EF  0DB3               	rlf	(___fttol@lval+2),f
 25391  15F0  0DB4               	rlf	(___fttol@lval+3),f
 25392  15F1  0B89               	decfsz	wreg,f
 25393  15F2  2DED               	goto	u6165
 25394                           	line	67
 25395  15F3  3001               	movlw	low(01h)
 25396  15F4  02B5               	subwf	(___fttol@exp1),f
 25397  15F5  2DF6               	goto	l22981
 25398                           	line	68
 25399                           	
 25400  15F6                     l18926:	
 25401                           	line	65
 25402                           	
 25403  15F6                     l22981:	
 25404  15F6  08B5               	movf	(___fttol@exp1),f
 25405  15F7  1D03               	skipz
 25406  15F8  2DFA               	goto	u6171
 25407  15F9  2DFB               	goto	u6170
 25408  15FA                     u6171:
 25409  15FA  2DEC               	goto	l22979
 25410  15FB                     u6170:
 25411  15FB  2DFD               	goto	l22983
 25412                           	
 25413  15FC                     l18928:	
 25414  15FC  2DFD               	goto	l22983
 25415                           	line	69
 25416                           	
 25417  15FD                     l18924:	
 25418                           	line	70
 25419                           	
 25420  15FD                     l22983:	
 25421  15FD  0830               	movf	(___fttol@sign1),w
 25422  15FE  1D03               	skipz
 25423  15FF  2E01               	goto	u6180
 25424  1600  2E0D               	goto	l22987
 25425  1601                     u6180:
 25426                           	line	71
 25427                           	
 25428  1601                     l22985:	
 25429  1601  09B1               	comf	(___fttol@lval),f
 25430  1602  09B2               	comf	(___fttol@lval+1),f
 25431  1603  09B3               	comf	(___fttol@lval+2),f
 25432  1604  09B4               	comf	(___fttol@lval+3),f
 25433  1605  0AB1               	incf	(___fttol@lval),f
 25434  1606  1903               	skipnz
 25435  1607  0AB2               	incf	(___fttol@lval+1),f
 25436  1608  1903               	skipnz
 25437  1609  0AB3               	incf	(___fttol@lval+2),f
 25438  160A  1903               	skipnz
 25439  160B  0AB4               	incf	(___fttol@lval+3),f
 25440  160C  2E0D               	goto	l22987
 25441                           	
 25442  160D                     l18929:	
 25443                           	line	72
 25444                           	
 25445  160D                     l22987:	
 25446  160D  0834               	movf	(___fttol@lval+3),w
 25447  160E  00AB               	movwf	(?___fttol+3)
 25448  160F  0833               	movf	(___fttol@lval+2),w
 25449  1610  00AA               	movwf	(?___fttol+2)
 25450  1611  0832               	movf	(___fttol@lval+1),w
 25451  1612  00A9               	movwf	(?___fttol+1)
 25452  1613  0831               	movf	(___fttol@lval),w
 25453  1614  00A8               	movwf	(?___fttol)
 25454                           
 25455  1615  2E16               	goto	l18919
 25456                           	
 25457  1616                     l22989:	
 25458                           	line	73
 25459                           	
 25460  1616                     l18919:	
 25461  1616  0008               	return
 25462                           	opt stack 0
 25463                           GLOBAL	__end_of___fttol
 25464  1617                     	__end_of___fttol:
 25465 ;; =============== function ___fttol ends ============
 25466                           
 25467                           	signat	___fttol,4220
 25468                           	global	___ftpack
 25469                           psect	text3345,local,class=CODE,delta=2
 25470                           global __ptext3345
 25471  1F8C                     __ptext3345:
 25472                           
 25473 ;; *************** function ___ftpack *****************
 25474 ;; Defined at:
 25475 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 25476 ;; Parameters:    Size  Location     Type
 25477 ;;  arg             3    0[BANK0 ] unsigned um
 25478 ;;  exp             1    3[BANK0 ] unsigned char 
 25479 ;;  sign            1    4[BANK0 ] unsigned char 
 25480 ;; Auto vars:     Size  Location     Type
 25481 ;;		None
 25482 ;; Return value:  Size  Location     Type
 25483 ;;                  3    0[BANK0 ] float 
 25484 ;; Registers used:
 25485 ;;		wreg, status,2, status,0
 25486 ;; Tracked objects:
 25487 ;;		On entry : 0/0
 25488 ;;		On exit  : 0/0
 25489 ;;		Unchanged: 0/0
 25490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25491 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 25492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25493 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25494 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 25495 ;;Total ram usage:        8 bytes
 25496 ;; Hardware stack levels used:    1
 25497 ;; Hardware stack levels required when called:    4
 25498 ;; This function calls:
 25499 ;;		Nothing
 25500 ;; This function is called by:
 25501 ;;		___ftadd
 25502 ;;		___ftdiv
 25503 ;;		___ftmul
 25504 ;;		___awtoft
 25505 ;;		___lbtoft
 25506 ;;		___abtoft
 25507 ;;		___lwtoft
 25508 ;;		___altoft
 25509 ;;		___lltoft
 25510 ;;		___attoft
 25511 ;;		___lttoft
 25512 ;; This function uses a non-reentrant model
 25513 ;;
 25514                           psect	text3345
 25515                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
 25516                           	line	63
 25517                           	global	__size_of___ftpack
 25518  0074                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
 25519                           	
 25520  1F8C                     ___ftpack:	
 25521                           	opt	stack 2
 25522                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 25523                           	line	64
 25524                           	
 25525  1F8C                     l22911:	
 25526  1F8C  0020               	movlb 0	; select bank0
 25527  1F8D  0823               	movf	(___ftpack@exp),w
 25528  1F8E  1D03               	skipz
 25529  1F8F  2F91               	goto	u5980
 25530  1F90  2F99               	goto	l22915
 25531  1F91                     u5980:
 25532                           	
 25533  1F91                     l22913:	
 25534  1F91  0822               	movf	(___ftpack@arg+2),w
 25535  1F92  0421               	iorwf	(___ftpack@arg+1),w
 25536  1F93  0420               	iorwf	(___ftpack@arg),w
 25537  1F94  1D03               	skipz
 25538  1F95  2F97               	goto	u5991
 25539  1F96  2F98               	goto	u5990
 25540  1F97                     u5991:
 25541  1F97  2FAD               	goto	l22921
 25542  1F98                     u5990:
 25543  1F98  2F99               	goto	l22915
 25544                           	
 25545  1F99                     l19143:	
 25546                           	line	65
 25547                           	
 25548  1F99                     l22915:	
 25549  1F99  3000               	movlw	0x0
 25550  1F9A  00A0               	movwf	(?___ftpack)
 25551  1F9B  3000               	movlw	0x0
 25552  1F9C  00A1               	movwf	(?___ftpack+1)
 25553  1F9D  3000               	movlw	0x0
 25554  1F9E  00A2               	movwf	(?___ftpack+2)
 25555  1F9F  2FFF               	goto	l19144
 25556                           	
 25557  1FA0                     l22917:	
 25558  1FA0  2FFF               	goto	l19144
 25559                           	
 25560  1FA1                     l19141:	
 25561                           	line	66
 25562  1FA1  2FAD               	goto	l22921
 25563                           	
 25564  1FA2                     l19146:	
 25565                           	line	67
 25566                           	
 25567  1FA2                     l22919:	
 25568  1FA2  3001               	movlw	(01h)
 25569  1FA3  00A5               	movwf	(??___ftpack+0)+0
 25570  1FA4  0825               	movf	(??___ftpack+0)+0,w
 25571  1FA5  07A3               	addwf	(___ftpack@exp),f
 25572                           	line	68
 25573  1FA6  3001               	movlw	01h
 25574  1FA7                     u6005:
 25575  1FA7  36A2               	lsrf	(___ftpack@arg+2),f
 25576  1FA8  0CA1               	rrf	(___ftpack@arg+1),f
 25577  1FA9  0CA0               	rrf	(___ftpack@arg),f
 25578  1FAA  0B89               	decfsz	wreg,f
 25579  1FAB  2FA7               	goto	u6005
 25580                           
 25581  1FAC  2FAD               	goto	l22921
 25582                           	line	69
 25583                           	
 25584  1FAD                     l19145:	
 25585                           	line	66
 25586                           	
 25587  1FAD                     l22921:	
 25588  1FAD  30FE               	movlw	low highword(0FE0000h)
 25589  1FAE  0522               	andwf	(___ftpack@arg+2),w
 25590  1FAF  1D03               	btfss	status,2
 25591  1FB0  2FB2               	goto	u6011
 25592  1FB1  2FB3               	goto	u6010
 25593  1FB2                     u6011:
 25594  1FB2  2FA2               	goto	l22919
 25595  1FB3                     u6010:
 25596  1FB3  2FC9               	goto	l19148
 25597                           	
 25598  1FB4                     l19147:	
 25599                           	line	70
 25600  1FB4  2FC9               	goto	l19148
 25601                           	
 25602  1FB5                     l19149:	
 25603                           	line	71
 25604                           	
 25605  1FB5                     l22923:	
 25606  1FB5  3001               	movlw	(01h)
 25607  1FB6  00A5               	movwf	(??___ftpack+0)+0
 25608  1FB7  0825               	movf	(??___ftpack+0)+0,w
 25609  1FB8  07A3               	addwf	(___ftpack@exp),f
 25610                           	line	72
 25611                           	
 25612  1FB9                     l22925:	
 25613  1FB9  3001               	movlw	01h
 25614  1FBA  07A0               	addwf	(___ftpack@arg),f
 25615  1FBB  3000               	movlw	0
 25616  1FBC  1803               	skipnc
 25617  1FBD  3001               movlw 1
 25618  1FBE  07A1               	addwf	(___ftpack@arg+1),f
 25619  1FBF  3000               	movlw	0
 25620  1FC0  1803               	skipnc
 25621  1FC1  3001               movlw 1
 25622  1FC2  07A2               	addwf	(___ftpack@arg+2),f
 25623                           	line	73
 25624                           	
 25625  1FC3                     l22927:	
 25626  1FC3  3001               	movlw	01h
 25627  1FC4                     u6025:
 25628  1FC4  36A2               	lsrf	(___ftpack@arg+2),f
 25629  1FC5  0CA1               	rrf	(___ftpack@arg+1),f
 25630  1FC6  0CA0               	rrf	(___ftpack@arg),f
 25631  1FC7  0B89               	decfsz	wreg,f
 25632  1FC8  2FC4               	goto	u6025
 25633                           
 25634                           	line	74
 25635                           	
 25636  1FC9                     l19148:	
 25637                           	line	70
 25638  1FC9  30FF               	movlw	low highword(0FF0000h)
 25639  1FCA  0522               	andwf	(___ftpack@arg+2),w
 25640  1FCB  1D03               	btfss	status,2
 25641  1FCC  2FCE               	goto	u6031
 25642  1FCD  2FCF               	goto	u6030
 25643  1FCE                     u6031:
 25644  1FCE  2FB5               	goto	l22923
 25645  1FCF                     u6030:
 25646  1FCF  2FDA               	goto	l22931
 25647                           	
 25648  1FD0                     l19150:	
 25649                           	line	75
 25650  1FD0  2FDA               	goto	l22931
 25651                           	
 25652  1FD1                     l19152:	
 25653                           	line	76
 25654                           	
 25655  1FD1                     l22929:	
 25656  1FD1  3001               	movlw	low(01h)
 25657  1FD2  02A3               	subwf	(___ftpack@exp),f
 25658                           	line	77
 25659  1FD3  3001               	movlw	01h
 25660  1FD4                     u6045:
 25661  1FD4  35A0               	lslf	(___ftpack@arg),f
 25662  1FD5  0DA1               	rlf	(___ftpack@arg+1),f
 25663  1FD6  0DA2               	rlf	(___ftpack@arg+2),f
 25664  1FD7  0B89               	decfsz	wreg,f
 25665  1FD8  2FD4               	goto	u6045
 25666  1FD9  2FDA               	goto	l22931
 25667                           	line	78
 25668                           	
 25669  1FDA                     l19151:	
 25670                           	line	75
 25671                           	
 25672  1FDA                     l22931:	
 25673  1FDA  1FA1               	btfss	(___ftpack@arg+1),(15)&7
 25674  1FDB  2FDD               	goto	u6051
 25675  1FDC  2FDE               	goto	u6050
 25676  1FDD                     u6051:
 25677  1FDD  2FD1               	goto	l22929
 25678  1FDE                     u6050:
 25679                           	
 25680  1FDE                     l19153:	
 25681                           	line	79
 25682  1FDE  1823               	btfsc	(___ftpack@exp),(0)&7
 25683  1FDF  2FE1               	goto	u6061
 25684  1FE0  2FE2               	goto	u6060
 25685  1FE1                     u6061:
 25686  1FE1  2FE8               	goto	l19154
 25687  1FE2                     u6060:
 25688                           	line	80
 25689                           	
 25690  1FE2                     l22933:	
 25691  1FE2  30FF               	movlw	0FFh
 25692  1FE3  05A0               	andwf	(___ftpack@arg),f
 25693  1FE4  307F               	movlw	07Fh
 25694  1FE5  05A1               	andwf	(___ftpack@arg+1),f
 25695  1FE6  30FF               	movlw	0FFh
 25696  1FE7  05A2               	andwf	(___ftpack@arg+2),f
 25697                           	
 25698  1FE8                     l19154:	
 25699                           	line	81
 25700  1FE8  1003               	clrc
 25701  1FE9  0CA3               	rrf	(___ftpack@exp),f
 25702                           
 25703                           	line	82
 25704                           	
 25705  1FEA                     l22935:	
 25706  1FEA  0823               	movf	(___ftpack@exp),w
 25707  1FEB  00A5               	movwf	((??___ftpack+0)+0)
 25708  1FEC  01A6               	clrf	((??___ftpack+0)+0+1)
 25709  1FED  01A7               	clrf	((??___ftpack+0)+0+2)
 25710  1FEE  3010               	movlw	010h
 25711  1FEF                     u6075:
 25712  1FEF  35A5               	lslf	(??___ftpack+0)+0,f
 25713  1FF0  0DA6               	rlf	(??___ftpack+0)+1,f
 25714  1FF1  0DA7               	rlf	(??___ftpack+0)+2,f
 25715  1FF2                     u6070:
 25716  1FF2  0B89               	decfsz	wreg,f
 25717  1FF3  2FEF               	goto	u6075
 25718  1FF4  0825               	movf	0+(??___ftpack+0)+0,w
 25719  1FF5  04A0               	iorwf	(___ftpack@arg),f
 25720  1FF6  0826               	movf	1+(??___ftpack+0)+0,w
 25721  1FF7  04A1               	iorwf	(___ftpack@arg+1),f
 25722  1FF8  0827               	movf	2+(??___ftpack+0)+0,w
 25723  1FF9  04A2               	iorwf	(___ftpack@arg+2),f
 25724                           	line	83
 25725                           	
 25726  1FFA                     l22937:	
 25727  1FFA  0824               	movf	(___ftpack@sign),w
 25728  1FFB  1D03               	skipz
 25729  1FFC  2FFE               	goto	u6080
 25730  1FFD  2FFF               	goto	l19155
 25731  1FFE                     u6080:
 25732                           	line	84
 25733                           	
 25734  1FFE                     l22939:	
 25735  1FFE  17A2               	bsf	(___ftpack@arg)+(23/8),(23)&7
 25736                           	
 25737  1FFF                     l19155:	
 25738                           	line	85
 25739                           	line	86
 25740                           	
 25741  1FFF                     l19144:	
 25742  1FFF  0008               	return
 25743                           	opt stack 0
 25744                           GLOBAL	__end_of___ftpack
 25745  2000                     	__end_of___ftpack:
 25746 ;; =============== function ___ftpack ends ============
 25747                           
 25748                           	signat	___ftpack,12411
 25749                           	global	___lwdiv
 25750                           psect	text3346,local,class=CODE,delta=2
 25751                           global __ptext3346
 25752  18FE                     __ptext3346:
 25753                           
 25754 ;; *************** function ___lwdiv *****************
 25755 ;; Defined at:
 25756 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 25757 ;; Parameters:    Size  Location     Type
 25758 ;;  divisor         2    0[BANK0 ] unsigned int 
 25759 ;;  dividend        2    2[BANK0 ] unsigned int 
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;  quotient        2    5[BANK0 ] unsigned int 
 25762 ;;  counter         1    7[BANK0 ] unsigned char 
 25763 ;; Return value:  Size  Location     Type
 25764 ;;                  2    0[BANK0 ] unsigned int 
 25765 ;; Registers used:
 25766 ;;		wreg, status,2, status,0
 25767 ;; Tracked objects:
 25768 ;;		On entry : 0/0
 25769 ;;		On exit  : 0/0
 25770 ;;		Unchanged: 0/0
 25771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25772 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25773 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 25774 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 25775 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0
 25776 ;;Total ram usage:        8 bytes
 25777 ;; Hardware stack levels used:    1
 25778 ;; Hardware stack levels required when called:    4
 25779 ;; This function calls:
 25780 ;;		Nothing
 25781 ;; This function is called by:
 25782 ;;		_setLoad_Main
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           psect	text3346
 25786                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 25787                           	line	5
 25788                           	global	__size_of___lwdiv
 25789  0047                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 25790                           	
 25791  18FE                     ___lwdiv:	
 25792                           	opt	stack 9
 25793                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 25794                           	line	9
 25795                           	
 25796  18FE                     l22885:	
 25797  18FE  0020               	movlb 0	; select bank0
 25798  18FF  01A5               	clrf	(___lwdiv@quotient)
 25799  1900  01A6               	clrf	(___lwdiv@quotient+1)
 25800                           	line	10
 25801                           	
 25802  1901                     l22887:	
 25803  1901  0821               	movf	(___lwdiv@divisor+1),w
 25804  1902  0420               	iorwf	(___lwdiv@divisor),w
 25805  1903  1903               	skipnz
 25806  1904  2906               	goto	u5911
 25807  1905  2907               	goto	u5910
 25808  1906                     u5911:
 25809  1906  293D               	goto	l22907
 25810  1907                     u5910:
 25811                           	line	11
 25812                           	
 25813  1907                     l22889:	
 25814  1907  01A7               	clrf	(___lwdiv@counter)
 25815  1908  1403               	bsf	status,0
 25816  1909  0DA7               	rlf	(___lwdiv@counter),f
 25817                           	line	12
 25818  190A  2915               	goto	l22895
 25819                           	
 25820  190B                     l18817:	
 25821                           	line	13
 25822                           	
 25823  190B                     l22891:	
 25824  190B  3001               	movlw	01h
 25825                           	
 25826  190C                     u5925:
 25827  190C  35A0               	lslf	(___lwdiv@divisor),f
 25828  190D  0DA1               	rlf	(___lwdiv@divisor+1),f
 25829  190E  0B89               	decfsz	wreg,f
 25830  190F  290C               	goto	u5925
 25831                           	line	14
 25832                           	
 25833  1910                     l22893:	
 25834  1910  3001               	movlw	(01h)
 25835  1911  00A4               	movwf	(??___lwdiv+0)+0
 25836  1912  0824               	movf	(??___lwdiv+0)+0,w
 25837  1913  07A7               	addwf	(___lwdiv@counter),f
 25838  1914  2915               	goto	l22895
 25839                           	line	15
 25840                           	
 25841  1915                     l18816:	
 25842                           	line	12
 25843                           	
 25844  1915                     l22895:	
 25845  1915  1FA1               	btfss	(___lwdiv@divisor+1),(15)&7
 25846  1916  2918               	goto	u5931
 25847  1917  2919               	goto	u5930
 25848  1918                     u5931:
 25849  1918  290B               	goto	l22891
 25850  1919                     u5930:
 25851  1919  291B               	goto	l22897
 25852                           	
 25853  191A                     l18818:	
 25854  191A  291B               	goto	l22897
 25855                           	line	16
 25856                           	
 25857  191B                     l18819:	
 25858                           	line	17
 25859                           	
 25860  191B                     l22897:	
 25861  191B  3001               	movlw	01h
 25862                           	
 25863  191C                     u5945:
 25864  191C  35A5               	lslf	(___lwdiv@quotient),f
 25865  191D  0DA6               	rlf	(___lwdiv@quotient+1),f
 25866  191E  0B89               	decfsz	wreg,f
 25867  191F  291C               	goto	u5945
 25868                           	line	18
 25869  1920  0821               	movf	(___lwdiv@divisor+1),w
 25870  1921  0223               	subwf	(___lwdiv@dividend+1),w
 25871  1922  1D03               	skipz
 25872  1923  2926               	goto	u5955
 25873  1924  0820               	movf	(___lwdiv@divisor),w
 25874  1925  0222               	subwf	(___lwdiv@dividend),w
 25875  1926                     u5955:
 25876  1926  1C03               	skipc
 25877  1927  2929               	goto	u5951
 25878  1928  292A               	goto	u5950
 25879  1929                     u5951:
 25880  1929  2930               	goto	l22903
 25881  192A                     u5950:
 25882                           	line	19
 25883                           	
 25884  192A                     l22899:	
 25885  192A  0820               	movf	(___lwdiv@divisor),w
 25886  192B  02A2               	subwf	(___lwdiv@dividend),f
 25887  192C  0821               	movf	(___lwdiv@divisor+1),w
 25888  192D  3BA3               	subwfb	(___lwdiv@dividend+1),f
 25889                           	line	20
 25890                           	
 25891  192E                     l22901:	
 25892  192E  1425               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 25893  192F  2930               	goto	l22903
 25894                           	line	21
 25895                           	
 25896  1930                     l18820:	
 25897                           	line	22
 25898                           	
 25899  1930                     l22903:	
 25900  1930  3001               	movlw	01h
 25901                           	
 25902  1931                     u5965:
 25903  1931  36A1               	lsrf	(___lwdiv@divisor+1),f
 25904  1932  0CA0               	rrf	(___lwdiv@divisor),f
 25905  1933  0B89               	decfsz	wreg,f
 25906  1934  2931               	goto	u5965
 25907                           	line	23
 25908                           	
 25909  1935                     l22905:	
 25910  1935  3001               	movlw	low(01h)
 25911  1936  02A7               	subwf	(___lwdiv@counter),f
 25912  1937  1D03               	btfss	status,2
 25913  1938  293A               	goto	u5971
 25914  1939  293B               	goto	u5970
 25915  193A                     u5971:
 25916  193A  291B               	goto	l22897
 25917  193B                     u5970:
 25918  193B  293D               	goto	l22907
 25919                           	
 25920  193C                     l18821:	
 25921  193C  293D               	goto	l22907
 25922                           	line	24
 25923                           	
 25924  193D                     l18815:	
 25925                           	line	25
 25926                           	
 25927  193D                     l22907:	
 25928  193D  0826               	movf	(___lwdiv@quotient+1),w
 25929  193E  01A1               	clrf	(?___lwdiv+1)
 25930  193F  07A1               	addwf	(?___lwdiv+1)
 25931  1940  0825               	movf	(___lwdiv@quotient),w
 25932  1941  01A0               	clrf	(?___lwdiv)
 25933  1942  07A0               	addwf	(?___lwdiv)
 25934                           
 25935  1943  2944               	goto	l18822
 25936                           	
 25937  1944                     l22909:	
 25938                           	line	26
 25939                           	
 25940  1944                     l18822:	
 25941  1944  0008               	return
 25942                           	opt stack 0
 25943                           GLOBAL	__end_of___lwdiv
 25944  1945                     	__end_of___lwdiv:
 25945 ;; =============== function ___lwdiv ends ============
 25946                           
 25947                           	signat	___lwdiv,8314
 25948                           	global	___wmul
 25949                           psect	text3347,local,class=CODE,delta=2
 25950                           global __ptext3347
 25951  2350                     __ptext3347:
 25952                           
 25953 ;; *************** function ___wmul *****************
 25954 ;; Defined at:
 25955 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 25956 ;; Parameters:    Size  Location     Type
 25957 ;;  multiplier      2    0[BANK0 ] unsigned int 
 25958 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 25959 ;; Auto vars:     Size  Location     Type
 25960 ;;  product         2    4[BANK0 ] unsigned int 
 25961 ;; Return value:  Size  Location     Type
 25962 ;;                  2    0[BANK0 ] unsigned int 
 25963 ;; Registers used:
 25964 ;;		wreg, status,2, status,0
 25965 ;; Tracked objects:
 25966 ;;		On entry : 0/0
 25967 ;;		On exit  : 0/0
 25968 ;;		Unchanged: 0/0
 25969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 25970 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 25971 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 25972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 25973 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 25974 ;;Total ram usage:        6 bytes
 25975 ;; Hardware stack levels used:    1
 25976 ;; Hardware stack levels required when called:    4
 25977 ;; This function calls:
 25978 ;;		Nothing
 25979 ;; This function is called by:
 25980 ;;		_setLoad_Main
 25981 ;; This function uses a non-reentrant model
 25982 ;;
 25983                           psect	text3347
 25984                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
 25985                           	line	3
 25986                           	global	__size_of___wmul
 25987  0025                     	__size_of___wmul	equ	__end_of___wmul-___wmul
 25988                           	
 25989  2350                     ___wmul:	
 25990                           	opt	stack 9
 25991                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 25992                           	line	4
 25993                           	
 25994  2350                     l22873:	
 25995  2350  0020               	movlb 0	; select bank0
 25996  2351  01A4               	clrf	(___wmul@product)
 25997  2352  01A5               	clrf	(___wmul@product+1)
 25998  2353  2B54               	goto	l22875
 25999                           	line	6
 26000                           	
 26001  2354                     l18809:	
 26002                           	line	7
 26003                           	
 26004  2354                     l22875:	
 26005  2354  1C20               	btfss	(___wmul@multiplier),(0)&7
 26006  2355  2B57               	goto	u5871
 26007  2356  2B58               	goto	u5870
 26008  2357                     u5871:
 26009  2357  2B5C               	goto	l18810
 26010  2358                     u5870:
 26011                           	line	8
 26012                           	
 26013  2358                     l22877:	
 26014  2358  0822               	movf	(___wmul@multiplicand),w
 26015  2359  07A4               	addwf	(___wmul@product),f
 26016  235A  0823               	movf	(___wmul@multiplicand+1),w
 26017  235B  3DA5               	addwfc	(___wmul@product+1),f
 26018                           	
 26019  235C                     l18810:	
 26020                           	line	9
 26021  235C  3001               	movlw	01h
 26022                           	
 26023  235D                     u5885:
 26024  235D  35A2               	lslf	(___wmul@multiplicand),f
 26025  235E  0DA3               	rlf	(___wmul@multiplicand+1),f
 26026  235F  0B89               	decfsz	wreg,f
 26027  2360  2B5D               	goto	u5885
 26028                           	line	10
 26029                           	
 26030  2361                     l22879:	
 26031  2361  3001               	movlw	01h
 26032                           	
 26033  2362                     u5895:
 26034  2362  36A1               	lsrf	(___wmul@multiplier+1),f
 26035  2363  0CA0               	rrf	(___wmul@multiplier),f
 26036  2364  0B89               	decfsz	wreg,f
 26037  2365  2B62               	goto	u5895
 26038                           	line	11
 26039  2366  0821               	movf	((___wmul@multiplier+1)),w
 26040  2367  0420               	iorwf	((___wmul@multiplier)),w
 26041  2368  1D03               	skipz
 26042  2369  2B6B               	goto	u5901
 26043  236A  2B6C               	goto	u5900
 26044  236B                     u5901:
 26045  236B  2B54               	goto	l22875
 26046  236C                     u5900:
 26047  236C  2B6D               	goto	l22881
 26048                           	
 26049  236D                     l18811:	
 26050                           	line	12
 26051                           	
 26052  236D                     l22881:	
 26053  236D  0825               	movf	(___wmul@product+1),w
 26054  236E  01A1               	clrf	(?___wmul+1)
 26055  236F  07A1               	addwf	(?___wmul+1)
 26056  2370  0824               	movf	(___wmul@product),w
 26057  2371  01A0               	clrf	(?___wmul)
 26058  2372  07A0               	addwf	(?___wmul)
 26059                           
 26060  2373  2B74               	goto	l18812
 26061                           	
 26062  2374                     l22883:	
 26063                           	line	13
 26064                           	
 26065  2374                     l18812:	
 26066  2374  0008               	return
 26067                           	opt stack 0
 26068                           GLOBAL	__end_of___wmul
 26069  2375                     	__end_of___wmul:
 26070 ;; =============== function ___wmul ends ============
 26071                           
 26072                           	signat	___wmul,8314
 26073                           	global	_SwPointSelect
 26074                           psect	text3348,local,class=CODE,delta=2
 26075                           global __ptext3348
 26076  2FC8                     __ptext3348:
 26077                           
 26078 ;; *************** function _SwPointSelect *****************
 26079 ;; Defined at:
 26080 ;;		line 17 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 26081 ;; Parameters:    Size  Location     Type
 26082 ;;  sw              1    wreg     unsigned char 
 26083 ;; Auto vars:     Size  Location     Type
 26084 ;;  sw              1    1[BANK0 ] unsigned char 
 26085 ;; Return value:  Size  Location     Type
 26086 ;;		None               void
 26087 ;; Registers used:
 26088 ;;		wreg
 26089 ;; Tracked objects:
 26090 ;;		On entry : 0/0
 26091 ;;		On exit  : 0/0
 26092 ;;		Unchanged: 0/0
 26093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26098 ;;Total ram usage:        2 bytes
 26099 ;; Hardware stack levels used:    1
 26100 ;; Hardware stack levels required when called:    4
 26101 ;; This function calls:
 26102 ;;		Nothing
 26103 ;; This function is called by:
 26104 ;;		_setSw_Enable
 26105 ;;		_setSw_Status
 26106 ;;		_setSw_Main
 26107 ;;		_Sw_Detect
 26108 ;; This function uses a non-reentrant model
 26109 ;;
 26110                           psect	text3348
 26111                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 26112                           	line	17
 26113                           	global	__size_of_SwPointSelect
 26114  000E                     	__size_of_SwPointSelect	equ	__end_of_SwPointSelect-_SwPointSelect
 26115                           	
 26116  2FC8                     _SwPointSelect:	
 26117                           	opt	stack 8
 26118                           ; Regs used in _SwPointSelect: [wreg]
 26119                           ;SwPointSelect@sw stored from wreg
 26120                           	line	19
 26121  2FC8  0020               	movlb 0	; select bank0
 26122  2FC9  00A1               	movwf	(SwPointSelect@sw)
 26123                           	
 26124  2FCA                     l22855:	
 26125                           ;Switch_B1.c: 19: if(sw == 1)
 26126  2FCA  0821               	movf	(SwPointSelect@sw),w
 26127  2FCB  3A01               	xorlw	01h&0ffh
 26128  2FCC  1D03               	skipz
 26129  2FCD  2FCF               	goto	u5811
 26130  2FCE  2FD0               	goto	u5810
 26131  2FCF                     u5811:
 26132  2FCF  2FD5               	goto	l14358
 26133  2FD0                     u5810:
 26134                           	line	21
 26135                           	
 26136  2FD0                     l22857:	
 26137                           ;Switch_B1.c: 20: {
 26138                           ;Switch_B1.c: 21: Sw=&Sw1;
 26139  2FD0  3054               	movlw	(_Sw1)&0ffh
 26140  2FD1  00A0               	movwf	(??_SwPointSelect+0)+0
 26141  2FD2  0820               	movf	(??_SwPointSelect+0)+0,w
 26142  2FD3  00EF               	movwf	(_Sw)
 26143  2FD4  2FD5               	goto	l14358
 26144                           	line	22
 26145                           	
 26146  2FD5                     l14357:	
 26147                           	line	36
 26148                           	
 26149  2FD5                     l14358:	
 26150  2FD5  0008               	return
 26151                           	opt stack 0
 26152                           GLOBAL	__end_of_SwPointSelect
 26153  2FD6                     	__end_of_SwPointSelect:
 26154 ;; =============== function _SwPointSelect ends ============
 26155                           
 26156                           	signat	_SwPointSelect,4216
 26157                           	global	_TouchPower
 26158                           psect	text3349,local,class=CODE,delta=2
 26159                           global __ptext3349
 26160  2EF1                     __ptext3349:
 26161                           
 26162 ;; *************** function _TouchPower *****************
 26163 ;; Defined at:
 26164 ;;		line 10 in file "G:\Program\PIC\Source_File\Switch_B1.c"
 26165 ;; Parameters:    Size  Location     Type
 26166 ;;		None
 26167 ;; Auto vars:     Size  Location     Type
 26168 ;;		None
 26169 ;; Return value:  Size  Location     Type
 26170 ;;		None               void
 26171 ;; Registers used:
 26172 ;;		None
 26173 ;; Tracked objects:
 26174 ;;		On entry : 0/0
 26175 ;;		On exit  : 0/0
 26176 ;;		Unchanged: 0/0
 26177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26182 ;;Total ram usage:        0 bytes
 26183 ;; Hardware stack levels used:    1
 26184 ;; Hardware stack levels required when called:    4
 26185 ;; This function calls:
 26186 ;;		Nothing
 26187 ;; This function is called by:
 26188 ;;		_Switch_Initialization
 26189 ;; This function uses a non-reentrant model
 26190 ;;
 26191                           psect	text3349
 26192                           	file	"G:\Program\PIC\Source_File\Switch_B1.c"
 26193                           	line	10
 26194                           	global	__size_of_TouchPower
 26195  0009                     	__size_of_TouchPower	equ	__end_of_TouchPower-_TouchPower
 26196                           	
 26197  2EF1                     _TouchPower:	
 26198                           	opt	stack 10
 26199                           ; Regs used in _TouchPower: []
 26200                           	line	11
 26201                           	
 26202  2EF1                     l22853:	
 26203                           ;Switch_B1.c: 11: while(RC5 == 0)
 26204  2EF1  2EF3               	goto	l14351
 26205                           	
 26206  2EF2                     l14352:	
 26207                           	line	12
 26208                           ;Switch_B1.c: 12: RC5=1;
 26209  2EF2  168E               	bsf	(117/8),(117)&7
 26210                           	
 26211  2EF3                     l14351:	
 26212                           	line	11
 26213  2EF3  0020               	movlb 0	; select bank0
 26214  2EF4  1E8E               	btfss	(117/8),(117)&7
 26215  2EF5  2EF7               	goto	u5801
 26216  2EF6  2EF8               	goto	u5800
 26217  2EF7                     u5801:
 26218  2EF7  2EF2               	goto	l14352
 26219  2EF8                     u5800:
 26220  2EF8  2EF9               	goto	l14354
 26221                           	
 26222  2EF9                     l14353:	
 26223                           	line	13
 26224                           	
 26225  2EF9                     l14354:	
 26226  2EF9  0008               	return
 26227                           	opt stack 0
 26228                           GLOBAL	__end_of_TouchPower
 26229  2EFA                     	__end_of_TouchPower:
 26230 ;; =============== function _TouchPower ends ============
 26231                           
 26232                           	signat	_TouchPower,88
 26233                           	global	_RfSWPointSelect
 26234                           psect	text3350,local,class=CODE,delta=2
 26235                           global __ptext3350
 26236  2043                     __ptext3350:
 26237                           
 26238 ;; *************** function _RfSWPointSelect *****************
 26239 ;; Defined at:
 26240 ;;		line 335 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 26241 ;; Parameters:    Size  Location     Type
 26242 ;;  sw              1    wreg     unsigned char 
 26243 ;; Auto vars:     Size  Location     Type
 26244 ;;  sw              1    1[BANK0 ] unsigned char 
 26245 ;; Return value:  Size  Location     Type
 26246 ;;		None               void
 26247 ;; Registers used:
 26248 ;;		wreg
 26249 ;; Tracked objects:
 26250 ;;		On entry : 0/0
 26251 ;;		On exit  : 0/0
 26252 ;;		Unchanged: 0/0
 26253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26257 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26258 ;;Total ram usage:        2 bytes
 26259 ;; Hardware stack levels used:    1
 26260 ;; Hardware stack levels required when called:    4
 26261 ;; This function calls:
 26262 ;;		Nothing
 26263 ;; This function is called by:
 26264 ;;		_setRFSW_Control
 26265 ;;		_setRFSW_AdjControl
 26266 ;;		_setRFSW_Status
 26267 ;; This function uses a non-reentrant model
 26268 ;;
 26269                           psect	text3350
 26270                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 26271                           	line	335
 26272                           	global	__size_of_RfSWPointSelect
 26273  000F                     	__size_of_RfSWPointSelect	equ	__end_of_RfSWPointSelect-_RfSWPointSelect
 26274                           	
 26275  2043                     _RfSWPointSelect:	
 26276                           	opt	stack 8
 26277                           ; Regs used in _RfSWPointSelect: [wreg]
 26278                           ;RfSWPointSelect@sw stored from wreg
 26279                           	line	337
 26280  2043  0020               	movlb 0	; select bank0
 26281  2044  00A1               	movwf	(RfSWPointSelect@sw)
 26282                           	
 26283  2045                     l22849:	
 26284                           ;RF_Control_B1.c: 337: if(sw == 1)
 26285  2045  0821               	movf	(RfSWPointSelect@sw),w
 26286  2046  3A01               	xorlw	01h&0ffh
 26287  2047  1D03               	skipz
 26288  2048  284A               	goto	u5791
 26289  2049  284B               	goto	u5790
 26290  204A                     u5791:
 26291  204A  2851               	goto	l13189
 26292  204B                     u5790:
 26293                           	line	339
 26294                           	
 26295  204B                     l22851:	
 26296                           ;RF_Control_B1.c: 338: {
 26297                           ;RF_Control_B1.c: 339: RFSW=&RFSW1;
 26298  204B  30EC               	movlw	(_RFSW1)&0ffh
 26299  204C  00A0               	movwf	(??_RfSWPointSelect+0)+0
 26300  204D  0820               	movf	(??_RfSWPointSelect+0)+0,w
 26301  204E  0021               	movlb 1	; select bank1
 26302  204F  00BF               	movwf	(_RFSW)^080h
 26303  2050  2851               	goto	l13189
 26304                           	line	340
 26305                           	
 26306  2051                     l13188:	
 26307                           	line	354
 26308                           	
 26309  2051                     l13189:	
 26310  2051  0008               	return
 26311                           	opt stack 0
 26312                           GLOBAL	__end_of_RfSWPointSelect
 26313  2052                     	__end_of_RfSWPointSelect:
 26314 ;; =============== function _RfSWPointSelect ends ============
 26315                           
 26316                           	signat	_RfSWPointSelect,4216
 26317                           	global	_setRF_Initialization
 26318                           psect	text3351,local,class=CODE,delta=2
 26319                           global __ptext3351
 26320  2000                     __ptext3351:
 26321                           
 26322 ;; *************** function _setRF_Initialization *****************
 26323 ;; Defined at:
 26324 ;;		line 51 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 26325 ;; Parameters:    Size  Location     Type
 26326 ;;  rf              1    wreg     unsigned char 
 26327 ;; Auto vars:     Size  Location     Type
 26328 ;;  rf              1    0[COMMON] unsigned char 
 26329 ;; Return value:  Size  Location     Type
 26330 ;;		None               void
 26331 ;; Registers used:
 26332 ;;		wreg
 26333 ;; Tracked objects:
 26334 ;;		On entry : 0/0
 26335 ;;		On exit  : 0/0
 26336 ;;		Unchanged: 0/0
 26337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26340 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26341 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26342 ;;Total ram usage:        1 bytes
 26343 ;; Hardware stack levels used:    1
 26344 ;; Hardware stack levels required when called:    4
 26345 ;; This function calls:
 26346 ;;		Nothing
 26347 ;; This function is called by:
 26348 ;;		_RF_Initialization
 26349 ;; This function uses a non-reentrant model
 26350 ;;
 26351                           psect	text3351
 26352                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 26353                           	line	51
 26354                           	global	__size_of_setRF_Initialization
 26355  0007                     	__size_of_setRF_Initialization	equ	__end_of_setRF_Initialization-_setRF_Initialization
 26356                           	
 26357  2000                     _setRF_Initialization:	
 26358                           	opt	stack 10
 26359                           ; Regs used in _setRF_Initialization: [wreg]
 26360                           	line	54
 26361                           	
 26362  2000                     l22847:	
 26363                           ;RF_Control_B1.c: 54: Tx_Length=21;
 26364  2000  3015               	movlw	(015h)
 26365  2001  0020               	movlb 0	; select bank0
 26366  2002  00A0               	movwf	(??_setRF_Initialization+0)+0
 26367  2003  0820               	movf	(??_setRF_Initialization+0)+0,w
 26368  2004  0021               	movlb 1	; select bank1
 26369  2005  00C3               	movwf	(_Tx_Length)^080h
 26370                           	line	56
 26371                           	
 26372  2006                     l13123:	
 26373  2006  0008               	return
 26374                           	opt stack 0
 26375                           GLOBAL	__end_of_setRF_Initialization
 26376  2007                     	__end_of_setRF_Initialization:
 26377 ;; =============== function _setRF_Initialization ends ============
 26378                           
 26379                           	signat	_setRF_Initialization,4216
 26380                           	global	_RfPointSelect
 26381                           psect	text3352,local,class=CODE,delta=2
 26382                           global __ptext3352
 26383  2034                     __ptext3352:
 26384                           
 26385 ;; *************** function _RfPointSelect *****************
 26386 ;; Defined at:
 26387 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 26388 ;; Parameters:    Size  Location     Type
 26389 ;;  rf              1    wreg     unsigned char 
 26390 ;; Auto vars:     Size  Location     Type
 26391 ;;  rf              1    1[BANK0 ] unsigned char 
 26392 ;; Return value:  Size  Location     Type
 26393 ;;		None               void
 26394 ;; Registers used:
 26395 ;;		wreg
 26396 ;; Tracked objects:
 26397 ;;		On entry : 0/0
 26398 ;;		On exit  : 0/0
 26399 ;;		Unchanged: 0/0
 26400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26404 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26405 ;;Total ram usage:        2 bytes
 26406 ;; Hardware stack levels used:    1
 26407 ;; Hardware stack levels required when called:    4
 26408 ;; This function calls:
 26409 ;;		Nothing
 26410 ;; This function is called by:
 26411 ;;		_setRF_Learn
 26412 ;;		_setRF_RxStatus
 26413 ;;		_setRF_Main
 26414 ;;		_setTxData
 26415 ;;		_setRF_Enable
 26416 ;;		_RF_RxDisable
 26417 ;;		_getRxData
 26418 ;;		_setLog_Code
 26419 ;;		_setControl_Lights_Table
 26420 ;; This function uses a non-reentrant model
 26421 ;;
 26422                           psect	text3352
 26423                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 26424                           	line	8
 26425                           	global	__size_of_RfPointSelect
 26426  000F                     	__size_of_RfPointSelect	equ	__end_of_RfPointSelect-_RfPointSelect
 26427                           	
 26428  2034                     _RfPointSelect:	
 26429                           	opt	stack 8
 26430                           ; Regs used in _RfPointSelect: [wreg]
 26431                           ;RfPointSelect@rf stored from wreg
 26432                           	line	10
 26433  2034  0020               	movlb 0	; select bank0
 26434  2035  00A1               	movwf	(RfPointSelect@rf)
 26435                           	
 26436  2036                     l22843:	
 26437                           ;RF_Control_B1.c: 10: if(rf == 1)
 26438  2036  0821               	movf	(RfPointSelect@rf),w
 26439  2037  3A01               	xorlw	01h&0ffh
 26440  2038  1D03               	skipz
 26441  2039  283B               	goto	u5781
 26442  203A  283C               	goto	u5780
 26443  203B                     u5781:
 26444  203B  2842               	goto	l13105
 26445  203C                     u5780:
 26446                           	line	12
 26447                           	
 26448  203C                     l22845:	
 26449                           ;RF_Control_B1.c: 11: {
 26450                           ;RF_Control_B1.c: 12: RF=&RF1;
 26451  203C  30EA               	movlw	(_RF1)&0ffh
 26452  203D  00A0               	movwf	(??_RfPointSelect+0)+0
 26453  203E  0820               	movf	(??_RfPointSelect+0)+0,w
 26454  203F  0021               	movlb 1	; select bank1
 26455  2040  00BE               	movwf	(_RF)^080h
 26456  2041  2842               	goto	l13105
 26457                           	line	13
 26458                           	
 26459  2042                     l13104:	
 26460                           	line	15
 26461                           	
 26462  2042                     l13105:	
 26463  2042  0008               	return
 26464                           	opt stack 0
 26465                           GLOBAL	__end_of_RfPointSelect
 26466  2043                     	__end_of_RfPointSelect:
 26467 ;; =============== function _RfPointSelect ends ============
 26468                           
 26469                           	signat	_RfPointSelect,4216
 26470                           	global	_PowerFaultPointSelect
 26471                           psect	text3353,local,class=CODE,delta=2
 26472                           global __ptext3353
 26473  2ED9                     __ptext3353:
 26474                           
 26475 ;; *************** function _PowerFaultPointSelect *****************
 26476 ;; Defined at:
 26477 ;;		line 9 in file "G:\Program\PIC\Source_File\PowerFault_B1.c"
 26478 ;; Parameters:    Size  Location     Type
 26479 ;;  pf              1    wreg     unsigned char 
 26480 ;; Auto vars:     Size  Location     Type
 26481 ;;  pf              1    0[COMMON] unsigned char 
 26482 ;; Return value:  Size  Location     Type
 26483 ;;		None               void
 26484 ;; Registers used:
 26485 ;;		wreg
 26486 ;; Tracked objects:
 26487 ;;		On entry : 0/0
 26488 ;;		On exit  : 0/0
 26489 ;;		Unchanged: 0/0
 26490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26494 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26495 ;;Total ram usage:        1 bytes
 26496 ;; Hardware stack levels used:    1
 26497 ;; Hardware stack levels required when called:    4
 26498 ;; This function calls:
 26499 ;;		Nothing
 26500 ;; This function is called by:
 26501 ;;		_setPowerFault_Initialization
 26502 ;;		_getPF_Safe
 26503 ;;		_getPowerFault_AD
 26504 ;;		_setPowerFault_Main
 26505 ;;		_setPowerFault_ERROR
 26506 ;;		_setPF_Enable
 26507 ;;		_getPF_ERROR
 26508 ;; This function uses a non-reentrant model
 26509 ;;
 26510                           psect	text3353
 26511                           	file	"G:\Program\PIC\Source_File\PowerFault_B1.c"
 26512                           	line	9
 26513                           	global	__size_of_PowerFaultPointSelect
 26514  0007                     	__size_of_PowerFaultPointSelect	equ	__end_of_PowerFaultPointSelect-_PowerFaultPointSele
                                 ct
 26515                           	
 26516  2ED9                     _PowerFaultPointSelect:	
 26517                           	opt	stack 8
 26518                           ; Regs used in _PowerFaultPointSelect: [wreg]
 26519                           	line	11
 26520                           	
 26521  2ED9                     l22831:	
 26522                           ;PowerFault_B1.c: 11: PF=&PF1;
 26523  2ED9  30C7               	movlw	(_PF1)&0ffh
 26524  2EDA  0020               	movlb 0	; select bank0
 26525  2EDB  00A0               	movwf	(??_PowerFaultPointSelect+0)+0
 26526  2EDC  0820               	movf	(??_PowerFaultPointSelect+0)+0,w
 26527  2EDD  0021               	movlb 1	; select bank1
 26528  2EDE  00BD               	movwf	(_PF)^080h
 26529                           	line	13
 26530                           	
 26531  2EDF                     l11910:	
 26532  2EDF  0008               	return
 26533                           	opt stack 0
 26534                           GLOBAL	__end_of_PowerFaultPointSelect
 26535  2EE0                     	__end_of_PowerFaultPointSelect:
 26536 ;; =============== function _PowerFaultPointSelect ends ============
 26537                           
 26538                           	signat	_PowerFaultPointSelect,4216
 26539                           	global	_TempPointSelect
 26540                           psect	text3354,local,class=CODE,delta=2
 26541                           global __ptext3354
 26542  2EC0                     __ptext3354:
 26543                           
 26544 ;; *************** function _TempPointSelect *****************
 26545 ;; Defined at:
 26546 ;;		line 9 in file "G:\Program\PIC\Source_File\OverTemperature_B1.c"
 26547 ;; Parameters:    Size  Location     Type
 26548 ;;  temp            1    wreg     unsigned char 
 26549 ;; Auto vars:     Size  Location     Type
 26550 ;;  temp            1    0[COMMON] unsigned char 
 26551 ;; Return value:  Size  Location     Type
 26552 ;;		None               void
 26553 ;; Registers used:
 26554 ;;		wreg
 26555 ;; Tracked objects:
 26556 ;;		On entry : 0/0
 26557 ;;		On exit  : 0/0
 26558 ;;		Unchanged: 0/0
 26559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26564 ;;Total ram usage:        1 bytes
 26565 ;; Hardware stack levels used:    1
 26566 ;; Hardware stack levels required when called:    4
 26567 ;; This function calls:
 26568 ;;		Nothing
 26569 ;; This function is called by:
 26570 ;;		_setTemp_Enable
 26571 ;;		_getTemp_Safe
 26572 ;;		_getTemp_AD
 26573 ;;		_setTemp_Initialization
 26574 ;;		_setTemp_Main
 26575 ;;		_setOverTemp_ERROR
 26576 ;;		_getTemp_ERROR
 26577 ;; This function uses a non-reentrant model
 26578 ;;
 26579                           psect	text3354
 26580                           	file	"G:\Program\PIC\Source_File\OverTemperature_B1.c"
 26581                           	line	9
 26582                           	global	__size_of_TempPointSelect
 26583  0006                     	__size_of_TempPointSelect	equ	__end_of_TempPointSelect-_TempPointSelect
 26584                           	
 26585  2EC0                     _TempPointSelect:	
 26586                           	opt	stack 8
 26587                           ; Regs used in _TempPointSelect: [wreg]
 26588                           	line	11
 26589                           	
 26590  2EC0                     l22823:	
 26591                           ;OverTemperature_B1.c: 11: Temp=&Temp1;
 26592  2EC0  3030               	movlw	(_Temp1)&0ffh
 26593  2EC1  0020               	movlb 0	; select bank0
 26594  2EC2  00A0               	movwf	(??_TempPointSelect+0)+0
 26595  2EC3  0820               	movf	(??_TempPointSelect+0)+0,w
 26596  2EC4  00FC               	movwf	(_Temp)
 26597                           	line	13
 26598                           	
 26599  2EC5                     l10739:	
 26600  2EC5  0008               	return
 26601                           	opt stack 0
 26602                           GLOBAL	__end_of_TempPointSelect
 26603  2EC6                     	__end_of_TempPointSelect:
 26604 ;; =============== function _TempPointSelect ends ============
 26605                           
 26606                           	signat	_TempPointSelect,4216
 26607                           	global	_setLoad_AH_AL_Restore
 26608                           psect	text3355,local,class=CODE,delta=2
 26609                           global __ptext3355
 26610  2569                     __ptext3355:
 26611                           
 26612 ;; *************** function _setLoad_AH_AL_Restore *****************
 26613 ;; Defined at:
 26614 ;;		line 376 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 26615 ;; Parameters:    Size  Location     Type
 26616 ;;  load            1    wreg     unsigned char 
 26617 ;; Auto vars:     Size  Location     Type
 26618 ;;  load            1    0[COMMON] unsigned char 
 26619 ;;  i               1    1[BANK0 ] unsigned char 
 26620 ;; Return value:  Size  Location     Type
 26621 ;;		None               void
 26622 ;; Registers used:
 26623 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 26624 ;; Tracked objects:
 26625 ;;		On entry : 0/0
 26626 ;;		On exit  : 0/0
 26627 ;;		Unchanged: 0/0
 26628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26633 ;;Total ram usage:        2 bytes
 26634 ;; Hardware stack levels used:    1
 26635 ;; Hardware stack levels required when called:    4
 26636 ;; This function calls:
 26637 ;;		Nothing
 26638 ;; This function is called by:
 26639 ;;		_setLoad_Initialization
 26640 ;;		_setLoad_Main
 26641 ;; This function uses a non-reentrant model
 26642 ;;
 26643                           psect	text3355
 26644                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 26645                           	line	376
 26646                           	global	__size_of_setLoad_AH_AL_Restore
 26647  0030                     	__size_of_setLoad_AH_AL_Restore	equ	__end_of_setLoad_AH_AL_Restore-_setLoad_AH_AL_Resto
                                 re
 26648                           	
 26649  2569                     _setLoad_AH_AL_Restore:	
 26650                           	opt	stack 9
 26651                           ; Regs used in _setLoad_AH_AL_Restore: [wreg+fsr1l-status,0]
 26652                           	line	379
 26653                           	
 26654  2569                     l22793:	
 26655                           ;OverLoad_B1.c: 378: char i;
 26656                           ;OverLoad_B1.c: 379: for(i=0 ; i<5 ;i++)
 26657  2569  0020               	movlb 0	; select bank0
 26658  256A  01A1               	clrf	(setLoad_AH_AL_Restore@i)
 26659                           	
 26660  256B                     l22795:	
 26661  256B  3005               	movlw	(05h)
 26662  256C  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 26663  256D  1C03               	skipc
 26664  256E  2D70               	goto	u5741
 26665  256F  2D71               	goto	u5740
 26666  2570                     u5741:
 26667  2570  2D73               	goto	l22799
 26668  2571                     u5740:
 26669  2571  2D98               	goto	l9618
 26670                           	
 26671  2572                     l22797:	
 26672  2572  2D98               	goto	l9618
 26673                           	line	380
 26674                           	
 26675  2573                     l9616:	
 26676                           	line	381
 26677                           	
 26678  2573                     l22799:	
 26679                           ;OverLoad_B1.c: 380: {
 26680                           ;OverLoad_B1.c: 381: Load->AH[i]=0;
 26681  2573  0821               	movf	(setLoad_AH_AL_Restore@i),w
 26682  2574  0709               	addwf	wreg,w
 26683  2575  3E08               	addlw	08h
 26684  2576  076E               	addwf	(_Load),w
 26685  2577  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 26686  2578  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 26687  2579  0086               	movwf	fsr1l
 26688  257A  3002               	movlw 2	; select bank4/5
 26689  257B  0087               	movwf fsr1h	
 26690                           	
 26691  257C  3000               	movlw	low(0)
 26692  257D  3FC0               	movwi	[0]fsr1
 26693  257E  3000               	movlw	high(0)
 26694  257F  3FC1               	movwi	[1]fsr1
 26695                           	line	382
 26696                           ;OverLoad_B1.c: 382: Load->AL[i]=0xffff;
 26697  2580  0821               	movf	(setLoad_AH_AL_Restore@i),w
 26698  2581  0709               	addwf	wreg,w
 26699  2582  3E1A               	addlw	01Ah
 26700  2583  076E               	addwf	(_Load),w
 26701  2584  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 26702  2585  0820               	movf	0+(??_setLoad_AH_AL_Restore+0)+0,w
 26703  2586  0086               	movwf	fsr1l
 26704  2587  3002               	movlw 2	; select bank4/5
 26705  2588  0087               	movwf fsr1h	
 26706                           	
 26707  2589  30FF               	movlw	low(0FFFFh)
 26708  258A  3FC0               	movwi	[0]fsr1
 26709  258B  30FF               	movlw	high(0FFFFh)
 26710  258C  3FC1               	movwi	[1]fsr1
 26711                           	line	379
 26712                           	
 26713  258D                     l22801:	
 26714  258D  3001               	movlw	(01h)
 26715  258E  00A0               	movwf	(??_setLoad_AH_AL_Restore+0)+0
 26716  258F  0820               	movf	(??_setLoad_AH_AL_Restore+0)+0,w
 26717  2590  07A1               	addwf	(setLoad_AH_AL_Restore@i),f
 26718                           	
 26719  2591                     l22803:	
 26720  2591  3005               	movlw	(05h)
 26721  2592  0221               	subwf	(setLoad_AH_AL_Restore@i),w
 26722  2593  1C03               	skipc
 26723  2594  2D96               	goto	u5751
 26724  2595  2D97               	goto	u5750
 26725  2596                     u5751:
 26726  2596  2D73               	goto	l22799
 26727  2597                     u5750:
 26728  2597  2D98               	goto	l9618
 26729                           	
 26730  2598                     l9617:	
 26731                           	line	384
 26732                           	
 26733  2598                     l9618:	
 26734  2598  0008               	return
 26735                           	opt stack 0
 26736                           GLOBAL	__end_of_setLoad_AH_AL_Restore
 26737  2599                     	__end_of_setLoad_AH_AL_Restore:
 26738 ;; =============== function _setLoad_AH_AL_Restore ends ============
 26739                           
 26740                           	signat	_setLoad_AH_AL_Restore,4216
 26741                           	global	_LoadPointSelect
 26742                           psect	text3356,local,class=CODE,delta=2
 26743                           global __ptext3356
 26744  2FBA                     __ptext3356:
 26745                           
 26746 ;; *************** function _LoadPointSelect *****************
 26747 ;; Defined at:
 26748 ;;		line 8 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 26749 ;; Parameters:    Size  Location     Type
 26750 ;;  load            1    wreg     unsigned char 
 26751 ;; Auto vars:     Size  Location     Type
 26752 ;;  load            1    1[BANK0 ] unsigned char 
 26753 ;; Return value:  Size  Location     Type
 26754 ;;		None               void
 26755 ;; Registers used:
 26756 ;;		wreg
 26757 ;; Tracked objects:
 26758 ;;		On entry : 0/0
 26759 ;;		On exit  : 0/0
 26760 ;;		Unchanged: 0/0
 26761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26766 ;;Total ram usage:        2 bytes
 26767 ;; Hardware stack levels used:    1
 26768 ;; Hardware stack levels required when called:    4
 26769 ;; This function calls:
 26770 ;;		Nothing
 26771 ;; This function is called by:
 26772 ;;		_setLoad_Initialization
 26773 ;;		_getLoad_AD
 26774 ;;		_setLoad_Main
 26775 ;;		_setLoad_ERROR
 26776 ;;		_setLoad_LightsStatus
 26777 ;;		_setLoad_Enable
 26778 ;;		_setLoad_GO
 26779 ;;		_setLoad_StatusOn
 26780 ;;		_setLoad_StatusOff
 26781 ;;		_getLoad_Safe
 26782 ;;		_setLoad_LightsCount
 26783 ;;		_getLoad_ERROR
 26784 ;; This function uses a non-reentrant model
 26785 ;;
 26786                           psect	text3356
 26787                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 26788                           	line	8
 26789                           	global	__size_of_LoadPointSelect
 26790  000E                     	__size_of_LoadPointSelect	equ	__end_of_LoadPointSelect-_LoadPointSelect
 26791                           	
 26792  2FBA                     _LoadPointSelect:	
 26793                           	opt	stack 5
 26794                           ; Regs used in _LoadPointSelect: [wreg]
 26795                           ;LoadPointSelect@load stored from wreg
 26796                           	line	10
 26797  2FBA  0020               	movlb 0	; select bank0
 26798  2FBB  00A1               	movwf	(LoadPointSelect@load)
 26799                           	
 26800  2FBC                     l22789:	
 26801                           ;OverLoad_B1.c: 10: if(load == 1)
 26802  2FBC  0821               	movf	(LoadPointSelect@load),w
 26803  2FBD  3A01               	xorlw	01h&0ffh
 26804  2FBE  1D03               	skipz
 26805  2FBF  2FC1               	goto	u5731
 26806  2FC0  2FC2               	goto	u5730
 26807  2FC1                     u5731:
 26808  2FC1  2FC7               	goto	l9523
 26809  2FC2                     u5730:
 26810                           	line	12
 26811                           	
 26812  2FC2                     l22791:	
 26813                           ;OverLoad_B1.c: 11: {
 26814                           ;OverLoad_B1.c: 12: Load=&Load1;
 26815  2FC2  3020               	movlw	(_Load1)&0ffh
 26816  2FC3  00A0               	movwf	(??_LoadPointSelect+0)+0
 26817  2FC4  0820               	movf	(??_LoadPointSelect+0)+0,w
 26818  2FC5  00EE               	movwf	(_Load)
 26819  2FC6  2FC7               	goto	l9523
 26820                           	line	13
 26821                           	
 26822  2FC7                     l9522:	
 26823                           	line	15
 26824                           	
 26825  2FC7                     l9523:	
 26826  2FC7  0008               	return
 26827                           	opt stack 0
 26828                           GLOBAL	__end_of_LoadPointSelect
 26829  2FC8                     	__end_of_LoadPointSelect:
 26830 ;; =============== function _LoadPointSelect ends ============
 26831                           
 26832                           	signat	_LoadPointSelect,4216
 26833                           	global	_Flash_Memory_Read
 26834                           psect	text3357,local,class=CODE,delta=2
 26835                           global __ptext3357
 26836  22B0                     __ptext3357:
 26837                           
 26838 ;; *************** function _Flash_Memory_Read *****************
 26839 ;; Defined at:
 26840 ;;		line 439 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 26841 ;; Parameters:    Size  Location     Type
 26842 ;;  address         1    wreg     unsigned char 
 26843 ;; Auto vars:     Size  Location     Type
 26844 ;;  address         1    2[BANK0 ] unsigned char 
 26845 ;;  ret             1    3[BANK0 ] unsigned char 
 26846 ;;  i               1    1[BANK0 ] unsigned char 
 26847 ;; Return value:  Size  Location     Type
 26848 ;;                  1    wreg      unsigned char 
 26849 ;; Registers used:
 26850 ;;		wreg
 26851 ;; Tracked objects:
 26852 ;;		On entry : 0/0
 26853 ;;		On exit  : 0/0
 26854 ;;		Unchanged: 0/0
 26855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 26857 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 26858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26859 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26860 ;;Total ram usage:        4 bytes
 26861 ;; Hardware stack levels used:    1
 26862 ;; Hardware stack levels required when called:    4
 26863 ;; This function calls:
 26864 ;;		Nothing
 26865 ;; This function is called by:
 26866 ;;		_Flash_Memory_Initialization
 26867 ;;		_Flash_Memory_Modify
 26868 ;; This function uses a non-reentrant model
 26869 ;;
 26870                           psect	text3357
 26871                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 26872                           	line	439
 26873                           	global	__size_of_Flash_Memory_Read
 26874  001A                     	__size_of_Flash_Memory_Read	equ	__end_of_Flash_Memory_Read-_Flash_Memory_Read
 26875                           	
 26876  22B0                     _Flash_Memory_Read:	
 26877                           	opt	stack 9
 26878                           ; Regs used in _Flash_Memory_Read: [wreg]
 26879                           ;Flash_Memory_Read@address stored from wreg
 26880  22B0  0020               	movlb 0	; select bank0
 26881  22B1  00A2               	movwf	(Flash_Memory_Read@address)
 26882                           	line	440
 26883                           	
 26884  22B2                     l22779:	
 26885                           ;MCU_16f1518_B1.c: 440: char i,ret=0;
 26886  22B2  01A3               	clrf	(Flash_Memory_Read@ret)
 26887                           	line	441
 26888                           	
 26889  22B3                     l22781:	
 26890                           ;MCU_16f1518_B1.c: 441: PMADRH=0x30;
 26891  22B3  3030               	movlw	(030h)
 26892  22B4  0023               	movlb 3	; select bank3
 26893  22B5  0092               	movwf	(402)^0180h	;volatile
 26894                           	line	442
 26895                           ;MCU_16f1518_B1.c: 442: PMADRL=address;
 26896  22B6  0020               	movlb 0	; select bank0
 26897  22B7  0822               	movf	(Flash_Memory_Read@address),w
 26898  22B8  0023               	movlb 3	; select bank3
 26899  22B9  0091               	movwf	(401)^0180h	;volatile
 26900                           	line	443
 26901                           	
 26902  22BA                     l22783:	
 26903                           ;MCU_16f1518_B1.c: 443: CFGS=0;
 26904  22BA  1315               	bcf	(3246/8)^0180h,(3246)&7
 26905                           	line	444
 26906                           	
 26907  22BB                     l22785:	
 26908                           ;MCU_16f1518_B1.c: 444: RD=1;
 26909  22BB  1415               	bsf	(3240/8)^0180h,(3240)&7
 26910                           	line	445
 26911                           ;MCU_16f1518_B1.c: 445: i=PMDATH;
 26912  22BC  0814               	movf	(404)^0180h,w	;volatile
 26913  22BD  0020               	movlb 0	; select bank0
 26914  22BE  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 26915  22BF  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 26916  22C0  00A1               	movwf	(Flash_Memory_Read@i)
 26917                           	line	446
 26918                           ;MCU_16f1518_B1.c: 446: ret=PMDATL;
 26919  22C1  0023               	movlb 3	; select bank3
 26920  22C2  0813               	movf	(403)^0180h,w	;volatile
 26921  22C3  0020               	movlb 0	; select bank0
 26922  22C4  00A0               	movwf	(??_Flash_Memory_Read+0)+0
 26923  22C5  0820               	movf	(??_Flash_Memory_Read+0)+0,w
 26924  22C6  00A3               	movwf	(Flash_Memory_Read@ret)
 26925                           	line	447
 26926                           ;MCU_16f1518_B1.c: 447: return ret;
 26927  22C7  0823               	movf	(Flash_Memory_Read@ret),w
 26928  22C8  2AC9               	goto	l8383
 26929                           	
 26930  22C9                     l22787:	
 26931                           	line	448
 26932                           	
 26933  22C9                     l8383:	
 26934  22C9  0008               	return
 26935                           	opt stack 0
 26936                           GLOBAL	__end_of_Flash_Memory_Read
 26937  22CA                     	__end_of_Flash_Memory_Read:
 26938 ;; =============== function _Flash_Memory_Read ends ============
 26939                           
 26940                           	signat	_Flash_Memory_Read,4217
 26941                           	global	_getAD
 26942                           psect	text3358,local,class=CODE,delta=2
 26943                           global __ptext3358
 26944  2308                     __ptext3358:
 26945                           
 26946 ;; *************** function _getAD *****************
 26947 ;; Defined at:
 26948 ;;		line 249 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 26949 ;; Parameters:    Size  Location     Type
 26950 ;;  adcon0          1    wreg     unsigned char 
 26951 ;;  adcon1          1    0[BANK0 ] unsigned char 
 26952 ;; Auto vars:     Size  Location     Type
 26953 ;;  adcon0          1    6[BANK0 ] unsigned char 
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  2    0[BANK0 ] int 
 26956 ;; Registers used:
 26957 ;;		wreg, status,2, status,0, btemp+1
 26958 ;; Tracked objects:
 26959 ;;		On entry : 0/0
 26960 ;;		On exit  : 0/0
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 26963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 26964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 26965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 26966 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0
 26967 ;;Total ram usage:        7 bytes
 26968 ;; Hardware stack levels used:    1
 26969 ;; Hardware stack levels required when called:    4
 26970 ;; This function calls:
 26971 ;;		Nothing
 26972 ;; This function is called by:
 26973 ;;		_getLoad_AD
 26974 ;;		_getTemp_AD
 26975 ;;		_getPowerFault_AD
 26976 ;; This function uses a non-reentrant model
 26977 ;;
 26978                           psect	text3358
 26979                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 26980                           	line	249
 26981                           	global	__size_of_getAD
 26982  0024                     	__size_of_getAD	equ	__end_of_getAD-_getAD
 26983                           	
 26984  2308                     _getAD:	
 26985                           	opt	stack 10
 26986                           ; Regs used in _getAD: [wreg+status,2+status,0+btemp+1]
 26987                           ;getAD@adcon0 stored from wreg
 26988  2308  0020               	movlb 0	; select bank0
 26989  2309  00A6               	movwf	(getAD@adcon0)
 26990                           	line	250
 26991                           	
 26992  230A                     l22771:	
 26993                           ;MCU_16f1518_B1.c: 250: ADCON0=adcon0;
 26994  230A  0826               	movf	(getAD@adcon0),w
 26995  230B  0021               	movlb 1	; select bank1
 26996  230C  009D               	movwf	(157)^080h	;volatile
 26997                           	line	251
 26998                           ;MCU_16f1518_B1.c: 251: ADCON1=adcon1;
 26999  230D  0020               	movlb 0	; select bank0
 27000  230E  0820               	movf	(getAD@adcon1),w
 27001  230F  0021               	movlb 1	; select bank1
 27002  2310  009E               	movwf	(158)^080h	;volatile
 27003                           	line	252
 27004                           	
 27005  2311                     l22773:	
 27006                           ;MCU_16f1518_B1.c: 252: GO_nDONE=1;
 27007  2311  149D               	bsf	(1257/8)^080h,(1257)&7
 27008                           	line	253
 27009                           ;MCU_16f1518_B1.c: 253: while(GO_nDONE);
 27010  2312  2B13               	goto	l8355
 27011                           	
 27012  2313                     l8356:	
 27013                           	
 27014  2313                     l8355:	
 27015  2313  189D               	btfsc	(1257/8)^080h,(1257)&7
 27016  2314  2B16               	goto	u5721
 27017  2315  2B17               	goto	u5720
 27018  2316                     u5721:
 27019  2316  2B13               	goto	l8355
 27020  2317                     u5720:
 27021  2317  2B18               	goto	l22775
 27022                           	
 27023  2318                     l8357:	
 27024                           	line	254
 27025                           	
 27026  2318                     l22775:	
 27027                           ;MCU_16f1518_B1.c: 254: return ((ADRESH*256)+ADRESL);
 27028  2318  081B               	movf	(155)^080h,w	;volatile
 27029  2319  0020               	movlb 0	; select bank0
 27030  231A  00A2               	movwf	(??_getAD+0)+0
 27031  231B  01A3               	clrf	(??_getAD+0)+0+1
 27032  231C  0021               	movlb 1	; select bank1
 27033  231D  081C               	movf	(156)^080h,w	;volatile
 27034  231E  0020               	movlb 0	; select bank0
 27035  231F  00A4               	movwf	(??_getAD+2)+0
 27036  2320  01A5               	clrf	(??_getAD+2)+0+1
 27037  2321  0824               	movf	(??_getAD+2)+0,w
 27038  2322  00A5               	movwf	(??_getAD+2)+1
 27039  2323  01A4               	clrf	(??_getAD+2)+0
 27040  2324  0822               	movf	0+(??_getAD+0)+0,w
 27041  2325  0724               	addwf	0+(??_getAD+2)+0,w
 27042  2326  00A0               	movwf	(?_getAD)
 27043  2327  0823               	movf	1+(??_getAD+0)+0,w
 27044  2328  3D25               	addwfc	1+(??_getAD+2)+0,w
 27045  2329  00A1               	movwf	1+(?_getAD)
 27046  232A  2B2B               	goto	l8358
 27047                           	
 27048  232B                     l22777:	
 27049                           	line	255
 27050                           	
 27051  232B                     l8358:	
 27052  232B  0008               	return
 27053                           	opt stack 0
 27054                           GLOBAL	__end_of_getAD
 27055  232C                     	__end_of_getAD:
 27056 ;; =============== function _getAD ends ============
 27057                           
 27058                           	signat	_getAD,8314
 27059                           	global	_setINT_GO
 27060                           psect	text3359,local,class=CODE,delta=2
 27061                           global __ptext3359
 27062  2F0C                     __ptext3359:
 27063                           
 27064 ;; *************** function _setINT_GO *****************
 27065 ;; Defined at:
 27066 ;;		line 192 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27067 ;; Parameters:    Size  Location     Type
 27068 ;;  command         1    wreg     unsigned char 
 27069 ;; Auto vars:     Size  Location     Type
 27070 ;;  command         1    0[BANK0 ] unsigned char 
 27071 ;; Return value:  Size  Location     Type
 27072 ;;		None               void
 27073 ;; Registers used:
 27074 ;;		wreg
 27075 ;; Tracked objects:
 27076 ;;		On entry : 0/0
 27077 ;;		On exit  : 0/0
 27078 ;;		Unchanged: 0/0
 27079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27081 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27083 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27084 ;;Total ram usage:        1 bytes
 27085 ;; Hardware stack levels used:    1
 27086 ;; Hardware stack levels required when called:    4
 27087 ;; This function calls:
 27088 ;;		Nothing
 27089 ;; This function is called by:
 27090 ;;		_setRF_Main
 27091 ;;		_RF_RxDisable
 27092 ;; This function uses a non-reentrant model
 27093 ;;
 27094                           psect	text3359
 27095                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27096                           	line	192
 27097                           	global	__size_of_setINT_GO
 27098  000A                     	__size_of_setINT_GO	equ	__end_of_setINT_GO-_setINT_GO
 27099                           	
 27100  2F0C                     _setINT_GO:	
 27101                           	opt	stack 9
 27102                           ; Regs used in _setINT_GO: [wreg]
 27103                           ;setINT_GO@command stored from wreg
 27104  2F0C  0020               	movlb 0	; select bank0
 27105  2F0D  00A0               	movwf	(setINT_GO@command)
 27106                           	line	193
 27107                           	
 27108  2F0E                     l22767:	
 27109                           ;MCU_16f1518_B1.c: 193: INTF=0;
 27110  2F0E  108B               	bcf	(89/8),(89)&7
 27111                           	line	194
 27112                           	
 27113  2F0F                     l22769:	
 27114                           ;MCU_16f1518_B1.c: 194: INTE=command;
 27115  2F0F  1820               	btfsc	(setINT_GO@command),0
 27116  2F10  2F12               	goto	u5701
 27117  2F11  2F14               	goto	u5700
 27118                           	
 27119  2F12                     u5701:
 27120  2F12  160B               	bsf	(92/8),(92)&7
 27121  2F13  2F15               	goto	u5714
 27122  2F14                     u5700:
 27123  2F14  120B               	bcf	(92/8),(92)&7
 27124  2F15                     u5714:
 27125                           	line	195
 27126                           	
 27127  2F15                     l8339:	
 27128  2F15  0008               	return
 27129                           	opt stack 0
 27130                           GLOBAL	__end_of_setINT_GO
 27131  2F16                     	__end_of_setINT_GO:
 27132 ;; =============== function _setINT_GO ends ============
 27133                           
 27134                           	signat	_setINT_GO,4216
 27135                           	global	_IOC_Set
 27136                           psect	text3360,local,class=CODE,delta=2
 27137                           global __ptext3360
 27138  2F2A                     __ptext3360:
 27139                           
 27140 ;; *************** function _IOC_Set *****************
 27141 ;; Defined at:
 27142 ;;		line 203 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;		None
 27145 ;; Auto vars:     Size  Location     Type
 27146 ;;		None
 27147 ;; Return value:  Size  Location     Type
 27148 ;;		None               void
 27149 ;; Registers used:
 27150 ;;		wreg, status,2
 27151 ;; Tracked objects:
 27152 ;;		On entry : 0/0
 27153 ;;		On exit  : 0/0
 27154 ;;		Unchanged: 0/0
 27155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27160 ;;Total ram usage:        0 bytes
 27161 ;; Hardware stack levels used:    1
 27162 ;; Hardware stack levels required when called:    4
 27163 ;; This function calls:
 27164 ;;		Nothing
 27165 ;; This function is called by:
 27166 ;;		_Mcu_Initialization
 27167 ;; This function uses a non-reentrant model
 27168 ;;
 27169                           psect	text3360
 27170                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27171                           	line	203
 27172                           	global	__size_of_IOC_Set
 27173  000C                     	__size_of_IOC_Set	equ	__end_of_IOC_Set-_IOC_Set
 27174                           	
 27175  2F2A                     _IOC_Set:	
 27176                           	opt	stack 10
 27177                           ; Regs used in _IOC_Set: [wreg+status,2]
 27178                           	line	204
 27179                           	
 27180  2F2A                     l22623:	
 27181                           ;MCU_16f1518_B1.c: 204: WPUB2=0;
 27182  2F2A  0024               	movlb 4	; select bank4
 27183  2F2B  110D               	bcf	(4202/8)^0200h,(4202)&7
 27184                           	line	205
 27185                           	
 27186  2F2C                     l22625:	
 27187                           ;MCU_16f1518_B1.c: 205: IOCBP=0b00000100;
 27188  2F2C  3004               	movlw	(04h)
 27189  2F2D  0027               	movlb 7	; select bank7
 27190  2F2E  0094               	movwf	(916)^0380h	;volatile
 27191                           	line	206
 27192                           ;MCU_16f1518_B1.c: 206: IOCBN=0b00000100;
 27193  2F2F  3004               	movlw	(04h)
 27194  2F30  0095               	movwf	(917)^0380h	;volatile
 27195                           	line	207
 27196                           	
 27197  2F31                     l22627:	
 27198                           ;MCU_16f1518_B1.c: 207: IOCBF=0b00000000;
 27199  2F31  0196               	clrf	(918)^0380h	;volatile
 27200                           	line	208
 27201                           	
 27202  2F32                     l22629:	
 27203                           ;MCU_16f1518_B1.c: 208: IOCIE=1;
 27204  2F32  158B               	bsf	(91/8),(91)&7
 27205                           	line	209
 27206                           	
 27207  2F33                     l22631:	
 27208                           ;MCU_16f1518_B1.c: 209: IOCIF=0;
 27209  2F33  100B               	bcf	(88/8),(88)&7
 27210                           	line	210
 27211                           	
 27212  2F34                     l22633:	
 27213                           ;MCU_16f1518_B1.c: 210: GIE=1;
 27214  2F34  178B               	bsf	(95/8),(95)&7
 27215                           	line	211
 27216                           	
 27217  2F35                     l8342:	
 27218  2F35  0008               	return
 27219                           	opt stack 0
 27220                           GLOBAL	__end_of_IOC_Set
 27221  2F36                     	__end_of_IOC_Set:
 27222 ;; =============== function _IOC_Set ends ============
 27223                           
 27224                           	signat	_IOC_Set,88
 27225                           	global	_INT_Set
 27226                           psect	text3361,local,class=CODE,delta=2
 27227                           global __ptext3361
 27228  2E70                     __ptext3361:
 27229                           
 27230 ;; *************** function _INT_Set *****************
 27231 ;; Defined at:
 27232 ;;		line 174 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27233 ;; Parameters:    Size  Location     Type
 27234 ;;		None
 27235 ;; Auto vars:     Size  Location     Type
 27236 ;;		None
 27237 ;; Return value:  Size  Location     Type
 27238 ;;		None               void
 27239 ;; Registers used:
 27240 ;;		None
 27241 ;; Tracked objects:
 27242 ;;		On entry : 0/0
 27243 ;;		On exit  : 0/0
 27244 ;;		Unchanged: 0/0
 27245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27250 ;;Total ram usage:        0 bytes
 27251 ;; Hardware stack levels used:    1
 27252 ;; Hardware stack levels required when called:    4
 27253 ;; This function calls:
 27254 ;;		Nothing
 27255 ;; This function is called by:
 27256 ;;		_Mcu_Initialization
 27257 ;; This function uses a non-reentrant model
 27258 ;;
 27259                           psect	text3361
 27260                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27261                           	line	174
 27262                           	global	__size_of_INT_Set
 27263  0005                     	__size_of_INT_Set	equ	__end_of_INT_Set-_INT_Set
 27264                           	
 27265  2E70                     _INT_Set:	
 27266                           	opt	stack 10
 27267                           ; Regs used in _INT_Set: []
 27268                           	line	175
 27269                           	
 27270  2E70                     l22621:	
 27271                           ;MCU_16f1518_B1.c: 175: WPUB0=0;
 27272  2E70  0024               	movlb 4	; select bank4
 27273  2E71  100D               	bcf	(4200/8)^0200h,(4200)&7
 27274                           	line	177
 27275                           ;MCU_16f1518_B1.c: 177: PEIE=1;
 27276  2E72  170B               	bsf	(94/8),(94)&7
 27277                           	line	178
 27278                           ;MCU_16f1518_B1.c: 178: GIE=1;
 27279  2E73  178B               	bsf	(95/8),(95)&7
 27280                           	line	179
 27281                           	
 27282  2E74                     l8332:	
 27283  2E74  0008               	return
 27284                           	opt stack 0
 27285                           GLOBAL	__end_of_INT_Set
 27286  2E75                     	__end_of_INT_Set:
 27287 ;; =============== function _INT_Set ends ============
 27288                           
 27289                           	signat	_INT_Set,88
 27290                           	global	_ADC_Set
 27291                           psect	text3362,local,class=CODE,delta=2
 27292                           global __ptext3362
 27293  2ED2                     __ptext3362:
 27294                           
 27295 ;; *************** function _ADC_Set *****************
 27296 ;; Defined at:
 27297 ;;		line 243 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27298 ;; Parameters:    Size  Location     Type
 27299 ;;		None
 27300 ;; Auto vars:     Size  Location     Type
 27301 ;;		None
 27302 ;; Return value:  Size  Location     Type
 27303 ;;		None               void
 27304 ;; Registers used:
 27305 ;;		wreg
 27306 ;; Tracked objects:
 27307 ;;		On entry : 0/0
 27308 ;;		On exit  : 0/0
 27309 ;;		Unchanged: 0/0
 27310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27315 ;;Total ram usage:        0 bytes
 27316 ;; Hardware stack levels used:    1
 27317 ;; Hardware stack levels required when called:    4
 27318 ;; This function calls:
 27319 ;;		Nothing
 27320 ;; This function is called by:
 27321 ;;		_Mcu_Initialization
 27322 ;; This function uses a non-reentrant model
 27323 ;;
 27324                           psect	text3362
 27325                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27326                           	line	243
 27327                           	global	__size_of_ADC_Set
 27328  0007                     	__size_of_ADC_Set	equ	__end_of_ADC_Set-_ADC_Set
 27329                           	
 27330  2ED2                     _ADC_Set:	
 27331                           	opt	stack 10
 27332                           ; Regs used in _ADC_Set: [wreg]
 27333                           	line	244
 27334                           	
 27335  2ED2                     l22619:	
 27336                           ;MCU_16f1518_B1.c: 244: ADCON1=0xf2;
 27337  2ED2  30F2               	movlw	(0F2h)
 27338  2ED3  0021               	movlb 1	; select bank1
 27339  2ED4  009E               	movwf	(158)^080h	;volatile
 27340                           	line	245
 27341                           ;MCU_16f1518_B1.c: 245: FVRCON=0xc0;
 27342  2ED5  30C0               	movlw	(0C0h)
 27343  2ED6  0022               	movlb 2	; select bank2
 27344  2ED7  0097               	movwf	(279)^0100h	;volatile
 27345                           	line	246
 27346                           	
 27347  2ED8                     l8352:	
 27348  2ED8  0008               	return
 27349                           	opt stack 0
 27350                           GLOBAL	__end_of_ADC_Set
 27351  2ED9                     	__end_of_ADC_Set:
 27352 ;; =============== function _ADC_Set ends ============
 27353                           
 27354                           	signat	_ADC_Set,88
 27355                           	global	_TMR0_Set
 27356                           psect	text3363,local,class=CODE,delta=2
 27357                           global __ptext3363
 27358  2228                     __ptext3363:
 27359                           
 27360 ;; *************** function _TMR0_Set *****************
 27361 ;; Defined at:
 27362 ;;		line 74 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27363 ;; Parameters:    Size  Location     Type
 27364 ;;		None
 27365 ;; Auto vars:     Size  Location     Type
 27366 ;;		None
 27367 ;; Return value:  Size  Location     Type
 27368 ;;		None               void
 27369 ;; Registers used:
 27370 ;;		wreg, fsr1l, fsr1h, status,2
 27371 ;; Tracked objects:
 27372 ;;		On entry : 0/0
 27373 ;;		On exit  : 0/0
 27374 ;;		Unchanged: 0/0
 27375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27378 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27379 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27380 ;;Total ram usage:        1 bytes
 27381 ;; Hardware stack levels used:    1
 27382 ;; Hardware stack levels required when called:    4
 27383 ;; This function calls:
 27384 ;;		Nothing
 27385 ;; This function is called by:
 27386 ;;		_Mcu_Initialization
 27387 ;; This function uses a non-reentrant model
 27388 ;;
 27389                           psect	text3363
 27390                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27391                           	line	74
 27392                           	global	__size_of_TMR0_Set
 27393  0015                     	__size_of_TMR0_Set	equ	__end_of_TMR0_Set-_TMR0_Set
 27394                           	
 27395  2228                     _TMR0_Set:	
 27396                           	opt	stack 10
 27397                           ; Regs used in _TMR0_Set: [wreg+fsr1l-status,2]
 27398                           	line	75
 27399                           	
 27400  2228                     l22607:	
 27401                           ;MCU_16f1518_B1.c: 75: Timer0=&VarTimer0;
 27402  2228  30CF               	movlw	(_VarTimer0)&0ffh
 27403  2229  0020               	movlb 0	; select bank0
 27404  222A  00A0               	movwf	(??_TMR0_Set+0)+0
 27405  222B  0820               	movf	(??_TMR0_Set+0)+0,w
 27406  222C  0021               	movlb 1	; select bank1
 27407  222D  00EF               	movwf	(_Timer0)^080h
 27408                           	line	76
 27409                           	
 27410  222E                     l22609:	
 27411                           ;MCU_16f1518_B1.c: 76: Timer0->DimmerCountValue=158;
 27412  222E  086F               	movf	(_Timer0)^080h,w
 27413  222F  3E05               	addlw	05h
 27414  2230  0086               	movwf	fsr1l
 27415  2231  0187               	clrf fsr1h	
 27416                           	
 27417  2232  309E               	movlw	low(09Eh)
 27418  2233  3FC0               	movwi	[0]fsr1
 27419  2234  3000               	movlw	high(09Eh)
 27420  2235  3FC1               	movwi	[1]fsr1
 27421                           	line	77
 27422                           	
 27423  2236                     l22611:	
 27424                           ;MCU_16f1518_B1.c: 77: OPTION_REG=0x00;
 27425  2236  0195               	clrf	(149)^080h	;volatile
 27426                           	line	78
 27427                           	
 27428  2237                     l22613:	
 27429                           ;MCU_16f1518_B1.c: 78: TMR0=(256-90);
 27430  2237  30A6               	movlw	(0A6h)
 27431  2238  0020               	movlb 0	; select bank0
 27432  2239  0095               	movwf	(21)	;volatile
 27433                           	line	79
 27434                           	
 27435  223A                     l22615:	
 27436                           ;MCU_16f1518_B1.c: 79: TMR0IE=1;
 27437  223A  168B               	bsf	(93/8),(93)&7
 27438                           	line	80
 27439                           	
 27440  223B                     l22617:	
 27441                           ;MCU_16f1518_B1.c: 80: GIE=1;
 27442  223B  178B               	bsf	(95/8),(95)&7
 27443                           	line	81
 27444                           	
 27445  223C                     l8294:	
 27446  223C  0008               	return
 27447                           	opt stack 0
 27448                           GLOBAL	__end_of_TMR0_Set
 27449  223D                     	__end_of_TMR0_Set:
 27450 ;; =============== function _TMR0_Set ends ============
 27451                           
 27452                           	signat	_TMR0_Set,88
 27453                           	global	_IO_Set
 27454                           psect	text3364,local,class=CODE,delta=2
 27455                           global __ptext3364
 27456  227E                     __ptext3364:
 27457                           
 27458 ;; *************** function _IO_Set *****************
 27459 ;; Defined at:
 27460 ;;		line 38 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27461 ;; Parameters:    Size  Location     Type
 27462 ;;		None
 27463 ;; Auto vars:     Size  Location     Type
 27464 ;;		None
 27465 ;; Return value:  Size  Location     Type
 27466 ;;		None               void
 27467 ;; Registers used:
 27468 ;;		wreg, status,2
 27469 ;; Tracked objects:
 27470 ;;		On entry : 0/0
 27471 ;;		On exit  : 0/0
 27472 ;;		Unchanged: 0/0
 27473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27478 ;;Total ram usage:        0 bytes
 27479 ;; Hardware stack levels used:    1
 27480 ;; Hardware stack levels required when called:    4
 27481 ;; This function calls:
 27482 ;;		Nothing
 27483 ;; This function is called by:
 27484 ;;		_Mcu_Initialization
 27485 ;; This function uses a non-reentrant model
 27486 ;;
 27487                           psect	text3364
 27488                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 27489                           	line	38
 27490                           	global	__size_of_IO_Set
 27491  0019                     	__size_of_IO_Set	equ	__end_of_IO_Set-_IO_Set
 27492                           	
 27493  227E                     _IO_Set:	
 27494                           	opt	stack 10
 27495                           ; Regs used in _IO_Set: [wreg+status,2]
 27496                           	line	39
 27497                           	
 27498  227E                     l22589:	
 27499                           ;MCU_16f1518_B1.c: 39: TRISA=0b01110111;;
 27500  227E  3077               	movlw	(077h)
 27501  227F  0021               	movlb 1	; select bank1
 27502  2280  008C               	movwf	(140)^080h	;volatile
 27503                           	line	40
 27504                           ;MCU_16f1518_B1.c: 40: TRISB=0b00000111;;
 27505  2281  3007               	movlw	(07h)
 27506  2282  008D               	movwf	(141)^080h	;volatile
 27507                           	line	41
 27508                           ;MCU_16f1518_B1.c: 41: TRISC=0b00001100;;
 27509  2283  300C               	movlw	(0Ch)
 27510  2284  008E               	movwf	(142)^080h	;volatile
 27511                           	line	42
 27512                           	
 27513  2285                     l22591:	
 27514                           ;MCU_16f1518_B1.c: 42: LATA=0b00000000;;
 27515  2285  0022               	movlb 2	; select bank2
 27516  2286  018C               	clrf	(268)^0100h	;volatile
 27517                           	line	43
 27518                           	
 27519  2287                     l22593:	
 27520                           ;MCU_16f1518_B1.c: 43: LATB=0b00000010;;
 27521  2287  3002               	movlw	(02h)
 27522  2288  008D               	movwf	(269)^0100h	;volatile
 27523                           	line	44
 27524                           ;MCU_16f1518_B1.c: 44: LATC=0b00000000;;
 27525  2289  018E               	clrf	(270)^0100h	;volatile
 27526                           	line	45
 27527                           	
 27528  228A                     l22595:	
 27529                           ;MCU_16f1518_B1.c: 45: ANSELA=0b00100010;;
 27530  228A  3022               	movlw	(022h)
 27531  228B  0023               	movlb 3	; select bank3
 27532  228C  008C               	movwf	(396)^0180h	;volatile
 27533                           	line	46
 27534                           	
 27535  228D                     l22597:	
 27536                           ;MCU_16f1518_B1.c: 46: ANSELB=0b00000000;;
 27537  228D  018D               	clrf	(397)^0180h	;volatile
 27538                           	line	47
 27539                           	
 27540  228E                     l22599:	
 27541                           ;MCU_16f1518_B1.c: 47: ANSELC=0b00000000;;
 27542  228E  018E               	clrf	(398)^0180h	;volatile
 27543                           	line	48
 27544                           	
 27545  228F                     l22601:	
 27546                           ;MCU_16f1518_B1.c: 48: PORTA=0b01110111;;
 27547  228F  3077               	movlw	(077h)
 27548  2290  0020               	movlb 0	; select bank0
 27549  2291  008C               	movwf	(12)	;volatile
 27550                           	line	49
 27551                           	
 27552  2292                     l22603:	
 27553                           ;MCU_16f1518_B1.c: 49: PORTB=0b00000111;;
 27554  2292  3007               	movlw	(07h)
 27555  2293  008D               	movwf	(13)	;volatile
 27556                           	line	50
 27557                           	
 27558  2294                     l22605:	
 27559                           ;MCU_16f1518_B1.c: 50: PORTC=0b00001100;;
 27560  2294  300C               	movlw	(0Ch)
 27561  2295  008E               	movwf	(14)	;volatile
 27562                           	line	51
 27563                           	
 27564  2296                     l8288:	
 27565  2296  0008               	return
 27566                           	opt stack 0
 27567                           GLOBAL	__end_of_IO_Set
 27568  2297                     	__end_of_IO_Set:
 27569 ;; =============== function _IO_Set ends ============
 27570                           
 27571                           	signat	_IO_Set,88
 27572                           	global	_MainT_Initialization
 27573                           psect	text3365,local,class=CODE,delta=2
 27574                           global __ptext3365
 27575  2252                     __ptext3365:
 27576                           
 27577 ;; *************** function _MainT_Initialization *****************
 27578 ;; Defined at:
 27579 ;;		line 89 in file "G:\Program\PIC\Source_File\main.c"
 27580 ;; Parameters:    Size  Location     Type
 27581 ;;		None
 27582 ;; Auto vars:     Size  Location     Type
 27583 ;;		None
 27584 ;; Return value:  Size  Location     Type
 27585 ;;		None               void
 27586 ;; Registers used:
 27587 ;;		wreg, fsr1l, fsr1h
 27588 ;; Tracked objects:
 27589 ;;		On entry : 0/0
 27590 ;;		On exit  : 0/0
 27591 ;;		Unchanged: 0/0
 27592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27595 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27597 ;;Total ram usage:        1 bytes
 27598 ;; Hardware stack levels used:    1
 27599 ;; Hardware stack levels required when called:    4
 27600 ;; This function calls:
 27601 ;;		Nothing
 27602 ;; This function is called by:
 27603 ;;		_main
 27604 ;; This function uses a non-reentrant model
 27605 ;;
 27606                           psect	text3365
 27607                           	file	"G:\Program\PIC\Source_File\main.c"
 27608                           	line	89
 27609                           	global	__size_of_MainT_Initialization
 27610  0016                     	__size_of_MainT_Initialization	equ	__end_of_MainT_Initialization-_MainT_Initialization
 27611                           	
 27612  2252                     _MainT_Initialization:	
 27613                           	opt	stack 11
 27614                           ; Regs used in _MainT_Initialization: [wregfsr1]
 27615                           	line	93
 27616                           	
 27617  2252                     l22583:	
 27618                           ;main.c: 93: Product=&VarProduct;
 27619  2252  30C5               	movlw	(_VarProduct)&0ffh
 27620  2253  0020               	movlb 0	; select bank0
 27621  2254  00A0               	movwf	(??_MainT_Initialization+0)+0
 27622  2255  0820               	movf	(??_MainT_Initialization+0)+0,w
 27623  2256  00FD               	movwf	(_Product)
 27624                           	line	96
 27625                           ;main.c: 96: TMain=&VarTMain;
 27626  2257  3020               	movlw	(_VarTMain)&0ffh
 27627  2258  00A0               	movwf	(??_MainT_Initialization+0)+0
 27628  2259  0820               	movf	(??_MainT_Initialization+0)+0,w
 27629  225A  0021               	movlb 1	; select bank1
 27630  225B  00EE               	movwf	(_TMain)^080h
 27631                           	line	97
 27632                           	
 27633  225C                     l22585:	
 27634                           ;main.c: 97: TMain->FirstOpen=1;
 27635  225C  086E               	movf	(_TMain)^080h,w
 27636  225D  0086               	movwf	fsr1l
 27637  225E  3001               	movlw 1	; select bank2/3
 27638  225F  0087               	movwf fsr1h	
 27639                           	
 27640  2260  1681               	bsf	indf1,5
 27641                           	line	98
 27642                           	
 27643  2261                     l22587:	
 27644                           ;main.c: 98: TMain->First=1;
 27645  2261  086E               	movf	(_TMain)^080h,w
 27646  2262  3E03               	addlw	03h
 27647  2263  0086               	movwf	fsr1l
 27648  2264  3001               	movlw 1	; select bank2/3
 27649  2265  0087               	movwf fsr1h	
 27650                           	
 27651  2266  1481               	bsf	indf1,1
 27652                           	line	99
 27653                           	
 27654  2267                     l7150:	
 27655  2267  0008               	return
 27656                           	opt stack 0
 27657                           GLOBAL	__end_of_MainT_Initialization
 27658  2268                     	__end_of_MainT_Initialization:
 27659 ;; =============== function _MainT_Initialization ends ============
 27660                           
 27661                           	signat	_MainT_Initialization,88
 27662                           	global	_LedPointSelect
 27663                           psect	text3366,local,class=CODE,delta=2
 27664                           global __ptext3366
 27665  24B4                     __ptext3366:
 27666                           
 27667 ;; *************** function _LedPointSelect *****************
 27668 ;; Defined at:
 27669 ;;		line 8 in file "G:\Program\PIC\Source_File\LED_B1.c"
 27670 ;; Parameters:    Size  Location     Type
 27671 ;;  led             1    wreg     unsigned char 
 27672 ;; Auto vars:     Size  Location     Type
 27673 ;;  led             1    1[BANK0 ] unsigned char 
 27674 ;; Return value:  Size  Location     Type
 27675 ;;		None               void
 27676 ;; Registers used:
 27677 ;;		wreg
 27678 ;; Tracked objects:
 27679 ;;		On entry : 0/0
 27680 ;;		On exit  : 0/0
 27681 ;;		Unchanged: 0/0
 27682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27686 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27687 ;;Total ram usage:        2 bytes
 27688 ;; Hardware stack levels used:    1
 27689 ;; Hardware stack levels required when called:    4
 27690 ;; This function calls:
 27691 ;;		Nothing
 27692 ;; This function is called by:
 27693 ;;		_setLED_Initialization
 27694 ;;		_setLED
 27695 ;;		_setLED_Main
 27696 ;; This function uses a non-reentrant model
 27697 ;;
 27698                           psect	text3366
 27699                           	file	"G:\Program\PIC\Source_File\LED_B1.c"
 27700                           	line	8
 27701                           	global	__size_of_LedPointSelect
 27702  002B                     	__size_of_LedPointSelect	equ	__end_of_LedPointSelect-_LedPointSelect
 27703                           	
 27704  24B4                     _LedPointSelect:	
 27705                           	opt	stack 5
 27706                           ; Regs used in _LedPointSelect: [wreg]
 27707                           ;LedPointSelect@led stored from wreg
 27708                           	line	10
 27709  24B4  0020               	movlb 0	; select bank0
 27710  24B5  00A1               	movwf	(LedPointSelect@led)
 27711                           	
 27712  24B6                     l22571:	
 27713                           ;LED_B1.c: 10: if(led == 1)
 27714  24B6  0821               	movf	(LedPointSelect@led),w
 27715  24B7  3A01               	xorlw	01h&0ffh
 27716  24B8  1D03               	skipz
 27717  24B9  2CBB               	goto	u5381
 27718  24BA  2CBC               	goto	u5380
 27719  24BB                     u5381:
 27720  24BB  2CC2               	goto	l22575
 27721  24BC                     u5380:
 27722                           	line	12
 27723                           	
 27724  24BC                     l22573:	
 27725                           ;LED_B1.c: 11: {
 27726                           ;LED_B1.c: 12: LED=&VarLED1;
 27727  24BC  30DF               	movlw	(_VarLED1)&0ffh
 27728  24BD  00A0               	movwf	(??_LedPointSelect+0)+0
 27729  24BE  0820               	movf	(??_LedPointSelect+0)+0,w
 27730  24BF  0021               	movlb 1	; select bank1
 27731  24C0  00BC               	movwf	(_LED)^080h
 27732                           	line	13
 27733                           ;LED_B1.c: 13: }
 27734  24C1  2CDE               	goto	l5934
 27735                           	line	16
 27736                           	
 27737  24C2                     l5929:	
 27738                           	
 27739  24C2                     l22575:	
 27740                           ;LED_B1.c: 16: else if(led == 2)
 27741  24C2  0020               	movlb 0	; select bank0
 27742  24C3  0821               	movf	(LedPointSelect@led),w
 27743  24C4  3A02               	xorlw	02h&0ffh
 27744  24C5  1D03               	skipz
 27745  24C6  2CC8               	goto	u5391
 27746  24C7  2CC9               	goto	u5390
 27747  24C8                     u5391:
 27748  24C8  2CCF               	goto	l22579
 27749  24C9                     u5390:
 27750                           	line	18
 27751                           	
 27752  24C9                     l22577:	
 27753                           ;LED_B1.c: 17: {
 27754                           ;LED_B1.c: 18: LED=&VarLED2;
 27755  24C9  30E3               	movlw	(_VarLED2)&0ffh
 27756  24CA  00A0               	movwf	(??_LedPointSelect+0)+0
 27757  24CB  0820               	movf	(??_LedPointSelect+0)+0,w
 27758  24CC  0021               	movlb 1	; select bank1
 27759  24CD  00BC               	movwf	(_LED)^080h
 27760                           	line	19
 27761                           ;LED_B1.c: 19: }
 27762  24CE  2CDE               	goto	l5934
 27763                           	line	28
 27764                           	
 27765  24CF                     l5931:	
 27766                           	
 27767  24CF                     l22579:	
 27768                           ;LED_B1.c: 28: else if(led == 99)
 27769  24CF  0020               	movlb 0	; select bank0
 27770  24D0  0821               	movf	(LedPointSelect@led),w
 27771  24D1  3A63               	xorlw	063h&0ffh
 27772  24D2  1D03               	skipz
 27773  24D3  2CD5               	goto	u5401
 27774  24D4  2CD6               	goto	u5400
 27775  24D5                     u5401:
 27776  24D5  2CDE               	goto	l5934
 27777  24D6                     u5400:
 27778                           	line	30
 27779                           	
 27780  24D6                     l22581:	
 27781                           ;LED_B1.c: 29: {
 27782                           ;LED_B1.c: 30: LED=&VarErrLED;
 27783  24D6  30DB               	movlw	(_VarErrLED)&0ffh
 27784  24D7  00A0               	movwf	(??_LedPointSelect+0)+0
 27785  24D8  0820               	movf	(??_LedPointSelect+0)+0,w
 27786  24D9  0021               	movlb 1	; select bank1
 27787  24DA  00BC               	movwf	(_LED)^080h
 27788  24DB  2CDE               	goto	l5934
 27789                           	line	31
 27790                           	
 27791  24DC                     l5933:	
 27792  24DC  2CDE               	goto	l5934
 27793                           	line	33
 27794                           	
 27795  24DD                     l5932:	
 27796  24DD  2CDE               	goto	l5934
 27797                           	
 27798  24DE                     l5930:	
 27799                           	
 27800  24DE                     l5934:	
 27801  24DE  0008               	return
 27802                           	opt stack 0
 27803                           GLOBAL	__end_of_LedPointSelect
 27804  24DF                     	__end_of_LedPointSelect:
 27805 ;; =============== function _LedPointSelect ends ============
 27806                           
 27807                           	signat	_LedPointSelect,4216
 27808                           	global	_DimmerPointSelect
 27809                           psect	text3367,local,class=CODE,delta=2
 27810                           global __ptext3367
 27811  2025                     __ptext3367:
 27812                           
 27813 ;; *************** function _DimmerPointSelect *****************
 27814 ;; Defined at:
 27815 ;;		line 505 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 27816 ;; Parameters:    Size  Location     Type
 27817 ;;  dimmer          1    wreg     unsigned char 
 27818 ;; Auto vars:     Size  Location     Type
 27819 ;;  dimmer          1    1[BANK0 ] unsigned char 
 27820 ;; Return value:  Size  Location     Type
 27821 ;;		None               void
 27822 ;; Registers used:
 27823 ;;		wreg
 27824 ;; Tracked objects:
 27825 ;;		On entry : 0/0
 27826 ;;		On exit  : 0/0
 27827 ;;		Unchanged: 0/0
 27828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27833 ;;Total ram usage:        2 bytes
 27834 ;; Hardware stack levels used:    1
 27835 ;; Hardware stack levels required when called:    4
 27836 ;; This function calls:
 27837 ;;		Nothing
 27838 ;; This function is called by:
 27839 ;;		_setDimmer_TempERROR
 27840 ;;		_setDimmer_LoadERROR
 27841 ;;		_setDimmer_PFERROR
 27842 ;;		_setDimmer_Detect
 27843 ;;		_getDimmer_TempERROR
 27844 ;;		_getDimmer_LoadERROR
 27845 ;;		_getDimmer_PFERROR
 27846 ;;		_getDimmer_Detect
 27847 ;; This function uses a non-reentrant model
 27848 ;;
 27849                           psect	text3367
 27850                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 27851                           	line	505
 27852                           	global	__size_of_DimmerPointSelect
 27853  000F                     	__size_of_DimmerPointSelect	equ	__end_of_DimmerPointSelect-_DimmerPointSelect
 27854                           	
 27855  2025                     _DimmerPointSelect:	
 27856                           	opt	stack 5
 27857                           ; Regs used in _DimmerPointSelect: [wreg]
 27858                           ;DimmerPointSelect@dimmer stored from wreg
 27859                           	line	508
 27860  2025  0020               	movlb 0	; select bank0
 27861  2026  00A1               	movwf	(DimmerPointSelect@dimmer)
 27862                           	
 27863  2027                     l22567:	
 27864                           ;Dimmer_B1.c: 508: if(dimmer == 1)
 27865  2027  0821               	movf	(DimmerPointSelect@dimmer),w
 27866  2028  3A01               	xorlw	01h&0ffh
 27867  2029  1D03               	skipz
 27868  202A  282C               	goto	u5371
 27869  202B  282D               	goto	u5370
 27870  202C                     u5371:
 27871  202C  2833               	goto	l4800
 27872  202D                     u5370:
 27873                           	line	510
 27874                           	
 27875  202D                     l22569:	
 27876                           ;Dimmer_B1.c: 509: {
 27877                           ;Dimmer_B1.c: 510: Dimmer=&Dimmer1;
 27878  202D  30E7               	movlw	(_Dimmer1)&0ffh
 27879  202E  00A0               	movwf	(??_DimmerPointSelect+0)+0
 27880  202F  0820               	movf	(??_DimmerPointSelect+0)+0,w
 27881  2030  0021               	movlb 1	; select bank1
 27882  2031  00BA               	movwf	(_Dimmer)^080h
 27883  2032  2833               	goto	l4800
 27884                           	line	511
 27885                           	
 27886  2033                     l4799:	
 27887                           	line	513
 27888                           	
 27889  2033                     l4800:	
 27890  2033  0008               	return
 27891                           	opt stack 0
 27892                           GLOBAL	__end_of_DimmerPointSelect
 27893  2034                     	__end_of_DimmerPointSelect:
 27894 ;; =============== function _DimmerPointSelect ends ============
 27895                           
 27896                           	signat	_DimmerPointSelect,4216
 27897                           	global	_setLoad_Count
 27898                           psect	text3368,local,class=CODE,delta=2
 27899                           global __ptext3368
 27900  2214                     __ptext3368:
 27901                           
 27902 ;; *************** function _setLoad_Count *****************
 27903 ;; Defined at:
 27904 ;;		line 325 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 27905 ;; Parameters:    Size  Location     Type
 27906 ;;  load            1    wreg     unsigned char 
 27907 ;;  command         1    0[BANK0 ] unsigned char 
 27908 ;; Auto vars:     Size  Location     Type
 27909 ;;  load            1    0[COMMON] unsigned char 
 27910 ;; Return value:  Size  Location     Type
 27911 ;;		None               void
 27912 ;; Registers used:
 27913 ;;		wreg, fsr1l, fsr1h
 27914 ;; Tracked objects:
 27915 ;;		On entry : 0/0
 27916 ;;		On exit  : 0/0
 27917 ;;		Unchanged: 0/0
 27918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27919 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 27921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 27922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 27923 ;;Total ram usage:        2 bytes
 27924 ;; Hardware stack levels used:    1
 27925 ;; Hardware stack levels required when called:    4
 27926 ;; This function calls:
 27927 ;;		Nothing
 27928 ;; This function is called by:
 27929 ;;		_setDimmerLights
 27930 ;; This function uses a non-reentrant model
 27931 ;;
 27932                           psect	text3368
 27933                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 27934                           	line	325
 27935                           	global	__size_of_setLoad_Count
 27936  0014                     	__size_of_setLoad_Count	equ	__end_of_setLoad_Count-_setLoad_Count
 27937                           	
 27938  2214                     _setLoad_Count:	
 27939                           	opt	stack 6
 27940                           ; Regs used in _setLoad_Count: [wregfsr1]
 27941                           	line	326
 27942                           	
 27943  2214                     l22549:	
 27944                           ;OverLoad_B1.c: 326: Load->Count=command;
 27945  2214  0020               	movlb 0	; select bank0
 27946  2215  0820               	movf	(setLoad_Count@command),w
 27947  2216  00A1               	movwf	(??_setLoad_Count+0)+0
 27948  2217  086E               	movf	(_Load),w
 27949  2218  3E3A               	addlw	03Ah
 27950  2219  0086               	movwf	fsr1l
 27951  221A  3002               	movlw 2	; select bank4/5
 27952  221B  0087               	movwf fsr1h	
 27953                           	
 27954  221C  0821               	movf	(??_setLoad_Count+0)+0,w
 27955  221D  0081               	movwf	indf1
 27956                           	line	327
 27957                           ;OverLoad_B1.c: 327: Load->SafeCount=command;
 27958  221E  0820               	movf	(setLoad_Count@command),w
 27959  221F  00A1               	movwf	(??_setLoad_Count+0)+0
 27960  2220  086E               	movf	(_Load),w
 27961  2221  3E42               	addlw	042h
 27962  2222  0086               	movwf	fsr1l
 27963  2223  3002               	movlw 2	; select bank4/5
 27964  2224  0087               	movwf fsr1h	
 27965                           	
 27966  2225  0821               	movf	(??_setLoad_Count+0)+0,w
 27967  2226  0081               	movwf	indf1
 27968                           	line	328
 27969                           	
 27970  2227                     l9592:	
 27971  2227  0008               	return
 27972                           	opt stack 0
 27973                           GLOBAL	__end_of_setLoad_Count
 27974  2228                     	__end_of_setLoad_Count:
 27975 ;; =============== function _setLoad_Count ends ============
 27976                           
 27977                           	signat	_setLoad_Count,8312
 27978                           	global	_DimmerLightsPointSelect
 27979                           psect	text3369,local,class=CODE,delta=2
 27980                           global __ptext3369
 27981  2FAC                     __ptext3369:
 27982                           
 27983 ;; *************** function _DimmerLightsPointSelect *****************
 27984 ;; Defined at:
 27985 ;;		line 8 in file "G:\Program\PIC\Source_File\Dimmer_B1.c"
 27986 ;; Parameters:    Size  Location     Type
 27987 ;;  lights          1    wreg     unsigned char 
 27988 ;; Auto vars:     Size  Location     Type
 27989 ;;  lights          1    1[BANK0 ] unsigned char 
 27990 ;; Return value:  Size  Location     Type
 27991 ;;		None               void
 27992 ;; Registers used:
 27993 ;;		wreg
 27994 ;; Tracked objects:
 27995 ;;		On entry : 0/0
 27996 ;;		On exit  : 0/0
 27997 ;;		Unchanged: 0/0
 27998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 27999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28001 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28003 ;;Total ram usage:        2 bytes
 28004 ;; Hardware stack levels used:    1
 28005 ;; Hardware stack levels required when called:    4
 28006 ;; This function calls:
 28007 ;;		Nothing
 28008 ;; This function is called by:
 28009 ;;		_setDimmerLights_Initialization
 28010 ;;		_setDimmerLights_Main
 28011 ;;		_getDimmerLights_StatusFlag
 28012 ;;		_getDimmerLights_Trigger
 28013 ;;		_setDimmerLights_ERROR
 28014 ;;		_setDimmerLights_TriggerERROR
 28015 ;;		_setDimmerLights
 28016 ;;		_setDimmerLights_Adj
 28017 ;;		_setDimmerLights_AdjRF
 28018 ;;		_setDimmerLights_Switch
 28019 ;;		_setDimmerLights_AdjGo
 28020 ;;		_setDimmerLights_Trigger
 28021 ;;		_setDimmerLights_TriggerAdj
 28022 ;;		_setDimmerLights_Open
 28023 ;;		_setDimmerLights_Close
 28024 ;;		_setDimmerLights_GO
 28025 ;;		_setDimmerLights_MaxmumValue
 28026 ;;		_getDimmerLights_Open
 28027 ;;		_getDimmerLights_Close
 28028 ;; This function uses a non-reentrant model
 28029 ;;
 28030                           psect	text3369
 28031                           	file	"G:\Program\PIC\Source_File\Dimmer_B1.c"
 28032                           	line	8
 28033                           	global	__size_of_DimmerLightsPointSelect
 28034  000E                     	__size_of_DimmerLightsPointSelect	equ	__end_of_DimmerLightsPointSelect-_DimmerLightsPoi
                                 ntSelect
 28035                           	
 28036  2FAC                     _DimmerLightsPointSelect:	
 28037                           	opt	stack 8
 28038                           ; Regs used in _DimmerLightsPointSelect: [wreg]
 28039                           ;DimmerLightsPointSelect@lights stored from wreg
 28040                           	line	10
 28041  2FAC  0020               	movlb 0	; select bank0
 28042  2FAD  00A1               	movwf	(DimmerLightsPointSelect@lights)
 28043                           	
 28044  2FAE                     l22545:	
 28045                           ;Dimmer_B1.c: 10: if(lights == 1)
 28046  2FAE  0821               	movf	(DimmerLightsPointSelect@lights),w
 28047  2FAF  3A01               	xorlw	01h&0ffh
 28048  2FB0  1D03               	skipz
 28049  2FB1  2FB3               	goto	u5361
 28050  2FB2  2FB4               	goto	u5360
 28051  2FB3                     u5361:
 28052  2FB3  2FB9               	goto	l4687
 28053  2FB4                     u5360:
 28054                           	line	12
 28055                           	
 28056  2FB4                     l22547:	
 28057                           ;Dimmer_B1.c: 11: {
 28058                           ;Dimmer_B1.c: 12: DimmerLights=&DimmerLights1;
 28059  2FB4  304A               	movlw	(_DimmerLights1)&0ffh
 28060  2FB5  00A0               	movwf	(??_DimmerLightsPointSelect+0)+0
 28061  2FB6  0820               	movf	(??_DimmerLightsPointSelect+0)+0,w
 28062  2FB7  00ED               	movwf	(_DimmerLights)
 28063  2FB8  2FB9               	goto	l4687
 28064                           	line	13
 28065                           	
 28066  2FB9                     l4686:	
 28067                           	line	29
 28068                           	
 28069  2FB9                     l4687:	
 28070  2FB9  0008               	return
 28071                           	opt stack 0
 28072                           GLOBAL	__end_of_DimmerLightsPointSelect
 28073  2FBA                     	__end_of_DimmerLightsPointSelect:
 28074 ;; =============== function _DimmerLightsPointSelect ends ============
 28075                           
 28076                           	signat	_DimmerLightsPointSelect,4216
 28077                           	global	_DelayTimejudge
 28078                           psect	text3370,local,class=CODE,delta=2
 28079                           global __ptext3370
 28080  1A23                     __ptext3370:
 28081                           
 28082 ;; *************** function _DelayTimejudge *****************
 28083 ;; Defined at:
 28084 ;;		line 108 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 28085 ;; Parameters:    Size  Location     Type
 28086 ;;  value           1    wreg     unsigned char 
 28087 ;; Auto vars:     Size  Location     Type
 28088 ;;  value           1    2[BANK0 ] unsigned char 
 28089 ;;  i               1    1[BANK0 ] unsigned char 
 28090 ;; Return value:  Size  Location     Type
 28091 ;;                  1    wreg      unsigned char 
 28092 ;; Registers used:
 28093 ;;		wreg
 28094 ;; Tracked objects:
 28095 ;;		On entry : 0/0
 28096 ;;		On exit  : 0/0
 28097 ;;		Unchanged: 0/0
 28098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28100 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28102 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
       0       0
 28103 ;;Total ram usage:        3 bytes
 28104 ;; Hardware stack levels used:    1
 28105 ;; Hardware stack levels required when called:    4
 28106 ;; This function calls:
 28107 ;;		Nothing
 28108 ;; This function is called by:
 28109 ;;		_setDelayOff_GO
 28110 ;; This function uses a non-reentrant model
 28111 ;;
 28112                           psect	text3370
 28113                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 28114                           	line	108
 28115                           	global	__size_of_DelayTimejudge
 28116  004F                     	__size_of_DelayTimejudge	equ	__end_of_DelayTimejudge-_DelayTimejudge
 28117                           	
 28118  1A23                     _DelayTimejudge:	
 28119                           	opt	stack 5
 28120                           ; Regs used in _DelayTimejudge: [wreg]
 28121                           ;DelayTimejudge@value stored from wreg
 28122  1A23  0020               	movlb 0	; select bank0
 28123  1A24  00A2               	movwf	(DelayTimejudge@value)
 28124                           	line	109
 28125                           	
 28126  1A25                     l22519:	
 28127                           ;DelayOff_B1.c: 109: char i=5;
 28128  1A25  3005               	movlw	(05h)
 28129  1A26  00A0               	movwf	(??_DelayTimejudge+0)+0
 28130  1A27  0820               	movf	(??_DelayTimejudge+0)+0,w
 28131  1A28  00A1               	movwf	(DelayTimejudge@i)
 28132                           	line	110
 28133                           ;DelayOff_B1.c: 110: if(value == 0x05)
 28134  1A29  0822               	movf	(DelayTimejudge@value),w
 28135  1A2A  3A05               	xorlw	05h&0ffh
 28136  1A2B  1D03               	skipz
 28137  1A2C  2A2E               	goto	u5301
 28138  1A2D  2A2F               	goto	u5300
 28139  1A2E                     u5301:
 28140  1A2E  2A34               	goto	l22523
 28141  1A2F                     u5300:
 28142                           	line	112
 28143                           	
 28144  1A2F                     l22521:	
 28145                           ;DelayOff_B1.c: 111: {
 28146                           ;DelayOff_B1.c: 112: i=5;
 28147  1A2F  3005               	movlw	(05h)
 28148  1A30  00A0               	movwf	(??_DelayTimejudge+0)+0
 28149  1A31  0820               	movf	(??_DelayTimejudge+0)+0,w
 28150  1A32  00A1               	movwf	(DelayTimejudge@i)
 28151                           	line	113
 28152                           ;DelayOff_B1.c: 113: }
 28153  1A33  2A6F               	goto	l3521
 28154                           	line	114
 28155                           	
 28156  1A34                     l3520:	
 28157                           	
 28158  1A34                     l22523:	
 28159                           ;DelayOff_B1.c: 114: else if(value == 0x10)
 28160  1A34  0822               	movf	(DelayTimejudge@value),w
 28161  1A35  3A10               	xorlw	010h&0ffh
 28162  1A36  1D03               	skipz
 28163  1A37  2A39               	goto	u5311
 28164  1A38  2A3A               	goto	u5310
 28165  1A39                     u5311:
 28166  1A39  2A3F               	goto	l22527
 28167  1A3A                     u5310:
 28168                           	line	116
 28169                           	
 28170  1A3A                     l22525:	
 28171                           ;DelayOff_B1.c: 115: {
 28172                           ;DelayOff_B1.c: 116: i=10;
 28173  1A3A  300A               	movlw	(0Ah)
 28174  1A3B  00A0               	movwf	(??_DelayTimejudge+0)+0
 28175  1A3C  0820               	movf	(??_DelayTimejudge+0)+0,w
 28176  1A3D  00A1               	movwf	(DelayTimejudge@i)
 28177                           	line	117
 28178                           ;DelayOff_B1.c: 117: }
 28179  1A3E  2A6F               	goto	l3521
 28180                           	line	118
 28181                           	
 28182  1A3F                     l3522:	
 28183                           	
 28184  1A3F                     l22527:	
 28185                           ;DelayOff_B1.c: 118: else if(value == 0x15)
 28186  1A3F  0822               	movf	(DelayTimejudge@value),w
 28187  1A40  3A15               	xorlw	015h&0ffh
 28188  1A41  1D03               	skipz
 28189  1A42  2A44               	goto	u5321
 28190  1A43  2A45               	goto	u5320
 28191  1A44                     u5321:
 28192  1A44  2A4A               	goto	l22531
 28193  1A45                     u5320:
 28194                           	line	120
 28195                           	
 28196  1A45                     l22529:	
 28197                           ;DelayOff_B1.c: 119: {
 28198                           ;DelayOff_B1.c: 120: i=15;
 28199  1A45  300F               	movlw	(0Fh)
 28200  1A46  00A0               	movwf	(??_DelayTimejudge+0)+0
 28201  1A47  0820               	movf	(??_DelayTimejudge+0)+0,w
 28202  1A48  00A1               	movwf	(DelayTimejudge@i)
 28203                           	line	121
 28204                           ;DelayOff_B1.c: 121: }
 28205  1A49  2A6F               	goto	l3521
 28206                           	line	122
 28207                           	
 28208  1A4A                     l3524:	
 28209                           	
 28210  1A4A                     l22531:	
 28211                           ;DelayOff_B1.c: 122: else if(value == 0x20)
 28212  1A4A  0822               	movf	(DelayTimejudge@value),w
 28213  1A4B  3A20               	xorlw	020h&0ffh
 28214  1A4C  1D03               	skipz
 28215  1A4D  2A4F               	goto	u5331
 28216  1A4E  2A50               	goto	u5330
 28217  1A4F                     u5331:
 28218  1A4F  2A55               	goto	l22535
 28219  1A50                     u5330:
 28220                           	line	124
 28221                           	
 28222  1A50                     l22533:	
 28223                           ;DelayOff_B1.c: 123: {
 28224                           ;DelayOff_B1.c: 124: i=20;
 28225  1A50  3014               	movlw	(014h)
 28226  1A51  00A0               	movwf	(??_DelayTimejudge+0)+0
 28227  1A52  0820               	movf	(??_DelayTimejudge+0)+0,w
 28228  1A53  00A1               	movwf	(DelayTimejudge@i)
 28229                           	line	125
 28230                           ;DelayOff_B1.c: 125: }
 28231  1A54  2A6F               	goto	l3521
 28232                           	line	126
 28233                           	
 28234  1A55                     l3526:	
 28235                           	
 28236  1A55                     l22535:	
 28237                           ;DelayOff_B1.c: 126: else if(value == 0x25)
 28238  1A55  0822               	movf	(DelayTimejudge@value),w
 28239  1A56  3A25               	xorlw	025h&0ffh
 28240  1A57  1D03               	skipz
 28241  1A58  2A5A               	goto	u5341
 28242  1A59  2A5B               	goto	u5340
 28243  1A5A                     u5341:
 28244  1A5A  2A60               	goto	l22539
 28245  1A5B                     u5340:
 28246                           	line	128
 28247                           	
 28248  1A5B                     l22537:	
 28249                           ;DelayOff_B1.c: 127: {
 28250                           ;DelayOff_B1.c: 128: i=25;
 28251  1A5B  3019               	movlw	(019h)
 28252  1A5C  00A0               	movwf	(??_DelayTimejudge+0)+0
 28253  1A5D  0820               	movf	(??_DelayTimejudge+0)+0,w
 28254  1A5E  00A1               	movwf	(DelayTimejudge@i)
 28255                           	line	129
 28256                           ;DelayOff_B1.c: 129: }
 28257  1A5F  2A6F               	goto	l3521
 28258                           	line	130
 28259                           	
 28260  1A60                     l3528:	
 28261                           	
 28262  1A60                     l22539:	
 28263                           ;DelayOff_B1.c: 130: else if(value == 0x30)
 28264  1A60  0822               	movf	(DelayTimejudge@value),w
 28265  1A61  3A30               	xorlw	030h&0ffh
 28266  1A62  1D03               	skipz
 28267  1A63  2A65               	goto	u5351
 28268  1A64  2A66               	goto	u5350
 28269  1A65                     u5351:
 28270  1A65  2A6F               	goto	l3521
 28271  1A66                     u5350:
 28272                           	line	132
 28273                           	
 28274  1A66                     l22541:	
 28275                           ;DelayOff_B1.c: 131: {
 28276                           ;DelayOff_B1.c: 132: i=30;
 28277  1A66  301E               	movlw	(01Eh)
 28278  1A67  00A0               	movwf	(??_DelayTimejudge+0)+0
 28279  1A68  0820               	movf	(??_DelayTimejudge+0)+0,w
 28280  1A69  00A1               	movwf	(DelayTimejudge@i)
 28281  1A6A  2A6F               	goto	l3521
 28282                           	line	133
 28283                           	
 28284  1A6B                     l3530:	
 28285  1A6B  2A6F               	goto	l3521
 28286                           	line	134
 28287                           	
 28288  1A6C                     l3529:	
 28289  1A6C  2A6F               	goto	l3521
 28290                           	
 28291  1A6D                     l3527:	
 28292  1A6D  2A6F               	goto	l3521
 28293                           	
 28294  1A6E                     l3525:	
 28295  1A6E  2A6F               	goto	l3521
 28296                           	
 28297  1A6F                     l3523:	
 28298                           	
 28299  1A6F                     l3521:	
 28300                           ;DelayOff_B1.c: 133: }
 28301                           ;DelayOff_B1.c: 134: return i;
 28302  1A6F  0821               	movf	(DelayTimejudge@i),w
 28303  1A70  2A71               	goto	l3531
 28304                           	
 28305  1A71                     l22543:	
 28306                           	line	135
 28307                           	
 28308  1A71                     l3531:	
 28309  1A71  0008               	return
 28310                           	opt stack 0
 28311                           GLOBAL	__end_of_DelayTimejudge
 28312  1A72                     	__end_of_DelayTimejudge:
 28313 ;; =============== function _DelayTimejudge ends ============
 28314                           
 28315                           	signat	_DelayTimejudge,4217
 28316                           	global	_setRF_DimmerLights
 28317                           psect	text3371,local,class=CODE,delta=2
 28318                           global __ptext3371
 28319  1D23                     __ptext3371:
 28320                           
 28321 ;; *************** function _setRF_DimmerLights *****************
 28322 ;; Defined at:
 28323 ;;		line 432 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 28324 ;; Parameters:    Size  Location     Type
 28325 ;;  lights          1    wreg     unsigned char 
 28326 ;;  on              1    0[BANK0 ] unsigned char 
 28327 ;; Auto vars:     Size  Location     Type
 28328 ;;  lights          1    4[BANK0 ] unsigned char 
 28329 ;;  status          1    3[BANK0 ] unsigned char 
 28330 ;; Return value:  Size  Location     Type
 28331 ;;		None               void
 28332 ;; Registers used:
 28333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 28334 ;; Tracked objects:
 28335 ;;		On entry : 0/0
 28336 ;;		On exit  : 0/0
 28337 ;;		Unchanged: 0/0
 28338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28339 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28342 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
       0       0
 28343 ;;Total ram usage:        5 bytes
 28344 ;; Hardware stack levels used:    1
 28345 ;; Hardware stack levels required when called:    4
 28346 ;; This function calls:
 28347 ;;		Nothing
 28348 ;; This function is called by:
 28349 ;;		_DlyOff_Main
 28350 ;;		_setDimmerLights_Adj
 28351 ;;		_setRFSW_Control
 28352 ;;		_Sw_OnFunc
 28353 ;;		_Sw_OffFunc
 28354 ;; This function uses a non-reentrant model
 28355 ;;
 28356                           psect	text3371
 28357                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 28358                           	line	432
 28359                           	global	__size_of_setRF_DimmerLights
 28360  005E                     	__size_of_setRF_DimmerLights	equ	__end_of_setRF_DimmerLights-_setRF_DimmerLights
 28361                           	
 28362  1D23                     _setRF_DimmerLights:	
 28363                           	opt	stack 9
 28364                           ; Regs used in _setRF_DimmerLights: [wreg+fsr1l-status,0]
 28365                           ;setRF_DimmerLights@lights stored from wreg
 28366                           	line	434
 28367  1D23  0020               	movlb 0	; select bank0
 28368  1D24  00A4               	movwf	(setRF_DimmerLights@lights)
 28369                           	
 28370  1D25                     l22503:	
 28371                           ;RF_Control_B1.c: 433: char status;
 28372                           ;RF_Control_B1.c: 434: status=1;
 28373  1D25  01A3               	clrf	(setRF_DimmerLights@status)
 28374  1D26  1403               	bsf	status,0
 28375  1D27  0DA3               	rlf	(setRF_DimmerLights@status),f
 28376                           	line	435
 28377                           	
 28378  1D28                     l22505:	
 28379                           ;RF_Control_B1.c: 435: status<<=(lights-1);
 28380  1D28  0824               	movf	(setRF_DimmerLights@lights),w
 28381  1D29  3EFF               	addlw	-1
 28382  1D2A  0A89               	incf	wreg,f
 28383                           	
 28384  1D2B  2D2E               	goto	u5280
 28385  1D2C                     u5285:
 28386  1D2C  1003               	clrc
 28387  1D2D  0DA3               	rlf	(setRF_DimmerLights@status),f
 28388  1D2E                     u5280:
 28389  1D2E  3EFF               	addlw	-1
 28390  1D2F  1D03               	skipz
 28391  1D30  2D2C               	goto	u5285
 28392                           	line	436
 28393                           	
 28394  1D31                     l22507:	
 28395                           ;RF_Control_B1.c: 436: Product->Data[11]=lights;
 28396  1D31  0824               	movf	(setRF_DimmerLights@lights),w
 28397  1D32  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 28398  1D33  087D               	movf	(_Product),w
 28399  1D34  3E0B               	addlw	0Bh
 28400  1D35  0086               	movwf	fsr1l
 28401  1D36  3001               	movlw 1	; select bank2/3
 28402  1D37  0087               	movwf fsr1h	
 28403                           	
 28404  1D38  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 28405  1D39  0081               	movwf	indf1
 28406                           	line	437
 28407                           	
 28408  1D3A                     l22509:	
 28409                           ;RF_Control_B1.c: 437: Product->Data[9]=Product->Data[20+lights];
 28410  1D3A  0824               	movf	(setRF_DimmerLights@lights),w
 28411  1D3B  3E14               	addlw	014h
 28412  1D3C  077D               	addwf	(_Product),w
 28413  1D3D  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 28414  1D3E  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 28415  1D3F  0086               	movwf	fsr1l
 28416  1D40  3001               	movlw 1	; select bank2/3
 28417  1D41  0087               	movwf fsr1h	
 28418                           	
 28419  1D42  0801               	movf	indf1,w
 28420  1D43  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 28421  1D44  087D               	movf	(_Product),w
 28422  1D45  3E09               	addlw	09h
 28423  1D46  0086               	movwf	fsr1l
 28424  1D47  3001               	movlw 1	; select bank2/3
 28425  1D48  0087               	movwf fsr1h	
 28426                           	
 28427  1D49  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 28428  1D4A  0081               	movwf	indf1
 28429                           	line	438
 28430                           	
 28431  1D4B                     l22511:	
 28432                           ;RF_Control_B1.c: 438: Product->Data[17]=Product->Data[26+lights];
 28433  1D4B  0824               	movf	(setRF_DimmerLights@lights),w
 28434  1D4C  3E1A               	addlw	01Ah
 28435  1D4D  077D               	addwf	(_Product),w
 28436  1D4E  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 28437  1D4F  0821               	movf	0+(??_setRF_DimmerLights+0)+0,w
 28438  1D50  0086               	movwf	fsr1l
 28439  1D51  3001               	movlw 1	; select bank2/3
 28440  1D52  0087               	movwf fsr1h	
 28441                           	
 28442  1D53  0801               	movf	indf1,w
 28443  1D54  00A2               	movwf	(??_setRF_DimmerLights+1)+0
 28444  1D55  087D               	movf	(_Product),w
 28445  1D56  3E11               	addlw	011h
 28446  1D57  0086               	movwf	fsr1l
 28447  1D58  3001               	movlw 1	; select bank2/3
 28448  1D59  0087               	movwf fsr1h	
 28449                           	
 28450  1D5A  0822               	movf	(??_setRF_DimmerLights+1)+0,w
 28451  1D5B  0081               	movwf	indf1
 28452                           	line	439
 28453                           	
 28454  1D5C                     l22513:	
 28455                           ;RF_Control_B1.c: 439: if(on)
 28456  1D5C  0820               	movf	(setRF_DimmerLights@on),w
 28457  1D5D  1D03               	skipz
 28458  1D5E  2D60               	goto	u5290
 28459  1D5F  2D70               	goto	l22517
 28460  1D60                     u5290:
 28461                           	line	441
 28462                           	
 28463  1D60                     l22515:	
 28464                           ;RF_Control_B1.c: 440: {
 28465                           ;RF_Control_B1.c: 441: Product->Data[15]=(Product->Data[15]|status);
 28466  1D60  087D               	movf	(_Product),w
 28467  1D61  3E0F               	addlw	0Fh
 28468  1D62  0086               	movwf	fsr1l
 28469  1D63  3001               	movlw 1	; select bank2/3
 28470  1D64  0087               	movwf fsr1h	
 28471                           	
 28472  1D65  0801               	movf	indf1,w
 28473  1D66  0423               	iorwf	(setRF_DimmerLights@status),w
 28474  1D67  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 28475  1D68  087D               	movf	(_Product),w
 28476  1D69  3E0F               	addlw	0Fh
 28477  1D6A  0086               	movwf	fsr1l
 28478  1D6B  3001               	movlw 1	; select bank2/3
 28479  1D6C  0087               	movwf fsr1h	
 28480                           	
 28481  1D6D  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 28482  1D6E  0081               	movwf	indf1
 28483                           	line	442
 28484                           ;RF_Control_B1.c: 442: }
 28485  1D6F  2D80               	goto	l13214
 28486                           	line	443
 28487                           	
 28488  1D70                     l13212:	
 28489                           	line	445
 28490                           	
 28491  1D70                     l22517:	
 28492                           ;RF_Control_B1.c: 443: else
 28493                           ;RF_Control_B1.c: 444: {
 28494                           ;RF_Control_B1.c: 445: Product->Data[15]=(Product->Data[15]&(~status));
 28495  1D70  087D               	movf	(_Product),w
 28496  1D71  3E0F               	addlw	0Fh
 28497  1D72  0086               	movwf	fsr1l
 28498  1D73  3001               	movlw 1	; select bank2/3
 28499  1D74  0087               	movwf fsr1h	
 28500                           	
 28501  1D75  0923               	comf	(setRF_DimmerLights@status),w
 28502  1D76  0501               	andwf	indf1,w
 28503  1D77  00A1               	movwf	(??_setRF_DimmerLights+0)+0
 28504  1D78  087D               	movf	(_Product),w
 28505  1D79  3E0F               	addlw	0Fh
 28506  1D7A  0086               	movwf	fsr1l
 28507  1D7B  3001               	movlw 1	; select bank2/3
 28508  1D7C  0087               	movwf fsr1h	
 28509                           	
 28510  1D7D  0821               	movf	(??_setRF_DimmerLights+0)+0,w
 28511  1D7E  0081               	movwf	indf1
 28512  1D7F  2D80               	goto	l13214
 28513                           	line	446
 28514                           	
 28515  1D80                     l13213:	
 28516                           	line	447
 28517                           	
 28518  1D80                     l13214:	
 28519  1D80  0008               	return
 28520                           	opt stack 0
 28521                           GLOBAL	__end_of_setRF_DimmerLights
 28522  1D81                     	__end_of_setRF_DimmerLights:
 28523 ;; =============== function _setRF_DimmerLights ends ============
 28524                           
 28525                           	signat	_setRF_DimmerLights,8312
 28526                           	global	_DelayOffPointSelect
 28527                           psect	text3372,local,class=CODE,delta=2
 28528                           global __ptext3372
 28529  2016                     __ptext3372:
 28530                           
 28531 ;; *************** function _DelayOffPointSelect *****************
 28532 ;; Defined at:
 28533 ;;		line 9 in file "G:\Program\PIC\Source_File\DelayOff_B1.c"
 28534 ;; Parameters:    Size  Location     Type
 28535 ;;  sw              1    wreg     unsigned char 
 28536 ;; Auto vars:     Size  Location     Type
 28537 ;;  sw              1    1[BANK0 ] unsigned char 
 28538 ;; Return value:  Size  Location     Type
 28539 ;;		None               void
 28540 ;; Registers used:
 28541 ;;		wreg
 28542 ;; Tracked objects:
 28543 ;;		On entry : 0/0
 28544 ;;		On exit  : 0/0
 28545 ;;		Unchanged: 0/0
 28546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28550 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28551 ;;Total ram usage:        2 bytes
 28552 ;; Hardware stack levels used:    1
 28553 ;; Hardware stack levels required when called:    4
 28554 ;; This function calls:
 28555 ;;		Nothing
 28556 ;; This function is called by:
 28557 ;;		_DlyOff_Initialization
 28558 ;;		_DlyOff_Main
 28559 ;;		_setDelayOff_GO
 28560 ;; This function uses a non-reentrant model
 28561 ;;
 28562                           psect	text3372
 28563                           	file	"G:\Program\PIC\Source_File\DelayOff_B1.c"
 28564                           	line	9
 28565                           	global	__size_of_DelayOffPointSelect
 28566  000F                     	__size_of_DelayOffPointSelect	equ	__end_of_DelayOffPointSelect-_DelayOffPointSelect
 28567                           	
 28568  2016                     _DelayOffPointSelect:	
 28569                           	opt	stack 9
 28570                           ; Regs used in _DelayOffPointSelect: [wreg]
 28571                           ;DelayOffPointSelect@sw stored from wreg
 28572                           	line	11
 28573  2016  0020               	movlb 0	; select bank0
 28574  2017  00A1               	movwf	(DelayOffPointSelect@sw)
 28575                           	
 28576  2018                     l22499:	
 28577                           ;DelayOff_B1.c: 11: if(sw == 1)
 28578  2018  0821               	movf	(DelayOffPointSelect@sw),w
 28579  2019  3A01               	xorlw	01h&0ffh
 28580  201A  1D03               	skipz
 28581  201B  281D               	goto	u5271
 28582  201C  281E               	goto	u5270
 28583  201D                     u5271:
 28584  201D  2824               	goto	l3495
 28585  201E                     u5270:
 28586                           	line	13
 28587                           	
 28588  201E                     l22501:	
 28589                           ;DelayOff_B1.c: 12: {
 28590                           ;DelayOff_B1.c: 13: DelayOff=&DlySw1;
 28591  201E  30D6               	movlw	(_DlySw1)&0ffh
 28592  201F  00A0               	movwf	(??_DelayOffPointSelect+0)+0
 28593  2020  0820               	movf	(??_DelayOffPointSelect+0)+0,w
 28594  2021  0021               	movlb 1	; select bank1
 28595  2022  00B9               	movwf	(_DelayOff)^080h
 28596  2023  2824               	goto	l3495
 28597                           	line	14
 28598                           	
 28599  2024                     l3494:	
 28600                           	line	28
 28601                           	
 28602  2024                     l3495:	
 28603  2024  0008               	return
 28604                           	opt stack 0
 28605                           GLOBAL	__end_of_DelayOffPointSelect
 28606  2025                     	__end_of_DelayOffPointSelect:
 28607 ;; =============== function _DelayOffPointSelect ends ============
 28608                           
 28609                           	signat	_DelayOffPointSelect,4216
 28610                           	global	_DelayTime_1us
 28611                           psect	text3373,local,class=CODE,delta=2
 28612                           global __ptext3373
 28613  2599                     __ptext3373:
 28614                           
 28615 ;; *************** function _DelayTime_1us *****************
 28616 ;; Defined at:
 28617 ;;		line 284 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 28618 ;; Parameters:    Size  Location     Type
 28619 ;;  count           2    0[BANK0 ] int 
 28620 ;; Auto vars:     Size  Location     Type
 28621 ;;  j               2    4[BANK0 ] unsigned int 
 28622 ;;  i               2    2[BANK0 ] unsigned int 
 28623 ;; Return value:  Size  Location     Type
 28624 ;;		None               void
 28625 ;; Registers used:
 28626 ;;		wreg, status,2
 28627 ;; Tracked objects:
 28628 ;;		On entry : 0/0
 28629 ;;		On exit  : 0/0
 28630 ;;		Unchanged: 0/0
 28631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28632 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0
 28634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28635 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0
 28636 ;;Total ram usage:        6 bytes
 28637 ;; Hardware stack levels used:    1
 28638 ;; Hardware stack levels required when called:    4
 28639 ;; This function calls:
 28640 ;;		Nothing
 28641 ;; This function is called by:
 28642 ;;		_CC2500_PowerRST
 28643 ;;		_CC2500_FrequencyCabr
 28644 ;; This function uses a non-reentrant model
 28645 ;;
 28646                           psect	text3373
 28647                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 28648                           	line	284
 28649                           	global	__size_of_DelayTime_1us
 28650  0031                     	__size_of_DelayTime_1us	equ	__end_of_DelayTime_1us-_DelayTime_1us
 28651                           	
 28652  2599                     _DelayTime_1us:	
 28653                           	opt	stack 9
 28654                           ; Regs used in _DelayTime_1us: [wreg+status,2]
 28655                           	line	286
 28656                           	
 28657  2599                     l22477:	
 28658                           ;CC2500_B1.c: 285: unsigned int i,j;
 28659                           ;CC2500_B1.c: 286: for(i=1;i<count;i++)
 28660  2599  3001               	movlw	low(01h)
 28661  259A  0020               	movlb 0	; select bank0
 28662  259B  00A2               	movwf	(DelayTime_1us@i)
 28663  259C  3000               	movlw	high(01h)
 28664  259D  00A3               	movwf	((DelayTime_1us@i))+1
 28665  259E  2DBE               	goto	l2370
 28666                           	line	287
 28667                           	
 28668  259F                     l2371:	
 28669                           	
 28670  259F                     l22479:	
 28671                           ;CC2500_B1.c: 287: for(j=0;j<=1;j++);
 28672  259F  01A4               	clrf	(DelayTime_1us@j)
 28673  25A0  01A5               	clrf	(DelayTime_1us@j+1)
 28674                           	
 28675  25A1                     l22481:	
 28676  25A1  3000               	movlw	high(02h)
 28677  25A2  0225               	subwf	(DelayTime_1us@j+1),w
 28678  25A3  3002               	movlw	low(02h)
 28679  25A4  1903               	skipnz
 28680  25A5  0224               	subwf	(DelayTime_1us@j),w
 28681  25A6  1C03               	skipc
 28682  25A7  2DA9               	goto	u5231
 28683  25A8  2DAA               	goto	u5230
 28684  25A9                     u5231:
 28685  25A9  2DAC               	goto	l22485
 28686  25AA                     u5230:
 28687  25AA  2DBA               	goto	l22487
 28688                           	
 28689  25AB                     l22483:	
 28690  25AB  2DBA               	goto	l22487
 28691                           	
 28692  25AC                     l2372:	
 28693                           	
 28694  25AC                     l22485:	
 28695  25AC  3001               	movlw	low(01h)
 28696  25AD  07A4               	addwf	(DelayTime_1us@j),f
 28697  25AE  3000               	movlw	high(01h)
 28698  25AF  3DA5               	addwfc	(DelayTime_1us@j+1),f
 28699  25B0  3000               	movlw	high(02h)
 28700  25B1  0225               	subwf	(DelayTime_1us@j+1),w
 28701  25B2  3002               	movlw	low(02h)
 28702  25B3  1903               	skipnz
 28703  25B4  0224               	subwf	(DelayTime_1us@j),w
 28704  25B5  1C03               	skipc
 28705  25B6  2DB8               	goto	u5241
 28706  25B7  2DB9               	goto	u5240
 28707  25B8                     u5241:
 28708  25B8  2DAC               	goto	l22485
 28709  25B9                     u5240:
 28710  25B9  2DBA               	goto	l22487
 28711                           	
 28712  25BA                     l2373:	
 28713                           	line	286
 28714                           	
 28715  25BA                     l22487:	
 28716  25BA  3001               	movlw	low(01h)
 28717  25BB  07A2               	addwf	(DelayTime_1us@i),f
 28718  25BC  3000               	movlw	high(01h)
 28719  25BD  3DA3               	addwfc	(DelayTime_1us@i+1),f
 28720                           	
 28721  25BE                     l2370:	
 28722  25BE  0821               	movf	(DelayTime_1us@count+1),w
 28723  25BF  0223               	subwf	(DelayTime_1us@i+1),w
 28724  25C0  1D03               	skipz
 28725  25C1  2DC4               	goto	u5255
 28726  25C2  0820               	movf	(DelayTime_1us@count),w
 28727  25C3  0222               	subwf	(DelayTime_1us@i),w
 28728  25C4                     u5255:
 28729  25C4  1C03               	skipc
 28730  25C5  2DC7               	goto	u5251
 28731  25C6  2DC8               	goto	u5250
 28732  25C7                     u5251:
 28733  25C7  2D9F               	goto	l22479
 28734  25C8                     u5250:
 28735  25C8  2DC9               	goto	l2375
 28736                           	
 28737  25C9                     l2374:	
 28738                           	line	288
 28739                           	
 28740  25C9                     l2375:	
 28741  25C9  0008               	return
 28742                           	opt stack 0
 28743                           GLOBAL	__end_of_DelayTime_1us
 28744  25CA                     	__end_of_DelayTime_1us:
 28745 ;; =============== function _DelayTime_1us ends ============
 28746                           
 28747                           	signat	_DelayTime_1us,4216
 28748                           	global	_CC2500_ReadByte
 28749                           psect	text3374,local,class=CODE,delta=2
 28750                           global __ptext3374
 28751  2489                     __ptext3374:
 28752                           
 28753 ;; *************** function _CC2500_ReadByte *****************
 28754 ;; Defined at:
 28755 ;;		line 211 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 28756 ;; Parameters:    Size  Location     Type
 28757 ;;		None
 28758 ;; Auto vars:     Size  Location     Type
 28759 ;;  loop_b          1    1[BANK0 ] unsigned char 
 28760 ;; Return value:  Size  Location     Type
 28761 ;;		None               void
 28762 ;; Registers used:
 28763 ;;		wreg, status,2, status,0
 28764 ;; Tracked objects:
 28765 ;;		On entry : 0/0
 28766 ;;		On exit  : 0/0
 28767 ;;		Unchanged: 0/0
 28768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28772 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28773 ;;Total ram usage:        2 bytes
 28774 ;; Hardware stack levels used:    1
 28775 ;; Hardware stack levels required when called:    4
 28776 ;; This function calls:
 28777 ;;		Nothing
 28778 ;; This function is called by:
 28779 ;;		_CC2500_RxData
 28780 ;;		_CC2500_ReadStatus
 28781 ;;		_CC2500_ReadREG
 28782 ;; This function uses a non-reentrant model
 28783 ;;
 28784                           psect	text3374
 28785                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 28786                           	line	211
 28787                           	global	__size_of_CC2500_ReadByte
 28788  002B                     	__size_of_CC2500_ReadByte	equ	__end_of_CC2500_ReadByte-_CC2500_ReadByte
 28789                           	
 28790  2489                     _CC2500_ReadByte:	
 28791                           	opt	stack 8
 28792                           ; Regs used in _CC2500_ReadByte: [wreg+status,2+status,0]
 28793                           	line	213
 28794                           	
 28795  2489                     l22459:	
 28796                           ;CC2500_B1.c: 212: unsigned char loop_b;
 28797                           ;CC2500_B1.c: 213: for(loop_b=0;loop_b<8;loop_b++)
 28798  2489  0020               	movlb 0	; select bank0
 28799  248A  01A1               	clrf	(CC2500_ReadByte@loop_b)
 28800                           	
 28801  248B                     l22461:	
 28802  248B  3008               	movlw	(08h)
 28803  248C  0221               	subwf	(CC2500_ReadByte@loop_b),w
 28804  248D  1C03               	skipc
 28805  248E  2C90               	goto	u5201
 28806  248F  2C91               	goto	u5200
 28807  2490                     u5201:
 28808  2490  2C93               	goto	l2339
 28809  2491                     u5200:
 28810  2491  2CB3               	goto	l2343
 28811                           	
 28812  2492                     l22463:	
 28813  2492  2CB3               	goto	l2343
 28814                           	line	214
 28815                           	
 28816  2493                     l2339:	
 28817                           	line	215
 28818                           ;CC2500_B1.c: 214: {
 28819                           ;CC2500_B1.c: 215: RC1=1;
 28820  2493  148E               	bsf	(113/8),(113)&7
 28821                           	line	216
 28822                           	
 28823  2494                     l22465:	
 28824                           ;CC2500_B1.c: 216: SPI0Buffer<<=1;
 28825  2494  1003               	clrc
 28826  2495  0021               	movlb 1	; select bank1
 28827  2496  0DC2               	rlf	(_SPI0Buffer)^080h,f
 28828                           
 28829                           	line	217
 28830                           	
 28831  2497                     l22467:	
 28832                           ;CC2500_B1.c: 217: if(RC2 == 1)
 28833  2497  0020               	movlb 0	; select bank0
 28834  2498  1D0E               	btfss	(114/8),(114)&7
 28835  2499  2C9B               	goto	u5211
 28836  249A  2C9C               	goto	u5210
 28837  249B                     u5211:
 28838  249B  2C9F               	goto	l22471
 28839  249C                     u5210:
 28840                           	line	218
 28841                           	
 28842  249C                     l22469:	
 28843                           ;CC2500_B1.c: 218: SPI0Buffer |= 0x01;
 28844  249C  0021               	movlb 1	; select bank1
 28845  249D  1442               	bsf	(_SPI0Buffer)^080h+(0/8),(0)&7
 28846  249E  2CA6               	goto	l22473
 28847                           	line	219
 28848                           	
 28849  249F                     l2341:	
 28850                           	line	220
 28851                           	
 28852  249F                     l22471:	
 28853                           ;CC2500_B1.c: 219: else
 28854                           ;CC2500_B1.c: 220: SPI0Buffer &= 0xFE;
 28855  249F  30FE               	movlw	(0FEh)
 28856  24A0  0020               	movlb 0	; select bank0
 28857  24A1  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 28858  24A2  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 28859  24A3  0021               	movlb 1	; select bank1
 28860  24A4  05C2               	andwf	(_SPI0Buffer)^080h,f
 28861  24A5  2CA6               	goto	l22473
 28862                           	
 28863  24A6                     l2342:	
 28864                           	line	221
 28865                           	
 28866  24A6                     l22473:	
 28867                           ;CC2500_B1.c: 221: RC1=0;
 28868  24A6  0020               	movlb 0	; select bank0
 28869  24A7  108E               	bcf	(113/8),(113)&7
 28870                           	line	213
 28871  24A8  3001               	movlw	(01h)
 28872  24A9  00A0               	movwf	(??_CC2500_ReadByte+0)+0
 28873  24AA  0820               	movf	(??_CC2500_ReadByte+0)+0,w
 28874  24AB  07A1               	addwf	(CC2500_ReadByte@loop_b),f
 28875                           	
 28876  24AC                     l22475:	
 28877  24AC  3008               	movlw	(08h)
 28878  24AD  0221               	subwf	(CC2500_ReadByte@loop_b),w
 28879  24AE  1C03               	skipc
 28880  24AF  2CB1               	goto	u5221
 28881  24B0  2CB2               	goto	u5220
 28882  24B1                     u5221:
 28883  24B1  2C93               	goto	l2339
 28884  24B2                     u5220:
 28885  24B2  2CB3               	goto	l2343
 28886                           	
 28887  24B3                     l2340:	
 28888                           	line	223
 28889                           	
 28890  24B3                     l2343:	
 28891  24B3  0008               	return
 28892                           	opt stack 0
 28893                           GLOBAL	__end_of_CC2500_ReadByte
 28894  24B4                     	__end_of_CC2500_ReadByte:
 28895 ;; =============== function _CC2500_ReadByte ends ============
 28896                           
 28897                           	signat	_CC2500_ReadByte,88
 28898                           	global	_CC2500_WriteByte
 28899                           psect	text3375,local,class=CODE,delta=2
 28900                           global __ptext3375
 28901  2375                     __ptext3375:
 28902                           
 28903 ;; *************** function _CC2500_WriteByte *****************
 28904 ;; Defined at:
 28905 ;;		line 194 in file "G:\Program\PIC\Source_File\CC2500_B1.c"
 28906 ;; Parameters:    Size  Location     Type
 28907 ;;		None
 28908 ;; Auto vars:     Size  Location     Type
 28909 ;;  loop_a          1    1[BANK0 ] unsigned char 
 28910 ;; Return value:  Size  Location     Type
 28911 ;;		None               void
 28912 ;; Registers used:
 28913 ;;		wreg, status,2, status,0
 28914 ;; Tracked objects:
 28915 ;;		On entry : 0/0
 28916 ;;		On exit  : 0/0
 28917 ;;		Unchanged: 0/0
 28918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 28919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 28920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28921 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 28922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 28923 ;;Total ram usage:        2 bytes
 28924 ;; Hardware stack levels used:    1
 28925 ;; Hardware stack levels required when called:    4
 28926 ;; This function calls:
 28927 ;;		Nothing
 28928 ;; This function is called by:
 28929 ;;		_CC2500_TxData
 28930 ;;		_CC2500_RxData
 28931 ;;		_CC2500_PowerRST
 28932 ;;		_CC2500_WriteREG
 28933 ;;		_CC2500_WriteCommand
 28934 ;;		_CC2500_ReadStatus
 28935 ;;		_CC2500_ReadREG
 28936 ;; This function uses a non-reentrant model
 28937 ;;
 28938                           psect	text3375
 28939                           	file	"G:\Program\PIC\Source_File\CC2500_B1.c"
 28940                           	line	194
 28941                           	global	__size_of_CC2500_WriteByte
 28942  0026                     	__size_of_CC2500_WriteByte	equ	__end_of_CC2500_WriteByte-_CC2500_WriteByte
 28943                           	
 28944  2375                     _CC2500_WriteByte:	
 28945                           	opt	stack 8
 28946                           ; Regs used in _CC2500_WriteByte: [wreg+status,2+status,0]
 28947                           	line	196
 28948                           	
 28949  2375                     l22443:	
 28950                           ;CC2500_B1.c: 195: unsigned char loop_a;
 28951                           ;CC2500_B1.c: 196: for(loop_a=0;loop_a<8;loop_a++)
 28952  2375  0020               	movlb 0	; select bank0
 28953  2376  01A1               	clrf	(CC2500_WriteByte@loop_a)
 28954                           	
 28955  2377                     l22445:	
 28956  2377  3008               	movlw	(08h)
 28957  2378  0221               	subwf	(CC2500_WriteByte@loop_a),w
 28958  2379  1C03               	skipc
 28959  237A  2B7C               	goto	u5171
 28960  237B  2B7D               	goto	u5170
 28961  237C                     u5171:
 28962  237C  2B7F               	goto	l2332
 28963  237D                     u5170:
 28964  237D  2B9A               	goto	l2336
 28965                           	
 28966  237E                     l22447:	
 28967  237E  2B9A               	goto	l2336
 28968                           	line	197
 28969                           	
 28970  237F                     l2332:	
 28971                           	line	198
 28972                           ;CC2500_B1.c: 197: {
 28973                           ;CC2500_B1.c: 198: if(SPI0Buffer&0x80)
 28974  237F  0021               	movlb 1	; select bank1
 28975  2380  1FC2               	btfss	(_SPI0Buffer)^080h,(7)&7
 28976  2381  2B83               	goto	u5181
 28977  2382  2B84               	goto	u5180
 28978  2383                     u5181:
 28979  2383  2B87               	goto	l2334
 28980  2384                     u5180:
 28981                           	line	199
 28982                           	
 28983  2384                     l22449:	
 28984                           ;CC2500_B1.c: 199: RC0=1;
 28985  2384  0020               	movlb 0	; select bank0
 28986  2385  140E               	bsf	(112/8),(112)&7
 28987  2386  2B89               	goto	l2335
 28988                           	line	200
 28989                           	
 28990  2387                     l2334:	
 28991                           	line	201
 28992                           ;CC2500_B1.c: 200: else
 28993                           ;CC2500_B1.c: 201: RC0=0;
 28994  2387  0020               	movlb 0	; select bank0
 28995  2388  100E               	bcf	(112/8),(112)&7
 28996                           	
 28997  2389                     l2335:	
 28998                           	line	202
 28999                           ;CC2500_B1.c: 202: RC1=1;
 29000  2389  148E               	bsf	(113/8),(113)&7
 29001                           	line	203
 29002                           	
 29003  238A                     l22451:	
 29004                           ;CC2500_B1.c: 203: SPI0Buffer<<=1;
 29005  238A  1003               	clrc
 29006  238B  0021               	movlb 1	; select bank1
 29007  238C  0DC2               	rlf	(_SPI0Buffer)^080h,f
 29008                           
 29009                           	line	204
 29010                           	
 29011  238D                     l22453:	
 29012                           ;CC2500_B1.c: 204: RC1=0;
 29013  238D  0020               	movlb 0	; select bank0
 29014  238E  108E               	bcf	(113/8),(113)&7
 29015                           	line	196
 29016                           	
 29017  238F                     l22455:	
 29018  238F  3001               	movlw	(01h)
 29019  2390  00A0               	movwf	(??_CC2500_WriteByte+0)+0
 29020  2391  0820               	movf	(??_CC2500_WriteByte+0)+0,w
 29021  2392  07A1               	addwf	(CC2500_WriteByte@loop_a),f
 29022                           	
 29023  2393                     l22457:	
 29024  2393  3008               	movlw	(08h)
 29025  2394  0221               	subwf	(CC2500_WriteByte@loop_a),w
 29026  2395  1C03               	skipc
 29027  2396  2B98               	goto	u5191
 29028  2397  2B99               	goto	u5190
 29029  2398                     u5191:
 29030  2398  2B7F               	goto	l2332
 29031  2399                     u5190:
 29032  2399  2B9A               	goto	l2336
 29033                           	
 29034  239A                     l2333:	
 29035                           	line	206
 29036                           	
 29037  239A                     l2336:	
 29038  239A  0008               	return
 29039                           	opt stack 0
 29040                           GLOBAL	__end_of_CC2500_WriteByte
 29041  239B                     	__end_of_CC2500_WriteByte:
 29042 ;; =============== function _CC2500_WriteByte ends ============
 29043                           
 29044                           	signat	_CC2500_WriteByte,88
 29045                           	global	_BuzPointSelect
 29046                           psect	text3376,local,class=CODE,delta=2
 29047                           global __ptext3376
 29048  2007                     __ptext3376:
 29049                           
 29050 ;; *************** function _BuzPointSelect *****************
 29051 ;; Defined at:
 29052 ;;		line 10 in file "G:\Program\PIC\Source_File\Buzzer_B1.c"
 29053 ;; Parameters:    Size  Location     Type
 29054 ;;  buz             1    wreg     unsigned char 
 29055 ;; Auto vars:     Size  Location     Type
 29056 ;;  buz             1    1[BANK0 ] unsigned char 
 29057 ;; Return value:  Size  Location     Type
 29058 ;;		None               void
 29059 ;; Registers used:
 29060 ;;		wreg
 29061 ;; Tracked objects:
 29062 ;;		On entry : 0/0
 29063 ;;		On exit  : 0/0
 29064 ;;		Unchanged: 0/0
 29065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
       0       0
 29069 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
       0       0
 29070 ;;Total ram usage:        2 bytes
 29071 ;; Hardware stack levels used:    1
 29072 ;; Hardware stack levels required when called:    4
 29073 ;; This function calls:
 29074 ;;		Nothing
 29075 ;; This function is called by:
 29076 ;;		_setBuz_Enable
 29077 ;;		_setBuz
 29078 ;;		_setBuz_Main
 29079 ;; This function uses a non-reentrant model
 29080 ;;
 29081                           psect	text3376
 29082                           	file	"G:\Program\PIC\Source_File\Buzzer_B1.c"
 29083                           	line	10
 29084                           	global	__size_of_BuzPointSelect
 29085  000F                     	__size_of_BuzPointSelect	equ	__end_of_BuzPointSelect-_BuzPointSelect
 29086                           	
 29087  2007                     _BuzPointSelect:	
 29088                           	opt	stack 8
 29089                           ; Regs used in _BuzPointSelect: [wreg]
 29090                           ;BuzPointSelect@buz stored from wreg
 29091                           	line	12
 29092  2007  0020               	movlb 0	; select bank0
 29093  2008  00A1               	movwf	(BuzPointSelect@buz)
 29094                           	
 29095  2009                     l22439:	
 29096                           ;Buzzer_B1.c: 12: if(buz == 1)
 29097  2009  0821               	movf	(BuzPointSelect@buz),w
 29098  200A  3A01               	xorlw	01h&0ffh
 29099  200B  1D03               	skipz
 29100  200C  280E               	goto	u5161
 29101  200D  280F               	goto	u5160
 29102  200E                     u5161:
 29103  200E  2815               	goto	l1104
 29104  200F                     u5160:
 29105                           	line	14
 29106                           	
 29107  200F                     l22441:	
 29108                           ;Buzzer_B1.c: 13: {
 29109                           ;Buzzer_B1.c: 14: Buz=&Buz1;
 29110  200F  303E               	movlw	(_Buz1)&0ffh
 29111  2010  00A0               	movwf	(??_BuzPointSelect+0)+0
 29112  2011  0820               	movf	(??_BuzPointSelect+0)+0,w
 29113  2012  0021               	movlb 1	; select bank1
 29114  2013  00B7               	movwf	(_Buz)^080h
 29115  2014  2815               	goto	l1104
 29116                           	line	15
 29117                           	
 29118  2015                     l1103:	
 29119                           	line	17
 29120                           	
 29121  2015                     l1104:	
 29122  2015  0008               	return
 29123                           	opt stack 0
 29124                           GLOBAL	__end_of_BuzPointSelect
 29125  2016                     	__end_of_BuzPointSelect:
 29126 ;; =============== function _BuzPointSelect ends ============
 29127                           
 29128                           	signat	_BuzPointSelect,4216
 29129                           	global	_ISR
 29130                           psect	intentry,class=CODE,delta=2
 29131                           global __pintentry
 29132  0004                     __pintentry:
 29133                           
 29134 ;; *************** function _ISR *****************
 29135 ;; Defined at:
 29136 ;;		line 57 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29137 ;; Parameters:    Size  Location     Type
 29138 ;;		None
 29139 ;; Auto vars:     Size  Location     Type
 29140 ;;		None
 29141 ;; Return value:  Size  Location     Type
 29142 ;;		None               void
 29143 ;; Registers used:
 29144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
 29145 ;; Tracked objects:
 29146 ;;		On entry : 0/0
 29147 ;;		On exit  : 0/0
 29148 ;;		Unchanged: 0/0
 29149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29152 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29154 ;;Total ram usage:        1 bytes
 29155 ;; Hardware stack levels used:    1
 29156 ;; Hardware stack levels required when called:    3
 29157 ;; This function calls:
 29158 ;;		_IOC_ISR
 29159 ;;		_TMR0_ISR
 29160 ;;		_INT_ISR
 29161 ;; This function is called by:
 29162 ;;		Interrupt level 1
 29163 ;; This function uses a non-reentrant model
 29164 ;;
 29165                           psect	intentry
 29166                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29167                           	line	57
 29168                           	global	__size_of_ISR
 29169  0011                     	__size_of_ISR	equ	__end_of_ISR-_ISR
 29170                           	
 29171  0004                     _ISR:	
 29172                           	opt	stack 2
 29173                           ; Regs used in _ISR: [allreg]
 29174                           psect	intentry
 29175  0004  3180               	pagesel	$
 29176  0005  0020               	movlb 0	; select bank0
 29177  0006  087F               	movf	btemp+1,w
 29178  0007  00F9               	movwf	(??_ISR+0)
 29179                           	line	58
 29180                           	
 29181  0008                     i1l22635:	
 29182                           ;MCU_16f1518_B1.c: 58: IOC_ISR();
 29183  0008  31A5  25CA  3180   	fcall	_IOC_ISR
 29184                           	line	60
 29185                           	
 29186  000B                     i1l22637:	
 29187                           ;MCU_16f1518_B1.c: 60: TMR0_ISR();
 29188  000B  3183  232A  3180   	fcall	_TMR0_ISR
 29189                           	line	66
 29190                           	
 29191  000E                     i1l22639:	
 29192                           ;MCU_16f1518_B1.c: 62: ;;
 29193                           ;MCU_16f1518_B1.c: 66: INT_ISR();
 29194  000E  31A1  21EE  3180   	fcall	_INT_ISR
 29195                           	line	69
 29196                           	
 29197  0011                     i1l8291:	
 29198  0011  0879               	movf	(??_ISR+0),w
 29199  0012  0020               	movlb 0	; select bank0
 29200  0013  00FF               	movwf	btemp+1
 29201  0014  0009               	retfie
 29202                           	opt stack 0
 29203                           GLOBAL	__end_of_ISR
 29204  0015                     	__end_of_ISR:
 29205 ;; =============== function _ISR ends ============
 29206                           
 29207                           	signat	_ISR,88
 29208                           	global	_INT_ISR
 29209                           psect	text3378,local,class=CODE,delta=2
 29210                           global __ptext3378
 29211  21EE                     __ptext3378:
 29212                           
 29213 ;; *************** function _INT_ISR *****************
 29214 ;; Defined at:
 29215 ;;		line 182 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29216 ;; Parameters:    Size  Location     Type
 29217 ;;		None
 29218 ;; Auto vars:     Size  Location     Type
 29219 ;;		None
 29220 ;; Return value:  Size  Location     Type
 29221 ;;		None               void
 29222 ;; Registers used:
 29223 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29224 ;; Tracked objects:
 29225 ;;		On entry : 0/0
 29226 ;;		On exit  : 0/0
 29227 ;;		Unchanged: 0/0
 29228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29233 ;;Total ram usage:        0 bytes
 29234 ;; Hardware stack levels used:    1
 29235 ;; Hardware stack levels required when called:    2
 29236 ;; This function calls:
 29237 ;;		_setRF_ReceiveGO
 29238 ;; This function is called by:
 29239 ;;		_ISR
 29240 ;; This function uses a non-reentrant model
 29241 ;;
 29242                           psect	text3378
 29243                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29244                           	line	182
 29245                           	global	__size_of_INT_ISR
 29246  0013                     	__size_of_INT_ISR	equ	__end_of_INT_ISR-_INT_ISR
 29247                           	
 29248  21EE                     _INT_ISR:	
 29249                           	opt	stack 2
 29250                           ; Regs used in _INT_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 29251                           	line	183
 29252                           	
 29253  21EE                     i1l22751:	
 29254                           ;MCU_16f1518_B1.c: 183: if(INTE && INTF)
 29255  21EE  1E0B               	btfss	(92/8),(92)&7
 29256  21EF  29F1               	goto	u568_21
 29257  21F0  29F2               	goto	u568_20
 29258  21F1                     u568_21:
 29259  21F1  2A00               	goto	i1l8336
 29260  21F2                     u568_20:
 29261                           	
 29262  21F2                     i1l22753:	
 29263  21F2  1C8B               	btfss	(89/8),(89)&7
 29264  21F3  29F5               	goto	u569_21
 29265  21F4  29F6               	goto	u569_20
 29266  21F5                     u569_21:
 29267  21F5  2A00               	goto	i1l8336
 29268  21F6                     u569_20:
 29269                           	line	185
 29270                           	
 29271  21F6                     i1l22755:	
 29272                           ;MCU_16f1518_B1.c: 184: {
 29273                           ;MCU_16f1518_B1.c: 185: INTF=0;
 29274  21F6  108B               	bcf	(89/8),(89)&7
 29275                           	line	186
 29276                           ;MCU_16f1518_B1.c: 186: INTE=0;
 29277  21F7  120B               	bcf	(92/8),(92)&7
 29278                           	line	187
 29279                           	
 29280  21F8                     i1l22757:	
 29281                           ;MCU_16f1518_B1.c: 187: setRF_ReceiveGO(1,1);
 29282  21F8  01F2               	clrf	(?_setRF_ReceiveGO)
 29283  21F9  1403               	bsf	status,0
 29284  21FA  0DF2               	rlf	(?_setRF_ReceiveGO),f
 29285  21FB  3001               	movlw	(01h)
 29286  21FC  31AF  279E  31A1   	fcall	_setRF_ReceiveGO
 29287  21FF  2A00               	goto	i1l8336
 29288                           	line	188
 29289                           	
 29290  2200                     i1l8335:	
 29291                           	line	189
 29292                           	
 29293  2200                     i1l8336:	
 29294  2200  0008               	return
 29295                           	opt stack 0
 29296                           GLOBAL	__end_of_INT_ISR
 29297  2201                     	__end_of_INT_ISR:
 29298 ;; =============== function _INT_ISR ends ============
 29299                           
 29300                           	signat	_INT_ISR,88
 29301                           	global	_TMR0_ISR
 29302                           psect	text3379,local,class=CODE,delta=2
 29303                           global __ptext3379
 29304  032A                     __ptext3379:
 29305                           
 29306 ;; *************** function _TMR0_ISR *****************
 29307 ;; Defined at:
 29308 ;;		line 84 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29309 ;; Parameters:    Size  Location     Type
 29310 ;;		None
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;		None
 29313 ;; Return value:  Size  Location     Type
 29314 ;;		None               void
 29315 ;; Registers used:
 29316 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29317 ;; Tracked objects:
 29318 ;;		On entry : 0/0
 29319 ;;		On exit  : 0/0
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 29322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 29326 ;;Total ram usage:        4 bytes
 29327 ;; Hardware stack levels used:    1
 29328 ;; Hardware stack levels required when called:    2
 29329 ;; This function calls:
 29330 ;;		i1_setLoad_StatusOff
 29331 ;; This function is called by:
 29332 ;;		_ISR
 29333 ;; This function uses a non-reentrant model
 29334 ;;
 29335                           psect	text3379
 29336                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 29337                           	line	84
 29338                           	global	__size_of_TMR0_ISR
 29339  01ED                     	__size_of_TMR0_ISR	equ	__end_of_TMR0_ISR-_TMR0_ISR
 29340                           	
 29341  032A                     _TMR0_ISR:	
 29342                           	opt	stack 2
 29343                           ; Regs used in _TMR0_ISR: [wreg-status,0+pclath+cstack]
 29344                           	line	85
 29345                           	
 29346  032A                     i1l22659:	
 29347                           ;MCU_16f1518_B1.c: 85: if(TMR0IE && TMR0IF)
 29348  032A  1E8B               	btfss	(93/8),(93)&7
 29349  032B  2B2D               	goto	u546_21
 29350  032C  2B2E               	goto	u546_20
 29351  032D                     u546_21:
 29352  032D  2D16               	goto	i1l8326
 29353  032E                     u546_20:
 29354                           	
 29355  032E                     i1l22661:	
 29356  032E  1D0B               	btfss	(90/8),(90)&7
 29357  032F  2B31               	goto	u547_21
 29358  0330  2B32               	goto	u547_20
 29359  0331                     u547_21:
 29360  0331  2D16               	goto	i1l8326
 29361  0332                     u547_20:
 29362                           	line	87
 29363                           	
 29364  0332                     i1l22663:	
 29365                           ;MCU_16f1518_B1.c: 86: {
 29366                           ;MCU_16f1518_B1.c: 87: TMR0=(256-90);
 29367  0332  30A6               	movlw	(0A6h)
 29368  0333  0020               	movlb 0	; select bank0
 29369  0334  0095               	movwf	(21)	;volatile
 29370                           	line	88
 29371                           	
 29372  0335                     i1l22665:	
 29373                           ;MCU_16f1518_B1.c: 88: TMR0IF=0;
 29374  0335  110B               	bcf	(90/8),(90)&7
 29375                           	line	93
 29376                           	
 29377  0336                     i1l22667:	
 29378                           ;MCU_16f1518_B1.c: 93: if(DimmerLights11->GO) { DimmerLights11->Count++; if(DimmerLights
                                 11->Count >= (DimmerLights11->DimmingValue-Dimmer->Correction)) { DimmerLights11->Count=
                                 0; DimmerLights11->GO=0; DimmerLights11->Flag=1; if(DimmerLights11->StatusFlag) { RB4=1;
                                  RA7=1; }
 29379  0336  087B               	movf	(_DimmerLights11),w
 29380  0337  0086               	movwf	fsr1l
 29381  0338  3001               	movlw 1	; select bank2/3
 29382  0339  0087               	movwf fsr1h	
 29383                           	
 29384  033A  1C01               	btfss	indf1,0
 29385  033B  2B3D               	goto	u548_21
 29386  033C  2B3E               	goto	u548_20
 29387  033D                     u548_21:
 29388  033D  2B8F               	goto	i1l22675
 29389  033E                     u548_20:
 29390                           	
 29391  033E                     i1l22669:	
 29392  033E  3001               	movlw	(01h)
 29393  033F  00F5               	movwf	(??_TMR0_ISR+0)+0
 29394  0340  087B               	movf	(_DimmerLights11),w
 29395  0341  3E03               	addlw	03h
 29396  0342  0086               	movwf	fsr1l
 29397  0343  3001               	movlw 1	; select bank2/3
 29398  0344  0087               	movwf fsr1h	
 29399                           	
 29400  0345  0875               	movf	(??_TMR0_ISR+0)+0,w
 29401  0346  0781               	addwf	indf1,f
 29402  0347  0021               	movlb 1	; select bank1
 29403  0348  083A               	movf	(_Dimmer)^080h,w
 29404  0349  3E02               	addlw	02h
 29405  034A  0086               	movwf	fsr1l
 29406  034B  0187               	clrf fsr1h	
 29407                           	
 29408  034C  0801               	movf	indf1,w
 29409  034D  00F5               	movwf	(??_TMR0_ISR+0)+0
 29410  034E  01F6               	clrf	(??_TMR0_ISR+0)+0+1
 29411  034F  09F5               	comf	(??_TMR0_ISR+0)+0,f
 29412  0350  09F6               	comf	(??_TMR0_ISR+0)+1,f
 29413  0351  0AF5               	incf	(??_TMR0_ISR+0)+0,f
 29414  0352  1903               	skipnz
 29415  0353  0AF6               	incf	(??_TMR0_ISR+0)+1,f
 29416  0354  087B               	movf	(_DimmerLights11),w
 29417  0355  3E04               	addlw	04h
 29418  0356  0086               	movwf	fsr1l
 29419  0357  3001               	movlw 1	; select bank2/3
 29420  0358  0087               	movwf fsr1h	
 29421                           	
 29422  0359  0801               	movf	indf1,w
 29423  035A  0775               	addwf	0+(??_TMR0_ISR+0)+0,w
 29424  035B  00F7               	movwf	(??_TMR0_ISR+2)+0
 29425  035C  0876               	movf	1+(??_TMR0_ISR+0)+0,w
 29426  035D  1803               	skipnc
 29427  035E  0A76               	incf	1+(??_TMR0_ISR+0)+0,w
 29428  035F  00F8               	movwf	((??_TMR0_ISR+2)+0)+1
 29429  0360  087B               	movf	(_DimmerLights11),w
 29430  0361  3E03               	addlw	03h
 29431  0362  0086               	movwf	fsr1l
 29432  0363  3001               	movlw 1	; select bank2/3
 29433  0364  0087               	movwf fsr1h	
 29434                           	
 29435  0365  0878               	movf	1+(??_TMR0_ISR+2)+0,w
 29436  0366  3A80               	xorlw	80h
 29437  0367  3C80               	sublw	080h
 29438  0368  1D03               	skipz
 29439  0369  2B6C               	goto	u549_25
 29440  036A  0877               	movf	0+(??_TMR0_ISR+2)+0,w
 29441  036B  0201               	subwf	indf1,w
 29442  036C                     u549_25:
 29443                           
 29444  036C  1C03               	skipc
 29445  036D  2B6F               	goto	u549_21
 29446  036E  2B70               	goto	u549_20
 29447  036F                     u549_21:
 29448  036F  2CEF               	goto	i1l22745
 29449  0370                     u549_20:
 29450                           	
 29451  0370                     i1l22671:	
 29452  0370  087B               	movf	(_DimmerLights11),w
 29453  0371  3E03               	addlw	03h
 29454  0372  0086               	movwf	fsr1l
 29455  0373  3001               	movlw 1	; select bank2/3
 29456  0374  0087               	movwf fsr1h	
 29457                           	
 29458  0375  0181               	clrf	indf1
 29459  0376  087B               	movf	(_DimmerLights11),w
 29460  0377  0086               	movwf	fsr1l
 29461  0378  3001               	movlw 1	; select bank2/3
 29462  0379  0087               	movwf fsr1h	
 29463                           	
 29464  037A  1001               	bcf	indf1,0
 29465  037B  087B               	movf	(_DimmerLights11),w
 29466  037C  3E07               	addlw	07h
 29467  037D  0086               	movwf	fsr1l
 29468  037E  3001               	movlw 1	; select bank2/3
 29469  037F  0087               	movwf fsr1h	
 29470                           	
 29471  0380  1401               	bsf	indf1,0
 29472  0381  087B               	movf	(_DimmerLights11),w
 29473  0382  0086               	movwf	fsr1l
 29474  0383  3001               	movlw 1	; select bank2/3
 29475  0384  0087               	movwf fsr1h	
 29476                           	
 29477  0385  1F01               	btfss	indf1,6
 29478  0386  2B88               	goto	u550_21
 29479  0387  2B89               	goto	u550_20
 29480  0388                     u550_21:
 29481  0388  2CEF               	goto	i1l22745
 29482  0389                     u550_20:
 29483                           	
 29484  0389                     i1l22673:	
 29485  0389  0020               	movlb 0	; select bank0
 29486  038A  160D               	bsf	(108/8),(108)&7
 29487  038B  178C               	bsf	(103/8),(103)&7
 29488  038C  2CEF               	goto	i1l22745
 29489                           	
 29490  038D                     i1l8300:	
 29491  038D  2CEF               	goto	i1l22745
 29492                           	
 29493  038E                     i1l8299:	
 29494  038E  2CEF               	goto	i1l22745
 29495                           	
 29496  038F                     i1l8298:	
 29497                           	
 29498  038F                     i1l22675:	
 29499  038F  087B               	movf	(_DimmerLights11),w
 29500  0390  3E07               	addlw	07h
 29501  0391  0086               	movwf	fsr1l
 29502  0392  3001               	movlw 1	; select bank2/3
 29503  0393  0087               	movwf fsr1h	
 29504                           	
 29505  0394  1C01               	btfss	indf1,0
 29506  0395  2B97               	goto	u551_21
 29507  0396  2B98               	goto	u551_20
 29508  0397                     u551_21:
 29509  0397  2CCB               	goto	i1l22733
 29510  0398                     u551_20:
 29511                           	
 29512  0398                     i1l22677:	
 29513  0398  087B               	movf	(_DimmerLights11),w
 29514  0399  3E07               	addlw	07h
 29515  039A  0086               	movwf	fsr1l
 29516  039B  3001               	movlw 1	; select bank2/3
 29517  039C  0087               	movwf fsr1h	
 29518                           	
 29519  039D  1001               	bcf	indf1,0
 29520  039E  087B               	movf	(_DimmerLights11),w
 29521  039F  0086               	movwf	fsr1l
 29522  03A0  3001               	movlw 1	; select bank2/3
 29523  03A1  0087               	movwf fsr1h	
 29524                           	
 29525  03A2  1C81               	btfss	indf1,1
 29526  03A3  2BA5               	goto	u552_21
 29527  03A4  2BA6               	goto	u552_20
 29528  03A5                     u552_21:
 29529  03A5  2CCB               	goto	i1l22733
 29530  03A6                     u552_20:
 29531                           	
 29532  03A6                     i1l22679:	
 29533  03A6  3001               	movlw	(01h)
 29534  03A7  00F5               	movwf	(??_TMR0_ISR+0)+0
 29535  03A8  087B               	movf	(_DimmerLights11),w
 29536  03A9  3E01               	addlw	01h
 29537  03AA  0086               	movwf	fsr1l
 29538  03AB  3001               	movlw 1	; select bank2/3
 29539  03AC  0087               	movwf fsr1h	
 29540                           	
 29541  03AD  0875               	movf	(??_TMR0_ISR+0)+0,w
 29542  03AE  0781               	addwf	indf1,f
 29543                           	
 29544  03AF                     i1l22681:	
 29545  03AF  087B               	movf	(_DimmerLights11),w
 29546  03B0  3E01               	addlw	01h
 29547  03B1  0086               	movwf	fsr1l
 29548  03B2  3001               	movlw 1	; select bank2/3
 29549  03B3  0087               	movwf fsr1h	
 29550                           	
 29551  03B4  087B               	movf	(_DimmerLights11),w
 29552  03B5  3E02               	addlw	02h
 29553  03B6  0084               	movwf	fsr0l
 29554  03B7  3001               	movlw 1	; select bank2/3
 29555  03B8  0085               	movwf fsr0h	
 29556                           	
 29557  03B9  0800               	movf	indf0,w
 29558  03BA  0201               	subwf	indf1,w
 29559  03BB  1C03               	skipc
 29560  03BC  2BBE               	goto	u553_21
 29561  03BD  2BBF               	goto	u553_20
 29562  03BE                     u553_21:
 29563  03BE  2CCB               	goto	i1l22733
 29564  03BF                     u553_20:
 29565                           	
 29566  03BF                     i1l22683:	
 29567  03BF  087B               	movf	(_DimmerLights11),w
 29568  03C0  3E01               	addlw	01h
 29569  03C1  0086               	movwf	fsr1l
 29570  03C2  3001               	movlw 1	; select bank2/3
 29571  03C3  0087               	movwf fsr1h	
 29572                           	
 29573  03C4  0181               	clrf	indf1
 29574  03C5  087B               	movf	(_DimmerLights11),w
 29575  03C6  0086               	movwf	fsr1l
 29576  03C7  3001               	movlw 1	; select bank2/3
 29577  03C8  0087               	movwf fsr1h	
 29578                           	
 29579  03C9  1D81               	btfss	indf1,3
 29580  03CA  2BCC               	goto	u554_21
 29581  03CB  2BCD               	goto	u554_20
 29582  03CC                     u554_21:
 29583  03CC  2C0C               	goto	i1l22699
 29584  03CD                     u554_20:
 29585                           	
 29586  03CD                     i1l22685:	
 29587  03CD  087B               	movf	(_DimmerLights11),w
 29588  03CE  0086               	movwf	fsr1l
 29589  03CF  3001               	movlw 1	; select bank2/3
 29590  03D0  0087               	movwf fsr1h	
 29591                           	
 29592  03D1  1A01               	btfsc	indf1,4
 29593  03D2  2BD4               	goto	u555_21
 29594  03D3  2BD5               	goto	u555_20
 29595  03D4                     u555_21:
 29596  03D4  2BEF               	goto	i1l22693
 29597  03D5                     u555_20:
 29598                           	
 29599  03D5                     i1l22687:	
 29600  03D5  087B               	movf	(_DimmerLights11),w
 29601  03D6  3E04               	addlw	04h
 29602  03D7  0086               	movwf	fsr1l
 29603  03D8  3001               	movlw 1	; select bank2/3
 29604  03D9  0087               	movwf fsr1h	
 29605                           	
 29606  03DA  303D               	movlw	(03Dh)
 29607  03DB  0201               	subwf	indf1,w
 29608  03DC  1C03               	skipc
 29609  03DD  2BDF               	goto	u556_21
 29610  03DE  2BE0               	goto	u556_20
 29611  03DF                     u556_21:
 29612  03DF  2BE8               	goto	i1l22691
 29613  03E0                     u556_20:
 29614                           	
 29615  03E0                     i1l22689:	
 29616  03E0  087B               	movf	(_DimmerLights11),w
 29617  03E1  3E04               	addlw	04h
 29618  03E2  0086               	movwf	fsr1l
 29619  03E3  3001               	movlw 1	; select bank2/3
 29620  03E4  0087               	movwf fsr1h	
 29621                           	
 29622  03E5  3001               	movlw	low(01h)
 29623  03E6  0281               	subwf	indf1,f
 29624  03E7  2CCB               	goto	i1l22733
 29625                           	
 29626  03E8                     i1l8307:	
 29627                           	
 29628  03E8                     i1l22691:	
 29629  03E8  087B               	movf	(_DimmerLights11),w
 29630  03E9  0086               	movwf	fsr1l
 29631  03EA  3001               	movlw 1	; select bank2/3
 29632  03EB  0087               	movwf fsr1h	
 29633                           	
 29634  03EC  1601               	bsf	indf1,4
 29635  03ED  2CCB               	goto	i1l22733
 29636                           	
 29637  03EE                     i1l8308:	
 29638  03EE  2CCB               	goto	i1l22733
 29639                           	
 29640  03EF                     i1l8306:	
 29641                           	
 29642  03EF                     i1l22693:	
 29643  03EF  087B               	movf	(_DimmerLights11),w
 29644  03F0  3E04               	addlw	04h
 29645  03F1  0086               	movwf	fsr1l
 29646  03F2  3001               	movlw 1	; select bank2/3
 29647  03F3  0087               	movwf fsr1h	
 29648                           	
 29649  03F4  3078               	movlw	(078h)
 29650  03F5  0201               	subwf	indf1,w
 29651  03F6  1803               	skipnc
 29652  03F7  2BF9               	goto	u557_21
 29653  03F8  2BFA               	goto	u557_20
 29654  03F9                     u557_21:
 29655  03F9  2C04               	goto	i1l22697
 29656  03FA                     u557_20:
 29657                           	
 29658  03FA                     i1l22695:	
 29659  03FA  3001               	movlw	(01h)
 29660  03FB  00F5               	movwf	(??_TMR0_ISR+0)+0
 29661  03FC  087B               	movf	(_DimmerLights11),w
 29662  03FD  3E04               	addlw	04h
 29663  03FE  0086               	movwf	fsr1l
 29664  03FF  3001               	movlw 1	; select bank2/3
 29665  0400  0087               	movwf fsr1h	
 29666                           	
 29667  0401  0875               	movf	(??_TMR0_ISR+0)+0,w
 29668  0402  0781               	addwf	indf1,f
 29669  0403  2CCB               	goto	i1l22733
 29670                           	
 29671  0404                     i1l8310:	
 29672                           	
 29673  0404                     i1l22697:	
 29674  0404  087B               	movf	(_DimmerLights11),w
 29675  0405  0086               	movwf	fsr1l
 29676  0406  3001               	movlw 1	; select bank2/3
 29677  0407  0087               	movwf fsr1h	
 29678                           	
 29679  0408  1201               	bcf	indf1,4
 29680  0409  2CCB               	goto	i1l22733
 29681                           	
 29682  040A                     i1l8311:	
 29683  040A  2CCB               	goto	i1l22733
 29684                           	
 29685  040B                     i1l8309:	
 29686  040B  2CCB               	goto	i1l22733
 29687                           	
 29688  040C                     i1l8305:	
 29689                           	
 29690  040C                     i1l22699:	
 29691  040C  087B               	movf	(_DimmerLights11),w
 29692  040D  0086               	movwf	fsr1l
 29693  040E  3001               	movlw 1	; select bank2/3
 29694  040F  0087               	movwf fsr1h	
 29695                           	
 29696  0410  1D01               	btfss	indf1,2
 29697  0411  2C13               	goto	u558_21
 29698  0412  2C14               	goto	u558_20
 29699  0413                     u558_21:
 29700  0413  2C63               	goto	i1l22713
 29701  0414                     u558_20:
 29702                           	
 29703  0414                     i1l22701:	
 29704  0414  087B               	movf	(_DimmerLights11),w
 29705  0415  3E05               	addlw	05h
 29706  0416  0086               	movwf	fsr1l
 29707  0417  3001               	movlw 1	; select bank2/3
 29708  0418  0087               	movwf fsr1h	
 29709                           	
 29710  0419  087B               	movf	(_DimmerLights11),w
 29711  041A  3E04               	addlw	04h
 29712  041B  0084               	movwf	fsr0l
 29713  041C  3001               	movlw 1	; select bank2/3
 29714  041D  0085               	movwf fsr0h	
 29715                           	
 29716  041E  0800               	movf	indf0,w
 29717  041F  0201               	subwf	indf1,w
 29718  0420  1803               	skipnc
 29719  0421  2C23               	goto	u559_21
 29720  0422  2C24               	goto	u559_20
 29721  0423                     u559_21:
 29722  0423  2C2C               	goto	i1l22705
 29723  0424                     u559_20:
 29724                           	
 29725  0424                     i1l22703:	
 29726  0424  087B               	movf	(_DimmerLights11),w
 29727  0425  3E04               	addlw	04h
 29728  0426  0086               	movwf	fsr1l
 29729  0427  3001               	movlw 1	; select bank2/3
 29730  0428  0087               	movwf fsr1h	
 29731                           	
 29732  0429  3001               	movlw	low(01h)
 29733  042A  0281               	subwf	indf1,f
 29734  042B  2C47               	goto	i1l22709
 29735                           	
 29736  042C                     i1l8314:	
 29737                           	
 29738  042C                     i1l22705:	
 29739  042C  087B               	movf	(_DimmerLights11),w
 29740  042D  3E04               	addlw	04h
 29741  042E  0086               	movwf	fsr1l
 29742  042F  3001               	movlw 1	; select bank2/3
 29743  0430  0087               	movwf fsr1h	
 29744                           	
 29745  0431  087B               	movf	(_DimmerLights11),w
 29746  0432  3E05               	addlw	05h
 29747  0433  0084               	movwf	fsr0l
 29748  0434  3001               	movlw 1	; select bank2/3
 29749  0435  0085               	movwf fsr0h	
 29750                           	
 29751  0436  0800               	movf	indf0,w
 29752  0437  0201               	subwf	indf1,w
 29753  0438  1803               	skipnc
 29754  0439  2C3B               	goto	u560_21
 29755  043A  2C3C               	goto	u560_20
 29756  043B                     u560_21:
 29757  043B  2C47               	goto	i1l22709
 29758  043C                     u560_20:
 29759                           	
 29760  043C                     i1l22707:	
 29761  043C  3001               	movlw	(01h)
 29762  043D  00F5               	movwf	(??_TMR0_ISR+0)+0
 29763  043E  087B               	movf	(_DimmerLights11),w
 29764  043F  3E04               	addlw	04h
 29765  0440  0086               	movwf	fsr1l
 29766  0441  3001               	movlw 1	; select bank2/3
 29767  0442  0087               	movwf fsr1h	
 29768                           	
 29769  0443  0875               	movf	(??_TMR0_ISR+0)+0,w
 29770  0444  0781               	addwf	indf1,f
 29771  0445  2C47               	goto	i1l22709
 29772                           	
 29773  0446                     i1l8316:	
 29774  0446  2C47               	goto	i1l22709
 29775                           	
 29776  0447                     i1l8315:	
 29777                           	
 29778  0447                     i1l22709:	
 29779  0447  087B               	movf	(_DimmerLights11),w
 29780  0448  3E05               	addlw	05h
 29781  0449  0086               	movwf	fsr1l
 29782  044A  3001               	movlw 1	; select bank2/3
 29783  044B  0087               	movwf fsr1h	
 29784                           	
 29785  044C  087B               	movf	(_DimmerLights11),w
 29786  044D  3E04               	addlw	04h
 29787  044E  0084               	movwf	fsr0l
 29788  044F  3001               	movlw 1	; select bank2/3
 29789  0450  0085               	movwf fsr0h	
 29790                           	
 29791  0451  0800               	movf	indf0,w
 29792  0452  0601               	xorwf	indf1,w
 29793  0453  1D03               	skipz
 29794  0454  2C56               	goto	u561_21
 29795  0455  2C57               	goto	u561_20
 29796  0456                     u561_21:
 29797  0456  2CCB               	goto	i1l22733
 29798  0457                     u561_20:
 29799                           	
 29800  0457                     i1l22711:	
 29801  0457  087B               	movf	(_DimmerLights11),w
 29802  0458  0086               	movwf	fsr1l
 29803  0459  3001               	movlw 1	; select bank2/3
 29804  045A  0087               	movwf fsr1h	
 29805                           	
 29806  045B  1101               	bcf	indf1,2
 29807  045C  087B               	movf	(_DimmerLights11),w
 29808  045D  0086               	movwf	fsr1l
 29809  045E  3001               	movlw 1	; select bank2/3
 29810  045F  0087               	movwf fsr1h	
 29811                           	
 29812  0460  1081               	bcf	indf1,1
 29813  0461  2CCB               	goto	i1l22733
 29814                           	
 29815  0462                     i1l8317:	
 29816  0462  2CCB               	goto	i1l22733
 29817                           	
 29818  0463                     i1l8313:	
 29819                           	
 29820  0463                     i1l22713:	
 29821  0463  087B               	movf	(_DimmerLights11),w
 29822  0464  0086               	movwf	fsr1l
 29823  0465  3001               	movlw 1	; select bank2/3
 29824  0466  0087               	movwf fsr1h	
 29825                           	
 29826  0467  1E81               	btfss	indf1,5
 29827  0468  2C6A               	goto	u562_21
 29828  0469  2C6B               	goto	u562_20
 29829  046A                     u562_21:
 29830  046A  2C89               	goto	i1l22721
 29831  046B                     u562_20:
 29832                           	
 29833  046B                     i1l22715:	
 29834  046B  087B               	movf	(_DimmerLights11),w
 29835  046C  3E04               	addlw	04h
 29836  046D  0086               	movwf	fsr1l
 29837  046E  3001               	movlw 1	; select bank2/3
 29838  046F  0087               	movwf fsr1h	
 29839                           	
 29840  0470  3001               	movlw	low(01h)
 29841  0471  0281               	subwf	indf1,f
 29842                           	
 29843  0472                     i1l22717:	
 29844  0472  087B               	movf	(_DimmerLights11),w
 29845  0473  3E05               	addlw	05h
 29846  0474  0086               	movwf	fsr1l
 29847  0475  3001               	movlw 1	; select bank2/3
 29848  0476  0087               	movwf fsr1h	
 29849                           	
 29850  0477  087B               	movf	(_DimmerLights11),w
 29851  0478  3E04               	addlw	04h
 29852  0479  0084               	movwf	fsr0l
 29853  047A  3001               	movlw 1	; select bank2/3
 29854  047B  0085               	movwf fsr0h	
 29855                           	
 29856  047C  0800               	movf	indf0,w
 29857  047D  0201               	subwf	indf1,w
 29858  047E  1C03               	skipc
 29859  047F  2C81               	goto	u563_21
 29860  0480  2C82               	goto	u563_20
 29861  0481                     u563_21:
 29862  0481  2CCB               	goto	i1l22733
 29863  0482                     u563_20:
 29864                           	
 29865  0482                     i1l22719:	
 29866  0482  087B               	movf	(_DimmerLights11),w
 29867  0483  0086               	movwf	fsr1l
 29868  0484  3001               	movlw 1	; select bank2/3
 29869  0485  0087               	movwf fsr1h	
 29870                           	
 29871  0486  1081               	bcf	indf1,1
 29872  0487  2CCB               	goto	i1l22733
 29873                           	
 29874  0488                     i1l8320:	
 29875  0488  2CCB               	goto	i1l22733
 29876                           	
 29877  0489                     i1l8319:	
 29878                           	
 29879  0489                     i1l22721:	
 29880  0489  3001               	movlw	(01h)
 29881  048A  00F5               	movwf	(??_TMR0_ISR+0)+0
 29882  048B  087B               	movf	(_DimmerLights11),w
 29883  048C  3E04               	addlw	04h
 29884  048D  0086               	movwf	fsr1l
 29885  048E  3001               	movlw 1	; select bank2/3
 29886  048F  0087               	movwf fsr1h	
 29887                           	
 29888  0490  0875               	movf	(??_TMR0_ISR+0)+0,w
 29889  0491  0781               	addwf	indf1,f
 29890                           	
 29891  0492                     i1l22723:	
 29892  0492  087B               	movf	(_DimmerLights11),w
 29893  0493  3E04               	addlw	04h
 29894  0494  0086               	movwf	fsr1l
 29895  0495  3001               	movlw 1	; select bank2/3
 29896  0496  0087               	movwf fsr1h	
 29897                           	
 29898  0497  087B               	movf	(_DimmerLights11),w
 29899  0498  3E06               	addlw	06h
 29900  0499  0084               	movwf	fsr0l
 29901  049A  3001               	movlw 1	; select bank2/3
 29902  049B  0085               	movwf fsr0h	
 29903                           	
 29904  049C  0800               	movf	indf0,w
 29905  049D  0201               	subwf	indf1,w
 29906  049E  1C03               	skipc
 29907  049F  2CA1               	goto	u564_21
 29908  04A0  2CA2               	goto	u564_20
 29909  04A1                     u564_21:
 29910  04A1  2CCB               	goto	i1l22733
 29911  04A2                     u564_20:
 29912                           	
 29913  04A2                     i1l22725:	
 29914  04A2  087B               	movf	(_DimmerLights11),w
 29915  04A3  0086               	movwf	fsr1l
 29916  04A4  3001               	movlw 1	; select bank2/3
 29917  04A5  0087               	movwf fsr1h	
 29918                           	
 29919  04A6  1081               	bcf	indf1,1
 29920  04A7  087B               	movf	(_DimmerLights11),w
 29921  04A8  0086               	movwf	fsr1l
 29922  04A9  3001               	movlw 1	; select bank2/3
 29923  04AA  0087               	movwf fsr1h	
 29924                           	
 29925  04AB  1301               	bcf	indf1,6
 29926  04AC  087B               	movf	(_DimmerLights11),w
 29927  04AD  3E09               	addlw	09h
 29928  04AE  0086               	movwf	fsr1l
 29929  04AF  3001               	movlw 1	; select bank2/3
 29930  04B0  0087               	movwf fsr1h	
 29931                           	
 29932  04B1  1701               	bsf	indf1,6
 29933  04B2  0021               	movlb 1	; select bank1
 29934  04B3  083A               	movf	(_Dimmer)^080h,w
 29935  04B4  0086               	movwf	fsr1l
 29936  04B5  0187               	clrf fsr1h	
 29937                           	
 29938  04B6  1581               	bsf	indf1,3
 29939                           	
 29940  04B7                     i1l22727:	
 29941  04B7  0020               	movlb 0	; select bank0
 29942  04B8  138E               	bcf	(119/8),(119)&7
 29943                           	
 29944  04B9                     i1l22729:	
 29945  04B9  118C               	bcf	(99/8),(99)&7
 29946                           	
 29947  04BA                     i1l22731:	
 29948  04BA  01F2               	clrf	(?i1_setLoad_StatusOff)
 29949  04BB  1403               	bsf	status,0
 29950  04BC  0DF2               	rlf	(?i1_setLoad_StatusOff),f
 29951  04BD  01F3               	clrf	0+(?i1_setLoad_StatusOff)+01h
 29952  04BE  1403               	bsf	status,0
 29953  04BF  0DF3               	rlf	0+(?i1_setLoad_StatusOff)+01h,f
 29954  04C0  3001               	movlw	(01h)
 29955  04C1  31A6  2633  3183   	fcall	i1_setLoad_StatusOff
 29956  04C4  2CCB               	goto	i1l22733
 29957                           	
 29958  04C5                     i1l8322:	
 29959  04C5  2CCB               	goto	i1l22733
 29960                           	
 29961  04C6                     i1l8321:	
 29962  04C6  2CCB               	goto	i1l22733
 29963                           	
 29964  04C7                     i1l8318:	
 29965  04C7  2CCB               	goto	i1l22733
 29966                           	
 29967  04C8                     i1l8312:	
 29968  04C8  2CCB               	goto	i1l22733
 29969                           	
 29970  04C9                     i1l8304:	
 29971  04C9  2CCB               	goto	i1l22733
 29972                           	
 29973  04CA                     i1l8303:	
 29974  04CA  2CCB               	goto	i1l22733
 29975                           	
 29976  04CB                     i1l8302:	
 29977                           	
 29978  04CB                     i1l22733:	
 29979  04CB  0020               	movlb 0	; select bank0
 29980  04CC  1E0D               	btfss	(108/8),(108)&7
 29981  04CD  2CCF               	goto	u565_21
 29982  04CE  2CD0               	goto	u565_20
 29983  04CF                     u565_21:
 29984  04CF  2CEF               	goto	i1l22745
 29985  04D0                     u565_20:
 29986                           	
 29987  04D0                     i1l22735:	
 29988  04D0  3001               	movlw	(01h)
 29989  04D1  00F5               	movwf	(??_TMR0_ISR+0)+0
 29990  04D2  087B               	movf	(_DimmerLights11),w
 29991  04D3  3E08               	addlw	08h
 29992  04D4  0086               	movwf	fsr1l
 29993  04D5  3001               	movlw 1	; select bank2/3
 29994  04D6  0087               	movwf fsr1h	
 29995                           	
 29996  04D7  0875               	movf	(??_TMR0_ISR+0)+0,w
 29997  04D8  0781               	addwf	indf1,f
 29998                           	
 29999  04D9                     i1l22737:	
 30000  04D9  087B               	movf	(_DimmerLights11),w
 30001  04DA  3E08               	addlw	08h
 30002  04DB  0086               	movwf	fsr1l
 30003  04DC  3001               	movlw 1	; select bank2/3
 30004  04DD  0087               	movwf fsr1h	
 30005                           	
 30006  04DE  0801               	movf	indf1,w
 30007  04DF  3A00               	xorlw	0&0ffh
 30008  04E0  1903               	skipnz
 30009  04E1  2CE3               	goto	u566_21
 30010  04E2  2CE4               	goto	u566_20
 30011  04E3                     u566_21:
 30012  04E3  2CEF               	goto	i1l22745
 30013  04E4                     u566_20:
 30014                           	
 30015  04E4                     i1l22739:	
 30016  04E4  087B               	movf	(_DimmerLights11),w
 30017  04E5  3E08               	addlw	08h
 30018  04E6  0086               	movwf	fsr1l
 30019  04E7  3001               	movlw 1	; select bank2/3
 30020  04E8  0087               	movwf fsr1h	
 30021                           	
 30022  04E9  0181               	clrf	indf1
 30023                           	
 30024  04EA                     i1l22741:	
 30025  04EA  120D               	bcf	(108/8),(108)&7
 30026                           	
 30027  04EB                     i1l22743:	
 30028  04EB  138C               	bcf	(103/8),(103)&7
 30029  04EC  2CEF               	goto	i1l22745
 30030                           	
 30031  04ED                     i1l8324:	
 30032  04ED  2CEF               	goto	i1l22745
 30033                           	
 30034  04EE                     i1l8323:	
 30035  04EE  2CEF               	goto	i1l22745
 30036                           	
 30037  04EF                     i1l8301:	
 30038                           	line	106
 30039                           	
 30040  04EF                     i1l22745:	
 30041                           ;MCU_16f1518_B1.c: 106: Timer0->Count++;
 30042  04EF  0021               	movlb 1	; select bank1
 30043  04F0  086F               	movf	(_Timer0)^080h,w
 30044  04F1  3E01               	addlw	01h
 30045  04F2  0086               	movwf	fsr1l
 30046  04F3  0187               	clrf fsr1h	
 30047                           	
 30048  04F4  3001               	movlw	01h
 30049  04F5  0781               	addwf	indf1,f
 30050  04F6  3141               	addfsr	fsr1,1
 30051  04F7  1803               	skipnc
 30052  04F8  0A81               	incf	indf1,f
 30053                           	line	107
 30054                           	
 30055  04F9                     i1l22747:	
 30056                           ;MCU_16f1518_B1.c: 107: if(Timer0->Count == 200)
 30057  04F9  086F               	movf	(_Timer0)^080h,w
 30058  04FA  3E01               	addlw	01h
 30059  04FB  0086               	movwf	fsr1l
 30060  04FC  0187               	clrf fsr1h	
 30061                           	
 30062  04FD  3F40               	moviw	[0]fsr1
 30063  04FE  3AC8               	xorlw	low(0C8h)
 30064  04FF  1D03               	skipz
 30065  0500  2D03               	goto	u567_25
 30066  0501  3F41               	moviw	[1]fsr1
 30067  0502  3A00               	xorlw	high(0C8h)
 30068  0503                     u567_25:
 30069  0503  1D03               	skipz
 30070  0504  2D06               	goto	u567_21
 30071  0505  2D07               	goto	u567_20
 30072  0506                     u567_21:
 30073  0506  2D16               	goto	i1l8326
 30074  0507                     u567_20:
 30075                           	line	109
 30076                           	
 30077  0507                     i1l22749:	
 30078                           ;MCU_16f1518_B1.c: 108: {
 30079                           ;MCU_16f1518_B1.c: 109: Timer0->Count=0;
 30080  0507  086F               	movf	(_Timer0)^080h,w
 30081  0508  3E01               	addlw	01h
 30082  0509  0086               	movwf	fsr1l
 30083  050A  0187               	clrf fsr1h	
 30084                           	
 30085  050B  3000               	movlw	low(0)
 30086  050C  3FC0               	movwi	[0]fsr1
 30087  050D  3000               	movlw	high(0)
 30088  050E  3FC1               	movwi	[1]fsr1
 30089                           	line	110
 30090                           ;MCU_16f1518_B1.c: 110: TMain->T0_Timerout=1;
 30091  050F  086E               	movf	(_TMain)^080h,w
 30092  0510  0086               	movwf	fsr1l
 30093  0511  3001               	movlw 1	; select bank2/3
 30094  0512  0087               	movwf fsr1h	
 30095                           	
 30096  0513  1481               	bsf	indf1,1
 30097  0514  2D16               	goto	i1l8326
 30098                           	line	111
 30099                           	
 30100  0515                     i1l8325:	
 30101  0515  2D16               	goto	i1l8326
 30102                           	line	112
 30103                           	
 30104  0516                     i1l8297:	
 30105                           	line	113
 30106                           	
 30107  0516                     i1l8326:	
 30108  0516  0008               	return
 30109                           	opt stack 0
 30110                           GLOBAL	__end_of_TMR0_ISR
 30111  0517                     	__end_of_TMR0_ISR:
 30112 ;; =============== function _TMR0_ISR ends ============
 30113                           
 30114                           	signat	_TMR0_ISR,88
 30115                           	global	i1_setLoad_StatusOff
 30116                           psect	text3380,local,class=CODE,delta=2
 30117                           global __ptext3380
 30118  2633                     __ptext3380:
 30119                           
 30120 ;; *************** function i1_setLoad_StatusOff *****************
 30121 ;; Defined at:
 30122 ;;		line 347 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 30123 ;; Parameters:    Size  Location     Type
 30124 ;;  setLoad_Stat    1    wreg     unsigned char 
 30125 ;;  setLoad_Stat    1    2[COMMON] unsigned char 
 30126 ;;  setLoad_Stat    1    3[COMMON] unsigned char 
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;  setLoad_Stat    1    4[COMMON] unsigned char 
 30129 ;; Return value:  Size  Location     Type
 30130 ;;		None               void
 30131 ;; Registers used:
 30132 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30133 ;; Tracked objects:
 30134 ;;		On entry : 0/0
 30135 ;;		On exit  : 0/0
 30136 ;;		Unchanged: 0/0
 30137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30141 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30142 ;;Total ram usage:        3 bytes
 30143 ;; Hardware stack levels used:    1
 30144 ;; Hardware stack levels required when called:    1
 30145 ;; This function calls:
 30146 ;;		i1_LoadPointSelect
 30147 ;; This function is called by:
 30148 ;;		_TMR0_ISR
 30149 ;; This function uses a non-reentrant model
 30150 ;;
 30151                           psect	text3380
 30152                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 30153                           	line	347
 30154                           	global	__size_ofi1_setLoad_StatusOff
 30155  0037                     	__size_ofi1_setLoad_StatusOff	equ	__end_ofi1_setLoad_StatusOff-i1_setLoad_StatusOff
 30156                           	
 30157  2633                     i1_setLoad_StatusOff:	
 30158                           	opt	stack 2
 30159                           ; Regs used in i1_setLoad_StatusOff: [wreg+fsr1l-status,0+pclath+cstack]
 30160                           ;i1setLoad_StatusOff@load stored from wreg
 30161  2633  00F4               	movwf	(i1setLoad_StatusOff@load)
 30162                           	line	348
 30163                           	
 30164  2634                     i1l23097:	
 30165                           ;OverLoad_B1.c: 348: LoadPointSelect(load);
 30166  2634  0874               	movf	(i1setLoad_StatusOff@load),w
 30167  2635  31AF  2782  31A6   	fcall	i1_LoadPointSelect
 30168                           	line	349
 30169                           	
 30170  2638                     i1l23099:	
 30171                           ;OverLoad_B1.c: 349: Load->StatusOff=command;
 30172  2638  0020               	movlb 0	; select bank0
 30173  2639  086E               	movf	(_Load),w
 30174  263A  3E46               	addlw	046h
 30175  263B  0086               	movwf	fsr1l
 30176  263C  3002               	movlw 2	; select bank4/5
 30177  263D  0087               	movwf fsr1h	
 30178                           	
 30179  263E  0873               	movf	(i1setLoad_StatusOff@command),w
 30180  263F  1081               	bcf	indf1,1
 30181  2640  1D03               	skipz
 30182  2641  1481               	bsf	indf1,1
 30183                           	line	351
 30184                           	
 30185  2642                     i1l23101:	
 30186                           ;OverLoad_B1.c: 351: if(lights == 1)
 30187  2642  0872               	movf	(i1setLoad_StatusOff@lights),w
 30188  2643  3A01               	xorlw	01h&0ffh
 30189  2644  1D03               	skipz
 30190  2645  2E47               	goto	u637_21
 30191  2646  2E48               	goto	u637_20
 30192  2647                     u637_21:
 30193  2647  2E4F               	goto	i1l23105
 30194  2648                     u637_20:
 30195                           	line	353
 30196                           	
 30197  2648                     i1l23103:	
 30198                           ;OverLoad_B1.c: 352: {
 30199                           ;OverLoad_B1.c: 353: Load->Lights1Status=0;
 30200  2648  086E               	movf	(_Load),w
 30201  2649  3E43               	addlw	043h
 30202  264A  0086               	movwf	fsr1l
 30203  264B  3002               	movlw 2	; select bank4/5
 30204  264C  0087               	movwf fsr1h	
 30205                           	
 30206  264D  0181               	clrf	indf1
 30207  264E  2E4F               	goto	i1l23105
 30208                           	line	354
 30209                           	
 30210  264F                     i1l9604:	
 30211                           	line	355
 30212                           	
 30213  264F                     i1l23105:	
 30214                           ;OverLoad_B1.c: 354: }
 30215                           ;OverLoad_B1.c: 355: if(lights == 2)
 30216  264F  0872               	movf	(i1setLoad_StatusOff@lights),w
 30217  2650  3A02               	xorlw	02h&0ffh
 30218  2651  1D03               	skipz
 30219  2652  2E54               	goto	u638_21
 30220  2653  2E55               	goto	u638_20
 30221  2654                     u638_21:
 30222  2654  2E5C               	goto	i1l23109
 30223  2655                     u638_20:
 30224                           	line	357
 30225                           	
 30226  2655                     i1l23107:	
 30227                           ;OverLoad_B1.c: 356: {
 30228                           ;OverLoad_B1.c: 357: Load->Lights2Status=0;
 30229  2655  086E               	movf	(_Load),w
 30230  2656  3E44               	addlw	044h
 30231  2657  0086               	movwf	fsr1l
 30232  2658  3002               	movlw 2	; select bank4/5
 30233  2659  0087               	movwf fsr1h	
 30234                           	
 30235  265A  0181               	clrf	indf1
 30236  265B  2E5C               	goto	i1l23109
 30237                           	line	358
 30238                           	
 30239  265C                     i1l9605:	
 30240                           	line	359
 30241                           	
 30242  265C                     i1l23109:	
 30243                           ;OverLoad_B1.c: 358: }
 30244                           ;OverLoad_B1.c: 359: if(lights == 3)
 30245  265C  0872               	movf	(i1setLoad_StatusOff@lights),w
 30246  265D  3A03               	xorlw	03h&0ffh
 30247  265E  1D03               	skipz
 30248  265F  2E61               	goto	u639_21
 30249  2660  2E62               	goto	u639_20
 30250  2661                     u639_21:
 30251  2661  2E69               	goto	i1l9607
 30252  2662                     u639_20:
 30253                           	line	361
 30254                           	
 30255  2662                     i1l23111:	
 30256                           ;OverLoad_B1.c: 360: {
 30257                           ;OverLoad_B1.c: 361: Load->Lights3Status=0;
 30258  2662  086E               	movf	(_Load),w
 30259  2663  3E45               	addlw	045h
 30260  2664  0086               	movwf	fsr1l
 30261  2665  3002               	movlw 2	; select bank4/5
 30262  2666  0087               	movwf fsr1h	
 30263                           	
 30264  2667  0181               	clrf	indf1
 30265  2668  2E69               	goto	i1l9607
 30266                           	line	362
 30267                           	
 30268  2669                     i1l9606:	
 30269                           	line	363
 30270                           	
 30271  2669                     i1l9607:	
 30272  2669  0008               	return
 30273                           	opt stack 0
 30274                           GLOBAL	__end_ofi1_setLoad_StatusOff
 30275  266A                     	__end_ofi1_setLoad_StatusOff:
 30276 ;; =============== function i1_setLoad_StatusOff ends ============
 30277                           
 30278                           	signat	i1_setLoad_StatusOff,88
 30279                           	global	_setRF_ReceiveGO
 30280                           psect	text3381,local,class=CODE,delta=2
 30281                           global __ptext3381
 30282  2F9E                     __ptext3381:
 30283                           
 30284 ;; *************** function _setRF_ReceiveGO *****************
 30285 ;; Defined at:
 30286 ;;		line 38 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 30287 ;; Parameters:    Size  Location     Type
 30288 ;;  rf              1    wreg     unsigned char 
 30289 ;;  command         1    2[COMMON] unsigned char 
 30290 ;; Auto vars:     Size  Location     Type
 30291 ;;  rf              1    3[COMMON] unsigned char 
 30292 ;; Return value:  Size  Location     Type
 30293 ;;		None               void
 30294 ;; Registers used:
 30295 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30296 ;; Tracked objects:
 30297 ;;		On entry : 0/0
 30298 ;;		On exit  : 0/0
 30299 ;;		Unchanged: 0/0
 30300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30301 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30305 ;;Total ram usage:        2 bytes
 30306 ;; Hardware stack levels used:    1
 30307 ;; Hardware stack levels required when called:    1
 30308 ;; This function calls:
 30309 ;;		i1_RfPointSelect
 30310 ;; This function is called by:
 30311 ;;		_INT_ISR
 30312 ;; This function uses a non-reentrant model
 30313 ;;
 30314                           psect	text3381
 30315                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 30316                           	line	38
 30317                           	global	__size_of_setRF_ReceiveGO
 30318  000E                     	__size_of_setRF_ReceiveGO	equ	__end_of_setRF_ReceiveGO-_setRF_ReceiveGO
 30319                           	
 30320  2F9E                     _setRF_ReceiveGO:	
 30321                           	opt	stack 2
 30322                           ; Regs used in _setRF_ReceiveGO: [wreg+fsr1l-status,0+pclath+cstack]
 30323                           ;setRF_ReceiveGO@rf stored from wreg
 30324  2F9E  00F3               	movwf	(setRF_ReceiveGO@rf)
 30325                           	line	39
 30326                           	
 30327  2F9F                     i1l22763:	
 30328                           ;RF_Control_B1.c: 39: RfPointSelect(rf);
 30329  2F9F  0873               	movf	(setRF_ReceiveGO@rf),w
 30330  2FA0  31AF  2790  31AF   	fcall	i1_RfPointSelect
 30331                           	line	40
 30332                           	
 30333  2FA3                     i1l22765:	
 30334                           ;RF_Control_B1.c: 40: RF->ReceiveGO=command;
 30335  2FA3  0021               	movlb 1	; select bank1
 30336  2FA4  083E               	movf	(_RF)^080h,w
 30337  2FA5  0086               	movwf	fsr1l
 30338  2FA6  0187               	clrf fsr1h	
 30339                           	
 30340  2FA7  0872               	movf	(setRF_ReceiveGO@command),w
 30341  2FA8  1081               	bcf	indf1,1
 30342  2FA9  1D03               	skipz
 30343  2FAA  1481               	bsf	indf1,1
 30344                           	line	41
 30345                           	
 30346  2FAB                     i1l13117:	
 30347  2FAB  0008               	return
 30348                           	opt stack 0
 30349                           GLOBAL	__end_of_setRF_ReceiveGO
 30350  2FAC                     	__end_of_setRF_ReceiveGO:
 30351 ;; =============== function _setRF_ReceiveGO ends ============
 30352                           
 30353                           	signat	_setRF_ReceiveGO,8312
 30354                           	global	_IOC_ISR
 30355                           psect	text3382,local,class=CODE,delta=2
 30356                           global __ptext3382
 30357  25CA                     __ptext3382:
 30358                           
 30359 ;; *************** function _IOC_ISR *****************
 30360 ;; Defined at:
 30361 ;;		line 214 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30362 ;; Parameters:    Size  Location     Type
 30363 ;;		None
 30364 ;; Auto vars:     Size  Location     Type
 30365 ;;		None
 30366 ;; Return value:  Size  Location     Type
 30367 ;;		None               void
 30368 ;; Registers used:
 30369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30370 ;; Tracked objects:
 30371 ;;		On entry : 0/0
 30372 ;;		On exit  : 0/0
 30373 ;;		Unchanged: 0/0
 30374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30379 ;;Total ram usage:        1 bytes
 30380 ;; Hardware stack levels used:    1
 30381 ;; Hardware stack levels required when called:    1
 30382 ;; This function calls:
 30383 ;;		_setDimmerReClock
 30384 ;; This function is called by:
 30385 ;;		_ISR
 30386 ;; This function uses a non-reentrant model
 30387 ;;
 30388                           psect	text3382
 30389                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30390                           	line	214
 30391                           	global	__size_of_IOC_ISR
 30392  0034                     	__size_of_IOC_ISR	equ	__end_of_IOC_ISR-_IOC_ISR
 30393                           	
 30394  25CA                     _IOC_ISR:	
 30395                           	opt	stack 3
 30396                           ; Regs used in _IOC_ISR: [wreg+fsr1l-status,0+pclath+cstack]
 30397                           	line	215
 30398                           	
 30399  25CA                     i1l22641:	
 30400                           ;MCU_16f1518_B1.c: 215: if(IOCIE && IOCIF && IOCBF2)
 30401  25CA  1D8B               	btfss	(91/8),(91)&7
 30402  25CB  2DCD               	goto	u541_21
 30403  25CC  2DCE               	goto	u541_20
 30404  25CD                     u541_21:
 30405  25CD  2DFD               	goto	i1l8349
 30406  25CE                     u541_20:
 30407                           	
 30408  25CE                     i1l22643:	
 30409  25CE  1C0B               	btfss	(88/8),(88)&7
 30410  25CF  2DD1               	goto	u542_21
 30411  25D0  2DD2               	goto	u542_20
 30412  25D1                     u542_21:
 30413  25D1  2DFD               	goto	i1l8349
 30414  25D2                     u542_20:
 30415                           	
 30416  25D2                     i1l22645:	
 30417  25D2  0027               	movlb 7	; select bank7
 30418  25D3  1D16               	btfss	(7346/8)^0380h,(7346)&7
 30419  25D4  2DD6               	goto	u543_21
 30420  25D5  2DD7               	goto	u543_20
 30421  25D6                     u543_21:
 30422  25D6  2DFD               	goto	i1l8349
 30423  25D7                     u543_20:
 30424                           	line	217
 30425                           	
 30426  25D7                     i1l22647:	
 30427                           ;MCU_16f1518_B1.c: 216: {
 30428                           ;MCU_16f1518_B1.c: 217: IOCBF2=0;
 30429  25D7  1116               	bcf	(7346/8)^0380h,(7346)&7
 30430                           	line	218
 30431                           ;MCU_16f1518_B1.c: 218: IOCIF=0;
 30432  25D8  100B               	bcf	(88/8),(88)&7
 30433                           	line	219
 30434                           	
 30435  25D9                     i1l22649:	
 30436                           ;MCU_16f1518_B1.c: 219: if(TMain->PowerON == 1)
 30437  25D9  0021               	movlb 1	; select bank1
 30438  25DA  086E               	movf	(_TMain)^080h,w
 30439  25DB  0086               	movwf	fsr1l
 30440  25DC  3001               	movlw 1	; select bank2/3
 30441  25DD  0087               	movwf fsr1h	
 30442                           	
 30443  25DE  1C01               	btfss	indf1,0
 30444  25DF  2DE1               	goto	u544_21
 30445  25E0  2DE2               	goto	u544_20
 30446  25E1                     u544_21:
 30447  25E1  2DFD               	goto	i1l8349
 30448  25E2                     u544_20:
 30449                           	line	222
 30450                           	
 30451  25E2                     i1l22651:	
 30452                           ;MCU_16f1518_B1.c: 220: {
 30453                           ;MCU_16f1518_B1.c: 222: setDimmerReClock();
 30454  25E2  31AE  26E8  31A5   	fcall	_setDimmerReClock
 30455                           	line	223
 30456                           	
 30457  25E5                     i1l22653:	
 30458                           ;MCU_16f1518_B1.c: 223: if(RB2)
 30459  25E5  0020               	movlb 0	; select bank0
 30460  25E6  1D0D               	btfss	(106/8),(106)&7
 30461  25E7  2DE9               	goto	u545_21
 30462  25E8  2DEA               	goto	u545_20
 30463  25E9                     u545_21:
 30464  25E9  2DF1               	goto	i1l22657
 30465  25EA                     u545_20:
 30466                           	line	225
 30467                           	
 30468  25EA                     i1l22655:	
 30469                           ;MCU_16f1518_B1.c: 224: {
 30470                           ;MCU_16f1518_B1.c: 225: Dimmer->Correction=0;
 30471  25EA  0021               	movlb 1	; select bank1
 30472  25EB  083A               	movf	(_Dimmer)^080h,w
 30473  25EC  3E02               	addlw	02h
 30474  25ED  0086               	movwf	fsr1l
 30475  25EE  0187               	clrf fsr1h	
 30476                           	
 30477  25EF  0181               	clrf	indf1
 30478                           	line	226
 30479                           ;MCU_16f1518_B1.c: 226: }
 30480  25F0  2DFD               	goto	i1l8349
 30481                           	line	227
 30482                           	
 30483  25F1                     i1l8347:	
 30484                           	line	229
 30485                           	
 30486  25F1                     i1l22657:	
 30487                           ;MCU_16f1518_B1.c: 227: else
 30488                           ;MCU_16f1518_B1.c: 228: {
 30489                           ;MCU_16f1518_B1.c: 229: Dimmer->Correction=14;
 30490  25F1  300E               	movlw	(0Eh)
 30491  25F2  00F0               	movwf	(??_IOC_ISR+0)+0
 30492  25F3  0021               	movlb 1	; select bank1
 30493  25F4  083A               	movf	(_Dimmer)^080h,w
 30494  25F5  3E02               	addlw	02h
 30495  25F6  0086               	movwf	fsr1l
 30496  25F7  0187               	clrf fsr1h	
 30497                           	
 30498  25F8  0870               	movf	(??_IOC_ISR+0)+0,w
 30499  25F9  0081               	movwf	indf1
 30500  25FA  2DFD               	goto	i1l8349
 30501                           	line	230
 30502                           	
 30503  25FB                     i1l8348:	
 30504  25FB  2DFD               	goto	i1l8349
 30505                           	line	232
 30506                           	
 30507  25FC                     i1l8346:	
 30508  25FC  2DFD               	goto	i1l8349
 30509                           	line	233
 30510                           	
 30511  25FD                     i1l8345:	
 30512                           	line	234
 30513                           	
 30514  25FD                     i1l8349:	
 30515  25FD  0008               	return
 30516                           	opt stack 0
 30517                           GLOBAL	__end_of_IOC_ISR
 30518  25FE                     	__end_of_IOC_ISR:
 30519 ;; =============== function _IOC_ISR ends ============
 30520                           
 30521                           	signat	_IOC_ISR,88
 30522                           	global	i1_RfPointSelect
 30523                           psect	text3383,local,class=CODE,delta=2
 30524                           global __ptext3383
 30525  2F90                     __ptext3383:
 30526                           
 30527 ;; *************** function i1_RfPointSelect *****************
 30528 ;; Defined at:
 30529 ;;		line 8 in file "G:\Program\PIC\Source_File\RF_Control_B1.c"
 30530 ;; Parameters:    Size  Location     Type
 30531 ;;  RfPointSelec    1    wreg     unsigned char 
 30532 ;; Auto vars:     Size  Location     Type
 30533 ;;  RfPointSelec    1    1[COMMON] unsigned char 
 30534 ;; Return value:  Size  Location     Type
 30535 ;;		None               void
 30536 ;; Registers used:
 30537 ;;		wreg
 30538 ;; Tracked objects:
 30539 ;;		On entry : 0/0
 30540 ;;		On exit  : 0/0
 30541 ;;		Unchanged: 0/0
 30542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30544 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30547 ;;Total ram usage:        2 bytes
 30548 ;; Hardware stack levels used:    1
 30549 ;; This function calls:
 30550 ;;		Nothing
 30551 ;; This function is called by:
 30552 ;;		_setRF_ReceiveGO
 30553 ;; This function uses a non-reentrant model
 30554 ;;
 30555                           psect	text3383
 30556                           	file	"G:\Program\PIC\Source_File\RF_Control_B1.c"
 30557                           	line	8
 30558                           	global	__size_ofi1_RfPointSelect
 30559  000E                     	__size_ofi1_RfPointSelect	equ	__end_ofi1_RfPointSelect-i1_RfPointSelect
 30560                           	
 30561  2F90                     i1_RfPointSelect:	
 30562                           	opt	stack 2
 30563                           ; Regs used in i1_RfPointSelect: [wreg]
 30564                           ;i1RfPointSelect@rf stored from wreg
 30565                           	line	10
 30566  2F90  00F1               	movwf	(i1RfPointSelect@rf)
 30567                           	
 30568  2F91                     i1l23113:	
 30569                           ;RF_Control_B1.c: 10: if(rf == 1)
 30570  2F91  0871               	movf	(i1RfPointSelect@rf),w
 30571  2F92  3A01               	xorlw	01h&0ffh
 30572  2F93  1D03               	skipz
 30573  2F94  2F96               	goto	u640_21
 30574  2F95  2F97               	goto	u640_20
 30575  2F96                     u640_21:
 30576  2F96  2F9D               	goto	i1l13105
 30577  2F97                     u640_20:
 30578                           	line	12
 30579                           	
 30580  2F97                     i1l23115:	
 30581                           ;RF_Control_B1.c: 11: {
 30582                           ;RF_Control_B1.c: 12: RF=&RF1;
 30583  2F97  30EA               	movlw	(_RF1)&0ffh
 30584  2F98  00F0               	movwf	(??i1_RfPointSelect+0)+0
 30585  2F99  0870               	movf	(??i1_RfPointSelect+0)+0,w
 30586  2F9A  0021               	movlb 1	; select bank1
 30587  2F9B  00BE               	movwf	(_RF)^080h
 30588  2F9C  2F9D               	goto	i1l13105
 30589                           	line	13
 30590                           	
 30591  2F9D                     i1l13104:	
 30592                           	line	15
 30593                           	
 30594  2F9D                     i1l13105:	
 30595  2F9D  0008               	return
 30596                           	opt stack 0
 30597                           GLOBAL	__end_ofi1_RfPointSelect
 30598  2F9E                     	__end_ofi1_RfPointSelect:
 30599 ;; =============== function i1_RfPointSelect ends ============
 30600                           
 30601                           	signat	i1_RfPointSelect,88
 30602                           	global	i1_LoadPointSelect
 30603                           psect	text3384,local,class=CODE,delta=2
 30604                           global __ptext3384
 30605  2F82                     __ptext3384:
 30606                           
 30607 ;; *************** function i1_LoadPointSelect *****************
 30608 ;; Defined at:
 30609 ;;		line 8 in file "G:\Program\PIC\Source_File\OverLoad_B1.c"
 30610 ;; Parameters:    Size  Location     Type
 30611 ;;  LoadPointSel    1    wreg     unsigned char 
 30612 ;; Auto vars:     Size  Location     Type
 30613 ;;  LoadPointSel    1    1[COMMON] unsigned char 
 30614 ;; Return value:  Size  Location     Type
 30615 ;;		None               void
 30616 ;; Registers used:
 30617 ;;		wreg
 30618 ;; Tracked objects:
 30619 ;;		On entry : 0/0
 30620 ;;		On exit  : 0/0
 30621 ;;		Unchanged: 0/0
 30622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30627 ;;Total ram usage:        2 bytes
 30628 ;; Hardware stack levels used:    1
 30629 ;; This function calls:
 30630 ;;		Nothing
 30631 ;; This function is called by:
 30632 ;;		i1_setLoad_StatusOff
 30633 ;; This function uses a non-reentrant model
 30634 ;;
 30635                           psect	text3384
 30636                           	file	"G:\Program\PIC\Source_File\OverLoad_B1.c"
 30637                           	line	8
 30638                           	global	__size_ofi1_LoadPointSelect
 30639  000E                     	__size_ofi1_LoadPointSelect	equ	__end_ofi1_LoadPointSelect-i1_LoadPointSelect
 30640                           	
 30641  2F82                     i1_LoadPointSelect:	
 30642                           	opt	stack 2
 30643                           ; Regs used in i1_LoadPointSelect: [wreg]
 30644                           ;i1LoadPointSelect@load stored from wreg
 30645                           	line	10
 30646  2F82  00F1               	movwf	(i1LoadPointSelect@load)
 30647                           	
 30648  2F83                     i1l23093:	
 30649                           ;OverLoad_B1.c: 10: if(load == 1)
 30650  2F83  0871               	movf	(i1LoadPointSelect@load),w
 30651  2F84  3A01               	xorlw	01h&0ffh
 30652  2F85  1D03               	skipz
 30653  2F86  2F88               	goto	u636_21
 30654  2F87  2F89               	goto	u636_20
 30655  2F88                     u636_21:
 30656  2F88  2F8F               	goto	i1l9523
 30657  2F89                     u636_20:
 30658                           	line	12
 30659                           	
 30660  2F89                     i1l23095:	
 30661                           ;OverLoad_B1.c: 11: {
 30662                           ;OverLoad_B1.c: 12: Load=&Load1;
 30663  2F89  3020               	movlw	(_Load1)&0ffh
 30664  2F8A  00F0               	movwf	(??i1_LoadPointSelect+0)+0
 30665  2F8B  0870               	movf	(??i1_LoadPointSelect+0)+0,w
 30666  2F8C  0020               	movlb 0	; select bank0
 30667  2F8D  00EE               	movwf	(_Load)
 30668  2F8E  2F8F               	goto	i1l9523
 30669                           	line	13
 30670                           	
 30671  2F8F                     i1l9522:	
 30672                           	line	15
 30673                           	
 30674  2F8F                     i1l9523:	
 30675  2F8F  0008               	return
 30676                           	opt stack 0
 30677                           GLOBAL	__end_ofi1_LoadPointSelect
 30678  2F90                     	__end_ofi1_LoadPointSelect:
 30679 ;; =============== function i1_LoadPointSelect ends ============
 30680                           
 30681                           	signat	i1_LoadPointSelect,88
 30682                           	global	_setDimmerReClock
 30683                           psect	text3385,local,class=CODE,delta=2
 30684                           global __ptext3385
 30685  2EE8                     __ptext3385:
 30686                           
 30687 ;; *************** function _setDimmerReClock *****************
 30688 ;; Defined at:
 30689 ;;		line 116 in file "G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30690 ;; Parameters:    Size  Location     Type
 30691 ;;		None
 30692 ;; Auto vars:     Size  Location     Type
 30693 ;;		None
 30694 ;; Return value:  Size  Location     Type
 30695 ;;		None               void
 30696 ;; Registers used:
 30697 ;;		wreg, fsr1l, fsr1h
 30698 ;; Tracked objects:
 30699 ;;		On entry : 0/0
 30700 ;;		On exit  : 0/0
 30701 ;;		Unchanged: 0/0
 30702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12
 30703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0
 30707 ;;Total ram usage:        0 bytes
 30708 ;; Hardware stack levels used:    1
 30709 ;; This function calls:
 30710 ;;		Nothing
 30711 ;; This function is called by:
 30712 ;;		_IOC_ISR
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           psect	text3385
 30716                           	file	"G:\Program\PIC\Source_File\MCU_16f1518_B1.c"
 30717                           	line	116
 30718                           	global	__size_of_setDimmerReClock
 30719  0009                     	__size_of_setDimmerReClock	equ	__end_of_setDimmerReClock-_setDimmerReClock
 30720                           	
 30721  2EE8                     _setDimmerReClock:	
 30722                           	opt	stack 3
 30723                           ; Regs used in _setDimmerReClock: [wregfsr1]
 30724                           	line	117
 30725                           	
 30726  2EE8                     i1l22759:	
 30727                           ;MCU_16f1518_B1.c: 117: TMR0=255;
 30728  2EE8  30FF               	movlw	(0FFh)
 30729  2EE9  0020               	movlb 0	; select bank0
 30730  2EEA  0095               	movwf	(21)	;volatile
 30731                           	line	120
 30732                           	
 30733  2EEB                     i1l22761:	
 30734                           ;MCU_16f1518_B1.c: 120: DimmerLights11->GO=1;
 30735  2EEB  087B               	movf	(_DimmerLights11),w
 30736  2EEC  0086               	movwf	fsr1l
 30737  2EED  3001               	movlw 1	; select bank2/3
 30738  2EEE  0087               	movwf fsr1h	
 30739                           	
 30740  2EEF  1401               	bsf	indf1,0
 30741                           	line	130
 30742                           	
 30743  2EF0                     i1l8329:	
 30744  2EF0  0008               	return
 30745                           	opt stack 0
 30746                           GLOBAL	__end_of_setDimmerReClock
 30747  2EF1                     	__end_of_setDimmerReClock:
 30748 ;; =============== function _setDimmerReClock ends ============
 30749                           
 30750                           	signat	_setDimmerReClock,88
 30751                           psect	text3386,local,class=CODE,delta=2
 30752                           global __ptext3386
 30753  0000                     __ptext3386:
 30754                           	global	btemp
 30755  007E                     	btemp set 07Eh
 30756                           
 30757                           	DABS	1,126,2	;btemp
 30758                           	global	wtemp0
 30759  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Aug 28 11:06:24 2014

                   __size_of_Switch_Main 0005                    ?_Flash_Memory_Erasing 0070  
             __size_ofi1_LoadPointSelect 000E                       getPowerFault_AD@pf 002C  
           ??_setDimmerLights_TriggerAdj 0023                        ??_TempPointSelect 0020  
                                     _PF 00BD                                       _RD 0CA8  
                                     _RF 00BE                  __end_of_CC2500_WriteREG 22E8  
                                     _WR 0CA9                             ___awdiv@sign 0026  
                                     _Sw 006F       __end_of_getDimmerLights_StatusFlag 23C2  
             _getDimmerLights_StatusFlag 239B                      ___wmul@multiplicand 0022  
                 __end_of_setDelayOff_GO 19D6                             ___ftadd@exp1 0058  
                           ___ftadd@exp2 0057                setDimmerLights_Adj@lights 0053  
              __end_of_setLoad_StatusOff 26D9                     _setDimmerLights_Main 175B  
                           ___ftadd@sign 0056                     _setDimmerLights_Open 2163  
                                    _GIE 005F                                      _CRC 00B8  
                                    _RA0 0060                                      _RB0 0068  
   __size_of_DimmerLights_Initialization 000A                                      _RB1 0069  
                                    _RA3 0063                                      _PF1 00C7  
                                    _RC0 0070                                      _RB2 006A  
                                    _RA4 0064                                      _LED 00BC  
                                    _RC1 0071                                      _RB3 006B  
                                    _RC2 0072                                      _RB4 006C  
                                    _RA6 0066                                      _RB5 006D  
                                    _RA7 0067                                      _RC4 0074  
                                    _RC5 0075                                      _RC7 0077  
                                    _RF1 00EA                                      _ISR 0004  
                                    _Sw1 0154                                      _Buz 00B7  
              setDimmerLights_Adj@status 0050                 __end_of_CC2500_WriteByte 239B  
         ??_setDimmerLights_TriggerERROR 0023                    _Buzzer_Initialization 2EA2  
                        __end_of_ADC_Set 2ED9                          ?_DelayTimejudge 0070  
                                    wreg 0009     setDimmerLights_Initialization@lights 0061  
                        _setDimmerLights 16B8                    _setDimmerLights_ERROR 1C0E  
                  _setDimmerLights_AdjRF 232C                    _setDimmerLights_AdjGo 2196  
                        ?_BuzPointSelect 0070                  ??_PowerFaultPointSelect 0020  
                __size_of_setTemp_Enable 0010                                     ?_ISR 0070  
                         setSw_Enable@sw 0023                    _setDimmerLights_Close 2174  
                        _PowerFault_Main 2EBB                             ___ftdiv@cntr 0046  
                        __end_of_IOC_ISR 25FE                             ___ftdiv@sign 004B  
                                   l1110 2E7E                                     l1103 2015  
                                   l1104 2015                                     l1120 1668  
                                   l1113 2140                                     l1121 1667  
                                   l1130 0D68                                     l1122 16B6  
                                   l1131 0D67                                     l1123 168E  
                                   l1107 2EA6                                     l1140 0D5D  
                                   l1132 0D4E                                     l1124 16B5  
                                   l1116 2F0B                                     l1133 0D45  
                                   l1141 0D68                                     l1125 16B4  
                                   l1134 0D06                                     l1126 16B7  
                                   l1135 0D44                                     l1119 16B7  
                                   l1136 0D3C                                     l1137 0D43  
                                   l1129 0C83                                     l1138 0D4D  
                                   l1139 0D66                                     l2301 268F  
                                   l2302 268F                                     l2310 2544  
                                   l2303 2695                                     l2311 2568  
                                   l2304 2699                                     l2312 2568  
                                   l2320 2E83                                     l2305 2699  
                                   l2306 269E                 ?_DimmerLightsPointSelect 0070  
                                   l2307 26A0                                     l2315 23CC  
                                   l2323 2E88                                     l2332 237F  
                                   l2340 24B3                                     l2316 23E8  
                                   l2333 239A                                     l2341 249F  
                                   l2317 23E8                                     l2334 2387  
                                   l2342 24A6                                     l2270 1B72  
                                   l2326 2F5A                                     l2335 2389  
                                   l2343 24B3                                     l2271 1B94  
                                   l2336 239A                                     l2360 224C  
                                   l2280 1BB7                                     l2272 1B82  
                                   l2361 2251                                     l2273 1B9C  
                                   l2329 2E8D                                     l2370 25BE  
                                   l2346 22D3                                     l2274 1BA2  
                                   l2290 1101                                     l2339 2493  
                                   l2371 259F                                     l2347 22D3  
                                   l2275 1BA2                                     l2291 1123  
                                   l2283 10EA                                     l2372 25AC  
                                   l2364 22F2                                     l2348 22D9  
                                   l2276 1BA8                                     l2268 1B6C  
                                   l2292 1111                                     l2284 10E4  
                                   l2373 25BA                          __end_of_IOC_Set 2F36  
                                   l2365 22F2                                     l2349 22E7  
                                   l2277 1BA9                                     l2269 1B6C  
                                   l2293 112C                                     l2285 10E4  
                                   l3501 2EAB                                     l2374 25C9  
                                   l2358 2246                                     l2366 22F8  
                                   l2278 1BA9                                     l2294 1149  
                                   l2286 10E9                                     l3510 14EC  
                                   l2375 25C9                                     l2359 2246  
                                   l2367 2307                                     l2279 1BAE  
                                   l2295 1158                                     l2287 114A  
                                   l3520 1A34                                     l3504 2F41  
                                   l2288 10FB                                     l3521 1A6F  
                                   l3513 19D5                                     l2289 10FB  
                                   l3530 1A6B                                     l3522 1A3F  
                                   l3514 19B6                                     l2298 227D  
                                   l3531 1A71                                     l3523 1A6F  
                                   l3515 19C6                                     l3507 14EC  
                                   l3524 1A4A                                     l3516 19C5  
                                   l3508 14EB                                     l3525 1A6E  
                                   l3517 19D5                                     l3509 14EA  
                                   l3526 1A55                                     l3527 1A6D  
                                   l3528 1A60                                     l3529 1A6C  
                                   l4701 2EE7                                     l3494 2024  
                                   l4710 17FE                                     l3495 2024  
                                   l4711 17FD                                     l4800 2033  
                                   l4720 23BF                                     l4712 17F5  
                                   l4704 17BA                                     l4721 23C1  
                                   l4713 17FC                                     l4705 17B9  
                                   l3498 2E92                                     l4706 179F  
                                   l4714 17FF                                     l4803 20CF  
                                   l4731 117C                                     l4707 179E  
                                   l4812 20AF                                     l4724 242E  
                                   l4732 1177                                     l4708 17B8  
                                   l4717 23B8                                     l4725 2417  
                                   l4821 2060                                     l4741 1C68  
                                   l4733 11AB                                     l4709 17FF  
                                   l7141 1515                                     l7150 2267  
                                   l4718 23A2                                     l4726 242A  
                                   l4806 20DF                                     l4750 175A  
                                   l4742 1C68                                     l4734 119C  
                                   l7142 153A                                     l4719 23B4  
                                   l4727 2435                                     l4815 2FE3  
                                   l4751 175A                                     l4735 11AB  
                                   l7143 1574                                     l4824 21C9  
                                   l4728 2437                                     l4736 11AA  
                                   l7144 1573                                     l4745 27BF  
                                   l4809 20EF                                     l4737 11D7  
                                   l7153 1066                                     l7145 1575  
                                   l4818 2FF1                                     l4754 1E58  
                                   l4738 11D7                                     l4690 2F29  
                                   l7154 1065                                     l7146 1576  
                                   l4755 1EAB                                     l4763 234F  
                                   l7155 1067                                     l7147 1576  
                                   l4772 21A6                                     l4748 172E  
                                   l4756 1EAA                                     l7156 1067  
                                   l4781 2173                                     l4749 172D  
                                   l4693 27FF                                     l4757 1EAB  
                                   l4686 2FB9                                     l4687 2FB9  
                                   l4775 2151                                     l4696 240F  
                                   l4769 2162                                     l4793 1CC5  
                                   l4697 240E                                     l5930 24DE  
                                   l4778 21B7                                     l4698 240F  
                                   l5931 24CF                                     l4787 2184  
                                   l5932 24DD                                     l8332 2E74  
                                   l4796 198C                                     l5940 2F67  
                                   l5933 24DC                                     l5934 24DE  
                                   l8342 2F35                                     l5950 1402  
                                   l4799 2033                                     l5951 1401  
                                   l5943 21ED                                     l8352 2ED8  
                                   l5952 1463                                     l5960 1454  
                                   l5929 24C2                                     l5961 1441  
                                   l5953 1425                                     l5937 2F81  
                                   l5962 1453                                     l5954 1412  
                                   l5946 1404                                     l8370 0965  
                                   l8339 2F15                                     l8355 2313  
                                   l5963 1449                                     l5955 1424  
                                   l5947 13F1                                     l5971 1B63  
                                   l8356 2313                                     l5964 1452  
                                   l5956 141A                                     l5948 1403  
                                   l5972 1B62                                     l8380 2F02  
                                   l8357 2318                                     l5965 1451  
                                   l5957 1423                                     l5949 13F9  
                                   l5973 1B4D                                     l8285 22AF  
                                   l8373 1B10                                     l8294 223C  
                                   l8358 232B                                     l5966 1461  
                                   l5958 1422                                     l5974 1B61  
                                   l8374 1B07                                     l8383 22C9  
                                   l5959 1462                                     l5967 1460  
                                   l5975 1B56                                     l8391 2F74  
                                   l8367 091B                                     l8375 1B06  
                                   l8288 2296                                     l5968 1463  
                                   l5976 1B60                                     l8368 091A  
                                   l8376 1B0F                                     l9601 2195  
                                   l5977 1B5F                                     l8369 0965  
                                   l8377 1B10                                     l9522 2FC7  
                                   l5978 1B63                                     l9610 21DB  
                                   l8386 2723                                     l8394 1365  
                                   l9523 2FC7                                     l8387 2741  
                                   l8395 1381                                     l9604 26BE  
                                   l9540 0B55                                     l9532 1877  
                                   l8388 2748                                     l8396 13D4  
                                   l9605 26CB                                     l9541 0B97  
                                   l8397 13DC                                     l9606 26D8  
                                   l9542 0B8C                                     l9526 2E9C  
                                   l9550 02A9                                     l9607 26D8  
                                   l9535 0B99                                     l9543 0B99  
                                   l9551 02A3                                     l9616 2573  
                                   l9536 0B02                                     l9560 02A1  
                                   l9552 01A3                                     l9617 2598  
                                   l9537 0B47                                     l9561 0209  
                                   l9553 0168                                     l9529 2EBA  
                                   l9618 2598                                     l9538 0B3C  
                                   l9570 0326                                     l9562 0260  
                                   l9554 01A2                                     l9546 0053  
                                   l9539 0B98                                     l9563 0253  
                                   l9555 0188                                     l9547 0052  
                                   l9571 0329                                     l9548 0329  
                                   l9564 02A0                                     l9556 01A1  
                                   l9565 0328                                     l9549 02AA  
                                   l9557 01E2                                     l9574 10A6  
                                   l9566 02E0                                     l9558 01E1  
                                   l9575 10DC                                     l9567 02C6  
                                   l9559 02A2                                     l9592 2227  
                                   l9576 10DB                                     l9568 02DF  
                                   l9577 10DC                                     l9569 0327  
                                   _CFGS 0CAE                                     l9586 26F0  
                                   l9587 2700                                     l9595 07FF  
                                   l9588 2710                                     l9589 2710  
                                   l9598 20BF                                     _FREE 0CAC  
                                   _LATA 010C                                     _LATB 010D  
                        __end_of_INT_ISR 2201                                     _LATC 010E  
                                   u5200 2491                                     u5201 2490  
                  _setBuz_Initialization 2F03                                     u5210 249C  
                                   u6010 1FB3                                     u5211 249B  
                                   u6011 1FB2                                     u5220 24B2  
                                   u5300 1A2F                                     u6100 159E  
                                   u5221 24B1                                     u5301 1A2E  
                                   u6005 1FA7                                     u5230 25AA  
                                   u5310 1A3A                                     u6030 1FCF  
                                   u6110 15B8                                     u5231 25A9  
                                   u5311 1A39                                     u6031 1FCE  
                                   u6111 15B7                                     u5160 200F  
                                   u5240 25B9                                     u5320 1A45  
                                   u5400 24D6                                     u6120 15BF  
                                   u6200 1EB2                                     u7000 0B75  
                                   u5161 200E                                     u5241 25B8  
                                   u5321 1A44                                     u5401 24D5  
                                   u6025 1FC4                                     u6121 15BE  
                                   u6105 159B                                     u6201 1EB1  
                                   u7001 0B74                                     u5170 237D  
                                   u5250 25C8                                     u5330 1A50  
                                   u6050 1FDE                                     u6210 1EBF  
                                   u7010 0B96                                     u5171 237C  
                                   u5251 25C7                                     u5331 1A4F  
                                   u6051 1FDD                                     u6211 1EBE  
                                   u7011 0B95                                     _PEIE 005E  
                                   u5180 2384                                     u5340 1A5B  
                                   u6060 1FE2                                     u6140 15D9  
                                   u6220 1ED1                                     u7020 12E7  
                                   u7100 0DA3                                     u5181 2383  
                                   u5341 1A5A                                     u6061 1FE1  
                                   u6045 1FD4                                     u6141 15D8  
                                   u6221 1ED0                                     u7005 0B71  
                                   u7021 12E6                                     _INTE 005C  
                                   u5190 2399                                     u5270 201E  
                                   u5350 1A66                                     u6070 1FF2  
                                   u6150 15E1                                     u7030 1316  
                                   u7110 0DA9                                     _INTF 0059  
                                   u5191 2398                                     u5255 25C4  
                                   u5271 201D                                     u5351 1A65  
                                   u6151 15E0                                     u6135 15CB  
                                   u7031 1315                                     u7111 0DA8  
                                   u5280 1D2E                                     u5360 2FB4  
                                   u6080 1FFE                                     u6240 1EE3  
                                   u7040 1345                                     u7200 0E01  
                                   u7120 0DB3                                     u8000 0529  
                                   u5361 2FB3                                     u6241 1EE2  
                                   u7041 1344                                     u7201 0E00  
                                   u7121 0DB2                                     u8001 0528  
                                   u5290 1D60                                     u5370 202D  
                                   u6170 15FB                                     u6090 158A  
                                   u6410 0C71                                     u7050 1BC6  
                                   u7210 0E09                                     u7130 0DBC  
                                   u8010 052D                                     u5371 202C  
                                   u6075 1FEF                                     u6171 15FA  
                                   u6091 1589                                     u6235 1ED6  
                                   u6411 0C70                                     u7035 1312  
                                   u7051 1BC5                                     u7211 0E08  
                                   u7131 0DBB                                     u8011 052C  
                                   u5380 24BC                                     u5700 2F14  
                                   u6180 1601                                     u6260 1EF4  
                                   u6420 0C8C                                     u6500 1643  
                                   u7060 1BF7                                     u7140 0DC1  
                                   u7300 0978                                     u8100 05D6  
                                   u8020 0531                                     u5285 1D2C  
                                   u5381 24BB                                     u5701 2F12  
                                   u6165 15ED                                     u6261 1EF3  
                                   u6421 0C8B                                     u6501 1642  
                                   u7045 1341                                     u7061 1BF6  
                                   u7141 0DC0                                     u7301 0977  
                                   u8101 05D5                                     u8021 0530  
                                   u5390 24C9                                     u6430 0CB5  
                                   u6510 1665                                     u7230 0E18  
                                   u7150 0DD6                                     u7070 0D86  
                                   u7310 0991                                     u8110 05F5  
                                   u8030 0543                                     u5391 24C8  
                                   u6255 1EE6                                     u6431 0CB4  
                                   u6511 1664                                     u7231 0E17  
                                   u7151 0DD5                                     u7311 0990  
                                   u8111 05F4                                     u8031 0542  
                                   u5720 2317                                     u5800 2EF8  
                                   u6280 1F05                                     u6440 0CC7  
                                   u6520 1671                                     u6600 1A87  
                                   u7240 0E20                                     u7080 0D8C  
                                   u7320 09AE                                     u7400 0BDC  
                                   u8120 060E                                     u8040 054B  
                                   u8200 17C4                                     u9000 0A3A  
                                   u5721 2316                                     u5801 2EF7  
                                   u6281 1F04                                     u6265 1EF0  
                                   u6441 0CC6                                     u6521 1670  
                                   u6601 1A86                                     u7065 1BF3  
                                   u7241 0E1F                                     u7225 0E0B  
                                   u7081 0D8B                                     u8121 060D  
                                   u8041 054A                                     u8201 17C3  
                                   u9001 0A39                                     u5714 2F15  
                                   u5730 2FC2                                     u5810 2FD0  
                                   u6290 1F0B                                     u6450 0CD1  
                                   u6530 1697                                     u6610 1AA2  
                                   u7170 0DE5                                     u7090 0D96  
                                   u7330 09BE                                     u7410 0BEC  
                                   u8130 062A                                     u8050 0553  
                                   u8210 17CC                                     u9010 0A3E  
                                   u5731 2FC1                                     u5811 2FCF  
                                   u6275 1EFB                                     u6451 0CD0  
                                   u6435 0CB1                                     u6531 1696  
                                   u6611 1AA1                                     u7171 0DE4  
                                   u7091 0D95                                     u8131 0629  
                                   u8051 0552                                     u8211 17CB  
                                   u9011 0A3D                                     u5740 2571  
                                   u5900 236C                                     u6460 0CD9  
                                   u6540 224B                                     u6620 1ABD  
                                   u6700 26B7                                     u7260 0E34  
                                   u7180 0DED                                     u7420 0C0D  
                                   u7500 243E                                     u8140 064C  
                                   u8060 0567                                     u8220 17E1  
                                   u8300 1DEC                                     u9020 0A47  
                                   u9100 1543                                     u5741 2570  
                                   u5901 236B                                     u6461 0CD8  
                                   u6541 224A                                     u6621 1ABC  
                                   u6701 26B6                                     u7261 0E33  
                                   u7181 0DEC                                     u7165 0DD8  
                                   u7325 09AB                                     u7421 0C0C  
                                   u7405 0BD9                                     u7501 243D  
                                   u8141 064B                                     u8061 0566  
                                   u8221 17E0                                     u9021 0A46  
                                   u9101 1542                                     u5750 2597  
                                   u5910 1907                                     u6470 0D0F  
                                   u6550 22F7                                     u6630 199B  
                                   u6710 26C4                                     u7270 0E3A  
                                   u7350 09EF                                     u7510 1B71  
                                   u8150 0660                                     u8070 0581  
                                   u8230 1009                                     u8310 1E17  
                                   u9030 0A5D                                     u9110 1554  
                                   u5751 2596                                     u5911 1906  
                                   u6471 0D0E                                     u6551 22F6  
                                   u6631 199A                                     u6711 26C3  
                                   u7271 0E39                                     u7255 0E24  
                                   u7351 09EE                                     u7335 09BB  
                                   u7415 0BE9                                     u7511 1B70  
                                   u8151 065F                                     u8071 0580  
                                   u8231 1008                                     u8311 1E16  
                                   u9031 0A5C                                     u9111 1553  
                                   u6480 0D5B                                     u6560 2694  
                                   u6640 19A7                                     u6720 26D1  
                                   u6800 1420                                     u7280 0E4F  
                                   u7520 1B9C                                     u7600 1147  
                                   u8080 059D                                     u8160 1771  
                                   u8240 1022                                     u8320 1D8E  
                                   u8400 015F                                     u9040 0A6A  
                                   u6481 0D5A                                     u6561 2693  
                                   u6721 26D0                                     u6801 141F  
                                   u7281 0E4E                                     u7345 09DC  
                                   u7521 1B9B                                     u7601 1146  
                                   u8081 059C                                     u8161 1770  
                                   u8241 1021                                     u8321 1D8D  
                                   u8401 015E                                     u9041 0A69  
                                   u5930 1919                                     u6490 163B  
                                   u6570 269E                                     u6650 19BB  
                                   u6810 142B                                     u6730 13E9  
                                   u7290 0E6B                                     u7370 0A03  
                                   u7450 0C26                                     u7530 1BA7  
                                   u7610 2542                                     u8090 05BA  
                                   u8170 1775                                     u8250 1ACB  
                                   u8330 2752                                     u8410 0173  
                                   u9050 0A7E                                     u5931 1918  
                                   u6491 163A                                     u6571 269D  
                                   u6651 19BA                                     u6811 142A  
                                   u6731 13E8                                     u7291 0E6A  
                                   u7195 0DF1                                     u7371 0A02  
                                   u7355 09EB                                     u7451 0C25  
                                   u7435 0C15                                     u7531 1BA6  
                                   u7611 2541                                     u8091 05B9  
                                   u8251 1ACA                                     u8331 2751  
                                   u8411 0172                                     u9051 0A7D  
                                   u5780 203C                                     u6580 22D8  
                                   u6660 23B0                                     u6820 143F  
                                   u6740 13EF                                     u6900 1B3A  
                                   u7460 0C30                                     u7380 0BAC  
                                   u7540 1BAD                                     u7620 2567  
                                   u7700 16CD                                     u8180 177E  
                                   u8260 1AD4                                     u8500 02B3  
                                   u8420 017E                                     u8340 0027  
                                   u9060 0A8A                                     u5781 203B  
                                   u5925 190C                                     u6581 22D7  
                                   u6661 23AF                                     u6821 143E  
                                   u6741 13EE                                     u6901 1B39  
                                   u7365 09F8                                     u7461 0C2F  
                                   u7445 0C1B                                     u7381 0BAB  
                                   u7541 1BAC                                     u7621 2566  
                                   u8181 177D                                     u8245 101E  
                                   u8261 1AD3                                     u8501 02B2  
                                   u8421 017D                                     u8341 0026  
                                   u9061 0A89                                     u5790 204B  
                                   u5870 2358                                     u5950 192A  
                                   u6590 1A80                                     u6670 23BE  
                                   u6830 1447                                     u6750 13F7  
                                   u6910 1B4A                                     u7390 0BC5  
                                   u7550 10E2                                     u7630 23CA  
                                   u7710 16FD                                     u8190 1782  
                                   u8270 1AED                                     u8510 02BB  
                                   u8430 01BF                                     u8350 0043  
                                   u9070 0AA0                                     u5791 204A  
                                   u5871 2357                                     u5951 1929  
                                   u6591 1A7F                                     u6671 23BD  
                                   u6831 1446                                     u6751 13F6  
                                   u6911 1B49                                     u7391 0BC4  
                                   u7551 10E1                                     u7631 23C9  
                                   u7711 16FC                                     u8271 1AEC  
                                   u8511 02BA                                     u8431 01BE  
                                   u8351 0042                                     u9071 0A9F  
                                   u6680 2426                                     u6840 144F  
                                   u6760 13FF                                     u6920 1B53  
                                   u7560 10E8                                     u7640 23E7  
                                   u7720 1C1D                                     u7800 0868  
                                   u8280 1073                                     u8520 02CF  
                                   u8440 01D3                                     u8360 005C  
                                   u8600 0F1B                                     u9080 0AC0  
                                   u5945 191C                                     u6681 2425  
                                   u6841 144E                                     u6761 13FE  
                                   u6921 1B52                                     u7561 10E7  
                                   u7641 23E6                                     u7721 1C1C  
                                   u7801 0867                                     u8521 02CE  
                                   u8441 01D2                                     u8361 005B  
                                   u8601 0F1A                                     u9081 0ABF  
                                   u5970 193B                                     u6690 2434  
                                   u6850 145A                                     u6770 140A  
                                   u6930 1B5C                                     u7490 0C49  
                                   u7570 10F3                                     u7650 1472  
                                   u7730 2721                                     u7810 1CE1  
                                   u8290 10AC                                     u8530 02D8  
                                   u8450 01F4                                     u8370 0094  
                                   u8610 0F43                                     u9090 151E  
                                   u5971 193A                                     u5955 1926  
                                   u6691 2433                                     u6851 1459  
                                   u6771 1409                                     u6931 1B5B  
                                   u7491 0C48                                     u7475 0C38  
                                   u7651 1471                                     u7731 2720  
                                   u7811 1CE0                                     u8275 1AE9  
                                   u8291 10AB                                     u8531 02D7  
                                   u8451 01F3                                     u8435 01BB  
                                   u8371 0093                                     u8611 0F42  
                                   u9091 151D                                     u5980 1F91  
                                   u6780 1410                                     u6860 26E6  
                                   u6940 0AE7                                     u7580 1100  
                                   u7660 148D                                     u7740 2741  
                                   u7820 2516                                     u7900 1185  
                                   u8540 02E8                                     u8460 01FF  
                                   u8380 011E                                     u8620 0F55  
                                   u8700 06DD                                     u5885 235D  
                                   u5965 1931                                     u6781 140F  
                                   u6861 26E5                                     u6941 0AE6  
                                   u7485 0C3E                                     u7581 10FF  
                                   u7661 148C                                     u7741 2740  
                                   u7821 2515                                     u7901 1184  
                                   u8541 02E7                                     u8461 01FE  
                                   u8381 011D                                     u8621 0F54  
                                   u8701 06DC                                     u5990 1F98  
                                   u6790 1418                                     u6870 26F6  
                                   u6950 0B00                                     u7590 112B  
                                   u7670 14B0                                     u7750 260C  
                                   u7830 11E2                                     u7910 11A5  
                                   u8470 0214                                     u8390 014B  
                                   u8630 0F69                                     u8550 0EA7  
                                   u8710 06E6                                     u5895 2362  
                                   u5991 1F97                                     u6791 1417  
                                   u6871 26F5                                     u6951 0AFF  
                                   u7591 112A                                     u7671 14AF  
                                   u7751 260B                                     u7831 11E1  
                                   u7911 11A4                                     u8471 0213  
                                   u8391 014A                                     u8631 0F68  
                                   u8551 0EA6                                     u8711 06E5  
                                   u6880 2706                                     u6960 0B22  
                                   u7680 23F2                                     u7760 2613  
                                   u7840 11EF                                     u7920 11BB  
                                   u8480 021D                                     u8640 0F91  
                                   u8560 0EAF                                     u8800 07DB  
                                   u8720 071F                                     u6881 2705  
                                   u6961 0B21                                     u7681 23F1  
                                   u7761 2612                                     u7841 11EE  
                                   u7921 11BA                                     u8481 021C  
                                   u8385 011A                                     u8641 0F90  
                                   u8561 0EAE                                     u8801 07DA  
                                   u8721 071E                                     u6890 1B1F  
                                   u6970 0B46                                     u7690 2400  
                                   u7770 1A16                                     u7850 11F8  
                                   u7930 08BA                                     u8490 026A  
                                   u8650 0FA5                                     u8570 0ECC  
                                   u8730 0733                                     u8810 1886  
                                   u6891 1B1E                                     u6971 0B45  
                                   u7691 23FF                                     u7771 1A15  
                                   u7851 11F7                                     u7931 08B9  
                                   u8491 0269                                     u8651 0FA4  
                                   u8571 0ECB                                     u8731 0732  
                                   u8811 1885                                     u6980 0B4C  
                                   u7780 0812                                     u7860 1E4D  
                                   u7940 090D                                     u8660 0FC3  
                                   u8580 0ED5                                     u8740 0745  
                                   u8820 1264                                     u8900 1F44  
                                   u6981 0B4B                                     u6965 0B1E  
                                   u7781 0811                                     u7941 090C  
                                   u8661 0FC2                                     u8581 0ED4  
                                   u8741 0744                                     u8821 1263  
                                   u8901 1F43                                     u6990 0B53  
                                   u7790 0837                                     u7870 1E60  
                                   u7950 246B                                     u8590 0EDE  
                                   u8750 0758                                     u8670 06B2  
                                   u8830 12A6                                     u8910 1F4A  
                                   u6991 0B52                                     u7791 0836  
                                   u7871 1E5F                                     u8591 0EDD  
                                   u8751 0757                                     u8671 06B1  
                                   u8831 12A5                                     u8911 1F49  
                                   u7880 1162                                     u7960 1363  
                                   u8760 076D                                     u8680 06B9  
                                   u8840 12C4                                     u8920 1F50  
                                   u7881 1161                                     u7961 1362  
                                   u8761 076C                                     u8681 06B8  
                                   u8841 12C3                                     u8921 1F4F  
                                   u7890 116A                                     u7970 1380  
                                   u8770 0794                                     u8690 06D4  
                                   u8850 12D0                                     u8930 1F56  
                                   u7891 1169                                     u7971 137F  
                                   u8771 0793                                     u8691 06D3  
                                   u8851 12CF                                     u8931 1F55  
                                   u7980 13BA                                     u8780 07A7  
                                   u8940 1F64                                     u8860 1F27  
                                   u7981 13B9                                     u8781 07A6  
                                   u8941 1F63                                     u8861 1F26  
                                   u7990 0525                                     u8790 07BD  
                                   u8950 1F6F                                     u8870 1F2C  
                                   u7991 0524                                     u8791 07BC  
                                   u8951 1F6E                                     u8871 1F2B  
                                   u8960 1F7A                                     u8880 1F32  
                                   u8961 1F79                                     u8881 1F31  
                                   u8890 1F3E                                     u8970 0A2C  
                                   u8891 1F3D                                     u8971 0A2B  
                                   _LWLO 0CAD                                     u8980 0A32  
                                   u8981 0A31                                     _RFSW 00BF  
                                   u8990 0A36                                     u8991 0A35  
                                   _TMR0 0015                          __end_of_INT_Set 2E75  
                                   _RSSI 00C0                                     _WREN 0CAA  
                                   _Buz1 013E                         setLoad_Main@load 0036  
                                   _Load 006E                                     _Temp 007C  
                                   _main 14ED                             ___ftpack@arg 0020  
      __end_of_PowerFault_Initialization 2EA2                      __end_of_DlyOff_Main 14ED  
                        __end_of_RF_Main 0805                             ___ftpack@exp 0023  
                                   fsr0h 0005                                     fsr1h 0007  
                                   fsr0l 0004                                     indf0 0000  
                                   indf1 0001                                     fsr1l 0006  
    __size_of_setDimmerLights_TriggerAdj 0011                                     btemp 007E  
                   setLoad_ERROR@command 002F            __size_of_setRF_Initialization 0007  
                       _setDimmerReClock 2EE8                getDimmer_LoadERROR@dimmer 0022  
                                   start 0015                      DelayTimejudge@value 0022  
                          _RfPointSelect 2034               __end_of_setRFSW_AdjControl 18BB  
                       _setDimmer_Detect 20A0                         setTemp_Main@temp 0035  
                       getLoad_Safe@load 0023                             ___ftmul@cntr 004A  
                  __end_of_setBuz_Enable 2141                        ?_getDimmer_Detect 0070  
                           ___ftmul@sign 004B             __size_of_Temp_Initialization 0005  
        __size_of_setLoad_Initialization 0011              __size_of_setPowerFault_Main 0147  
                                  ??_ISR 0079                     setPowerFault_Main@pf 0034  
                           ___fttol@exp1 0035                       ??_getDimmer_Detect 0022  
                           ___fttol@lval 0031                    __end_of_setLoad_ERROR 10DD  
                       __end_of_LED_Main 2F68                         getTemp_Safe@temp 0021  
                                  l13111 0804                                    l13104 2042  
                                  l13120 207F                                    l13200 1892  
                                  l13105 2042                                    l13201 18A4  
                                  l13114 212F                                    l13202 18BA  
                                  l13130 0AD4                                    l13123 2006  
                                  l13131 0A76                                    l13212 1D70  
                                  l13108 2E79                                    l13132 0AD3  
                                  l13213 1D80                                    l13205 209F  
                                  l13133 0AB8                                    l13214 1D80  
                                  l13142 1AC0                                    l13150 2488  
                                  l10742 2EB5                                    l13126 0AD5  
                                  l13134 0AAB                                    l13143 1ABF  
                                  l10751 2FFF                                    l13151 2488  
                                  l13135 0AAA                    ?_setDimmerLights_Main 0070  
                                  l13144 1AA4                                    l10760 1358  
                                  l13208 2759                                    l13160 1F38  
                                  l13136 0AB7                                    l13128 0A4C  
                                  l13145 1ABE                                    l10761 135A  
                                  l10745 2E97                                    l13209 2781  
                                  l13161 1F37                                    l13137 0AD2  
                                  l13129 0A62                                    l13146 1AC0  
                                  l13154 2632                                    l10770 0EF2  
                                  l13162 1F8B                                    l13170 1F88  
                                  l13138 0AD1                                    l10739 2EC5  
                                  l23011 1EBB                                    l10771 0EFC  
                                  l13163 1F81                                    l13171 1F8B  
                                  l13139 0AD5                                    l10748 20FF  
                                  l10764 2F4D                                    l13156 2614  
                                  l10772 0FFE                                    l10780 0FB3  
                                  l13180 12BD                                    l13164 1F58  
                                  l23021 1ED1                                    l23013 1EBF  
                                  l10757 135A                                    l13157 2632  
                                  l13149 2471                                    l10773 0FFD  
                                  l10781 0FBB                                    l13181 12D7  
                                  l13165 1F80                                    l11910 2EDF  
                                  l10758 1329                                    l13174 1A1C  
                                  l10782 0FC9                                    l10774 0F7E  
                                  l13182 12C9                                    l13166 1F7F  
                                  l23031 1EF4                                    l23023 1ED5  
                                  l23015 1EC4                                    l23007 1EAC  
                                  l10759 1359                                    l13175 1A22  
                                  l10767 0FFF                                    l10775 0F76  
                                  l10783 0FFF                                    l13183 12D6  
                                  l13167 1F8A                                    l13192 082F  
                                  l14400 1D22                                    l10776 0F75  
                                  l10768 0EFE                                    l13184 12D5  
                                  l13168 1F85                                    l23041 1F0B  
                                  l23033 1EF8                                    l23025 1EDA  
                                  l23017 1EC9                                    l23009 1EB2  
                                  l23121 0C71                                    l23201 266A  
                                  l24001 172E                                    l11913 2EA1  
                                  l13193 0861                                    l10777 0F7D  
                                  l10769 0EFD                                    l13185 12D8  
                                  l13169 1F89                                    l13194 08A0  
                                  l14410 2539                                    l10786 1E11  
                                  l10778 0FBB                                    l13178 129F  
                                  l23043 1F11                                    l23035 1EFA  
                                  l23027 1EDF                                    l23019 1ECB  
                                  l23131 0CC7                                    l23123 0C83  
                                  l23211 2689                                    l23203 266E  
                                  l11931 1C0D                                    l24011 1C53  
                                  l24003 1C10                                    l13195 0871  
                                  l14411 2539                                    l14403 1257  
                                  l10787 1E41                                    l10779 0FB4  
                                  l13179 12D8                                    l13188 2051  
                                  l11932 1C0C                                    l13196 089F  
                                  l14404 122F                                    l10788 1E40  
                                  l11940 0702                                    l11916 2EBF  
                                  l22501 201E                                    l13189 2051  
                                  l23045 1F18                                    l23037 1EFF  
                                  l23029 1EE5                                    l23141 0D3C  
                                  l23133 0CD1                                    l23125 0C8C  
                                  l23117 0C66                                    l23213 2695  
                                  l23205 2675                                    l23221 22DC  
                                  l23301 239D                                    l11933 1C0D  
                                  l11925 206F                                    l24013 1C5B  
                                  l24005 1C14                                    l24021 1963  
                                  l24101 19DC                                    l13197 08B0  
                                  l14405 122E                                    l10789 1E41  
                                  l11941 07E9                                    l14406 1256  
                                  l11942 07E8                                    l11950 07A8  
                                  l22511 1D4B                                    l22503 1D25  
                                  l14351 2EF3                                    l23039 1F07  
                                  l23151 0D5B                                    l23135 0CD9  
                                  l23143 0D45                                    l23127 0C96  
                                  l23119 0C6A                                    l23207 267E  
                                  l23223 22E2                                    l23215 22CC  
                                  l23231 2082                                    l23311 23B4  
                                  l23303 23A0                                    l11919 211F  
                                  l24015 1C61                                    l24007 1C1D  
                                  l24023 198C                                    l24031 2F5B  
                                  l24111 1A0D                                    l24103 19E7  
                                  l14407 1257                                    l11951 07CB  
                                  l11943 0782                                    l14352 2EF2  
                                  l11936 07EA                                    l11952 07D3  
                                  l11944 077A                                    l22441 200F  
                                  l22513 1D5C                                    l22505 1D28  
                                  l22521 1A2F                                    l22601 228F  
                                  l14353 2EF9                                    l23153 0D5D  
                                  l23145 0D4A                                    l23137 0D06  
                                  l23129 0CB5                                    l23161 1632  
                                  l23209 2687                                    l23225 22E5  
                                  l23217 22CD                                    l23233 2086  
                                  l23241 2147                                    l23313 23BF  
                                  l23305 23A2                                    l23321 2165  
                                  l23401 13F1                                    l24009 1C48  
                                  l24017 1947                                    l24025 21DE  
                                  l24033 2E93                                    l24041 2713  
                                  l24113 1A16                                    l24105 19F2  
                                  l24121 0820                                    l24201 120B  
                                  l14361 2F1F                                    l11953 07DF  
                                  l11945 0779                                    l11937 0704  
                                  l14354 2EF9                                    l14370 210F  
                                  l11946 0781                                    l11938 0703  
                                  l11954 07EA                                    l22451 238A  
                                  l22443 2375                                    l22515 1D60  
                                  l22507 1D31                                    l22531 1A4A  
                                  l22523 1A34                                    l22603 2292  
                                  l22611 2236                                    l23139 0D0F  
                                  l23147 0D4E                                    l23155 2132  
                                  l23171 1668                                    l23163 163B  
                                  l23219 22D9                                    l23227 2F38  
                                  l23235 2092                                    l23243 2154  
                                  l23251 1A80                                    l23315 23C1  
                                  l23307 23A7                                    l23323 2169  
                                  l23331 2412                                    l23411 140A  
                                  l23403 13F7                                    l24019 194D  
                                  l24027 21E2                                    l24035 2E98  
                                  l24051 2719                                    l24043 2715  
                                  l24107 19FD                                    l24131 084B  
                                  l24123 082F                                    l24115 0807  
                                  l24203 121D                                    l24211 2268  
                                  l11947 07D3                                    l11939 06F8  
                                  l22419 0A3F                                    l14380 0578  
                                  l14364 2EB0                                    l11948 07CC  
                                  l22453 238D                                    l22445 2377  
                                  l22461 248B                                    l22517 1D70  
                                  l22509 1D3A                                    l22541 1A66  
                                  l22533 1A50                                    l22525 1A3A  
                                  l22605 2294                                    l22613 2237  
                                  l22621 2E70                                    l14357 2FD5  
                                  l23149 0D54                                    l23157 2136  
                                  l23173 1671                                    l23165 1643  
                                  l23181 2240                                    l23229 2F3C  
                                  l14373 208F                                    l23237 2096  
                                  l23245 2158                                    l23261 1A9C  
                                  l23253 1A87                                    l23309 23B0  
                                  l23317 20B2                                    l23325 2176  
                                  l23341 242A                                    l23333 2415  
                                  l23421 1420                                    l23413 1410  
                                  l23405 13F9                                    l23501 1B5C  
                                  l24029 21E7                                    l24037 2E9D  
                                  l24061 2733                                    l24053 271B  
                                  l24045 2716                                    l24109 1A08  
                                  l24141 0876                                    l24133 0853  
                                  l24125 0837                                    l24117 080B  
                                  l24205 1229                                    l24213 2EA7  
                                  l24221 27D6                                    l24301 0956  
                                  l14381 0577                                    l11957 1DB4  
                                  l14358 2FD5                                    l14382 0642  
                                  l14390 063F                                    l11958 1DE0  
                                  l22439 2009                                    l22455 238F  
                                  l22447 237E                                    l22471 249F  
                                  l22463 2492                                    l22543 1A71  
                                  l22535 1A55                                    l22527 1A3F  
                                  l22519 1A25                                    l22615 223A  
                                  l22607 2228                                    l22631 2F33  
                                  l22623 2F2A                                    l23175 168E  
                                  l23167 165F                                    l23159 1619  
                                  l23183 224C                                    l23191 22F8  
                                  l23239 2143                                    l23263 1AA3  
                                  l23255 1A8B                                    l23247 1A74  
                                  l23271 198F                                    l23319 20B6  
                                  l23327 217A                                    l23343 2435  
                                  l23335 2417                                    l23351 2FE3  
                                  l23431 1441                                    l23415 1412  
                                  l23423 1425                                    l23407 13FF  
                                  l23511 22A3                                    l23503 2297  
                                  l24063 2736                                    l24055 2722  
                                  l24047 2717                                    l24039 2711  
                                  l24071 2F68                                    l24143 087C  
                                  l24151 08A0                                    l24127 083B  
                                  l24135 0861                                    l24119 0812  
                                  l14367 2213                                    l24207 122F  
                                  l24223 27DC                                    l24215 27C2  
                                  l24231 1E4D                                    l24303 095F  
                                  l24311 2F19                                    l14391 063E  
                                  l14383 05B1                                    l11959 1DE0  
                                  l14392 06A2                                    l14384 05B0  
                                  l22457 2393                                    l22449 2384  
                                  l22473 24A6                                    l22465 2494  
                                  l22481 25A1                                    l22537 1A5B  
                                  l22529 1A45                                    l22545 2FAE  
                                  l22617 223B                                    l22609 222E  
                                  l22633 2F34                                    l22625 2F2C  
                                  l22801 258D                                    l23177 1697  
                                  l23169 1665                                    l23185 224F  
                                  l23193 22FE                                    l23265 1AA4  
                                  l23257 1A91                                    l23249 1A78  
                                  l23281 19B6                                    l23273 1993  
                                  l23345 2437                                    l23337 241C  
                                  l23329 2410                                    l23353 2FE6  
                                  l23361 2058                                    l23441 145A  
                                  l23433 1447                                    l23425 142B  
                                  l23417 1418                                    l23409 1404  
                                  l23513 22A6                                    l23505 229A  
                                  l23521 0ADA                                    l23601 2F00  
                                  l24065 273B                                    l24057 2723  
                                  l24049 2718                                    l24081 2F6F  
                                  l24073 2F6A                                    l24153 08AC  
                                  l24145 0884                                    l24137 0868  
                                  l24129 0843                                    l24161 1CD8  
                                  l24209 2EA2                                    l24225 27EA  
                                  l24217 27C6                                    l24241 1E8C  
                                  l24233 1E58                                    l24305 0960  
                                  l24313 2F1B                                    l24321 2471  
                                  l14393 06A1                                    l14385 0641  
                                  l24401 05D6                                    l14377 0533  
                                  l14378 06A3                                    l14394 06A0  
                                  l14386 0605                                    l22475 24AC  
                                  l22467 2497                                    l22459 2489  
                                  l22483 25AB                                    l22539 1A60  
                                  l22547 2FB4                                    l22571 24B6  
                                  l22619 2ED2                                    l22627 2F31  
                                  l22803 2591                                    l23179 223F  
                                  l23195 2300                                    l23187 22EA  
                                  l23267 1AB3                                    l23259 1A97  
                                  l23283 19BB                                    l23275 199B  
                                  l23291 21BE                                    l23339 2426  
                                  l23347 2FD8                                    l23355 2FEA  
                                  l23363 2060                                    l23371 279B  
                                  l23435 1449                                    l23427 1438  
                                  l23419 141A                                    l23443 2187  
                                  l23451 26E6                                    l23515 22A9  
                                  l23507 229D                                    l23531 0B01  
                                  l23523 0ADE                                    l23603 2F01  
                                  l23611 2FF4                                    l24067 2743  
                                  l24059 2726                                    l24083 2F72  
                                  l24075 2F6C                                    l24091 2614  
                                  l24147 0891                                    l24139 0871  
                                  l24155 2203                                    l24171 1CFD  
                                  l24163 1CE1                                    l24219 27D0  
                                  l24243 1E93                                    l24235 1E60  
                                  l24227 1E44                                    l24251 117C  
                                  l24307 0963                                    l24323 247A  
                                  l24315 2462                                    l24331 135B  
                                  l14379 0643                                    l24411 060E  
                                  l14387 0604                                    l24403 05E4  
                                  l14395 06A3                                    l14388 0603  
                                  l22469 249C                                    l22485 25AC  
                                  l22477 2599                                    l22549 2214  
                                  l22581 24D6                                    l22573 24BC  
                                  l22629 2F32                                    l22901 192E  
                                  l23189 22EB                                    l23197 2072  
                                  l23269 1AB7                                    l23285 19C6  
                                  l23277 19A3                                    l23293 21C9  
                                  l23349 2FDC                                    l23357 2FF1  
                                  l23373 27A4                                    l23365 2784  
                                  l23381 26B1                                    l23437 144F  
                                  l23429 143F                                    l23445 218B  
                                  l23453 26F0                                    l23461 2198  
                                  l23509 22A0                                    l23517 2E75  
                                  l23541 0B40                                    l23533 0B02  
                                  l23525 0AE7                                    l23605 1869  
                                  l23613 2FF8                                    l23621 206F  
                                  l23701 0E60                                    l24069 2746  
                                  l24077 2F6D                                    l24093 2625  
                                  l24085 2600                                    l24149 0897  
                                  l24173 1D0A                                    l24165 1CE6  
                                  l24157 1CC8                                    l24181 2516  
                                  l24237 1E6A                                    l24229 1E48  
                                  l24261 11BB                                    l24253 1185  
                                  l24245 1159                                    l24309 2F16  
                                  l24325 247B                                    l24317 2466  
                                  l24341 137A                                    l24333 135D  
                                  l24421 064C                                    l14389 0640  
                                  l24413 0618                                    l24405 05EB  
                                  l24501 1AED                                    l14398 1D0F  
                                  l22487 25BA                                    l22479 259F  
                                  l22567 2027                                    l22575 24C2  
                                  l22583 2252                                    l22591 2285  
                                  l22823 2EC0                                    l22831 2ED9  
                                  l22903 1930                                    l22911 1F8C  
                                  l23199 2076                                    l23287 19CF  
                                  l23279 19A7                                    l23295 20A2  
                                  l23359 2054                                    l23375 27AD  
                                  l23367 2788                                    l23391 26D1  
                                  l23383 26B7                                    l23439 1454  
                                  l23455 26F6                                    l23447 26DB  
                                  l23463 219C                                    l23471 20C6  
                                  l23551 0B55                                    l23535 0B22  
                                  l23543 0B47                                    l23527 0AF9  
                                  l23519 0AD8                                    l23607 186D  
                                  l23615 2FFF                                    l23623 21CC  
                                  l23631 2F48                                    l23711 0E98  
                                  l23703 0E67                                    l24079 2F6E  
                                  l24095 2629                                    l24087 2604  
                                  l14399 1D22                                    l24167 1CED  
                                  l24175 1D0F                                    l24159 1CCD  
                                  l24183 2521                                    l24191 11E2  
                                  l24239 1E72                                    l24255 119C  
                                  l24247 1162                                    l24263 232E  
                                  l24271 2F75                                    l24327 247F  
                                  l24319 246B                                    l24351 13D5  
                                  l24335 1364                                    l24343 1381  
                                  l24423 0655                                    l24415 062A  
                                  l24407 05F5                                    l24431 2F20  
                                  l24503 1B02                                    l24511 106E  
                                  l22569 202D                                    l22577 24C9  
                                  l22585 225C                                    l22593 2287  
                                  l22905 1935                                    l22921 1FAD  
                                  l22913 1F91                                    l23289 21BA  
                                  l23297 20A6                                    l23369 2792  
                                  l23385 26BE                                    l23377 26A3  
                                  l23393 13DF                                    l23457 2700  
                                  l23449 26DF                                    l23465 21A9  
                                  l23473 20D2                                    l23481 1B13  
                                  l23553 0B75                                    l23545 0B4C  
                                  l23537 0B38                                    l23529 0AFA  
                                  l23561 12DF                                    l23609 1873  
                                  l23617 2063                                    l23625 21D0  
                                  l23633 2112                                    l23641 2126  
                                  l23705 0E6B                                    l23721 0991  
                                  l23713 0966                                    l23801 0C4A  
                                  l24097 262D                                    l24089 260C  
                                  l24177 1D15                                    l24169 1CF5  
                                  l24185 2528                                    l24193 11EF  
                                  l24257 11A5                                    l24249 116A  
                                  l24265 2332                                    l24281 08F2  
                                  l24273 08B1                                    l24329 2483  
                                  l24353 13D8                                    l24345 13BA  
                                  l24337 1365                                    l24425 0660  
                                  l24417 0638                                    l24409 0605  
                                  l24361 0521                                    l24433 2F25  
                                  l24441 1771                                    l24505 1B07  
                                  l24521 108D                                    l24513 1073  
                                  l24601 2759                                    l22499 2018  
                                  l22579 24CF                                    l22587 2261  
                                  l22595 228A                                    l22771 230A  
                                  l22843 2036                                    l22851 204B  
                                  l22907 193D                                    l22931 1FDA  
                                  l22923 1FB5                                    l22915 1F99  
                                  l23299 239B                                    l23387 26C4  
                                  l23379 26A7                                    l23395 13E3  
                                  l23459 2706                                    l23467 21AD  
                                  l23475 20D6                                    l23491 1B43  
                                  l23483 1B17                                    l23555 0B8C  
                                  l23547 0B4D                                    l23539 0B3C  
                                  l23571 1345                                    l23563 12E7  
                                  l23619 2067                                    l23627 21DB  
                                  l23635 2116                                    l23707 0E7B  
                                  l23651 0D97                                    l23643 0D69  
                                  l23731 09B4                                    l23723 0998  
                                  l23715 0978                                    l23803 0C63  
                                  l23811 245F                                    l24099 19D8  
                                  l24187 2530                                    l24179 250E  
                                  l24195 11F8                                    l24259 11B1  
                                  l24267 2338                                    l24291 0923  
                                  l24283 08FB                                    l24275 08BA  
                                  l24355 13DB                                    l24347 13CB  
                                  l24339 1376                                    l24427 0695  
                                  l24419 0643                                    l24363 0525  
                                  l24371 0533                                    l24451 178D  
                                  l24443 1775                                    l24435 175D  
                                  l24507 2EAC                                    l24531 10AC  
                                  l24523 1090                                    l24515 107A  
                                  l24603 2763                                    l24611 001A  
                                  l22597 228D                                    l22589 227E  
                                  l22773 2311                                    l22781 22B3  
                                  l22845 203C                                    l22853 2EF1  
                                  l22909 1944                                    l22933 1FE2  
                                  l22925 1FB9                                    l22917 1FA0  
                                  l23389 26CB                                    l23397 13E9  
                                  l23469 20C2                                    l23477 20E2  
                                  l23493 1B4A                                    l23485 1B1F  
                                  l23557 0B90                                    l23549 0B54  
                                  l23565 12FA                                    l23581 1BF7  
                                  l23573 1BBA                                    l23629 2F44  
                                  l23637 211B                                    l23709 0E7F  
                                  l23661 0DB4                                    l23653 0D9E  
                                  l23645 0D82                                    l23741 09E1  
                                  l23733 09C4                                    l23725 0999  
                                  l23717 097F                                    l23805 2438  
                                  l23813 2F03                                    l23821 1B72  
                                  l23901 23C4                                    l24197 11FE  
                                  l24189 11DA                                    l24269 233D  
                                  l24293 092E                                    l24285 0904  
                                  l24277 08E1                                    l24349 13D4  
                                  l24429 069A                                    l24381 0567  
                                  l24373 0543                                    l24365 0529  
                                  l24357 0519                                    l24461 17B1  
                                  l24453 1795                                    l24445 177E  
                                  l24437 1763                                    l24541 10CA  
                                  l24533 10B1                                    l24525 1099  
                                  l24517 1080                                    l24509 106A  
                                  l24605 276C                                    l24701 02E8  
                                  l24621 004C                                    l24613 001E  
                                  l22599 228E                                    l22767 2F0E  
                                  l22775 2318                                    l22783 22BA  
                                  l22791 2FC2                                    l22847 2000  
                                  l22855 2FCA                                    l22935 1FEA  
                                  l22927 1FC3                                    l22919 1FA2  
                                  l22951 1593                                    l23399 13EF  
                                  l23479 20E6                                    l23495 1B4D  
                                  l23487 1B28                                    l23567 1316  
                                  l23559 12DB                                    l23575 1BBE  
                                  l23583 20F2                                    l23591 07FA  
                                  l23639 2122                                    l23671 0DC9  
                                  l23663 0DB8                                    l23655 0D9F  
                                  l23647 0D86                                    l23751 0A04  
                                  l23743 09EF                                    l23735 09C8  
                                  l23727 099F                                    l23719 0980  
                                  l23807 243E                                    l23815 2E7A  
                                  l23831 1B8B                                    l23823 1B75  
                                  l23911 23E1                                    l23903 23CB  
                                  l24199 1205                                    l24295 0939  
                                  l24287 090D                                    l24279 08E9  
                                  l24391 059D                                    l24383 0572  
                                  l24375 054B                                    l24367 052D  
                                  l24359 051D                                    l24471 17D8  
                                  l24447 1782                                    l24455 179F  
                                  l24463 17BA                                    l24439 1767  
                                  l24543 10D2                                    l24535 10B7  
                                  l24527 109F                                    l24519 1088  
                                  l24551 1DF1                                    l24607 277D  
                                  l24703 0319                                    l24631 0094  
                                  l24615 0027                                    l24623 0053  
                                  l24711 0EA7                                    l22769 2F0F  
                                  l22777 232B                                    l22785 22BB  
                                  l22793 2569                                    l22849 2045  
                                  l22857 2FD0                                    l22881 236D  
                                  l22873 2350                                    l22937 1FFA  
                                  l22929 1FD1                                    l22961 15B2  
                                  l22953 1594                                    l23497 1B53  
                                  l23489 1B3A                                    l23569 1329  
                                  l23577 1BC6                                    l23585 20F6  
                                  l23593 2102                                    l23681 0DFB  
                                  l23673 0DD7                                    l23665 0DBC  
                                  l23657 0DA3                                    l23649 0D8C  
                                  l23753 0A1D                                    l23745 09F5  
                                  l23737 09CF                                    l23729 09A4  
                                  l23761 0BB4                                    l23809 2447  
                                  l23841 1BB6                                    l23833 1B8E  
                                  l23825 1B7C                                    l23817 1B64  
                                  l23905 23CC                                    l23913 2E7F  
                                  l23921 2E8E                                    l24297 0944  
                                  l24289 091B                                    l24393 05AB  
                                  l24377 0553                                    l24385 0578  
                                  l24369 0531                                    l24473 17E1  
                                  l24465 17C4                                    l24457 17A6  
                                  l24449 1788                                    l24481 1013  
                                  l24537 10BD                                    l24529 10A6  
                                  l24553 1DF8                                    l24561 1E11  
                                  l24545 1DE3                                    l24609 2EE0  
                                  l24705 031D                                    l24641 014B  
                                  l24633 00A2                                    l24625 005C  
                                  l24617 0031                                    l24721 0EDE  
                                  l24713 0EAF                                    l24801 077A  
                                  l22787 22C9                                    l22779 22B2  
                                  l22795 256B                                    l22883 2374  
                                  l22875 2354                                    l22891 190B  
                                  l22939 1FFE                                    l22971 15CA  
                                  l22963 15B4                                    l22955 15A4  
                                  l22947 1578                                    l23499 1B56  
                                  l23579 1BD9                                    l23587 07ED  
                                  l23595 2106                                    l23691 0E23  
                                  l23675 0DDF                                    l23683 0E03  
                                  l23667 0DC1                                    l23659 0DA9  
                                  l23747 09F7                                    l23739 09DB  
                                  l23771 0BF7                                    l23763 0BC5  
                                  l23755 0B9A                                    l23835 1B94  
                                  l23827 1B7F                                    l23819 1B66  
                                  l23851 10F3                                    l23843 10DD  
                                  l23907 23D4                                    l23915 2E84  
                                  l23931 148D                                    l23923 1466  
                                  l24299 094D                                    l24387 0581  
                                  l24395 05B1                                    l24379 055C  
                                  l24475 17F5                                    l24467 17CC  
                                  l24459 17AB                                    l24491 104D  
                                  l24483 1022                                    l24539 10C2  
                                  l24563 1E17                                    l24555 1DFB  
                                  l24547 1DE7                                    l24571 1D87  
                                  l24651 0188                                    l24643 0154  
                                  l24635 00D2                                    l24627 0078  
                                  l24619 0043                                    l24731 0F43  
                                  l24723 0EF2                                    l24715 0EB9  
                                  l24707 0E9B                                    l24811 07BD  
                                  l24803 0782                                    l22789 2FBC  
                                  l22797 2572                                    l22877 2358  
                                  l22893 1910                                    l22885 18FE  
                                  l19141 1FA1                                    l22981 15F6  
                                  l22965 15B8                                    l22973 15DB  
                                  l22957 15A5                                    l22949 158A  
                                  l23589 07F1                                    l23597 2EFA  
                                  l23693 0E2E                                    l23685 0E0A  
                                  l23677 0DE5                                    l23669 0DC3  
                                  l23749 09FD                                    l23781 0C0D  
                                  l23773 0BF8                                    l23765 0BCC  
                                  l23757 0BAC                                    l23837 1B9D  
                                  l23829 1B82                                    l23861 1111  
                                  l23853 10F5                                    l23845 10E3  
                                  l23909 23DC                                    l23917 2F4E  
                                  l23941 14BF                                    l23933 1496  
                                  l23925 146A                                    l24397 05BA  
                                  l24389 058B                                    l24469 17D1  
                                  l24485 1030                                    l24477 1000  
                                  l24493 1AC1                                    l24565 1E1C  
                                  l24557 1E04                                    l24549 1DEC  
                                  l24581 1DA7                                    l24573 1D8E  
                                  l24661 01D9                                    l24645 015F  
                                  l24653 01A3                                    l24637 011E  
                                  l24629 0082                                    l24733 0F55  
                                  l24741 0F76                                    l24717 0ECC  
                                  l24725 0EFE                                    l24709 0E9F  
                                  l24813 07C2                                    l24805 0794  
                                  l24821 187E                                    l24901 1F86  
                                  l19150 1FD0                                    l22799 2573  
                                  l22879 2361                                    l22895 1915  
                                  l22887 1901                                    l19151 1FDA  
                                  l19143 1F99                                    l22975 15E1  
                                  l22983 15FD                                    l22967 15BF  
                                  l22959 15AB                                    l23599 2EFF  
                                  l23695 0E3A                                    l23687 0E12  
                                  l23679 0DF0                                    l23791 0C2C  
                                  l23783 0C14                                    l23775 0BFE  
                                  l23767 0BCD                                    l23759 0BB3  
                                  l23839 1BAE                                    l23871 112F  
                                  l23863 1114                                    l23855 1101  
                                  l23847 10EA                                    l23919 2E89  
                                  l23951 14DD                                    l23943 14C5  
                                  l23935 14A1                                    l23927 1472  
                                  l24399 05C4                                    l24487 1038  
                                  l24479 1009                                    l24495 1ACB  
                                  l24567 1E21                                    l24559 1E0A  
                                  l24591 1DC6                                    l24583 1DAD  
                                  l24575 1D93                                    l24671 0214  
                                  l24655 01BF                                    l24663 01E2  
                                  l24647 0173                                    l24639 0140  
                                  l24751 0FAB                                    l24735 0F5E  
                                  l24743 0F7E                                    l24727 0F08  
                                  l24719 0ED5                                    l24815 07CC  
                                  l24807 07A8                                    l24823 1886  
                                  l24831 2EB1                                    l24903 1F87  
                                  l24911 0A32                                    l19152 1FD1  
                                  l19144 1FFF                                    l22897 191B  
                                  l22889 1907                                    l19153 1FDE  
                                  l19145 1FAD                                    l22985 1601  
                                  l22977 15EA                                    l22969 15C8  
                                  l23697 0E4B                                    l23689 0E18  
                                  l23793 0C30                                    l23785 0C1A  
                                  l23777 0C04                                    l23769 0BF6  
                                  l23873 1136                                    l23865 111E  
                                  l23857 1107                                    l23881 114A  
                                  l23849 10EE                                    l23945 14CB  
                                  l23937 14B0                                    l23929 147B  
                                  l23953 1C6B                                    l23961 23E9  
                                  l24489 1040                                    l24497 1AD4  
                                  l24593 1DCF                                    l24577 1D9B  
                                  l24585 1DB4                                    l24569 1D83  
                                  l24681 026A                                    l24673 021D  
                                  l24665 01F4                                    l24657 01C8  
                                  l24649 017E                                    l24761 0FEA  
                                  l24745 0F91                                    l24753 0FB4  
                                  l24737 0F69                                    l24729 0F1B  
                                  l24817 07DB                                    l24809 07B2  
                                  l24825 188C                                    l24833 2EB6  
                                  l24841 1264                                    l24921 0A4C  
                                  l24913 0A36                                    l24905 0A20  
                                  l19154 1FE8                                    l19146 1FA2  
                                  l22899 192A                                    l19155 1FFF  
                                  l19147 1FB4                                    l22987 160D  
                                  l22979 15EC                                    l23699 0E4F  
                                  l23795 0C37                                    l23787 0C20  
                                  l23779 0C09                                    l23883 1152  
                                  l23875 1140                                    l23867 1123  
                                  l23859 110E                                    l23891 2544  
                                  l23947 14D3                                    l23939 14B9  
                                  l23955 1C71                                    l23963 23F2  
                                  l23971 16BE                                    l24499 1ADE  
                                  l24595 1DD7                                    l24587 1DBD  
                                  l24579 1D9E                                    l24691 02BB  
                                  l24683 0282                                    l24675 0235  
                                  l24667 01FF                                    l24659 01D3  
                                  l24763 0FF3                                    l24755 0FC3  
                                  l24747 0F9A                                    l24739 0F6F  
                                  l24771 06B9                                    l24827 1892  
                                  l24819 187A                                    l24835 2EBB  
                                  l24843 1276                                    l24851 129F  
                                  l24931 0A6E                                    l24923 0A55  
                                  l24915 0A3A                                    l24907 0A24  
                                  l19148 1FC9                                    l19149 1FB5  
                                  l22989 1616                                    l23797 0C3D  
                                  l23789 0C27                                    l23877 1142  
                                  l23869 112C                                    l23893 2554  
                                  l23885 253A                                    l23949 14D9  
                                  l23957 1C87                                    l23965 2400  
                                  l23981 16D9                                    l23973 16C9  
                                  l24589 1DC3                                    l24597 274B  
                                  l24693 02C6                                    l24677 0253  
                                  l24669 0209                                    l24685 02A3  
                                  l24757 0FC9                                    l24749 0FA5  
                                  l24781 06F8                                    l24773 06C2  
                                  l24765 06A6                                    l24829 18B6  
                                  l24861 12C9                                    l24853 12A6  
                                  l24845 127C                                    l24837 125A  
                                  l24941 0A8A                                    l24933 0A71  
                                  l24925 0A5D                                    l24917 0A3F  
                                  l24909 0A2C                                    l23799 0C43  
                                  l23879 1147                                    l23895 255C  
                                  l23887 253C                                    l23959 1CC5  
                                  l23967 2406                                    l23991 16FD  
                                  l23983 16E0                                    l23975 16CD  
                                  l24599 2752                                    l24695 02CF  
                                  l24679 0260                                    l24687 02AA  
                                  l24759 0FDC                                    l24791 0745  
                                  l24775 06D4                                    l24783 0704  
                                  l24767 06AA                                    l24863 12D0  
                                  l24855 12B8                                    l24847 1282  
                                  l24839 125E                                    l24871 1F2C  
                                  l24943 0A95                                    l24951 0AB8  
                                  l24935 0A76                                    l24927 0A62  
                                  l24919 0A47                                    l23897 2561  
                                  l23889 2543                                    l23993 1702  
                                  l23985 16E6                                    l23977 16D2  
                                  l23969 16BA                                    l24697 02D8  
                                  l24689 02B3                                    l24793 0758  
                                  l24785 070D                                    l24777 06DD  
                                  l24769 06B2                                    l24857 12BD  
                                  l24849 1288                                    l24881 1F4A  
                                  l24873 1F32                                    l24865 1F1B  
                                  l24953 0AC0                                    l24945 0AA0  
                                  l24937 0A7E                                    l24929 0A6A  
                                  l24961 0800                                    l18810 235C  
                                  l18811 236D                                    l23899 23C2  
                                  l23995 1709                                    l23987 16EC  
                                  l23979 16D7                                    l24699 02E0  
                                  l24795 0762                                    l24787 071F  
                                  l24779 06E6                                    l24859 12C4  
                                  l24891 1F6F                                    l24883 1F50  
                                  l24875 1F38                                    l24867 1F1F  
                                  l24955 0AC4                                    l24947 0AAB  
                                  l24939 0A82                                    l24971 151E  
                                  l24963 14ED                                    l18812 2374  
                                  l18820 1930                                    l18900 09DB  
                        ?_setDelayOff_GO 0023                                    l18821 193C  
                                  l18901 09F7                                    l23997 1711  
                                  l23989 16F5                                    l24797 076D  
                                  l24789 0733                                    l24893 1F7A  
                                  l24885 1F56                                    l24877 1F3E  
                                  l24869 1F27                                    l24957 0AC8  
                                  l24949 0AB3                                    l24981 1554  
                                  l24973 153A                                    l24965 150E  
                                  l18822 1944                                    l18902 0A04  
                                  l18910 0C09                                    l18815 193D  
                                  l18911 0C14                                    l23999 171D  
                                  l24799 0772                                    l24895 1F82  
                                  l24887 1F58                                    l24879 1F44  
                                  l24959 0ACC                                    l24991 156C  
                                  l24983 1560                                    l24975 1543  
                                  l24967 1511                                    l18816 1915  
                                  l18920 15DB                                    l18912 0C27  
                                  l18809 2354                                    l18817 190B  
                                  l18921 15C9                                    l18913 0C2C  
                                  l24897 1F83                                    l24889 1F64  
                                  l24993 156F                                    l24985 1563  
                                  l24977 1548                                    l24969 1515  
                                  l18818 191A                                    l18922 15CA  
                                  l18914 0C37                                    l18819 191B  
                                  l18923 15DA                                    l18915 0C4A  
                                  l18907 0BB4                                    l24899 1F84  
                                  l24987 1566                                    l24979 154B  
                  ?_setDimmerLights_Open 0022                                    l18924 15FD  
                                  l18860 0DBD                                    l18908 0C63  
                                  l18925 15EB                                    l18861 0DC2  
                                  l18853 0D9F                                    l18909 0BCD  
                                  l24989 1569                                    l18926 15F6  
                                  l18918 1594                                    l18950 1EC9  
                                  l18862 0E03                                    l18870 0E36  
                                  l18927 15EC                                    l18919 1616  
                                  l18951 1F07                                    l18871 0E36  
                                  l18863 0DD7                                    l18855 0D97  
                                  l18928 15FC                                    l18952 1EDF  
                                  l18880 0E60                                    l18872 0E0A  
                                  l18856 0E98                    __end_of_setLoad_Count 2228  
                                  l18929 160D                                    l18953 1ED5  
                                  l18881 0E7F                                    l18865 0DEE  
                                  l18857 0DB4                                    l18945 2447  
                                  l18954 1EE4                                    l18874 0E21  
                                  l18866 0DEF                                    l18946 245F  
                                  l18955 1EE5                                    l18875 0E22  
                                  l18867 0DFB                                    l18859 0DB3  
                                  l18956 1EFA                                    l18876 0E2E  
                                  l18868 0DF0                                    l18957 1F06  
                                  l18949 1EBB                                    l18877 0E23  
                                  l18869 0E02                                    l18958 1F11  
                                  l18878 0E35                                    l18959 1F18  
                                  l18879 0E4B                                    l18897 0980  
                                  l18898 0A1D                                    l18899 0999  
                                  ?_main 0070                setControl_Lights_Table@rf 0067  
                        __end_of___awdiv 1F19                          __end_of___ftadd 0E99  
                        __end_of___ftdiv 0A1E                          __end_of___ftmul 0C64  
                        ___awdiv@divisor 0020                          __end_of___fttol 1617  
           setDimmerLights_AdjGo@command 0022                                    _IOCBF 0396  
                                  _IOCBN 0395                                    _IOCBP 0394  
                                  _IOCIE 005B                                    _IOCIF 0058  
                        __end_of___lwdiv 1945                   _setDimmerLights_Switch 2152  
                        ___awdiv@counter 0025            __size_of_CC2500_FrequencyCabr 000D  
                                  _RFSW1 00EC                                    _PORTA 000C  
                                  _PORTB 000D                                    _PORTC 000E  
                           ?_setLED_Main 0070                       setRF_Learn@command 0022  
                  setPowerFault_ERROR@pf 0031                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
           __size_ofi1_setLoad_StatusOff 0037                                    _WPUB0 1068  
                                  _WPUB1 1069                                    _WPUB2 106A  
                                  _TMain 00EE                            setRF_Learn@rf 0023  
                                  _MainT 1000                                    _Load1 0220  
             setDimmer_LoadERROR@command 0022                                    _Temp1 0130  
           __end_of_setLoad_LightsStatus 2711                         __end_of_TMR0_ISR 0517  
           __size_of_CC2500_WriteCommand 0015                         __end_of_TMR0_Set 223D  
                                  _getAD 2308                            ___awtoft@sign 003B  
                      _getDimmer_PFERROR 2052                        _setDimmer_PFERROR 20E0  
                          ___ftpack@sign 0024                           _setLoad_Enable 07EB  
            __size_of_CC2500_ClearRXFIFO 0005                            ??_Buzzer_Main 0027  
            __size_of_CC2500_ClearTXFIFO 0005                      CC2500_RxData@loop_f 0025  
                         __pbitbssCOMMON 03D0                       Flash_Memory_Read@i 0021  
                      setLoad_Count@load 0070                         ?_CC2500_ReadByte 0070  
                     ?_getDimmer_PFERROR 0070                       ?_setDimmer_PFERROR 0022  
         __size_of_setLED_Initialization 0012            __end_of_setLED_Initialization 21EE  
                           ?_setRF_Learn 0022                                    status 0003  
                                  wtemp0 007E                getDimmer_TempERROR@dimmer 0022  
                     _setRF_DimmerLights 1D23              __size_of_Flash_Memory_Write 0038  
                 ??_MainT_Initialization 0020                        ?_CC2500_SIDLEMode 0070  
             __size_of_RF_Initialization 0005                           ?_RfPointSelect 0070  
                         setSw_Status@sw 0023                 setLoad_StatusOff@command 0023  
       __size_of_DelayOff_Initialization 0005                   ?_setLoad_AH_AL_Restore 0070  
                  setLoad_Enable@command 0022                   ??_Flash_Memory_Erasing 0020  
              setDimmerLights_Main@close 0055                      ??_getDimmer_PFERROR 0022  
                    ??_setDimmer_PFERROR 0023                          _getPercentValue 1C69  
                     ??_CC2500_SIDLEMode 0024                         ?_CC2500_PowerRST 0070  
           __size_of_setPowerFault_ERROR 0060                     __end_of_getLoad_Safe 21DC  
                      ??_setPercentValue 004C                             __end_of_main 1578  
                    ?_setRF_DimmerLights 0020                       setLoad_Enable@load 0023  
                       ?_CC2500_WriteREG 0022                                ??_ADC_Set 0020  
                __end_of_setDimmerLights 175B                     _setSw_Initialization 2201  
                           ?_setBuz_Main 0070               __size_of_setLoad_StatusOff 0038  
                                 ??_main 006C                            ___fttol@sign1 0030  
                _getDimmerLights_Trigger 2410                             ?_setLog_Code 0070  
                _setControl_Lights_Table 1258                   ?_Buzzer_Initialization 0070  
                ??_DlyOff_Initialization 0022                  __end_of_PowerFault_Main 2EC0  
                             _Receive_GO 03D1                               _Receive_OK 03D2  
                              ??_IOC_ISR 0070                   ?_setDimmerLights_ERROR 0070  
                              ??_IOC_Set 0020          __end_of_DimmerLightsPointSelect 2FBA  
                                 ?_MainT 0070                   ?_setDimmerLights_AdjRF 0070  
                              ??_INT_ISR 0074                   ?_setDimmerLights_AdjGo 0022  
               __size_of_setRFSW_Control 00AC                __end_of_getDimmer_PFERROR 2061  
              __end_of_setDimmer_PFERROR 20F0                         ??_setRFSW_Status 0023  
                              ??_INT_Set 0020                  ??_Switch_Initialization 0025  
                 ?_setDimmerLights_Close 0022                   __end_of_setLoad_Enable 0800  
                 _setLoad_Initialization 1867                     __end_of_getTemp_Safe 3000  
                      _setOverTemp_ERROR 1DE1                        i1RfPointSelect@rf 0071  
                   ??_setRF_DimmerLights 0021                                   ?_getAD 0020  
                            _DlyOff_Main 1464                                   _ADCON0 009D  
                                 _ADCON1 009E                   ?_setBuz_Initialization 0070  
                              ??_RF_Main 006C                                   _ADRESH 009C  
                                 _ADRESL 009B               i1setLoad_StatusOff@command 0073  
                      ?_getPowerFault_AD 0027                         ___awdiv@dividend 0022  
                         setRF_Enable@rf 0026                         __end_of___awtoft 2460  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                         __end_of___ftpack 2000  
                     ?_setOverTemp_ERROR 002F                                   _IOCBF2 1CB2  
                _setDimmerLights_Trigger 2141                                   i1l8300 038D  
                                 i1l8301 04EF                                   i1l8302 04CB  
                                 i1l8310 0404                                   i1l8303 04CA  
                                 i1l8311 040A                                   i1l8304 04C9  
                                 i1l8312 04C8                                   i1l8320 0488  
                                 i1l8321 04C6                                   i1l8313 0463  
                                 i1l8305 040C                                   i1l8322 04C5  
                                 i1l8314 042C                                   i1l8306 03EF  
                                 i1l8323 04EE                                   i1l8315 0447  
                                 i1l8307 03E8                                   i1l8324 04ED  
                                 i1l8316 0446                                   i1l8308 03EE  
                                 i1l8325 0515                                   i1l8317 0462  
                                 i1l8309 040B                                   i1l8318 04C7  
                                 i1l8326 0516                                   i1l8319 0489  
                                 i1l8335 2200                                   i1l8336 2200  
                                 i1l8329 2EF0                                   i1l8345 25FD  
                                 i1l8346 25FC                                   i1l8347 25F1  
                                 i1l8291 0011                                   i1l8348 25FB  
                                 i1l8349 25FD                                   i1l8297 0516  
                                 i1l9522 2F8F                                   i1l8298 038F  
                                 i1l9523 2F8F                                   i1l8299 038E  
                                 i1l9604 264F                                   i1l9605 265C  
                                 i1l9606 2669                                   i1l9607 2669  
                                 _FVRCON 0117                                   _PMADRH 0192  
                                 _PMADRL 0191                                   _PMDATH 0194  
                                 _PMDATL 0193                                   _PMCON2 0196  
                                 u541_20 25CE                                   u541_21 25CD  
                                 u542_20 25D2                                   u550_20 0389  
                                 u542_21 25D1                                   u550_21 0388  
                                 u543_20 25D7                                   u551_20 0398  
                                 u543_21 25D6                                   u551_21 0397  
                                 u640_20 2F97                                   u544_20 25E2  
                                 u560_20 043C                                   u552_20 03A6  
                                 u640_21 2F96                                   u544_21 25E1  
                                 u560_21 043B                                   u552_21 03A5  
                     ??_getPowerFault_AD 0028                                   u545_20 25EA  
                                 u561_20 0457                                   u553_20 03BF  
                                 u545_21 25E9                                   u561_21 0456  
                                 u553_21 03BE                                   u562_20 046B  
                                 u554_20 03CD                                   u546_20 032E  
                                 _OSCCON 0099                                   u562_21 046A  
                                 u554_21 03CC                                   u546_21 032D  
                                 u563_20 0482                                   u555_20 03D5  
                                 u547_20 0332                                   u563_21 0481  
                                 u555_21 03D4                                   u547_21 0331  
                                 u636_20 2F89                                   u564_20 04A2  
                                 u556_20 03E0                                   u548_20 033E  
                                 u636_21 2F88                                   u564_21 04A1  
                                 u556_21 03DF                                   u548_21 033D  
                                 u637_20 2648                                   u565_20 04D0  
                                 u557_20 03FA                                   u549_20 0370  
                                 u637_21 2647                                   u565_21 04CF  
                                 u557_21 03F9                                   u549_21 036F  
                                 u549_25 036C                       __size_of_Load_Main 0005  
                                 u638_20 2655                                   u566_20 04E4  
                                 u558_20 0414                                   u638_21 2654  
                                 u566_21 04E3                                   u558_21 0413  
                                 u639_20 2662                                   u567_20 0507  
                                 u559_20 0424                                   u639_21 2661  
                                 u567_21 0506                                   u559_21 0423  
                                 u567_25 0503                                   u568_20 21F2  
                                 u568_21 21F1                                   u569_20 21F6  
                                 u569_21 21F5                                   _TMR0IE 005D  
                                 _TMR0IF 005A                                   _IO_Set 227E  
                     DelayTime_1us@count 0020                               _Sw_AdjFunc 250C  
                             _VarProduct 01C5           __size_of_CC2500_PowerOnInitial 0016  
          __end_of_CC2500_PowerOnInitial 227E                                   _Dimmer 00BA  
                    ??_setOverTemp_ERROR 0030                                   _DlySw1 00D6  
             __end_of_Mcu_Initialization 22B0                      __end_of_Buzzer_Main 2E7F  
                                 _Memory 00ED                                   _Timer0 00EF  
     __end_of_setDimmerLights_TriggerAdj 21B8               _setDimmerLights_TriggerAdj 21A7  
          setDimmerLights_Switch@command 0022                               _Sw_OffFunc 11D8  
                     setTemp_Enable@temp 0022                                   ___wmul 2350  
                              ??___awdiv 0024                                ??___ftadd 0052  
           __size_of_DelayOffPointSelect 000F                                ??___ftdiv 0042  
                  setDimmerLights@lights 0028                                ??___ftmul 0042  
                              ??___fttol 002C             ?_Flash_Memory_Initialization 0070  
                              ??___lwdiv 0024                          i1_RfPointSelect 2F90  
            setDimmerLights_AdjRF@lights 0060                   ??_setDimmerLights_Main 0054  
                                 _r_data 00C5                   ??_setDimmerLights_Open 0023  
                                 _s_data 00C6                                   _setLED 13DD  
                       _DimmerLightsIntr 00BB                    ?_setSw_Initialization 0070  
                  setDimmerLights@status 0026                         ___awdiv@quotient 0027  
                                 _setBuz 1617                       __size_of_Temp_Main 0005  
            __end_of_Load_Initialization 2E9D         ??_setDimmerLights_Initialization 005F  
        ?_setDimmerLights_Initialization 0070                                   clrloop 2ECD  
                        _LoadPointSelect 2FBA                       __size_of_Sw_OnFunc 005D  
                  ___ftmul@f3_as_product 0047               setDimmer_TempERROR@command 0022  
              __end_of_setOverTemp_ERROR 1E42             ??_getDimmerLights_StatusFlag 0022  
               Flash_Memory_Read@address 0022                        RfSWPointSelect@sw 0021  
                       ??_setRF_RxStatus 0023                  getDimmer_PFERROR@dimmer 0022  
            __size_of_DimmerLights_ERROR 007F                    __end_of_SwPointSelect 2FD6  
                        ?_setLoad_Enable 0022                  getPowerFault_AD@channel 0027  
                          ?_setRF_Enable 0025                           _setTemp_Enable 20F0  
                        _RfSWPointSelect 2043             __size_of_Flash_Memory_Modify 0082  
            __size_of_DimmerLights_Close 0027                  __size_of_LedPointSelect 002B  
         setPowerFault_Initialization@pf 0021                      Flash_Memory_Write@i 0021  
           __size_of_Flash_Memory_Unlock 0009                               _TouchPower 2EF1  
            __size_of_CC2500_InitPATable 0027                      CC2500_TxData@loop_e 0025  
                __end_of_getPercentValue 1CC6     __end_of_setPowerFault_Initialization 2120  
  __size_of_setPowerFault_Initialization 0010             _setPowerFault_Initialization 2110  
            ??_PowerFault_Initialization 0022                          ??_RfPointSelect 0020  
                        _TempPointSelect 2EC0              setDimmerLights_AdjGo@lights 0023  
              setDimmer_LoadERROR@dimmer 0023                                ?_LED_Main 0070  
                             ___ftadd@f1 004C                               ___ftadd@f2 004F  
                       _setRF_Main$16636 006B                      setSw_Enable@command 0022  
                             ___ftdiv@f1 003F                               ___ftdiv@f2 003C  
                             ___ftdiv@f3 0047                               ___awtoft@c 0036  
           ?_DimmerLights_Initialization 0070                               ___ftmul@f1 003C  
                             ___ftmul@f2 003F                            __end_of_MainT 1068  
                             ___fttol@f1 0028                           __pcstackCOMMON 0070  
                   _setLoad_LightsStatus 26D9                             __pidataBANK3 18BB  
                          __end_of_getAD 232C                                ?_TMR0_ISR 0070  
                              ?_TMR0_Set 0070                   setLoad_AH_AL_Restore@i 0021  
           __size_of_setDimmerLights_Adj 006A                       _LED_Initialization 2F75  
              ??_getDimmerLights_Trigger 0022                ??_setControl_Lights_Table 0067  
                       ??_DelayTimejudge 0020              ?_getDimmerLights_StatusFlag 0070  
              __size_of_setLoad_StatusOn 0011                  setDimmer_PFERROR@dimmer 0023  
          ??_Flash_Memory_Initialization 0050                 __size_of_setRF_ReceiveGO 000E  
                       ?_setDimmerLights 0026                        __end_of_Load_Main 2EBB  
                       ??_BuzPointSelect 0020                         ?_PowerFault_Main 0070  
               __end_of_setDimmerReClock 2EF1                       __size_of_getRxData 0073  
                    ?_LED_Initialization 0070                   __end_of_setTemp_Enable 2100  
                      ?_CC2500_WriteByte 0070                                  ??_MainT 002E  
               __end_of_setDimmer_Detect 20B0               __size_of_getDimmer_PFERROR 000F  
             __size_of_setDimmer_PFERROR 0010                           ??_setRF_Enable 0026  
               setOverTemp_ERROR@command 002F             __size_of_getDimmer_LoadERROR 000E  
           __size_of_setDimmer_LoadERROR 0010                           _DimmerLights11 007B  
                   __size_of_setLED_Main 0053                ??_setDimmerLights_Trigger 0023  
                                ??_getAD 0022                      _Temp_Initialization 2E93  
                     ??_CC2500_WriteByte 0020             setDimmerLights_Switch@lights 0023  
                          ?_setLoad_Main 0070           __size_of_PowerFaultPointSelect 0007  
                             __pbssBANK0 006D                               __pbssBANK1 00A0  
                             __pbssBANK2 0120                               __pbssBANK4 0220  
          __end_of_PowerFaultPointSelect 2EE0                              _Buzzer_Main 2E7A  
                      ??_setRFSW_Control 002E                setDimmer_TempERROR@dimmer 0023  
                      __end_of_Temp_Main 2EB6                                  ?_IO_Set 0070  
                             ??_LED_Main 0025                  _DelayOff_Initialization 2E8E  
                             __pnvCOMMON 007D                              ?_Sw_AdjFunc 0070  
                  __size_of_getLoad_Safe 0012                        __end_of_Sw_OnFunc 1D23  
          ?_setPowerFault_Initialization 0070                               _getPF_Safe 2061  
                          ??_Switch_Main 0033                           DelayTime_1us@i 0022  
                         DelayTime_1us@j 0024                     ??_LED_Initialization 0025  
                           _DimmerLights 006D                        LedPointSelect@led 0021  
                __end_ofi1_RfPointSelect 2F9E                      i1_setLoad_StatusOff 2633  
                     __size_of_setINT_GO 000A                   __size_of_DelayOff_Main 0005  
                   __size_of_setRF_Learn 0010                              setBuz@count 0029  
           __size_of_getDimmer_TempERROR 000E             __size_of_setDimmer_TempERROR 0010  
                             __pmaintext 14ED                    ?_setLoad_LightsStatus 0022  
                    _CC2500_WriteCommand 223D                     ?_Temp_Initialization 0070  
                            ?_Sw_OffFunc 0070         __size_of_DimmerLightsPointSelect 000E  
                       ??_setDelayOff_GO 0025                  __end_of_LoadPointSelect 2FC8  
          ??_DimmerLights_Initialization 0062                                  ?___wmul 0020  
                             ??_TMR0_ISR 0075                            ?_setTemp_Main 0070  
                             ??_TMR0_Set 0020                               _getLoad_AD 0AD6  
                             __pintentry 0004                   ??_setSw_Initialization 0024  
                    LoadPointSelect@load 0021                            ?_setSw_Enable 0022  
                     __size_of_setTxData 004F                      TempPointSelect@temp 0070  
                ?_setDimmerLights_Switch 0022                               __ptext3300 07EB  
                             __ptext3301 20F0                                  ?_setLED 0022  
                             __ptext3310 20C0                               __ptext3302 1BB8  
                             __ptext3230 06A4                               __ptext3222 0800  
                             __ptext3311 21A7                               __ptext3303 12D9  
                             __ptext3231 0E99                               __ptext3223 0A1E  
                             __ptext3320 2FD6                               __ptext3312 2196  
                             __ptext3304 0AD6                               __ptext3240 1000  
                             __ptext3232 0018                               __ptext3224 1F19  
                             __ptext3321 2410                               __ptext3313 26D9  
                             __ptext3305 2E75                               __ptext3241 175B  
                             __ptext3233 2EE0                               __ptext3225 1258  
                             __ptext3330 2152                               __ptext3322 2174  
                             __ptext3314 2185                               __ptext3306 2297  
                             __ptext3250 1159                               __ptext3242 2F20  
                             __ptext3234 2749                               __ptext3226 2EBB  
                             __ptext3331 2141                               __ptext3323 2163  
                             __ptext3315 13DD                               __ptext3307 1B11  
                             __ptext3251 1E42                               __ptext3243 0517  
                             __ptext3235 1D81                               __ptext3227 2EB6  
                             __ptext3340 1617                               __ptext3332 2090  
                             __ptext3324 20B0                               __ptext3316 26A1  
                             __ptext3308 20E0                               __ptext3260 0805  
                             __ptext3252 27C0                               __ptext3244 135B  
                             __ptext3236 1DE1                               __ptext3228 2EB1  
                             __ptext3341 2130                               __ptext3333 2080  
                             __ptext3325 239B                               __ptext3317 2782  
                             __ptext3309 20D0                               __ptext3261 19D6  
                             __ptext3253 2EA7                               __ptext3245 2460  
                             __ptext3237 1068                               __ptext3229 1878  
                             __ptext3350 2043                               __ptext3342 0C64  
                             __ptext3334 2F36                               __ptext3326 20A0  
                             __ptext3318 2052                               __ptext3270 1945  
                             __ptext3262 25FE                               __ptext3254 2268  
                             __ptext3246 2F16                               __ptext3238 2EAC  
                             __ptext3351 2000                               __ptext3343 1EAC  
                             __ptext3335 22CA                               __ptext3327 21B8  
                             __ptext3319 2FE4                               __ptext3271 1C0E  
                             __ptext3263 2F68                               __ptext3255 2EA2  
                             __ptext3247 08B1                               __ptext3239 1AC1  
                             __ptext3360 2F2A                               __ptext3352 2034  
                             __ptext3344 1578                               __ptext3336 266A  
                             __ptext3328 198D                               __ptext3280 2E7F  
                             __ptext3272 16B8                               __ptext3264 2711  
                             __ptext3256 11D8                               __ptext3248 2F75  
                             __ptext3361 2E70                               __ptext3353 2ED9  
                             __ptext3345 1F8C                               __ptext3337 2070  
                             __ptext3329 1A72                               __ptext3281 23C2  
                             __ptext3273 23E9                               __ptext3265 2E9D  
                             __ptext3257 250C                               __ptext3249 232C  
                             __ptext3370 1A23                               __ptext3362 2ED2  
                             __ptext3354 2EC0                               __ptext3346 18FE  
                             __ptext3338 22E8                               __ptext3290 0D69  
                             __ptext3282 253A                               __ptext3274 1C69  
                             __ptext3266 2E98                               __ptext3258 1CC6  
                             __ptext3371 1D23                               __ptext3363 2228  
                             __ptext3355 2569                               __ptext3347 2350  
                             __ptext3339 223D                               __ptext3291 2120  
                             __ptext3283 10DD                               __ptext3275 1464  
                             __ptext3267 2E93                               __ptext3259 2201  
                             __ptext3380 2633                               __ptext3372 2016  
                             __ptext3364 227E                               __ptext3356 2FBA  
                             __ptext3348 2FC8                               __ptext3292 2110  
                             __ptext3284 1B64                               __ptext3276 2E8E  
                             __ptext3268 2F5B                               __ptext3381 2F9E  
                             __ptext3373 2599                               __ptext3365 2252  
                             __ptext3357 22B0                               __ptext3349 2EF1  
                             __ptext3293 2F42                               __ptext3285 2E7A  
                             __ptext3277 2E89                               __ptext3269 21DC  
                             __ptext3382 25CA                               __ptext3374 2489  
                             __ptext3366 24B4                               __ptext3358 2308  
                             __ptext3294 21CA                               __ptext3286 2F03  
                             __ptext3278 2F4E                               __ptext3383 2F90  
                             __ptext3375 2375                               __ptext3367 2025  
                             __ptext3359 2F0C                               __ptext3295 2061  
                             __ptext3287 2438                               __ptext3279 2E84  
                             __ptext3384 2F82                               __ptext3376 2007  
                             __ptext3368 2214                               __ptext3296 2FF2  
                             __ptext3288 0B9A                               __ptext3385 2EE8  
                             __ptext3369 2FAC                               __ptext3297 1867  
                             __ptext3289 0966                               __ptext3386 0000  
                             __ptext3378 21EE                               __ptext3298 2EFA  
                             __ptext3379 032A                               __ptext3299 2100  
                 __size_of_DelayTime_1us 0031                                  _ADC_Set 2ED2  
              _PowerFault_Initialization 2E9D                                  ?_setBuz 0029  
                              ?___awtoft 0036                                ?___ftpack 0020  
                             _getTemp_AD 12D9             __end_of_setRF_Initialization 2007  
                  __size_of_getTemp_Safe 000E                            ?_setSw_Status 0022  
                     _setRFSW_AdjControl 1878                  __end_of_RfSWPointSelect 2052  
                                i1l13104 2F9D                                  i1l13105 2F9D  
                                i1l13117 2FAB                                  i1l23101 2642  
                                i1l23111 2662                                  i1l23103 2648  
                                i1l23113 2F91                                  i1l23105 264F  
                                i1l23115 2F97                                  i1l23107 2655  
                                i1l23109 265C                                  i1l23093 2F83  
                                i1l22701 0414                                  i1l23095 2F89  
                                i1l22711 0457                                  i1l22703 0424  
                                i1l22641 25CA                                  i1l23097 2634  
                                i1l22721 0489                                  i1l22705 042C  
                                i1l22713 0463                                  i1l22651 25E2  
                                i1l22643 25CE                                  i1l23099 2638  
                                i1l22731 04BA                                  i1l22723 0492  
                                i1l22715 046B                                  i1l22707 043C  
                                i1l22635 0008                                  i1l22653 25E5  
                                i1l22645 25D2                                  i1l22741 04EA  
                                i1l22725 04A2                                  i1l22717 0472  
                                i1l22709 0447                                  i1l22733 04CB  
                                i1l22661 032E                                  i1l22637 000B  
                                i1l22655 25EA                                  i1l22647 25D7  
                                i1l22743 04EB                                  i1l22735 04D0  
                                i1l22727 04B7                                  i1l22719 0482  
                                i1l22671 0370                                  i1l22663 0332  
                                i1l22751 21EE                                  i1l22639 000E  
                                i1l22761 2EEB                                  i1l22657 25F1  
                                i1l22649 25D9                                  i1l22737 04D9  
                                i1l22729 04B9                                  i1l22681 03AF  
                                i1l22673 0389                                  i1l22745 04EF  
                                i1l22665 0335                                  i1l22753 21F2  
                                i1l22763 2F9F                                  i1l22747 04F9  
                                i1l22739 04E4                                  i1l22691 03E8  
                                i1l22683 03BF                                  i1l22675 038F  
                                i1l22667 0336                                  i1l22659 032A  
                                i1l22755 21F6                                  i1l22765 2FA3  
                                i1l22749 0507                                  i1l22693 03EF  
                                i1l22685 03CD                                  i1l22677 0398  
                                i1l22669 033E                                  i1l22757 21F8  
                                i1l22759 2EE8                                  i1l22695 03FA  
                                i1l22687 03D5                                  i1l22679 03A6  
                                i1l22697 0404                                  i1l22689 03E0  
                                i1l22699 040C                     ?i1_setLoad_StatusOff 0072  
             __size_of_setOverTemp_ERROR 0061                     __size_of_setBuz_Main 0105  
                                _IOC_ISR 25CA                          ?_setTemp_Enable 0021  
                                _IOC_Set 2F2A                     __size_of_setLog_Code 004D  
                                _INT_ISR 21EE                __size_of_getDimmer_Detect 0012  
                                _INT_Set 2E70                     ?_CC2500_WriteCommand 0070  
                      _Flash_Memory_Main 1AC1                        _Flash_Memory_Read 22B0  
                 __size_of_CC2500_RxData 007C                  __end_of_TempPointSelect 2EC6  
                    _setPowerFault_ERROR 1D81                   __size_of_CC2500_TxData 0054  
                    ?_setRFSW_AdjControl 0070      setDimmerLights_TriggerERROR@command 0022  
                           _getLoad_Safe 21CA                              setTxData@rf 0024  
                                _RF_Data 00A0                           ??_setLoad_Main 0032  
                                _RF_Main 0800                       ?_Flash_Memory_Main 0070  
                     ?_Flash_Memory_Read 0070          __end_of_getDimmerLights_Trigger 2438  
        __end_of_setControl_Lights_Table 12D9                               __stringtab 1800  
                            ?_TouchPower 0070                          _setPercentValue 1945  
                ??_setLoad_AH_AL_Restore 0020                            setLog_Code@rf 002F  
                       ?_getPercentValue 0070                                  _Dimmer1 00E7  
                            Sw_OnFunc@sw 002E             __end_of_CC2500_FrequencyCabr 2F5B  
                        __size_of_IO_Set 0019                      ??_Flash_Memory_Main 0027  
                    ??_Flash_Memory_Read 0020                                  _VarLED1 00DF  
                                _VarLED2 00E3                        __end_of_getRxData 1F8C  
             __end_of_setPowerFault_Main 07EB                 _CC2500_registers_address 1801  
                         RF_RxDisable@rf 0024                    ??_Temp_Initialization 0022  
        __end_of_setDimmerLights_Trigger 2152                     ?_setPowerFault_ERROR 002F  
                                _Product 007D                     ??_setRFSW_AdjControl 0064  
                           _getTemp_Safe 2FF2                           ??_setTemp_Main 0032  
         __end_of_setDimmerLights_Switch 2163                                  ___awdiv 1EAC  
                                ___ftadd 0D69                           ??_setSw_Enable 0023  
                                ___ftdiv 0966                          __size_of___wmul 0025  
                                ___ftmul 0B9A                                  ___fttol 1578  
                    __end_of_Switch_Main 2EB1                                  ___lwdiv 18FE  
                ??_Buzzer_Initialization 0024                               ??___awtoft 0039  
                             ??___ftpack 0025                          __size_of_setLED 0087  
                   setRFSW_AdjControl@sw 0066                  ??_setDimmerLights_ERROR 0025  
                        __size_of_setBuz 00A1                           ??_setSw_Status 0023  
                ??_setDimmerLights_AdjRF 005F                  ??_setDimmerLights_AdjGo 0023  
              __size_of_CC2500_SIDLEMode 0005                    ??i1_setLoad_StatusOff 0074  
                           __size_of_ISR 0011                  ??_setDimmerLights_Close 0023  
                ?_setLoad_Initialization 0070                __end_of_Flash_Memory_Main 1B11  
              __end_of_Flash_Memory_Read 22CA                      __size_of_Sw_AdjFunc 002E  
                             _setRF_Main 0A1E                            _DelayOff_Main 2EA7  
                ??_setBuz_Initialization 0024                        _DimmerLights_Main 2EE0  
                      __end_of_setINT_GO 2F16           __size_of_DlyOff_Initialization 000C  
                  ??_CC2500_WriteCommand 0022            __end_of_DlyOff_Initialization 2F42  
                      ??_setRF_ReceiveGO 0073               __end_of_CC2500_ClearRXFIFO 2E89  
               ??_setTemp_Initialization 0021               __end_of_CC2500_ClearTXFIFO 2E84  
          DimmerLightsPointSelect@lights 0021                             ?_DlyOff_Main 0070  
                     ?_DimmerLights_Main 0070                     setBuz_Enable@command 0022  
                         _LedPointSelect 24B4                   __size_of_setBuz_Enable 0011  
                    _DelayOffPointSelect 2016           __size_of_Switch_Initialization 000A  
                    __size_of_Sw_OffFunc 0080            __end_of_Switch_Initialization 2F20  
                   end_of_initialization 2509                ??_DelayOff_Initialization 0023  
                             _setLoad_GO 20B0                        _CC2500_InitSetREG 253A  
                          _DelayTime_1us 2599                        __end_of_setTxData 1AC1  
             __end_of_Flash_Memory_Write 2749                   __size_of_setLoad_ERROR 0075  
                                init_ram 2EC6                       ?_CC2500_InitSetREG 0070  
                    ??_DimmerLights_Main 0057                     Flash_Memory_Read@ret 0023  
                                initloop 2EC7                               _setSw_Main 0517  
                  CC2500_ReadByte@loop_b 0021                        _CC2500_ReadStatus 22E8  
                            ?_getPF_Safe 0070                   __size_of_setLoad_Count 0014  
                   Flash_Memory_Modify@i 0026                    _setLED_Initialization 21DC  
                          _CC2500_Enable 03D0                   getDimmer_Detect@dimmer 0023  
                       ?i1_RfPointSelect 0070                   ??_setLoad_LightsStatus 0024  
                     ?_CC2500_ReadStatus 0070                         setRFSW_Status@sw 0023  
          __size_of_MainT_Initialization 0016                    ??_setPowerFault_ERROR 0030  
               __size_of_CC2500_ReadByte 002B                            _CC2500_RxData 10DD  
                          _CC2500_TxData 1B64                      ??_CC2500_InitSetREG 0025  
                   __end_of_setRF_Enable 2489           ??_setPowerFault_Initialization 0021  
            ?_setDimmerLights_TriggerAdj 0022                __size_of_getPowerFault_AD 0056  
          __size_of_Flash_Memory_Erasing 000D                     ?_DelayOffPointSelect 0070  
                    _Flash_Memory_Modify 135B                         ?_LoadPointSelect 0070  
                            ?_getLoad_AD 0027                           getLoad_AD@load 002D  
                    _Flash_Memory_Unlock 2EFA                      ??_CC2500_ReadStatus 0022  
                 setRF_Initialization@rf 0070                         _setLoad_StatusOn 2185  
       getDimmerLights_StatusFlag@Status 0024                  CC2500_InitSetREG@loop_c 0028  
                            ?_getTemp_AD 0027           __end_of_setLoad_Initialization 1878  
                    __size_of_TouchPower 0009                 setLED_Initialization@led 0024  
                 setDimmer_Detect@dimmer 0023                   setSw_Initialization@sw 0024  
              __end_of_DimmerLights_Main 2EE8                       _Mcu_Initialization 2297  
                       ??_setLoad_Enable 0023                 __size_of_CC2500_PowerRST 0037  
                         ?_DelayOff_Main 0070                         ?_RfSWPointSelect 0070  
       getDimmerLights_StatusFlag@length 0023                   __end_of_LedPointSelect 24DF  
                __end_of_setPercentValue 198D                 __size_of_CC2500_WriteREG 001E  
              __end_of_CC2500_InitSetREG 2569                      ?_Mcu_Initialization 0070  
                       ?_TempPointSelect 0070                     ?_Flash_Memory_Modify 0070  
            __size_of_setRF_DimmerLights 005E                           ?_DelayTime_1us 0020  
                    _setDimmerLights_Adj 1E42                     ?_Flash_Memory_Unlock 0070  
            getDimmerLights_StatusFlag@i 0025                __end_of_CC2500_ReadStatus 2308  
                          ?_RF_RxDisable 0070                              ___ftdiv@exp 004A  
                         __end_of_IO_Set 2297                     _setRF_Initialization 2000  
                            _Switch_Main 2EAC                        __size_of_LED_Main 000D  
                         ?_CC2500_RxData 0070                           ?_CC2500_TxData 0070  
                _DimmerLightsPointSelect 2FAC                      _getDimmer_LoadERROR 2FE4  
                            ___ftmul@exp 0046                    _CC2500_PowerOnInitial 2268  
                    _setDimmer_LoadERROR 20D0                     ??_Mcu_Initialization 0021  
                  ??_DelayOffPointSelect 0020                            _setBuz_Enable 2130  
                  setOverTemp_ERROR@temp 0031                     ?_setDimmerLights_Adj 0050  
                   __end_of_setLoad_Main 032A                     setRF_DimmerLights@on 0020  
                         __end_of___wmul 2375                             setRF_Main@rf 006A  
                          _setLoad_ERROR 1068                        __size_of_TMR0_ISR 01ED  
                      __size_of_TMR0_Set 0015            __size_of_setDimmerLights_Main 00A5  
                         __end_of_setLED 1464            __size_of_setDimmerLights_Open 0011  
                         __end_of_setBuz 16B8                            _setLoad_Count 2214  
                      _DimmerPointSelect 2025                     _CC2500_FrequencyCabr 2F4E  
             __end_of_DimmerLights_ERROR 11D8                  setLoad_StatusOn@command 0022  
             __size_of_Flash_Memory_Main 0050               __size_of_Flash_Memory_Read 001A  
                            ?_setRF_Main 0070                          _setRFSW_Control 0805  
                    __size_of_getPF_Safe 000F            getDimmerLights_Trigger@Status 0024  
                      ?_setDimmerReClock 0070                      start_initialization 24DF  
                      _setRF_DimmerValue 2749                          ?_LedPointSelect 0070  
                       _getDimmer_Detect 21B8               __end_of_DimmerLights_Close 2410  
                              _Load_Main 2EB6                      _getDimmer_TempERROR 2FD6  
               setDimmer_PFERROR@command 0022                     ?_getDimmer_LoadERROR 0070  
                     ?_DimmerPointSelect 0070                  setLoad_StatusOff@lights 0022  
                            __end_of_ISR 0015                      _setDimmer_TempERROR 20C0  
                   ?_setDimmer_LoadERROR 0022                        ?_setDimmer_Detect 0022  
                  ??_Flash_Memory_Modify 0024             __size_of_Load_Initialization 0005  
     __size_of_PowerFault_Initialization 0005                       ??_setDimmerReClock 0070  
                     ?_setRF_DimmerValue 0070               __end_of_CC2500_InitPATable 23E9  
        __size_of_setTemp_Initialization 000C            getDimmerLights_Trigger@length 0023  
                  ??_Flash_Memory_Unlock 0020                     __end_of_setTemp_Main 1000  
                     ??_setDimmer_Detect 0023                              ?_setLoad_GO 0022  
                         ??_RF_RxDisable 0024                     __end_of_setSw_Enable 2110  
                        RfPointSelect@rf 0021                      __size_of_getLoad_AD 00C4  
                           ?_Buzzer_Main 0070                      ??_DimmerPointSelect 0020  
                               ??_IO_Set 0020                                _VarErrLED 00DB  
                            ?_setSw_Main 0070                      ??_setRF_DimmerValue 0061  
                           ??_Sw_AdjFunc 0024                      __size_of_getTemp_AD 0082  
                 ?_setLED_Initialization 0070                     __end_of_setSw_Status 2090  
                  ?_setRF_Initialization 0070                i1setLoad_StatusOff@lights 0072  
                              _VarMemory 01A0                  __size_of_setRFSW_Status 0010  
                  __end_of_RfPointSelect 2043                __size_of_CC2500_WriteByte 0026  
                              _VarTimer0 00CF                                _Temp_Main 2EB1  
                   ?_getDimmer_TempERROR 0070                     ?_setDimmer_TempERROR 0022  
                              _Rx_Length 00C1                           ?_setBuz_Enable 0022  
                           ??_Sw_OffFunc 0027                                _Sw_OnFunc 1CC6  
                setRF_DimmerValue@lights 0063                    ??_setDimmerLights_Adj 0051  
                               ??___wmul 0024                   __size_of_SwPointSelect 000E  
                              _Tx_Length 00C3                              __pdataBANK3 01A0  
                         ?_setLoad_ERROR 002F                                 ??_setLED 0023  
                       ??_setTemp_Enable 0022                                 ?_ADC_Set 0070  
                               ??_setBuz 002C                __end_of_DimmerPointSelect 2034  
                        ??_DelayOff_Main 0031                        ??_CC2500_ReadByte 0020  
                         ?_setLoad_Count 0020                         _CC2500_SIDLEMode 2E89  
             __size_of_DimmerLights_Main 0008                __end_of_setRF_DimmerValue 2782  
                  ?_CC2500_FrequencyCabr 0070                         setINT_GO@command 0020  
                          ??_setLED_Main 0022                        __size_of___awtoft 0028  
                      __size_of___ftpack 0074                                 ?_IOC_ISR 0070  
                  ??_getDimmer_LoadERROR 0022                              __pbssCOMMON 007B  
                               ?_IOC_Set 0070                       __end_of_Sw_AdjFunc 253A  
                  ??_setDimmer_LoadERROR 0023                               ?_Load_Main 0070  
                  setTemp_Enable@command 0021                                 ?_INT_ISR 0070  
                    setRF_Enable@command 0025                            __pcstackBANK0 0020  
                               ?_INT_Set 0070                         ?_setPercentValue 0070  
                        ??_DelayTime_1us 0022               __size_of_CC2500_InitSetREG 002F  
               __size_of_setDimmerLights 00A3                            DlyOff_Main@sw 0030  
                      ??_CC2500_PowerRST 0026                                 ?_RF_Main 0070  
                           Sw_AdjFunc@sw 0024                       __end_of_Sw_OffFunc 1258  
                           ??_TouchPower 0020                 __size_of_PowerFault_Main 0005  
                   __size_of_DlyOff_Main 0089               __size_of_CC2500_ReadStatus 0020  
                          ??_setRF_Learn 0023                        ??_CC2500_WriteREG 0023  
                          _DimmerLights1 014A                    CC2500_WriteREG@w_addr 0024  
             setLoad_Initialization@load 0022                    setDelayOff_GO@command 0023  
              ??_DimmerLightsPointSelect 0020           __size_of_setLoad_AH_AL_Restore 0030  
                  __size_of_setRF_Enable 0029                    _PowerFaultPointSelect 2ED9  
                        ??_CC2500_RxData 0024            __end_of_setLoad_AH_AL_Restore 2599  
                __size_of_setRF_RxStatus 0010                          ??_CC2500_TxData 0024  
                              __pnvBANK1 00ED              __size_of_LED_Initialization 000D  
                  ??_getDimmer_TempERROR 0022                   ?_CC2500_PowerOnInitial 0070  
                  ??_setDimmer_TempERROR 0023              setDimmerLights_Close@lights 0023  
                             ?_Temp_Main 0070                      __size_of_setRF_Main 00B8  
                       ___lwdiv@dividend 0022                    DelayOffPointSelect@sw 0021  
               ?_getDimmerLights_Trigger 0070                               setBuz@time 002A  
                    setDelayOff_GO@value 0024                 ?_setControl_Lights_Table 0070  
                             ?_Sw_OnFunc 0070                   _setTemp_Initialization 2F42  
                       _getPowerFault_AD 1BB8      __end_of_Flash_Memory_Initialization 0966  
            _Flash_Memory_Initialization 08B1                                 ?___awdiv 0020  
                               ?___ftadd 004C                                _getRxData 1F19  
                               ?___ftdiv 003C                                 ?___ftmul 003C  
                               ?___fttol 0028                                 ?___lwdiv 0020  
                __end_of_setRFSW_Control 08B1                          _setRF_ReceiveGO 2F9E  
                    __size_of_setLoad_GO 0010                            ??_setBuz_Main 0022  
          __size_of_setSw_Initialization 0013                                __pstrings 1800  
         __size_of_Buzzer_Initialization 0005               setTemp_Initialization@temp 0021  
          __end_of_Buzzer_Initialization 2EA7                               setTxData@i 0025  
                       getPercentValue@i 005C                         setPercentValue@i 004D  
                          ??_setLog_Code 002E                       __end_of_TouchPower 2EFA  
                     _setPowerFault_Main 06A4       setDimmerLights_TriggerERROR@lights 0024  
         __size_of_setDimmerLights_ERROR 005B                 ?_setDimmerLights_Trigger 0022  
                        DelayTimejudge@i 0021                      __size_of_setSw_Main 018D  
          __end_of_setDimmerLights_ERROR 1C69             CC2500_ReadStatus@status_addr 0023  
         __size_of_setDimmerLights_AdjRF 0024           __size_of_setDimmerLights_AdjGo 0011  
          __end_of_setDimmerLights_AdjRF 2350            __end_of_setDimmerLights_AdjGo 21A7  
                 CC2500_WriteByte@loop_a 0021           __size_of_setDimmerLights_Close 0011  
          __end_of_setDimmerLights_Close 2185                           __size_of_MainT 0068  
                              _r_address 00C4                           setBuz_Main@buz 0026  
         __size_of_setBuz_Initialization 0009            __end_of_setBuz_Initialization 2F0C  
                    ?_setPowerFault_Main 0070                           __size_of_getAD 0024  
                           _setRF_Enable 2460                         ___lwdiv@quotient 0025  
                __size_of_DelayTimejudge 004F                            _SwPointSelect 2FC8  
                              _setINT_GO 2F0C                      __end_of_setLED_Main 1B64  
                __size_of_BuzPointSelect 000F                 __end_of_setLoad_StatusOn 2196  
                 ??_setRF_Initialization 0020              __end_of_Temp_Initialization 2E98  
                      _CC2500_rfSettings 1830                           ___wmul@product 0024  
                               _LED_Main 2F5B                             getPF_Safe@pf 0021  
                           ??_getPF_Safe 0021                          SwPointSelect@sw 0021  
               CC2500_InitPATable@loop_d 0027                                _setTxData 1A72  
    __end_of_DimmerLights_Initialization 2F2A              _DimmerLights_Initialization 2F20  
                        ??_setBuz_Enable 0023                       _CC2500_ClearRXFIFO 2E84  
                  __size_of_setLoad_Main 0312                       _CC2500_ClearTXFIFO 2E7F  
         setDimmerLights_Trigger@command 0022                           getTemp_AD@temp 002C  
               setRF_DimmerLights@lights 0024                                 _GO_nDONE 04E9  
                    __end_of_setRF_Learn 2130                     ??_setPowerFault_Main 0032  
               __size_of_getPercentValue 005D                           setLoad_GO@load 0023  
               setRF_DimmerLights@status 0023                          ??_setLoad_ERROR 0030  
                 setRF_ReceiveGO@command 0072              __size_of_setRFSW_AdjControl 0043  
                     _Flash_Memory_Write 2711                               ?_getRxData 0070  
                               _TMR0_ISR 032A                             ??_getLoad_AD 0028  
                 CC2500_InitSetREG@temp1 0026                   CC2500_InitSetREG@temp2 0027  
            __end_ofi1_setLoad_StatusOff 266A                        setRF_ReceiveGO@rf 0073  
                               _TMR0_Set 2228                      ?_CC2500_ClearRXFIFO 0070  
               getDimmerLights_Trigger@i 0025                      ?_CC2500_ClearTXFIFO 0070  
                        ??_setLoad_Count 0021        setDimmerLights_TriggerAdj@command 0022  
                               _RF_Count 00B5                     __end_of_RF_RxDisable 2633  
                           ??_getTemp_AD 0028               __size_of_DimmerPointSelect 000F  
            __end_of_CC2500_WriteCommand 2252                   ??_CC2500_FrequencyCabr 0026  
                i1setLoad_StatusOff@load 0074                  DlyOff_Initialization@sw 0022  
                       __size_of_ADC_Set 0007                        ___wmul@multiplier 0020  
             __size_of_setRF_DimmerValue 0039                      ?_Flash_Memory_Write 0070  
             setPowerFault_ERROR@command 002F                    __size_of_setTemp_Main 0167  
           __end_of_MainT_Initialization 2268                  __size_of_setDelayOff_GO 0049  
                           Sw_OffFunc@sw 0029                    __size_of_setSw_Enable 0010  
                               _DelayOff 00B9                             setSw_Main@sw 0032  
                            ??_Load_Main 0037                       __end_of_getPF_Safe 2070  
                       __size_of_IOC_ISR 0034                         __size_of_IOC_Set 000C  
                    __end_of_setBuz_Main 0D69             __end_of_Flash_Memory_Erasing 2F75  
                         ?_SwPointSelect 0070                              getAD@adcon0 0026  
                            getAD@adcon1 0020                         __size_of_INT_ISR 0013  
                         setLED_Main@led 0024                         __size_of_INT_Set 0005  
                    __end_of_setLog_Code 1A23                 setDimmerLights_Main@open 0054  
                  _DlyOff_Initialization 2F36                    __size_of_setSw_Status 0010  
                             ?_setINT_GO 0070                     ??_CC2500_ClearRXFIFO 0024  
                   ??_CC2500_ClearTXFIFO 0024                         setBuz_Enable@buz 0023  
                           _setLoad_Main 0018                         __size_of_RF_Main 0005  
                     __end_of_getLoad_AD 0B9A                   ?_PowerFaultPointSelect 0070  
            __end_of_setPowerFault_ERROR 1DE1                    _Switch_Initialization 2F16  
                   ??_Flash_Memory_Write 0020                        ??_setDimmerLights 0027  
                         _setRFSW_Status 2090                     __size_of_Buzzer_Main 0005  
                     __end_of_getTemp_AD 135B                               ?_setTxData 0070  
                           ?_Switch_Main 0070                         _CC2500_WriteByte 2375  
                               _VarTMain 0120                        getLoad_AD@channel 0027  
           Flash_Memory_Initialization@i 0051                  __end_of_setRF_ReceiveGO 2FAC  
                            ??_Temp_Main 0036                        ??_PowerFault_Main 0035  
              setLoad_AH_AL_Restore@load 0070                 __end_of_getDimmer_Detect 21CA  
                      setRFSW_Control@sw 0030                 setLoad_LightsStatus@load 0025  
                            ??_Sw_OnFunc 002E                      _Load_Initialization 2E98  
                              setLED@led 0023            __size_of_setLoad_LightsStatus 0038  
                               _RxStatus 03D3                  PowerFaultPointSelect@pf 0070  
   __end_of_setDimmerLights_TriggerERROR 27C0    __size_of_setDimmerLights_TriggerERROR 003E  
           _setDimmerLights_TriggerERROR 2782                    i1LoadPointSelect@load 0071  
                               _TxStatus 03D6                             _setTemp_Main 0E99  
                       __size_of___awdiv 006D                         __size_of___ftadd 0130  
                       ?_setRFSW_Control 0070                        i1_LoadPointSelect 2F82  
                       __size_of___ftdiv 00B8                             _setSw_Enable 2100  
                       __size_of___ftmul 00CA                         __size_of___fttol 009F  
                       __size_of___lwdiv 0047                 __size_ofi1_RfPointSelect 000E  
                               ___awtoft 2438                         ??_LedPointSelect 0020  
                               ___ftpack 1F8C                       ?i1_LoadPointSelect 0070  
                           _setSw_Status 2080                        getTemp_AD@channel 0027  
                           ??_setRF_Main 0069                 __size_of_LoadPointSelect 000E  
                   CC2500_WriteREG@value 0022                              _setLED_Main 1B11  
                  setRFSW_Status@command 0022               __end_of_setRF_DimmerLights 1D81  
               ?_DelayOff_Initialization 0070                                setBuz@buz 002D  
                       setDelayOff_GO@sw 0026                          ___lwdiv@divisor 0020  
                   ?_Load_Initialization 0070                          ___lwdiv@counter 0027  
                    ??i1_LoadPointSelect 0070                             ??_setLoad_GO 0023  
                ??_setLED_Initialization 0024                 __size_of_RfSWPointSelect 000F  
               setBuz_Initialization@buz 0070                   __end_of_setRFSW_Status 20A0  
           __end_of_setDimmerLights_Main 1800             __end_of_setDimmerLights_Open 2174  
                     _DimmerLights_ERROR 1159              setDimmerLights_ERROR@lights 0026  
                           ??_setSw_Main 002F                            setLED@command 0022  
                          __size_of_main 008B                              _setRF_Learn 2120  
               __end_of_CC2500_SIDLEMode 2E8E                           _setRF_RxStatus 2070  
             setDimmerLights_Main@lights 0056              __end_of_DelayOffPointSelect 2025  
             CC2500_WriteCommand@command 0023                       _DimmerLights_Close 23E9  
               __size_of_TempPointSelect 0006                 ??_setDimmerLights_Switch 0023  
              __size_of_setDimmerReClock 0009                          _CC2500_ReadByte 2489  
                               clear_ram 2ECC                       _CC2500_InitPATable 23C2  
              __size_of_setDimmer_Detect 0010      __size_of_getDimmerLights_StatusFlag 0027  
                    ?_DimmerLights_ERROR 0070            setDimmerLights_Trigger@lights 0023  
                     __end_of_setRF_Main 0AD6              __size_of_Mcu_Initialization 0019  
              __end_ofi1_LoadPointSelect 2F90                     _CC2500_patable_vaule 185F  
                            ??_getRxData 0068                      ?_DimmerLights_Close 0070  
       setDimmerLights_TriggerAdj@lights 0023            ?_setDimmerLights_TriggerERROR 0022  
                    ?_CC2500_InitPATable 0070                        setLoad_ERROR@load 0031  
                        _CC2500_PowerRST 266A                       __end_of_setLoad_GO 20C0  
                            _setBuz_Main 0C64              __end_of_Flash_Memory_Modify 13DD  
                      ??_getPercentValue 0059                              _setLog_Code 19D6  
                  setLoad_StatusOff@load 0024                    setRF_RxStatus@command 0022  
            __end_of_Flash_Memory_Unlock 2F03                          ??_SwPointSelect 0020  
                DimmerPointSelect@dimmer 0021                          _CC2500_WriteREG 22CA  
                     __end_of_setSw_Main 06A4                        setLoad_GO@command 0022  
                  ??_Load_Initialization 0023                     ??_DimmerLights_ERROR 002E  
                          _Transceive_GO 03D4                            _Transceive_OK 03D5  
                   setLoad_Count@command 0020                   ?_DlyOff_Initialization 0070  
                         _DelayTimejudge 1A23                            ?_getLoad_Safe 0070  
               __end_of_getPowerFault_AD 1C0E                     ??_DimmerLights_Close 0026  
                            ??_setINT_GO 0020             setDimmerLights_Close@command 0022  
                      BuzPointSelect@buz 0021                                 intlevel1 0000  
                         _BuzPointSelect 2007                     ??_CC2500_InitPATable 0025  
                __size_of_setLoad_Enable 0015                   ?_Switch_Initialization 0070  
                 __end_of_setRF_RxStatus 2080                          ?_setRFSW_Status 0022  
                ??_CC2500_PowerOnInitial 0029   __end_of_setDimmerLights_Initialization 2800  
__size_of_setDimmerLights_Initialization 0040           _setDimmerLights_Initialization 27C0  
            __end_of_setDimmerLights_Adj 1EAC                  ?_setTemp_Initialization 0070  
                            ??_setTxData 0022                         ?_setRF_ReceiveGO 0072  
                 CC2500_InitPATable@temp 0026                     _MainT_Initialization 2252  
                  __size_of_RF_RxDisable 0035                        _RF_Initialization 2E75  
                            getLoad_AD@i 002F                              getLoad_AD@j 002E  
               ??_setLoad_Initialization 0022                            ?_getTemp_Safe 0070  
                   _Flash_Memory_Erasing 2F68              setLoad_LightsStatus@command 0023  
                     ?_RF_Initialization 0070                     setLoad_StatusOn@load 0023  
                             _SPI0Buffer 00C2              __end_of_getDimmer_LoadERROR 2FF2  
            __end_of_setDimmer_LoadERROR 20E0          __end_of_DelayOff_Initialization 2E93  
                             _OPTION_REG 0095                    __end_of_DelayOff_Main 2EAC  
                    ??_RF_Initialization 0021                              getRxData@rf 0068  
                         _setDelayOff_GO 198D         __size_of_getDimmerLights_Trigger 0028  
       __size_of_setControl_Lights_Table 0081                        _setLoad_StatusOff 26A1  
                 __end_of_DelayTimejudge 1A72                   __size_of_RfPointSelect 000F  
                      ??i1_RfPointSelect 0070                           ??_getLoad_Safe 0022  
   __size_of_Flash_Memory_Initialization 00B5                            ??_DlyOff_Main 002E  
                     ?_setLoad_StatusOff 0022                   __end_of_BuzPointSelect 2016  
             setLoad_LightsStatus@lights 0022                  setDimmer_Detect@command 0022  
                  __end_of_DelayTime_1us 25CA                        ??_LoadPointSelect 0020  
                __end_of_CC2500_ReadByte 24B4              __end_of_getDimmer_TempERROR 2FE4  
           __end_of_setSw_Initialization 2214                          ?_setRF_RxStatus 0022  
            __end_of_setDimmer_TempERROR 20D0                         _setSw_Main$18089 0031  
                   getPercentValue@value 005B                             _RF_RxDisable 25FE  
             ?_PowerFault_Initialization 0070               __end_of_LED_Initialization 2F82  
       __size_of_setDimmerLights_Trigger 0011                        ?_setLoad_StatusOn 0022  
         __end_of_setTemp_Initialization 2F4E                      ??_setLoad_StatusOff 0024  
               __size_of_setPercentValue 0048                     setPercentValue@value 004C  
              __end_of_RF_Initialization 2E7A              setDimmerLights_Open@command 0022  
                     ??_setLoad_StatusOn 0023          __size_of_setDimmerLights_Switch 0011  
                      ??_RfSWPointSelect 0020                    ?_MainT_Initialization 0070  
                       setRF_RxStatus@rf 0023                    __end_of_CC2500_RxData 1159  
                  __end_of_CC2500_TxData 1BB8                           ??_getTemp_Safe 0021  
             setDimmerLights_Open@lights 0023                    _setLoad_AH_AL_Restore 2569  
                    setSw_Status@command 0022                  __end_of_CC2500_PowerRST 26A1  
